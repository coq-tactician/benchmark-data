coq-tactician-stdlib.8.13.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.021401	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin2	40	0.039364	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.P_Rmin	40	0.093905	20	8	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rsth	40	0.175972	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_R.Rcri	40	1.264484	445	45	0.14.8	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rcri	40	1.225689	524	78	0.16.4	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.091771	37301	5532
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.062010	25976	2629
coq-tactician-stdlib.8.13.dev	Coq.Reals.Binomial.pascal	40	40.036348	14330	2179
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.061385	23765	3712
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.034243	12520	2438
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.058263	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.036642	14722	3402
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C3	40	40.035341	11669	4534
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.051618	19959	4732
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P1	40	40.133864	61590	7278
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple	40	0.040107	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.100019	41780	4242
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.033853	10984	4385
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.shift_value	40	0.031586	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.included_trans	40	0.954733	876	145	10.5.1	synth with cache (only 1: intros x y z Hxlty Hyltz; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.034168	491	86	5.11	synth with cache (only 1: intros a0; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.071144	28726	5611
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	0.050409	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.062840	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.048380	18110	5125
coq-tactician-stdlib.8.13.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.065695	25113	4484
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor1	40	40.113766	54047	4337
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.091998	40058	5231
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.054591	19937	4507
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.distance_refl	40	40.051281	20169	3045
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.035143	11857	3897
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.058569	22017	3897
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.037330	13623	3569
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.028600	10437	3018
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.516846	143	46	3.4.2	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_ineq1	40	40.033313	11102	3327
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.170623	82503	4691
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.rotation_PI2	40	5.567801	1803	529	0.0.0.7.0.0.0.4.0.4.0	synth with cache (only 1: intros x y; only 1: split; only 1: pose proof PI_RGT_0 as H; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.023860	8274	2427
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.039877	15818	3037
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.031374	10181	3596
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.tech	40	40.027872	9573	2594
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.051422	21567	3004
coq-tactician-stdlib.8.13.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.590433	516	187	3.2.4	synth with cache (only 1: intros n0 H'; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.081057	35067	5780
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series	40	40.095034	41491	6103
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.C_maj	40	40.054144	18149	3195
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C5	40	40.025608	7377	3542
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.054293	20079	4622
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.054717	21915	4714
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P3	40	40.069049	28450	6211
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.complementary_P1	40	0.680652	550	86	17.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.cos_plus	40	40.051694	19611	3007
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.059578	21418	3989
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.045057	16894	4362
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor3	40	40.046706	17668	4558
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	1.316843	345	137	0.0.0.0.5.1	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.frexp_spec	40	44.832326	54331	1346
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.094125	39071	4707
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.054896	21377	3304
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.069913	28662	4052
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.039288	15030	3472
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_Ropp	40	40.048348	15352	2695
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.044335	17461	3427
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.059369	25124	2827
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	14.301307	9125	1568	1.0.0.8.20	synth with cache (only 1: intros SF H8; only 1: intros H3; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.033670	11998	3139
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.045413	16573	3912
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dx	40	40.077801	33375	5328
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.051237	22218	2849
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.031990	7	3	1.0.3	synth with cache (only 1: simpl; only 1: intro x; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.028592	11513	1692
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech1	40	40.100208	43807	5135
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech5	40	0.013579	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.045048	15443	3728
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_2_3	40	40.033850	11655	2637
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.054262	22793	3179
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.growing_cv	40	40.085908	36113	7153
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Rsor	40	40.132070	62255	3975
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.070663	29445	5438
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	9.279296	2970	524	3.0.3.0.0.2.7.6	synth with cache (only 1: intros x y H; only 1: rewrite <- (Rplus_0_r x); only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.056389	22100	4149
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.066490	27772	4916
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.035442	11446	4110
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.040918	14475	4313
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P1	40	40.108410	47959	6432
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.039228	11703	4446
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.033183	10158	4225
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	41.135554	43844	2512
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.058638	22937	3841
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.028125	7103	2237
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.042567	15643	3503
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.034162	11884	3830
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_exp	40	40.053085	19523	3312
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.057223	23492	3109
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.065252	24444	3359
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.AbsList_P2	40	40.061490	24406	4422
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.036514	10829	4472
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.028424	8369	3564
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dopp	40	40.046424	17513	4702
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.041631	17307	2451
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.049762	18375	3307
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_O	40	0.012007	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.047955	18747	3108
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_1	40	0.122891	12	11	2.0.0.1.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech6	40	40.056100	19342	5094
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.125925	56517	5171
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_add	40	0.594588	83	51	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech12	40	0.426853	150	51	5.5	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.052828	21618	2662
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.109219	30	9	1.0.3	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.036168	12354	2037
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.038942	14778	2565
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.119337	53135	5370
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.minus_neq_O	40	24.389830	19123	2845	36.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	1.772018	163	79	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Qle_true	40	40.089865	36250	4152
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_plus	40	6.029928	3755	419	1.7.16.3	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro H; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.036953	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.le_double	40	3.193474	2306	389	0.5.0.0.0.0.1.0.1.0.16	synth with cache (only 1: intros a n; only 1: destruct a as [| a]; only 1: Nat.nzsimpl; only 1: intro H; only 1: destruct H as [H| H]; only 1: induction n; only 1: auto; only 1: constructor; only 1: assumption; only 1: intuition; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.284608	76	23	4.0.2	synth with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.tech8	40	0.109746	11	4	5.0	synth with cache (only 1: intros n m; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.068662	26840	5225
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.059807	17259	2094
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.075983	31040	5983
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.085624	36904	5267
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	37.891897	12037	3614	0.0.0.2.0.0.8.8.0	synth with cache (only 1: intro; only 1: case n; only 1: red; only 1: auto with real; only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: discrR; only 1: fold pow; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.062747	23712	4785
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.091878	38610	6000
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P4	40	0.014980	2	2	0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	1.447283	580	123	0.1.4.0.0.1.1	synth with cache (only 1: unfold Rle; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros Eq0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.049260	18391	4432
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.057770	23698	4227
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.IZR_nz	40	0.016472	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.082738	34235	4248
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.049347	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.070773	27834	2841
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.077610	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.029529	7755	3946
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	0.034939	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_inv	40	40.036751	13001	3591
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.877274	855	340	3.0.8	synth with cache (only 1: intros pol; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.MaxRlist_P2	40	40.062715	25310	2776
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.positive_derivative	40	40.037147	11662	4523
coq-tactician-stdlib.8.13.dev	Coq.Reals.DiscrR.IZR_eq	40	0.042007	6	2	4.0	synth with cache (only 1: intros z1 z2 H; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.035403	11745	2901
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.063301	26347	3316
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	37.280324	37094	5018	4.6.15.10.0	synth with cache (only 1: unfold EUn; only 1: intros m'; only 1: red; only 1: intros H'1; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_refl	40	1.215801	1879	219	3.21.0	synth with cache (only 1: intros; only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_le	40	0.298945	121	39	6.0.1	synth with cache (only 1: intros x y H; only 1: left; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_ge	40	0.515906	255	48	11.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005829	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.075305	29965	5233
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.038464	13742	2344
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.scal_sum	40	40.092157	40065	3872
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.025956	7563	3218
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.022478	6309	2168
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.109421	49984	5728
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.087263	30304	3498
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.068346	26662	6487
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.048062	17302	3293
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.066112	26826	4607
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.071998	28981	4379
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.052106	19397	3679
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.038304	13164	3715
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_P3	40	40.044005	14394	4781
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.099876	42386	6234
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	40.047395	15340	4792
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.048947	19729	4299
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.Qle_Rle	40	40.074658	29981	4223
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.060106	22154	3149
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_0	40	40.045206	15517	3919
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.fp_R0	40	40.106668	47501	3659
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_pow	40	40.032784	10522	3059
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.017427	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P1	40	40.079639	31181	4888
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing	40	40.058588	22919	4168
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.090945	41192	3756
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.029693	9993	2840
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.028735	8538	3412
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.090623	36761	4526
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.106626	45518	3605
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.110402	47158	4266
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.074006	5	5	0.0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_minus	40	40.034423	10547	4369
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.poly	40	40.062498	23157	4814
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.plus_sum	40	40.072567	29751	3211
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.522025	774	210	0.3.5.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_increasing	40	40.034568	12052	2921
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.Vn_growing	40	40.062233	23332	6867
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.not_Rlt	40	0.075764	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.110242	4483	629
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.541989	167	49	0.0.0.9	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.065836	25129	6303
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.257842	132091	3621
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.078703	32646	5382
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.036611	12866	3704
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.039903	13531	4603
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.220267	108715	6048
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Rsepare	40	40.059034	20462	4975
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	40.051464	14379	6732
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.045288	14353	4974
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.058773	19	6	0.0.0.3	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.family_P1	40	2.806609	3028	416	7.2.1.5.9	synth with cache (only 1: intros x y H; only 1: red; only 1: intros; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.090899	39109	3552
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.051354	17464	3032
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.037546	11793	3540
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P6	40	6.694705	8034	1298	16.0.6.7	synth with cache (only 1: intros n m p (q, Hq); only 1: intro; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	3.115938	1370	218	0.1.0.0.0.8.8	synth with cache (only 1: intros n; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.base_fp	40	40.084347	20423	6428
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_lt	40	40.054724	21445	3700
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.043973	16257	1720
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P2	40	40.070577	28021	5244
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.null_derivative_1	40	40.040463	13361	4870
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.036954	13836	3000
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	29.788446	59535	4787	0.0.12.13.8.27	synth with cache (only 1: intros p1 p2; only 1: intros H1 n H2; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.039502	14158	3481
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.082349	22	7	0.0.0.3	synth with cache (only 1: induction m; only 1: intros H'; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.025708	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.101589	33424	4015
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.055730	18744	1362
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.021725	6090	1234
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	2.844616	1922	295	1.6.13.0	synth with cache (only 1: red; only 1: intros l2; only 1: intro n; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_eq	40	40.061551	25864	4100
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.075689	30150	5716
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.059224	22371	5087
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.030311	10531	2852
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.169186	30	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.037109	5	4	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.022816	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_asym	40	0.042694	8	5	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.approx_min	40	40.041793	13998	4284
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.174225	40567	3659
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.068244	25642	5000
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.240381	43458	5480
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.049991	17969	5057
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.370288	75	32	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.IVT	40	40.055500	22621	4383
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.067772	23948	1802
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.067504	28958	2963
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.043611	13155	4593
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.109210	48359	5943
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalZ.of_iff	40	40.276069	37614	4422
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	1.888254	883	269	1.0.1.0.0.3.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros n; only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.072605	28018	3878
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	1.845982	929	228	2.0.0.0.1.7	synth with cache (only 1: unfold Rle; only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.061075	17	7	0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.015221	2	2	0.0	synth with cache (only 1: intros a n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.025829	6466	3385
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.093800	38596	3594
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.065808	66	14	0.9	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.compact_EMP	40	40.233141	111896	6035
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_period	40	40.036732	11586	3028
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.067146	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.077275	29691	5466
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.050302	15596	3566
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P3	40	40.044733	15030	5108
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.056280	21802	4699
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.034777	4371	469
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.395002	196	56	4.0.0.3	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intro l'; only 1: intros N; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.034633	11282	2964
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.054269	17944	2421
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.128660	56642	5294
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.056084	14631	2978
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.150746	69678	6360
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_cte	40	40.048905	18786	3481
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.120937	52826	5499
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.041525	14240	3725
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_antisym	40	40.152560	25055	3424
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.024795	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.218373	314	156	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_le	40	0.809903	174	76	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.412283	1057	173	14.3	synth with cache (only 1: intros n m s1 s2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.036065	12	6	0.1.1.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace y with y'; only 1: replace x with x'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_trans	40	0.297054	44	12	4.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.UL_sequence	40	40.057301	21608	4008
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	13.163221	7658	669	19.8.0.9	synth with cache (only 1: destruct x; only 1: intros; only 1: destruct y; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.054744	17277	6283
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.062805	24434	4125
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	6.273188	4025	690	2.1.0.8.3.10	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros def_n0; only 1: intros H0 ?; only 1: unfold Rge; only 1: intuition eauto  3).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_dec	40	0.170920	9	4	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_dec	40	0.158357	9	4	1.1.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.045523	3	3	0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.062262	25951	4979
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.231339	116175	2985
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.013402	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	31.360497	5499	1487	0.2.0.3.3.1.5.2	synth with cache (only 1: intros; only 1: Nat.induct ltac:(n); only 1: split; only 1: simpl in *; only 1: intro l; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.006734	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.028865	8852	1049
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.802763	823	236	7.5	synth with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.107567	47063	4262
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.096669	32447	3794
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	2.724880	1041	363	4.1.2.0.2.2	synth with cache (only 1: intros n m; only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.081788	32673	4460
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.044700	14971	2896
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.074075	27263	6565
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.070691	27667	3437
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.027685	5	2	1.2	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.718696	558	116	12.2	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.041686	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	3.651749	1486	654	2.4.3.2.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: edestruct Rle_lt_dec; only 1: eauto with rorders; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.039384	12288	4580
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.030113	9436	2993
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.535493	1982	342	1.27	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.038915	11337	3123
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.102105	42855	4467
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.076342	23643	2083
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.099886	523	83	0.23	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P6	40	40.055127	19697	4650
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.062213	26492	3479
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.040552	15551	2962
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete	40	0.019828	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.040970	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.022103	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.299036	62	39	0.1.2.0	synth with cache (only 1: revert q; only 1: intro m; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.GP_infinite	40	40.063690	24166	5119
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.434631	63298	3269
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.102625	45706	3816
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.113040	49083	3823
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.frame_tan	40	40.041725	15541	2847
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.074864	28845	4950
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_mult	40	40.067227	25609	4065
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_plus	40	40.089040	37708	5408
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	17.379740	6656	1489	0.0.0.6.0.5.0.0.2.2	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: intros; only 1: case (Rtotal_order 0 x); only 1: auto with real; only 1: intro; only 1: rewrite <- Ropp_0; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.051867	3740	608
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.066820	25013	5403
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.112803	43861	4682
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.125395	55287	4840
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.023971	3	2	1.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	3.634620	1485	595	1.1.2.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: apply Rsqr_incrst_1; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.097110	44462	4517
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.074706	31669	3893
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.R_uncountable	40	40.159733	63435	5044
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.056880	20194	4352
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.045763	14724	2533
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.032272	8902	3850
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.160777	76352	4766
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.limit1_ext	40	40.031110	10796	2766
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.064914	4	3	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.037213	11510	4659
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.032442	10798	3815
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.086174	34083	4060
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.161502	59874	3501
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.130952	59681	5448
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P7	40	40.046473	15939	5605
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.087065	36761	2425
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.092132	42200	2645
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.047271	18990	3086
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.102424	41539	5989
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.CV_shift	40	40.083292	34691	5291
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.562610	25672	3160
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.072263	26357	5317
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.029695	7647	1581
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.060937	22666	4735
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow1	40	40.075843	28075	3908
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.063006	20615	5791
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.042421	16033	3342
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.091656	11	4	0.3.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.101814	43224	5399
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.077144	29213	3949
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.084836	32566	4389
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.051005	16724	4942
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.023785	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.140786	12	12	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.019144	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.058990	21024	5099
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.022066	2348	527
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.041288	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	1.024326	279	83	8.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.047728	18142	4535
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.172150	81571	4159
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	4.184857	9844	514	1.1.0.4.50	synth with cache (only 1: intros H; only 1: destruct H; only 1: now auto with arith; only 1: now auto with arith; only 1: now auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.049081	17744	3772
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	21.636777	66776	505	3.13.3.0.0.13.324	synth with cache (only 1: constructor; only 1: easy; only 1: red; only 1: intros; only 1: intuition; only 1: compute; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.040982	13833	2298
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.047498	15936	4867
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.191973	91963	5189
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Dln	40	40.029265	6851	3211
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.067331	24938	5250
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.041443	13826	4015
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.066794	26190	2362
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.107266	45966	4628
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P8	40	40.045011	12678	3337
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.057556	20256	4522
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.adherence_P4	40	2.639213	2260	425	0.2.10.2	synth with cache (only 1: do 2 intro; only 1: unfold included; only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.054686	22196	2824
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.067625	25700	3626
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.853485	123	55	0.0.0.1.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.057048	19758	1843
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.075936	29121	4732
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.069349	24507	4032
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.in_int	40	40.034059	8397	3414
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.036552	12308	2635
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	18.523763	10750	2340	0.0.1.6.0.2.0.0.4.0.1	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real; only 1: intros H1; only 1: apply Rminus_diag_uniq; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	18.354290	31304	2422	1.51.0.0	synth with cache (only 1: intros n bv; only 1: induction bv as [| h n bv]; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.233289	105312	10318
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_mult	40	40.038643	10171	4247
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.740457	1276	85	24.2	synth with cache (only 1: intros m IH; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.040922	12958	3912
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	22.718327	14731	2025	7.8.12.6	synth with cache (only 1: simpl; only 1: intros Hn; only 1: intros l; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.081363	28806	6088
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.270067	40331	3783
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.026221	3	3	0.0.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.058813	20546	5423
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.039247	14358	1342
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.044085	16165	4143
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	12.363908	4957	1493	0.3.1.0.4.1.0.0.0.2.1	synth with cache (only 1: intros l a; only 1: induction l as [| y l]; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl; only 1: tauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.088753	36517	5398
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	15.048471	4572	2145	0.2.1.6.0.1.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: intro; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.105488	47085	2299
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.392781	20	8	0.1.3.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.120446	54371	3531
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.053916	19538	4055
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.008999	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.061121	22000	5570
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.927920	569	86	17	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.052726	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.031994	11155	2882
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.046240	14679	3115
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.056868	16587	2965
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.109739	46651	4512
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P9	40	40.068748	25068	4883
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.069198	26618	3863
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P18	40	0.106979	23	11	0.0.0.0.1	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.domain_P1	40	40.062748	23370	1660
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_imp	40	4.517503	1506	429	5.2.7	synth with cache (only 1: intros x y z; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	8.126376	6608	1174	14.14	synth with cache (only 1: rewrite <- Z.eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.224479	20951	2899
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.065026	27288	3143
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.115712	51705	4921
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.140485	63558	4957
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.158056	73128	1620
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.009431	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.025583	8482	2784
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.049536	8261	1744
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.056054	21123	2519
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.060031	23078	2780
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech9	40	40.070161	28019	5033
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.048995	16989	4337
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.035716	10109	1976
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.129090	33185	4002
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0	40	40.052078	20146	1154
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.008759	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.050150	18030	3691
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.069304	28059	4879
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.063223	20983	4089
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.067350	26240	2920
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.089783	34369	2665
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.114680	47497	4738
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.086490	36024	2072
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.057249	16868	3667
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.018517	2653	936
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	7.015764	15996	581	0.6.0.2.0.0.2.87.8	synth with cache (only 1: red; only 1: generalize 1%positive; only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: split; only 1: now Z.nzsimpl; only 1: apply gt_wB_1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.056416	22218	2225
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.106460	13	4	0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.023042	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.070910	7	2	0.5	synth with cache (only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.042062	13283	4563
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Heine	40	40.080271	31300	5522
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_ext	40	40.027105	8440	2966
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.042218	7742	1432
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.122171	21945	2872
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.109699	47702	4941
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.125804	57099	5029
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.078049	29407	4430
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.025367	7103	2733
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.030530	7827	2085
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.075940	31088	3986
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.102719	41956	5011
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.015523	4	2	0.2	synth with cache (only 1: intros n bv; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech13	40	40.092636	39846	4554
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.047732	15598	3773
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.207336	3784	357
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.056958	6087	2420
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.028543	8036	1451
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.131404	27907	3283
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.028179	2	2	0.0	synth with cache (only 1: Bool.destr_bool; only 1: field).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.097210	41795	3765
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.131152	60239	3963
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.074726	30393	4878
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.071979	27295	4979
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.063782	23585	4081
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.069399	43	8	6.2	synth with cache (only 1: intros; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.071298	11	4	0.0.1	synth with cache (only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.072228	26677	4590
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.115817	49402	2103
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.061851	23444	3238
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.084602	32635	4893
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.056930	22408	2832
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	8.646836	3951	948	6.0.10.0	synth with cache (only 1: unfold permutation, meq; only 1: intuition; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.788074	1265	228	16.3	synth with cache (only 1: intros x y; only 1: apply Z.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.148166	69663	4803
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.017972	3275	1051
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	40.094462	42162	4662
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	40.270111	132364	1221
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.042608	12047	4429
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.049144	16770	2902
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.067611	27935	3218
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.097411	38846	4462
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.042498	10	4	2.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.124582	55833	2646
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.079367	30977	4206
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	10.353729	3250	1249	0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.067111	14	6	3.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.198796	51	14	0.3.0.2.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.046267	16633	2602
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.094851	37245	4149
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.066995	27763	2823
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.086623	31709	4237
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	5.745179	5537	1134	18.0.3	synth with cache (only 1: intros a ?; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.055073	16824	3203
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_minus	40	40.036669	10368	4401
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.057598	20507	4326
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.037949	10201	4727
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.019802	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.914186	1416	57	51	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.630693	66	47	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.038350	7739	1351
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.082918	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.056264	15	5	1.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.045333	8	5	0.3.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.024635	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.045142	13119	2425
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.064579	25085	2858
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.076911	9	3	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.029912	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.028657	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.029305	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.075303	31409	3188
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.086736	29746	2085
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.123896	55794	6097
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.081319	31096	4806
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.070267	26034	3562
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.126907	54942	2202
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.147656	67441	5483
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.296422	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.032077	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.125597	4	4	0.0.0.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.348812	378	21	27	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.032898	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.020692	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.078134	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.008039	3	1	2	synth with cache (only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.103330	5	4	0.0.1.0	synth with cache (only 1: split; only 1: intros ->; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.077705	3	2	1.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	2.026894	368	220	3.3.0.1	synth with cache (only 1: generalize (F.mem_iff s x), (F.elements_iff s x), (existsb_exists (F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.109014	11	3	1.5	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.131329	22533	2480
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.044341	14741	2733
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.499036	21	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.167122	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	1.042887	67	58	1.0.4	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.079299	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.107415	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.108649	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.364489	15	6	0.3.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.128624	4	1	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.457768	14	8	0.0.1.2	synth with cache (only 1: intuition; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.076531	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.087165	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.070819	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.470855	19	6	0.3	synth with cache (only 1: intros a Ha; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	1.438882	141	17	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.056589	6	2	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.050639	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.472457	33	13	0.7	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.035853	13247	3104
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.065268	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.419395	179	37	8.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.514458	26	11	1.1.0.2	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.023427	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.023353	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.448584	16	4	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.064565	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.052121	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.069270	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.035798	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.705510	1071	52	1.43	synth with cache (only 1: intro H1; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	18.912894	11631	1085	1.7.25.2.1	synth with cache (unshelve (only 1: intros; only 1: apply subset_1; only 1: intros ? H1; only 1: eauto with set relations); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.067764	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.482840	22	7	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.126370	57659	3118
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.129641	54984	5273
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.463244	21	13	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.042488	6	3	2.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.262744	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.843083	366	74	1.19	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	7.603013	8920	766	2.2.10.23	synth with cache (only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_0	40	40.061090	22239	3078
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.171322	36490	1770
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.089609	35860	5434
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.036486	11825	2746
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.153243	56088	4196
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.027338	5850	1642
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.070624	24806	4182
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.029960	9634	2318
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.065728	22536	5027
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.062885	13685	3600
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qabs.Qabs_Qinv	40	0.485299	137	64	0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: simpl; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.124051	35201	3975
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.036626	8797	3752
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.021112	6964	1021
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.094225	21646	2636
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.104875	44985	4229
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.191771	86914	4688
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	1.005564	2543	71	5.64	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.037162	12153	2976
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.068044	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.315655	52	33	3.3.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.073971	30504	3522
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.010515	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.090316	37095	4370
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.069707	25945	4902
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.860638	769	116	2.15	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.026424	8	4	0.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.075156	31371	2617
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.074213	29820	3014
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.092375	35689	5474
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	9.093766	2828	530	3.7.0.8.3	synth with cache (only 1: intuition; only 1: destruct H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	2.025011	517	254	0.1.0.1.3.0	synth with cache (only 1: unfold Rle; only 1: destruct 1; only 1: left; only 1: auto with real; only 1: elim H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.139695	59731	5073
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.610835	663	53	33	synth with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?(EnvRing.Pmul_ok Rsth Reqe ARth CRmorph)).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.029772	9539	2509
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.084051	33125	6216
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.072135	26690	4972
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.105499	46668	4169
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.026193	4922	3450
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.110008	43621	4284
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.056562	22561	2510
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qsor	40	40.068993	25839	3593
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.065386	22648	6766
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.154906	69979	5076
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.075643	28058	4860
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.032474	11237	2945
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.083251	30998	4792
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.029268	9557	2579
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.088709	34209	5630
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.068847	16725	3607
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.057948	21760	5291
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.116642	18	4	0.3	synth with cache (only 1: intros P; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.039148	11326	3707
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.488459	29	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.073450	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.036488	10055	2889
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_le	40	40.158281	24308	3239
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.058919	22802	2089
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	40.029581	4716	2760
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.056248	18786	3750
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.100158	44945	5443
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.580928	60	44	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.434927	79	38	0.6	synth with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.121552	52931	3770
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.118316	29	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	6.760304	5937	714	6.21	synth with cache (only 1: intros a b c0; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.078669	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.139884	47677	4527
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.061866	23089	3186
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.097960	41528	3869
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.028908	11	3	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.092706	135	20	4.6	synth with cache (only 1: intros a; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.528924	178	56	1.11	synth with cache (only 1: intros IH m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.492191	36	8	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qred_iff	40	40.071155	28337	4567
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.012705	2	2	0.0	synth with cache (only 1: destr_bool; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.088368	15	3	5	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcge_alt	40	0.072127	5	3	0.2.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	23.894720	18065	1416	0.2.1.7.1.8.0.0.0.3.5.12	synth with cache (only 1: intros m p; only 1: destruct p; only 1: intuition subst; auto with qarith; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl in *; only 1: reflexivity; only 1: split; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.QNpower	40	0.022761	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.036436	9723	1979
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.084725	33338	2034
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	7.417312	9380	1072	7.20.9	synth with cache (only 1: intros n m p Hp Hn Hm H; only 1: apply H; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.072305	26193	6669
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.011516	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.092379	3	2	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.091265	36848	5579
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.132336	4	2	1.1	synth with cache (only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.010470	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.013008	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.010968	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.044178	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex2	40	0.005930	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.100865	42307	7612
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex6	40	0.014253	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.136426	60017	4575
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex7	40	0.753737	433	57	0.13.0.3	synth with cache (only 1: red; only 1: simpl; only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.070960	29209	2487
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.371447	184878	1640
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.065715	22946	4540
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	4.139673	864	428	1.1.1.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	25.469565	3801	2249	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.156007	50	5	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.009690	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.021139	4	2	0.2	synth with cache (only 1: intros Ha Hb; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.065918	25604	3515
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	10.305663	13649	1696	0.0.28.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.037528	14342	2000
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.119252	53395	4145
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.274991	205	35	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.053348	15804	4962
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.045235	17089	2803
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.051916	51	6	9	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.044851	12729	3193
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.024476	6769	2903
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.193649	88096	5352
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.031940	9061	3566
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.038083	6249	1749
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qle_ceiling	40	40.067778	22906	3497
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.056381	18583	3719
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.067951	25694	3257
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.101172	44620	4338
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.107564	48520	4156
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.122788	54104	4602
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.114447	46753	4565
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.005862	2	1	1	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.345638	13233	1828
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.064090	23851	5015
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.143887	23	14	0.0.2.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.377632	122	43	0.0.0.0.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.091300	37640	3548
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.144487	63781	5547
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.072879	28466	3706
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.211771	87419	2774
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.062643	22985	3131
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.355452	177735	1343
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.176131	81377	4325
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.041152	12437	3625
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.043702	16	4	0.4	synth with cache (only 1: intros e1 e2 EQ; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.396036	18309	2196
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	3.375217	1586	445	0.0.0.9.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.112867	46580	5985
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.069587	25514	5136
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.025600	6448	1048
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.081126	20533	5959
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.050365	15869	5592
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.018768	5013	2251
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.196400	88568	9814
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.047415	12912	2502
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.082287	30339	6563
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.021010	4321	2944
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.042684	15444	3005
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.257514	30616	2889
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.101150	42419	4915
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.144472	61980	4139
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.077946	30267	4261
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.078747	34503	3561
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.079928	32613	2443
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.124907	162	28	2.2.5	synth with cache (only 1: intro Hxz; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.084187	31294	5346
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.017607	7	3	0.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.076330	30632	3237
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.010669	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.006880	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.008652	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.232510	109564	4111
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.093855	39471	1544
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.125934	57872	4743
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	2.035812	705	189	0.0.7.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: rewrite Pos.mul_comm; only 1: f_equal; only 1: simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.091321	37837	5022
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	4.861331	3276	482	0.2.3.6.12	synth with cache (only 1: intros n; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	0.042123	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.242968	22599	2942
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.167992	73987	5496
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.077794	32039	3822
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.148302	65833	4718
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.059674	19744	3472
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.126244	54949	4494
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.176872	84962	4621
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	3.132033	2448	487	2.2.0.0.12.1	synth with cache (only 1: intros HP HIS; only 1: intro x; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.340231	8371	2067
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.067537	26043	3418
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.009473	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.013412	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.078600	27400	4250
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.010164	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.078608	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008775	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.013495	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.015492	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.008131	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.011838	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.149507	20	4	1.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.014669	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.171465	78096	6210
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.042567	9943	6061
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.338282	1011	204	10.7	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.048994	16655	3927
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.034622	10139	2541
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.165452	73627	4054
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.111801	44884	5104
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.028643	6814	3152
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.280080	13457	1699
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.017377	4564	2044
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.028318	8079	1495
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.115910	48584	4905
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.125213	54206	3034
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.044013	15730	2279
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.060477	23345	3740
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.005601	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.095594	37355	324
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.077470	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	6.144233	9695	617	4.2.2.41	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.128717	55578	5911
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.065001	24573	5302
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.090246	33862	3220
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.096505	30194	2397
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.018690	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.041418	14038	3367
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.329408	78	29	0.2.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	37.648394	17149	2601	30.0.1	synth with cache (only 1: intros n m p; only 1: qc; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.258335	446	117	0.0.1.0.5.1	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.092811	39354	5202
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	40.131586	52381	10863
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.isZ0_0	40	5.838343	2837	891	0.0.0.0.0.0.6.5	synth with cache (only 1: intros a; only 1: destruct a; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.307597	153228	1443
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.057647	20166	3292
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.076994	31625	3266
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.225598	102411	4658
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.025282	7	4	0.1.1.1	synth with cache (only 1: intros E; only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.106015	42386	4224
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.269992	954	190	0.0.6.0.7	synth with cache (only 1: simpl_relation; only 1: apply fold_rec; only 1: intros HF; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.067369	24557	4598
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.101163	24	5	7.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.161768	72162	3649
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.041090	16820	1323
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.142466	62796	5870
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.027665	9616	2659
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.083594	32175	2623
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.291080	14	13	0.0.0.0.2.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.081884	33807	6732
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_correct	40	40.088017	32660	4681
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.028870	6560	3277
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.840213	371	123	14	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.068417	26810	3431
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.055218	18941	3552
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.174008	80	20	1.6.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.316695	19	7	0.0.0.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.055950	21428	4230
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.038736	11254	4294
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.073353	28830	3779
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	2.492063	1615	233	1.0.17	synth with cache (only 1: intros l1 l2; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.113338	51245	4014
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.029203	5242	597
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.152315	73094	5466
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.157126	73115	4313
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.164151	73875	3036
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.094149	37124	4954
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	40.147739	65266	4856
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	8.900923	5038	766	2.10.5.8	synth with cache (only 1: intros Eq1; only 1: unfold Rsqr; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.079382	26516	5438
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.025624	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.026995	5	4	0.0.0.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.074375	29241	3864
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.090705	34916	4659
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.275405	138051	4154
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.084771	32843	4743
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.077640	25213	5585
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_one	40	40.075160	27149	6819
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.024378	15	5	2.1.2	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.072496	29082	3299
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.121467	50585	3665
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.021904	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.111535	47027	4512
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.691687	113	46	0.0.0.0.0.4	synth with cache (only 1: intros v; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.099694	40597	3848
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.038782	12318	2902
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.144759	62201	3244
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	40.053809	14637	6118
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.157638	71204	5386
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.PI_ineq	40	40.033758	12347	2827
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.033619	7490	4800
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.031945	7618	4188
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.114668	44872	8302
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.060877	21695	3692
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.146818	42	27	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.060223	19371	3625
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.024110	6048	1145
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.045059	14747	4383
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.125645	55956	3764
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.017650	5483	669
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.343335	169147	4285
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.080783	33264	5292
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.091512	37985	5916
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.141305	60158	5168
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.512051	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.051069	22558	1516
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	29.721208	32594	3603	8.0.2.4.2.0.0.0.17	synth with cache (only 1: intros a b; only 1: intros; only 1: apply fold_rec_bis; only 1: intros; only 1: auto; only 1: intuition; only 1: intros; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.075932	32027	4402
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.047383	15123	4578
coq-tactician-stdlib.8.13.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.037974	10897	1721
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	2.401000	351	132	4.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	41.258851	24729	3844
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.158638	69790	5504
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.049496	16700	759
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.014378	1	1	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_trans	40	40.123226	51216	5547
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.107315	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.702528	3864	622	22.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.233189	108043	5654
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.054312	20618	2112
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.065668	25354	3161
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.048336	16212	2327
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.052698	12933	5771
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.113272	46499	3702
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	6.674794	6169	1063	4.0.0.0.1.12	synth with cache (only 1: intros a b c Hc; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.036479	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.103897	42734	5237
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.092637	34052	4565
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.281137	131087	7629
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.079023	27174	7314
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.023732	5932	3669
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.068868	22227	8245
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.435827	1726	275	1.9.6.2.4.2.1	synth with cache (only 1: split; only 1: firstorder; only 1: auto; only 1: red; only 1: intros s; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.157898	70846	6264
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.107698	44839	3228
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.147084	4920	1266
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.044571	13391	4687
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.076700	29505	5091
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.168985	81808	6686
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.162900	73537	6580
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.046399	14249	4804
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.111961	48699	4404
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.009972	3607	353
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.074137	26581	2720
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.057382	19864	4859
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.208849	101047	3041
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.093529	33342	6010
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_trans	40	0.073990	15	7	2.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.245696	105	25	7.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.114309	49820	3162
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.256679	153	40	0.0.1.4.0.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.099240	39245	4345
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.081836	31124	2239
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_lb	40	40.118405	48765	7478
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.065348	23794	3831
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.pr_nu	40	8.692934	5699	1115	0.0.1.0.3.3.3.0.1.2	synth with cache (only 1: intros r1 r2; only 1: intros l1 H; only 1: elim H; only 1: simpl; only 1: unfold derivable_pt_abs; only 1: elim H; only 1: intros; only 1: destruct H as [l H]; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.190620	91931	2223
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.063600	14	6	0.0.2	synth with cache (only 1: intros E; only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.029732	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.210947	104315	1636
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.016701	3	2	0.1	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.084270	8624	1611
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.073850	22164	5164
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalChoice.choice	40	40.218738	105265	7671
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.202749	95621	2805
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.065603	24187	1767
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.112116	46141	3727
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.053968	19482	4297
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.182862	89910	2275
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.073562	23416	6319
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.053656	19379	2958
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.102008	44509	5084
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.130965	56105	5495
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.029037	6	4	1.0.1.0	synth with cache (only 1: unfold singleton; only 1: intros n m H; only 1: rewrite add_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.086860	34801	3538
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.051039	13102	1259
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.072801	29103	2807
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.100022	40952	5550
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.015229	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilZero.sis	40	31.460923	15502	4941	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.127460	54149	5561
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.071751	30273	6075
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_alt	40	40.091722	35700	4951
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003134	713	278
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.074601	27645	7514
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	25.197538	14937	2601	0.1.15.11	synth with cache (only 1: intro n; only 1: intros H; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.839093	544	89	13.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.134939	105	14	13	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Epsilon.iota_statement	40	40.210479	98262	6696
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.184121	38298	4173
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	30.906243	21156	2793	0.3.0.1.46.0	synth with cache (only 1: intros; only 1: pattern s; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.075479	29176	4521
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.077150	28482	5456
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.048567	16558	2333
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_ub	40	40.089842	33960	7969
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.050532	15683	6560
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.215411	96136	5517
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.061839	22224	3091
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.329564	132	46	0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.039212	12902	3149
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.080565	35056	2978
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.103512	40303	4749
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.063570	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.290287	73	36	1.1.0.0.3	synth with cache (only 1: intros m; only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.083402	35388	5576
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.095008	23154	2613
coq-tactician-stdlib.8.13.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.315075	152186	6945
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.069677	24307	3626
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.051251	12725	2994
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.093149	39829	2524
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.088686	34571	5337
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.070140	25562	3832
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.707638	289	97	1.0.0.2.1.1	synth with cache (only 1: destruct s; only 1: intros s x y; only 1: trivial; only 1: intros; only 1: apply <- union_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.043955	2981	928
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.094455	40893	3991
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.061825	23269	5335
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	40.093717	39830	4810
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.036895	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.119027	55401	6040
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.072300	27795	4028
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	12.121160	5836	1094	1.4.1.10.6	synth with cache (only 1: intros m Hm x y e; only 1: simpl; only 1: unfold IfEq; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.054989	19413	4989
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.094421	37658	5554
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.004853	1732	188
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.072240	24067	6214
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.162575	73738	3055
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.184195	90	19	8.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.063714	23878	4533
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.060289	22419	3652
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.074485	28964	4766
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.094290	35847	5286
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.272795	17292	3098
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.108649	46438	4957
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.089730	6	4	0.2.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.066033	16714	4011
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.087433	9	7	2.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.068287	24807	2341
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.122182	52340	4509
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.017310	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.036021	9506	4724
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.080895	32291	4702
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.087834	39773	3452
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.084761	34237	5026
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	43.077465	12339	1842
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.100179	22538	2604
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	40.045091	15631	4784
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.038410	11474	3198
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.083878	32133	4992
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.055915	19	6	2.0.1	synth with cache (only 1: intros a b q **; only 1: rewrite inter_spec; only 1: PeanoNat.Nat.auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.032127	9325	1011
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.065524	27679	3405
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.045516	16399	3574
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.111678	43475	4715
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.050095	19389	2597
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.207879	90665	10247
coq-tactician-stdlib.8.13.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.109681	39239	3753
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.009788	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.330615	38	4	10	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.004559	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.077707	28914	3852
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	36.717182	725	148	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_trans	40	40.116353	46059	6480
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	40.079842	29691	6163
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.024815	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.064240	23296	4817
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	4.120244	3063	495	0.1.0.12.3.1.6	synth with cache (only 1: induction m; only 1: intros; only 1: inversion H; only 1: inversion_clear 1; only 1: auto; only 1: intuition; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.095975	34553	3816
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.106011	45031	4148
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.076430	27606	4121
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.024723	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.034205	9	5	2.0.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.069063	23557	6553
coq-tactician-stdlib.8.13.dev	Coq.micromega.Ztac.elim_concl_eq	40	1.182300	862	191	3.4.7	synth with cache (only 1: intro H; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.137851	59865	4390
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.070296	29846	4045
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.073593	19613	5044
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.259467	122655	2465
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	1.454296	228	175	0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.135169	60864	5338
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.077500	32176	2448
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.129328	54313	3138
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.106394	45375	4350
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.063291	13	8	6.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.116858	49335	7045
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_refl	40	40.076366	32645	3506
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.066131	25202	3403
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_lt	40	40.117232	47832	3659
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.078018	31433	3118
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.260175	127369	4760
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.092801	36982	5479
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.150136	70707	2547
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.034554	8	3	0.5.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: now try Z.order').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.044188	8171	2576
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	1.020876	584	150	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.017335	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.067516	27070	4282
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.086667	36515	2919
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.040052	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.104384	44001	1732
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.010161	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.254021	123863	9165
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.009313	3141	143
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.133904	57983	3994
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.114636	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.730058	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.072626	29232	4770
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	2.821610	2389	316	1.1.1.0.1.0.0.0.8.1	synth with cache (only 1: rewrite !Nleb_Nle; only 1: destruct a, b; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: simpl; only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.057435	19095	4242
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.058085	20722	2628
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.128731	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.064950	25112	3898
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcpower_0	40	0.399180	164	42	0.1.0.6	synth with cache (only 1: induction n as [| n IHn]; only 1: intros; only 1: tauto; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.297019	7023	1198
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.082416	33611	2593
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.120449	42058	681
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.099223	41714	4404
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.059675	19547	6179
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_minus	40	0.885548	249	80	0.1.4.2	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.033970	6623	4986
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_spec	40	40.170104	71841	1244
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.139858	62500	1765
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.084283	32751	5125
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.093548	36317	3413
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.108742	43360	5394
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.126048	51109	6402
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_sym	40	40.106303	44767	4160
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.093245	27351	3915
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.017173	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.054440	18243	787
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	2.684722	4497	429	33.0	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	5.548615	1593	383	1.4.2.3.1.0	synth with cache (only 1: repeat red; only 1: intro l; only 1: simpl; only 1: intros n H; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.091243	36364	4412
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.427886	214092	2920
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	4.579377	13304	591	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.034541	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.334737	155606	4270
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.085937	32652	2838
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.091660	37264	3925
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.byte_dec_bl	40	40.116470	31341	1295
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.069291	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.208122	8423	1219
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.079824	31993	4731
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.131127	30378	3640
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.113616	51028	4065
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	1.508828	1259	89	11.26	synth with cache (only 1: intros f g H l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.855376	182	41	0.10	synth with cache (only 1: intros L R n; only 1: now apply Zis_gcd_sym).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	1.861096	2148	181	23.20	synth with cache (only 1: intros X; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	12.051240	16921	1511	0.0.0.37.0.0.2.0.0.0.0.2.0.0.1.2.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.007843	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.063267	17277	2085
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.100449	113	20	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.004537	795	161
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.128864	58037	4793
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.051415	18112	2789
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.052617	16929	3753
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.084423	30343	4330
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.612814	217	62	0.8.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.150680	67474	4660
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.062664	14924	2166
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.123005	55539	2052
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.105887	44765	3761
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.not_prime_1	40	13.968341	16661	1555	63.22	synth with cache (only 1: Z.nzsimpl'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_refl	40	35.690668	58776	3035	4.38.7.14.35	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: easy; only 1: destruct x; only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_eq	40	0.193811	24	13	0.0.0.3	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_neq	40	0.014849	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_compat	40	0.022530	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.061761	20957	6239
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.030640	6085	4527
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	2.081713	671	55	13.12	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.036827	9746	3726
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.059015	17518	3726
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_eq	40	40.071636	23537	7570
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.find_left_path	40	40.076297	31412	4229
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.030490	12	4	2	synth with cache (only 1: now intro n; induction n).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.086555	36648	4447
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.195282	67	15	8	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.915496	1270	262	5.3.2.3.1	synth with cache (only 1: intros; only 1: destruct n; only 1: discriminate H; only 1: vm_compute in H; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.060087	23619	2928
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.070400	25566	4232
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.093171	36353	4710
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.157591	68511	4685
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.136348	58528	5150
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nless_def_2	40	5.860490	2933	1173	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.093253	37623	4361
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.037888	12269	1363
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.119491	19	6	0.0.0.2	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.078953	30592	2564
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.075907	29432	3030
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.094270	19041	533
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.124893	34722	2096
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.072635	27602	1658
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.178337	80660	7607
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.096131	26898	3710
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002793	997	105
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.148323	65814	5018
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.064119	20803	6266
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.223928	24022	2784
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	5.603343	3571	730	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.150299	63399	3189
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	40.047526	18104	2308
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.132781	59298	2708
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.062707	22588	2081
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.045092	16912	3234
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.096565	37109	4058
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_0_1	40	0.042991	6	4	0.1.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_plus_1	40	0.831937	280	103	3.5	synth with cache (only 1: intro q; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.030186	5730	4390
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.110318	5278	507
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.059649	15475	766
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.062698	23360	2701
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.S_INR	40	6.319954	3957	612	0.10.1.16.0	synth with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.123913	55868	2990
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct1	40	40.128830	38042	6863
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.085732	33186	4926
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.635925	1748	229	2.2.20	synth with cache (only 1: intros a Ha; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	26.614422	8504	1646	0.6.0.0.0.0.5.0.0.1.0.0.1.13	synth with cache (only 1: nzinduct n; only 1: Nat.nzsimpl; only 1: destruct m; only 1: auto; only 1: simpl; only 1: f_equal; only 1: intro; only 1: split; only 1: intro l; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.083698	20435	3021
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.075267	29350	4755
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.079249	23660	4386
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.010002	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.483431	21	8	0.0.2.0	synth with cache (only 1: intro n; only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.064269	23954	4306
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.903189	1001	151	6.1.2.15	synth with cache (only 1: intros n'; only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0.137223	50	15	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	0.839778	307	69	0.0.1.3.0.11	synth with cache (only 1: intros; only 1: destruct x; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: rewrite (same_gen Rsth Reqe ARth); only 1: let rec rrefl := gen_reflexivity Rsth in rrefl).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	28.135173	26700	1675	106.3	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.063188	21556	3041
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N0_less_2	40	40.112871	48138	4995
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.656670	13329	271	0.0.140	synth with cache (only 1: red; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.087116	10	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.143622	63789	4859
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.040065	7175	5499
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	5.632219	6643	850	0.23.3	synth with cache (only 1: intros; only 1: red; only 1: eauto with set).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.091831	36905	1814
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.111408	38184	3037
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.071077	27372	4620
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.105805	42630	5584
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.144772	68290	5053
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001323	234	75
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.036974	280	121	0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.368737	182935	7565
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.091586	34576	4635
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N	40	40.064498	24268	1672
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.067013	24387	3761
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.065834	24574	2187
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.138582	58892	4200
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.083144	30254	3490
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.056641	17716	5838
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.031001	6803	5079
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.023080	5227	2118
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	24.157800	36397	3445	8.1.0.13.20	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite diff_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.080808	33054	1789
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.plus_INR	40	40.037997	13821	2613
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.067392	26741	3336
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct4	40	40.119472	48234	6442
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.090162	36524	4796
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.167383	73708	4738
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	37.223232	9327	3775	0.11.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.044805	14520	3497
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zabs.Zabs_dec	40	1.119378	512	93	2.3.2.2.1	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.060328	24100	2040
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.149076	69152	5019
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	5.408865	11170	859	38.4	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.011828	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.112192	47042	7702
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.061435	24301	2093
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.029266	6848	3954
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.147750	64950	6133
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.038938	12748	1377
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.160186	80425	535
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.014029	7	2	5.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.011137	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	0.819889	326	36	15.0	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.009225	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.022674	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.062871	22764	3243
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.076953	27936	6319
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.067189	24690	4421
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.069726	28391	4019
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.082860	29284	2873
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.153839	70585	5441
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	19.320832	8696	2279	1.5.0.0.0.1.1.1.6.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.085926	17	9	1.1.0.1	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	1.076007	265	111	0.0.0.4.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.196456	11934	1196
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.094902	32793	3637
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000699	78	30
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.172712	80251	3801
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.047121	12896	3328
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.091649	39353	3147
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.128461	24457	1987
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.006589	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.027109	5680	4165
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.035500	9553	3645
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.031007	8224	3260
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.minus_INR	40	40.066492	26828	3361
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.094291	35768	4928
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.123337	54400	2258
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.223993	101565	3812
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.139874	58364	4790
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.282975	44074	5131
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.102705	40187	2710
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.078068	27995	5115
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.093102	39401	3435
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.043374	8564	936
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	3.398493	640	358	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.076835	29773	8505
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.044019	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	23.727283	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.213567	50241	4770
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.058741	19465	5252
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.219295	40602	4367
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	20.389757	32305	644	144	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.032356	11318	1316
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.060057	19039	6007
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.107526	44667	4515
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.042941	15283	2039
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.083579	37381	3969
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.224996	105696	3999
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.060590	21058	3451
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.055000	24776	1858
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.035866	6	4	2.0.0.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.869884	35915	3607
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.100729	39490	5506
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.011436	4	1	3	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	0.023287	2	2	0.0	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.014128	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.076480	33425	3931
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.086291	34757	3832
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.053215	19058	3114
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.044771	10760	5845
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	0.102652	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.058924	19662	4038
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.773994	2289	446	0.0.1.0.13.4	synth with cache (only 1: intros; only 1: intros H1; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_INR	40	40.035414	11878	2583
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.063736	21743	4976
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.358310	179742	2794
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.076313	28650	5300
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.071621	30045	1396
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.103373	40272	6954
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.126074	50356	6439
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.065189	25959	3961
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.558453	24457	2940
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.057010	21177	1080
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.051382	16768	5170
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.085937	33195	6493
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001214	162	44
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.225401	45479	4007
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.044987	17059	2808
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.043594	8046	1201
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013713	3581	988
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.087252	33178	3560
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.049989	17155	2146
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.056645	16897	4212
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.094787	32137	4089
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.210968	90499	3916
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.092263	42763	2199
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.110102	36335	3670
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left	40	40.299886	38640	3449
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.011226	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.092815	39163	4015
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	9.002076	10535	834	39.0.5	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.091399	36404	3428
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.060361	24961	2587
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.035035	10804	2593
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.086693	34316	4996
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.072666	26134	5685
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.lt_0_INR	40	40.078306	31451	4999
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.087705	37043	5075
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.277062	134601	1693
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.087224	32288	6334
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.192376	91058	9372
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.123537	53634	4107
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.057578	18909	5374
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.898307	203	34	4.0.0.12	synth with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.086975	34357	6648
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.085683	37107	5967
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.020123	4549	2072
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.129114	6836	850
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	2.812029	1330	355	0.0.0.0.0.0.0.0.0.0.9.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: now Nat.nzsimpl; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.041880	13897	4211
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.061535	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.096071	39385	5325
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.230222	50378	4972
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_pos	40	0.176826	41	7	10	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.314935	152	29	5.10	synth with cache (only 1: intro Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000816	67	35
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.042248	328	65	0.0.13	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.203936	13971	1183
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.067607	24755	1671
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	1.582592	771	209	0.3.1.1.3.2	synth with cache (only 1: intro l; only 1: unfold singleton; only 1: intros n; only 1: rewrite InA_cons; only 1: intuition; only 1: inv).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.017136	4838	975
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.046530	16141	2028
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.070245	24921	4958
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.070748	23815	3439
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.177539	59846	3540
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.033942	4424	917
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.071454	28209	3263
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	40.311761	31829	3915
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.092202	38099	4769
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.085328	35504	4180
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.155438	68459	5703
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.086776	33998	2977
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.032529	12344	1149
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.036797	9593	4425
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.012690	9	2	2	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.060305	12	4	3.2	synth with cache (only 1: unfold Z.le, Z.max; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.071456	25498	5397
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.315854	156	45	4.0.7	synth with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.321398	2568	412	7.6.0.7	synth with cache (only 1: destruct m; only 1: intros H; only 1: eauto; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.066877	21794	6143
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N_nat_Z	40	0.939173	428	95	0.1.0.0.0.0.0.1.2.9	synth with cache (only 1: destruct n; only 1: split; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.034940	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_N_nat	40	0.013176	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.118142	52824	4499
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z_nat_N	40	1.325857	234	71	0.5.0.0.0.8	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: Nat2N.nat2N; only 1: Nat2N.nat2N).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.130037	41124	4277
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.339867	171992	2567
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.112751	49183	3773
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj	40	0.978479	297	98	1.0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.005541	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.230801	11	3	1.5	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_INR	40	5.934947	2584	738	6.2.0.0.6	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: auto with real; only 1: intros n0 H1 H2; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_not_0	40	0.094470	12	9	2.1.0.0.0	synth with cache (only 1: intro; only 1: Nat.cases ltac:(n); only 1: intros; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.085272	33500	4202
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.025542	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.033227	10131	2695
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.101565	40760	1125
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.071127	26077	3060
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.132369	58621	6172
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001295	243	42
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.208128	31731	6731
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.112745	23162	5893
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.024815	6	3	0.3.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.018440	6415	1086
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.061911	25116	1340
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.065043	8898	2592
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.126473	58757	2157
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	4.897088	436	146	5.0.2.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: intro n; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.214378	7061	1416
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.061802	21088	4362
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	5.351795	6451	758	0.0.3.0.3.0.13.10	synth with cache (only 1: intros q; only 1: induction q as [q IHq| q IHq| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.182831	65606	3203
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	16.592989	21227	2693	0.0.0.0.0.0.0.0.0.0.0.0.0.0.44	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.088295	33582	3628
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.053323	18508	2843
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.349389	33607	2400
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zge_left	40	0.478892	225	29	0.14	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.030547	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.046666	15534	4458
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.072302	27057	3107
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.110418	31036	3802
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.065040	25163	3350
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.not_Zne	40	40.112825	46676	3920
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.155020	12548	2124
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.028516	7444	2928
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.140449	12782	1938
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.874408	612	88	0.15.0	synth with cache (only 1: intros H; only 1: rewrite H; only 1: apply negb_involutive).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.130501	57957	3773
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.048602	12740	5338
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.027043	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.385678	88704	2506
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_eq	40	40.076837	29606	4909
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.072247	26482	4005
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.028150	7352	3027
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.not_1_INR	40	6.704225	1008	376	0.9.3.0	synth with cache (only 1: intros; only 1: intro abs; only 1: elim H; only 1: now apply not_INR in H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.121770	55855	2084
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.090636	38389	4181
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.132011	30	19	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.032085	9574	1807
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.337701	156491	5068
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.061785	18732	4771
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.236503	23361	3576
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003496	432	55
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.030476	9580	1828
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.078087	28495	4130
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.109395	51508	2273
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_jump	40	0.562700	450	76	0.11.0.0.3.0	synth with cache (only 1: unfold tail; only 1: induction p as [p IHp| p IHp| ]; only 1: unfold hd, nth, tail, jump; only 1: trivial; only 1: trivial; only 1: now BinNat.N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.018572	5	3	0.0.2	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_pred_double	40	0.014642	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.024460	3	3	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.063971	23251	3542
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.077505	28158	4291
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.175787	87462	1488
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.257376	65324	3839
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.081494	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	40.158330	72413	5568
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	14.912407	13577	2609	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.5.0.9.1.0	synth with cache (only 1: induction a as [| l IHl o r IHr]; only 1: unfold compare, equal; only 1: intros EQ; only 1: destruct b as [| l' [| ] r']; only 1: simpl; only 1: trivial; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: destruct o; only 1: intro; only 1: discriminate; only 1: simpl is_empty; only 1: rewrite <- andb_lazy_alt, andb_true_iff; only 1: intros [Hl Hr]; only 1: destruct b as [| l' [| ] r']; only 1: simpl compare; only 1: rewrite Hl, Hr; only 1: trivial; only 1: simpl compare; only 1: trivial; only 1: simpl compare; only 1: rewrite (IHl Hl), (IHr Hr); only 1: simpl; only 1: case (is_empty l'); only 1: case (is_empty r'); only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.196049	29072	4156
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.060051	22042	4164
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.319949	53784	2323
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.057756	17434	6031
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.020140	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.117434	45108	5546
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.059167	18000	2175
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.058126	21660	3005
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.108051	44413	4796
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zge_trans	40	0.163408	33	12	0.3.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.095005	27828	6456
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006638	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.006194	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	10.441418	19817	1525	18.0.0.0.0.3.1.18.3.0.0.0.0.0.18.16.32	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.076358	25551	5808
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.048999	15865	4439
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.083208	32106	4590
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	3.901686	6942	461	4.0.13.36	synth with cache (only 1: induction 1; only 1: eauto; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.338716	31538	3640
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	14.013077	9124	2099	2.1.7.0.0.2.1.5.2	synth with cache (only 1: intro l; only 1: induction l as [| z l IHl]; only 1: intros P H H0 l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.107563	44517	5314
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.190392	69943	3330
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_IPR	40	40.072602	28208	3655
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.223131	62366	6345
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.111001	47123	5746
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.211403	47613	3017
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.078673	32408	2101
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.634559	7453	2482
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.021116	5888	2289
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.004109	607	81
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.087358	37669	2984
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.037991	11908	2453
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.077430	30362	4330
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.034912	9472	2857
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	23.430179	40353	2966	0.0.7.3.23.0.18.11	synth with cache (only 1: destruct p as [a0 b]; only 1: intro H; only 1: compute in H; only 1: rewrite H; only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.180414	21864	3532
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.077792	31481	4594
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.050289	12640	3244
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.026811	5	3	0.2.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.015523	3	2	0.1	synth with cache (only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.006485	2	1	1	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_comp	40	40.056739	22637	2541
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_assoc	40	0.937408	337	89	2.0.0.0.2.3	synth with cache (only 1: intros a b (Hb, Hab); only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: do 2 f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	34.905880	34591	3019	0.0.0.4.1.3.2.0.27.0.1.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: destruct c; only 1: simpl; only 1: destruct f1; only 1: intros f1; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	10.276588	8130	1029	9.1.5.11.1.7	synth with cache (only 1: destr_bool; only 1: intro n; only 1: induction s; only 1: simpl in *; only 1: inversion 1; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.142438	27206	2541
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_dec	40	35.512751	69982	4096	1.3.0.4.0.2.13.3.0.4.0.0.0.10.117	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: left; only 1: simpl; only 1: auto; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto with relations; only 1: destruct p; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.207997	60090	4362
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.063736	21519	2566
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.065920	23802	3476
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.034617	5605	2516
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.153778	50790	6791
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	1.129641	891	109	0.0.7.11.3	synth with cache (only 1: unfold Z.lt; only 1: intros; only 1: reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.031711	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008868	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.007224	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.248720	10535	3247
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.064379	21130	4275
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.035383	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.064072	22857	2086
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_succ	40	7.452543	7955	469	0.0.23.13.17	synth with cache (only 1: unfold Z.leb, Z.le; only 1: intro H; only 1: contradict H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.137688	37617	4692
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.020553	5	2	0.3	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.017705	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.134107	32679	6965
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	7.381226	2110	975	0.0.1.1.0.0.0.1.1.1	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.091238	35767	5343
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	41.015770	64137	2617
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.007685	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.010256	1	1	0	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007599	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.011475	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004952	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005228	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_IZR	40	40.034146	11949	2262
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA8	40	32.688649	25922	2230	1.22.17.3.0.0	synth with cache (only 1: destruct x; only 1: intros c Hc IH; only 1: auto; only 1: intros m Hm; only 1: easy || now destruct y; only 1: now destruct 2).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.130506	56688	5696
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.194587	39095	4713
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.043659	15678	1463
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.072274	7	3	0.4.0	synth with cache (only 1: intros x y; only 1: intro l; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.120668	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.100600	33	12	0.5	synth with cache (only 1: intro m; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.024305	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.067631	4	3	0.1.0	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.101501	15	5	0.1.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.969088	11918	2138
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.017602	1156	237	11.3.2.2	synth with cache (only 1: intros x y z H0 H1; only 1: intro H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.692771	115	56	0.0.0.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000778	67	36
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.186955	25955	7680
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.013587	2979	1911
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	6.886661	2181	317	2.3.1.9.2.13	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.066448	25945	3531
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.031115	9031	1571
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.088380	34322	4983
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.301981	94808	3574
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.029102	9693	1645
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.040650	7699	2614
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.066709	24831	2582
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.012233	3	2	1.0	synth with cache (only 1: intro q; only 1: now reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.071365	25478	4701
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.029459	7798	1926
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.095550	40479	5041
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.118731	23154	4904
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.051410	14616	2574
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.149511	66004	4391
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.069486	14495	2944
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.095330	19996	2946
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.058693	19494	4531
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_quot2	40	7.272822	1801	468	0.0.3.0.4.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros a Ha; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	5.187998	2744	664	1.2.0.1.0.0.4.0.0.0.7	synth with cache (only 1: intros m x; only 1: intros hyp; only 1: induction m; only 1: simpl; only 1: intros e' eqfind; only 1: intuition; only 1: destruct a as (x', e); only 1: simpl; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.097859	39803	3745
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.587159	96	54	1.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.032502	12160	2066
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.159738	53980	4903
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.132956	29596	6667
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.936898	93	30	0.0.9	synth with cache (only 1: red; only 1: intros x x' Hxx' l l' Hll'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.057067	18332	5201
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.039504	16703	1838
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.succ_IZR	40	40.047755	16295	3805
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	9.937167	16775	869	6.2.6.2.0.3.93	synth with cache (only 1: N.induct ltac:(n); only 1: trivial; only 1: intros n IH; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.099110	43864	3745
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.129049	39178	6937
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.211790	16009	3579
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA16	40	2.338588	6767	118	2.0.111	synth with cache (only 1: Z.bitwise; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.068764	24913	7000
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000768	64	37
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.135840	61341	5557
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.050311	18070	1414
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.033098	11158	1279
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.097629	39145	4239
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.014574	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.122001	47881	6494
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.072189	15366	1069
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.148957	13743	2375
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.022008	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.080642	11165	1799
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.094902	38730	4460
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.050172	15656	4649
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.068134	28935	2547
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.180358	29344	4487
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.043931	10994	4199
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.052950	15338	5640
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.056328	9464	1726
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.146129	26978	2579
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	5.849386	4727	701	2.3.0.0.6.13	synth with cache (only 1: intros n m; only 1: intros a b c Ha Hc; only 1: case Z.compare_spec; only 1: intuition Z.order; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.095828	40953	4893
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.056419	12182	967
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Z_R_minus	40	28.768794	13339	2631	0.12.0.0.3.8	synth with cache (only 1: intro t; only 1: intro; only 1: unfold Z.sub, Rminus; only 1: rewrite <- opp_IZR; only 1: symmetry; only 1: apply plus_IZR).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.116351	51957	4345
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.041869	15699	2655
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.059212	17928	4254
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.015574	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.065314	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.013289	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.182746	66958	2831
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	40.139265	18003	3030
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.070393	23098	4037
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.573794	255	42	0.0.1.1.1.13	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.081946	34455	4622
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.022302	4	3	0.1.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.020987	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.304907	39449	4695
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.id	40	0.030758	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.011439	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.011015	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.189430	85118	7474
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.105998	42574	7602
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_2p	40	16.950262	6684	1517	1.1.0.3.16.5	synth with cache (only 1: change 2 with (1 + 1); only 1: destruct p as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: auto; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	3.084202	1553	403	10.1.1.4	synth with cache (only 1: unfold Z.le, N.le; only 1: intros Hn Hm; only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.087043	16274	4199
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.404496	180460	7000
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.145351	34853	4873
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000701	71	34
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.032958	11727	1415
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.033094	10500	2048
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.065167	25723	1485
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.126651	27829	4578
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.081383	33024	4708
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.221164	33044	4474
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.218614	19738	4695
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.121763	51642	6425
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.671957	578	137	0.1.7.5	synth with cache (only 1: intro; only 1: invlist InA; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.066546	22971	3223
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	28.305476	13960	3909	0.0.1.0.0.1.0.8.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.066270	25408	2961
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.102340	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.009580	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.101424	41437	4145
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.030091	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.286756	23	5	1.5	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.008500	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.044015	12117	4985
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.259974	101619	7010
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.508349	270	55	9.6	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.041399	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.343968	149197	6014
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zle_compare	40	40.161203	73158	6057
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.180321	84591	2549
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.513531	289	63	1.0.7.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	22.793997	20094	1081	0.0.2.0.13.0.0.1.66	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: split; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.072487	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.eq_IZR	40	40.062455	22334	5254
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.049737	19277	2878
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.142852	75	27	1.0.0.6	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.043646	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.039800	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.025675	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.070668	26630	5584
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.988639	287	133	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: split; only 1: intros Hr; only 1: inversion_clear Hr; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.157619	125	12	0.15	synth with cache (only 1: intro n'; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.023884	5	4	0.1.0.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.053667	19155	3897
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	14.540713	19474	2622	24.8.6	synth with cache (only 1: intros; only 1: compute; only 1: firstorder using Sorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	1.451646	2108	205	14.18	synth with cache (only 1: intros a; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	3.081545	1540	579	0.0.1.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.147334	22709	3019
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.085751	34424	5002
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.042231	6	5	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.681342	205	62	0.0.0.2.1.2	synth with cache (only 1: repeat red; only 1: intros l a; only 1: intros; only 1: subst; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.236104	33161	4291
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.115192	15660	5591
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.114391	33244	3603
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.168892	34726	4243
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.287449	65	18	1.0.0.5	synth with cache (only 1: repeat red; only 1: induction l; only 1: Bool.destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.008666	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.024291	9	3	5.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.160033	73256	6385
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.158693	49788	6750
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.134639	49952	6389
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.026792	8626	1758
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.008599	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.005896	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.031956	11824	1897
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.112266	39798	6334
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.094689	36430	3521
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.009424	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.068636	24446	3937
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.119492	44132	2533
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.103271	40879	6092
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.035802	7637	1783
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	22.422724	16947	4125	3.0.1.1.0.0.0.4.9.9	synth with cache (only 1: intro l1; only 1: intro l; only 1: induction 1; only 1: tauto; only 1: simpl; only 1: intro H2; only 1: intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.059268	21252	3372
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.145197	67586	2243
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.037146	10796	1419
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.214099	62915	4449
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.258264	90228	6443
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.152898	43893	5489
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.659663	143	61	0.0.2.0.3.0	synth with cache (only 1: unfold eqke; only 1: intros; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.161816	29682	5984
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_0_IZR	40	40.070659	28583	4530
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	37.558110	26047	2441	2.0.0.2.0.2.4.0.0.0.3.0.0.0.2.0.16.2	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.swap_greater; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: discriminate; only 1: simpl in *; only 1: easy; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: destr_eq H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.138745	14053	2808
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.128526	30015	4326
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.061953	23436	4512
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.157366	38909	2857
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.118159	52780	6468
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.084493	29931	4628
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.102901	43733	3489
coq-tactician-stdlib.8.13.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.250734	126358	1941
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.image_empty	40	3.739289	2625	551	3.3.3.0.0.5.0.5	synth with cache (only 1: intro X; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	7.683168	3610	614	0.2.1.6.1.7.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.053682	15	7	0.0.2.1.0	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	32.816661	42942	5100	2.4.29	synth with cache (only 1: intros EQ; only 1: intros A B f g <- H; only 1: eassumption).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.068953	24920	4711
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.626026	353	82	12.0	synth with cache (only 1: intro q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.066265	22976	5808
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.030840	8	4	1.1.2.0	synth with cache (only 1: destruct n as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.143992	65394	4527
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.165982	30820	5699
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.021554	6702	1623
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.090319	37956	7092
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.019410	5669	1725
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.115058	44764	6215
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.049859	17089	3751
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.044621	14367	1469
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.538826	268802	1865
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.069583	27214	4593
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	34.411520	57166	3637	2.0.5.12.11.4.26	synth with cache (only 1: split; only 1: unfold eval_cnf; only 1: intros pol; only 1: destruct pol; only 1: simpl; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.068303	25799	4036
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.061606	19582	5808
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	12.412147	5979	1767	8.1.0.0.2.1.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.056562	19236	4322
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.049005	10006	4017
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.223593	85667	5322
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	8.475283	10071	651	66	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.127569	56450	8439
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.157100	6768	1011
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.010826	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010936	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.014545	2	2	0.0	synth with cache (only 1: red; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.009221	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.IZR_ge	40	40.080798	34329	3726
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.143703	65147	5372
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.007617	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_alt	40	40.210629	101293	7409
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.066167	21695	4437
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.048018	15541	1459
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.opp_succ	40	21.679466	24760	4162	0.0.0.0.0.9.0.0.0.38	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: induction p as [p ?| p ?| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	0.733748	455	81	11.0.1.0	synth with cache (only 1: intros; only 1: intros k e; only 1: apply H with k; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.014492	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.066158	23052	4347
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.max_r	40	1.769293	789	302	4.2.0.0.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.013487	3	2	1.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.027043	6	4	1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.071968	28932	4292
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.480663	239	56	12	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	0.424977	86	19	9.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.017859	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.034573	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.088728	27957	828
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.007596	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.114124	98	14	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.200956	92597	7064
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.095814	9246	1789
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.268456	13	6	0.1	synth with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.726574	1247	205	36	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.153507	11	5	4.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.064217	24614	4385
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.208885	62	23	0.1.0.0.1.1	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.178965	22731	6142
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.078055	31109	5058
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.012018	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.834837	113	66	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.088966	36094	6157
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.135145	57391	5621
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	7.986595	13468	1362	3.13.27	synth with cache (only 1: intro k; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.571698	1391	234	2.2.1.10.0	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: now N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.153007	112	20	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.031237	3	2	1.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.023248	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.498796	173	39	0.0.1.1.9	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.023033	8690	1081
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.800356	128	48	1.1.1.0.1.0.0.1	synth with cache (only 1: constructor; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.213263	101000	8608
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.665688	259	26	15	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.034781	12951	1856
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.708439	175	38	4.8	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.038979	11555	1709
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.087040	35401	5205
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.055620	20189	2352
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.056458	18212	4044
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.135984	26250	5821
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.050615	17177	6063
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.060234	20353	3353
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.040545	11846	3525
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.036840	10595	2381
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.347372	71	30	4.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with relations; only 1: auto; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	4.553834	1598	302	1.0.0.0.0.21	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.248130	87429	5354
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.309588	124540	6867
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.061765	24033	1953
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.041269	14499	1973
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.753122	957	306	3.0.0.4.1.0.3	synth with cache (only 1: destruct l; only 1: auto; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.169460	42	21	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.149834	45349	6542
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.105477	39309	5096
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.065745	27600	5733
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.084970	32816	3793
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.095654	40667	3479
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.042451	12235	5037
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.070101	25008	4889
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.085046	14162	1786
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.118570	47177	8055
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	26.902476	13638	3163	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.168058	37584	5747
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.027693	6	4	0.0.1.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.263733	123952	6392
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.107873	43838	7653
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	3.897582	3163	757	0.0.3.1.5.1.0.0.0.3.2	synth with cache (only 1: intros; only 1: case (M.is_empty s); only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder; only 1: intros; only 1: case (M.elements s); only 1: unfold elements; only 1: intros l' H; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.204916	94146	4469
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.163978	33872	6600
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.104422	29890	6491
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.010182	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.015387	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.119904	9	6	2.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.026371	10371	868
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.278855	122414	2807
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.028212	6791	1624
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.957375	3348	212	53	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.133118	57425	8003
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.053852	12275	2680
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.119456	44583	5132
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	40.070634	28502	3895
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.106076	46864	6082
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.048164	15118	2955
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.031541	7349	3709
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_refl	40	0.738804	713	31	37	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.152774	58125	5707
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.122251	54166	4239
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.105979	21465	1879
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.191787	456	221	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_impl	40	15.682451	7021	2868	1.0.1.0.1.3.0.0.0.5.0	synth with cache (only 1: intros A eval l; only 1: induction l as [| a l IHl]; only 1: intros HE; only 1: simpl; only 1: tauto; only 1: intro H; only 1: simpl; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.122894	28935	6071
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.050898	12449	3984
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.377587	185	40	1.9.1	synth with cache (only 1: intros x y H; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.022428	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.033336	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.double	40	0.952453	342	72	4.7	synth with cache (only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.284042	139296	5979
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.171310	76123	3498
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.090508	40143	8032
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.143469	58150	7391
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.081997	30590	4533
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.015728	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	0.330231	388	42	0.2.13.0	synth with cache (only 1: intros m; only 1: case m; only 1: induction m; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.075272	25925	5662
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.112287	50478	6765
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.114559	50272	4914
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.099114	16147	2600
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.029298	6	5	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || intros _; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.082468	30622	5951
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.034660	8921	3409
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.236844	11039	2377
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.079326	27813	6259
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.056366	12690	2360
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.238762	114884	4728
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.102311	18	12	0.1.1.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.elements s); only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.028015	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.097275	25206	7547
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.017086	5277	1541
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.099139	39356	496
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.124829	53651	9985
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.015917	3631	1733
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.201715	93648	5326
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.192544	20007	5682
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.044800	16321	3470
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.083503	30740	5220
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.022246	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_trans	40	40.097787	38978	4895
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	2.068936	942	261	1.0.1.0.1.0.0.13	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.076452	21682	5004
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.076371	30936	5035
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.754651	291	106	1.0.3.3	synth with cache (only 1: intros a n v; only 1: intro m; only 1: intros <-; only 1: exact v).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.155686	68646	5825
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	21.570302	29167	3335	0.19.12.2.3.3	synth with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold get, push; only 1: unfold empty, get; only 1: intro H0; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.070663	28946	6055
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.635313	225	69	1.0.2.1.3	synth with cache (only 1: intros X H'; only 1: intros a b Hb; only 1: apply Setminus_intro; only 1: assumption; only 1: auto using (Noone_in_empty U) with sets).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_rapp	40	40.086628	31087	6904
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.234340	22337	3703
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.053647	18751	5471
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.137446	30800	3523
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.099999	40010	5094
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.not_make_conj_cons	40	3.138449	645	301	0.0.1.6.0	synth with cache (only 1: intros A eval a l; only 1: rewrite make_conj_cons; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.id	40	0.998153	586	90	0.0.3.8.2.4	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n as [| n H]; only 1: auto; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.075386	56	17	0.6.0	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.660497	179	57	7.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.090305	34352	7320
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.024121	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.030049	2	1	1	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.085791	30561	5572
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.discr	40	15.232730	37302	3502	0.59.1.1.20.43	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: auto; only 1: left; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.050451	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.007558	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.445116	224589	6795
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.072072	23079	4927
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.075588	24374	3412
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.073001	27109	5229
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.046465	17	6	3.0.1	synth with cache (only 1: intros a b c **; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.132953	30910	3797
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	9.500652	6215	1310	2.1.4.0.8.0.9	synth with cache (only 1: intro l; only 1: unfold eqk, eqke; only 1: induction l as [| a l' Hrec]; only 1: auto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	7.081481	8741	1892	1.13.0.5	synth with cache (only 1: intros A P; only 1: intro all; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.178343	21294	2767
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	4.032037	1485	341	0.0.0.0.13	synth with cache (only 1: intros b Hb a; only 1: rewrite Z.div_exact; only 1: zero_or_not b; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.146549	62430	4876
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.destruct_list	40	40.464678	235877	1890
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	2.158118	811	217	0.0.10	synth with cache (only 1: intros a b H; only 1: apply Z.mod_opp_l_z; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.042301	14899	2535
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	28.367713	12347	3572	2.0.1.4.2.1.1.0.0.0.0.0.0.0	synth with cache (only 1: induction l as [| x l IH]; only 1: intros; only 1: assumption; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: subst; only 1: intro H; only 1: apply in_eq; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.240695	112055	3854
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	23.083067	16073	2944	0.4.8.4.1.5.2.1	synth with cache (only 1: intros X Y H'; only 1: elim H'; only 1: elim H'; only 1: intros x YX; only 1: elim H'; only 1: intuition; only 1: elim H'; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.093054	20661	6063
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.029517	11050	1357
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	6.581499	4750	1100	0.0.3.1.3.3.1.1.0	synth with cache (only 1: intros s s' x; only 1: case (M.union s s'); only 1: unfold inter; only 1: case M.empty; only 1: intro y0; only 1: case (M.remove x s); only 1: intros n m p Hp H; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.121370	50988	7888
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.118229	49213	634
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.077411	29946	4554
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.174135	19953	6894
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.079767	21206	2128
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.228449	110072	2956
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.158045	73640	4643
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.212617	99792	5286
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.097924	40917	5976
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.090506	34411	6648
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.091575	31081	4513
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	29.853640	47472	4842	0.0.0.10.2.1.2.11.4.3.0.0.2.5.2	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: invrb; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: invrb; only 1: now auto; only 1: invrb).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.050328	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.085409	28998	5939
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.bi_induction	40	40.197827	94312	9025
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.080251	32224	2777
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map_2	40	40.078472	32401	4787
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.077195	16377	4563
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.of_nat_ext	40	40.208039	93350	4668
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.zerop	40	0.358712	156	40	6.0.0.2	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.NNPP	40	40.355842	172688	9561
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.012583	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.053818	20695	3152
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.256024	15817	5830
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.217643	10634	1927
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.291630	138505	12690
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.068883	23935	2412
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.225094	99359	6029
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	11.058309	36599	926	2.91.0.6	synth with cache (only 1: unfold elt in *; only 1: unfold singleton; only 1: red; only 1: ok).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	1.794844	1803	274	18.6	synth with cache (only 1: intro; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.009282	2	2	0.0	synth with cache (only 1: unfold hd_error, tl; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.174076	84	25	1.1.4.2	synth with cache (only 1: induction l; only 1: simpl; only 1: now split; only 1: now discriminate).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.208390	100452	6627
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	29.454233	15644	5259	1.0.0.0.0.0.0.0.2.17	synth with cache (only 1: intro l'; only 1: intro l; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.059295	21214	3238
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.065338	24741	5208
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.122128	38645	8078
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.017405	4823	1624
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.eucl_dev	40	40.152834	69717	6271
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_length	40	8.263838	5777	1561	2.3.1.0.0.1.0.10.4	synth with cache (only 1: intros; only 1: induction l; only 1: destruct l' as [| y l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_eq	40	0.094330	44	21	0.3.4	synth with cache (only 1: simpl; only 1: intros a b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_cons	40	0.020566	5	4	0.0.0.1	synth with cache (only 1: intro y0; only 1: intro l2; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.022330	5	3	0.2.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.049634	16520	3816
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.083809	25760	1802
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.105158	43334	9396
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	11.076862	7415	2525	0.0.0.0.0.0.0.0.2.12.1.0.1.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: right; only 1: reflexivity; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	22.353395	25692	3219	0.1.2.0.0.0.4.0.18.1.1.42	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a; only 1: auto with arith; only 1: intro m; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.903198	330	158	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1 as [| ? H0]; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.107326	44788	7351
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.151535	70770	8902
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.103429	43116	4705
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	12.866936	8672	1827	0.0.0.5.4.5.5	synth with cache (only 1: intros x Hin; only 1: intro Ha; only 1: intros H; only 1: elim Ha; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.091655	15	9	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.uniquify_map	40	40.077012	28884	6611
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	2.706568	1306	594	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.158952	33888	4046
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.get_map	40	40.061674	23494	6238
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.089613	30652	6895
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.016991	6	3	3.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.173224	55910	2953
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.079019	33262	3794
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.029565	5	5	0.0.0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.082831	35685	3084
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.103977	42439	5909
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.038485	10179	4962
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.276384	135345	1842
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.058684	20138	3005
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	2.792165	1517	579	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.8	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.111830	48517	8677
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.219804	11072	2838
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.272560	42398	4369
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.654110	93	47	0.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.150608	66614	6325
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	0.946177	294	149	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.080068	30621	2375
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.142649	58417	5391
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.318623	89	35	0.1.1.0.2.0	synth with cache (only 1: destruct t; only 1: intros H; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.L_R	40	7.735599	15888	730	21.6.18.12.0.0.0.79	synth with cache (only 1: destruct m as [| m]; only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: simpl; only 1: PeanoNat.Nat.nzsimpl; only 1: now PeanoNat.Nat.nzsimpl; only 1: PeanoNat.Nat.nzsimpl; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	8.549230	5686	1545	0.0.0.0.0.0.0.0.0.0.0.2.1.10	synth with cache (only 1: revert p; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.105397	7569	1325
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.029545	7882	3184
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	19.834474	5638	1604	9.0.0.6.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.105404	34130	5674
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.005767	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	1.516855	5374	201	1.0.6.0.42.32	synth with cache (only 1: split; only 1: now Nat.nzsimpl'; only 1: red; only 1: intros L R n; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_0_discr	40	5.955297	12328	1093	26.1.8.2.20	synth with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.013266	3415	1402
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.quotient	40	40.084484	36125	4740
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.107904	42532	8790
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.117164	12950	1958
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.077509	28647	7314
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_dec	40	40.128610	57349	9035
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.gt_dec	40	0.008988	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.ge_dec	40	0.006583	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_eq	40	0.009945	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_is_one	40	40.098038	44190	4896
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_lt	40	0.015868	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.127397	207	92	4.1.5	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_In	40	5.027769	4798	1144	4.0.0.0.0.1.1.1.3.0.0.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l as [| ? ? IHl]; only 1: destruct n; only 1: simpl; only 1: Nat.order; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.126898	57235	5402
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	18.323142	23766	2074	0.0.0.2.0.0.3.2.1.0.0.2.25	synth with cache (only 1: unfold leb, le; only 1: destruct a as [| a], n; only 1: easy'; only 1: easy'; only 1: trivial; only 1: case N.compare_spec; only 1: intuition; only 1: simpl; only 1: now destruct a; only 1: easy'; only 1: now intro m; destruct m; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.337209	84	51	0.0.0.0.0.1.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.006078	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.079022	27482	5242
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_S	40	40.091777	39366	6283
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_not_le	40	0.007473	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_S	40	0.007352	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.624533	325813	2064
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.009204	2	2	0.0	synth with cache (only 1: intros n0 h v0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.123623	50452	7748
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.807025	93	48	0.0.1.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.008946	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	3.911886	5386	562	16.8.10	synth with cache (only 1: unfold Qle; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.170107	17406	2548
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_trans	40	2.905736	1826	351	7.1.1.13	synth with cache (only 1: induction 1; only 1: intro; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Div2.double_plus	40	40.044389	16269	3393
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.076648	33011	5076
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.027969	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.105292	30261	4647
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.exists_le_S	40	3.970526	4722	700	1.1.1.19	synth with cache (only 1: intros n H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	9.378118	8600	1118	13.6.4.0.2.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: intuition; only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.100859	38891	4702
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map2_2	40	40.063046	21357	5405
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.031809	8095	3999
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat_l	40	17.540531	28479	2646	28.2.1.28	synth with cache (only 1: induction 1; only 1: Nat.order; only 1: Nat.nzsimpl; only 1: now rewrite <- Nat.le_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_r	40	6.570541	3918	683	7.0.21	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.030756	9	2	1	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.042000	8751	1374
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.127816	58527	8899
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.213090	16237	2531
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.104408	650	83	0.1.14.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.084539	33246	5666
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.splitat_append	40	19.303799	15273	2521	1.1.0.0.0.12.11.2	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v as [| ? ? v IHv]; only 1: apply f_equal; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	40.075693	26962	4374
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.035544	12445	2690
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.094966	37712	7871
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.883702	426	144	0.3.1.2.0.1.5	synth with cache (only 1: destruct s as [| c l y r]; only 1: simpl; only 1: tauto; only 1: descolor; only 1: invrb; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.139038	34	14	0.0.3.1.0	synth with cache (only 1: intros [| x acc]; only 1: intro; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.054393	20028	3195
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.065859	21507	6212
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.099058	41921	4096
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.070568	28435	4008
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.122894	48405	8306
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.015552	6	3	1.1.1	synth with cache (only 1: destruct n; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.014831	4604	1428
coq-tactician-stdlib.8.13.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.120946	16402	2150
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.052799	17144	8782
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_0_neq	40	0.022464	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_n_S	40	0.014167	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.061427	21027	9380
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.011103	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.008655	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.plus_minus	40	40.119641	54659	6718
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.In_nth	40	40.123761	55413	6652
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.055246	21307	2789
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.060637	20492	5624
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.144668	63816	8606
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.004663	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_le_trans	40	40.110089	46564	4808
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.109487	16816	3693
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred	40	9.090147	12509	2065	0.11.21	synth with cache (only 1: destruct m; only 1: inversion 1; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_trans	40	2.928446	1858	321	17.3.0	synth with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: now transitivity m).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.007550	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.007781	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.675484	272	104	1.5.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.099520	32143	4871
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_in_int	40	40.144590	65322	8878
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_between	40	0.385777	180	40	0.1.8.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.171322	76314	3623
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.110112	40494	5689
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.054853	20990	5044
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.lt_O_minus_lt	40	17.028829	18147	2467	2.0.0.15.4.0.15.1.4	synth with cache (only 1: Nat.double_induct n m; only 1: intros; only 1: now Nat.nzsimpl'; only 1: intros n H; only 1: auto; only 1: simpl; only 1: intros n m IH H1; only 1: apply IH in H1; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.047438	14678	5144
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_r	40	40.076885	32150	4095
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat	40	40.208072	103839	7403
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.121630	51644	6377
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.152097	66932	4553
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	3.171635	4029	593	2.0.0.2.1.15	synth with cache (only 1: intros l l' x y; only 1: intros; only 1: red; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.072585	29110	4724
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.072527	23918	4690
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_equiv	40	40.064437	25417	4346
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.089939	36106	4794
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_split	40	0.479607	33	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_eq	40	40.070539	24091	8201
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.087082	37857	2568
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.089140	36619	3905
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.672252	959	566	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.066217	22472	6017
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	12.993557	6573	1006	19.1.1.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.013051	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.003418	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.148585	38076	5368
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.068299	25228	4922
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.leb_le	40	40.076095	26988	7267
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.026624	9091	637
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.048685	15999	5449
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_compare	40	40.061886	20597	10178
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_indep	40	40.090369	35375	8208
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.055195	18481	4846
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.088270	7136	3685
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.129812	58819	8985
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.120168	17195	6257
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	3.412625	824	338	0.2.0.0.2.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.112901	45927	6240
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	19.284719	10247	3055	1.1.0.1.1.2.0.0.0.1.4	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: auto; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.119837	29718	3490
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_refl	40	40.152368	71071	16249
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_exists	40	40.093487	40951	6116
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_true	40	1.667144	791	284	2.0.0.1.0.0.0.0.0.0.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: intro m; only 1: destruct m; only 1: easy; only 1: simpl; only 1: contradiction || auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.042456	16151	2862
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.079664	29344	6028
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.150017	65078	7314
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.095786	44074	4124
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.093824	41677	5612
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.144024	51919	5432
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.073255	28335	8168
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.148264	63735	5327
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.119320	52813	10159
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.084188	31040	4622
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_even_plus	40	40.062970	23825	4766
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_l	40	0.074580	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_even_plus	40	0.072571	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_plus_aux	40	0.689915	72	15	0.0.10	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_mult_l	40	0.056617	14	3	6	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_mult	40	0.071691	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.072535	25703	6833
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.221494	106540	5557
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.481433	134	72	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.021632	5223	2554
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.085387	30340	5396
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.075062	26404	11097
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.096703	40215	5379
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.073999	23734	8002
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.080660	28398	6155
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.019122	5316	872
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.054894	18680	7254
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	9.085297	3686	1549	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_split	40	40.086318	32576	5161
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.071410	27387	5231
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.162145	71966	9572
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	7.968918	446	212	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.059203	19869	6589
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.026041	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.056189	17839	4196
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	3.130904	1207	459	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.093788	33426	7010
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	17.048432	11876	2342	0.0.0.0.0.0.0.0.0.0.0.0.0.0.31	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.008192	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.006120	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.067121	26692	2301
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.070804	24889	4857
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.151630	59663	3028
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	4.157358	2208	612	0.5.1.1.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_or_exists	40	40.105389	44786	6806
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.036071	10618	3800
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.125030	53745	2782
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.037140	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.077763	30223	5676
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.nth_le	40	3.512499	3560	738	13.0.4.4	synth with cache (only 1: intros n m p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: eauto with arith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.084748	33111	6354
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.091807	39462	5814
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat	40	40.147538	68953	5654
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.057101	19477	5959
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.132412	15733	3894
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.le_plus_trans	40	3.790982	3410	583	12.0.0.0.0.3.9	synth with cache (only 1: Nat.induct p; only 1: intro H; only 1: Nat.nzsimpl; only 1: assumption; only 1: intros p IH H; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.072624	24395	5072
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.014700	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.227863	103930	12559
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.087456	32902	5983
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	2.513765	8197	381	0.3.9.26.17	synth with cache (only 1: intros H; only 1: inversion H; only 1: inversion H; only 1: destruct H as (e, H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.015931	8	2	6.0	synth with cache (only 1: intro l'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.083428	18827	4524
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.052764	15517	8238
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.event_O	40	11.941196	71015	1674	3.13.0.1.8.96.0	synth with cache (only 1: inversion 1; only 1: intuition; only 1: revert H H0; only 1: intro m; only 1: inversion 1; only 1: destruct H; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.219159	106482	3541
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.094630	34210	12095
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.089762	35553	7008
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.487667	97	56	1.2.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.min_l	40	40.103488	38557	7913
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_spec	40	0.629794	26	15	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.044423	11938	3972
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	7.497030	3532	1513	2.0.3.2.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.083117	29691	7699
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.073077	26041	5172
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_None	40	40.068452	23164	7500
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.066813	23028	6799
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.101512	37555	9197
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.010076	2368	1023
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.lt_plus_trans	40	22.334615	11890	1278	14.3.0.0.5.5.11	synth with cache (only 1: Nat.induct p; only 1: intros; only 1: Nat.nzsimpl; only 1: auto; only 1: intros b Hb IH; only 1: Nat.nzsimpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	14.686925	6297	1923	3.5.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.579594	152	74	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c d ? ?; only 1: intro LE; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.124990	43456	6917
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.174892	49	25	0.2.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.145273	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.057443	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.063921	21702	6284
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.026059	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.187128	82319	6437
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.064091	22260	4921
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.084976	22649	6188
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.072158	25779	6496
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.065382	22305	6407
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.021922	318	126	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.058005	20386	3726
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.102144	37748	1655
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.098259	136	18	7.7	synth with cache (only 1: apply abs_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.064747	21278	6895
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.odd_even_lem	40	40.120165	56473	4174
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.078873	27118	6037
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_nth	40	17.921779	8467	3562	5.0.0.0.0.3.1.0.0.2.0.0.0.2	synth with cache (only 1: intro l; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl in *; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.094819	39070	4288
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.076093	32489	4627
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.117908	49695	13191
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.089776	34963	6058
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.035747	10330	2952
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	2.487037	759	179	0.0.4.1.0.1.2.2.5	synth with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.089208	34361	5418
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.059097	18245	8372
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.048473	13162	5527
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.073095	24759	9549
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.014737	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_add	40	40.138922	15516	3316
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.051476	13734	5204
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.040446	11211	4789
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.085241	27555	7658
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.115389	47140	6783
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.062668	19538	7269
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.124762	51045	8937
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_is_one	40	40.092150	37909	5842
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.074019	6173	899
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.050628	15596	2653
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.080388	28765	7031
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	40.074693	28369	5393
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.099586	41172	5545
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.265222	30	19	1.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.027054	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_double_add	40	15.155132	3096	716	5.1.1.3.0.4	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: auto; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_double	40	0.018671	7	3	0.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.071135	25045	3998
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.964742	130	70	3.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now nzsimpl; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.330351	356	190	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.256144	46	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pow_neg_r	40	0.045871	16	4	0.1	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.079765	27655	5214
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	20.662684	10178	4724	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.056805	15501	5680
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.066338	21172	3058
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.059052	20420	4003
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.090783	32933	5477
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.751763	1695	968	0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.128763	54864	7241
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.008677	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.032454	5	3	0.1.1	synth with cache (only 1: induction n; only 1: now nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.471063	842	150	7.8.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_acc_aux	40	40.051646	17568	5030
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.118401	49552	5459
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.100402	41090	5977
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	5.699014	2227	795	3.1.0.0.1.3.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.143335	65095	2911
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.092764	37052	5179
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.284833	138770	16911
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.092873	34017	5610
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.067495	8004	3076
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.072106	24439	5085
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.078518	5490	396
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.034908	8851	3786
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.105543	303	116	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.048054	13180	3630
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_log2	40	27.635730	19352	3632	16.0.9.0.0.2.0.0.0.0	synth with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: cases n; only 1: intro H; only 1: reflexivity; only 1: intros n _; only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.063103	17600	7370
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.109773	38061	6057
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	40.076110	26173	7567
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.776237	255	102	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.104430	38616	6723
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.121473	49210	9584
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.succ_plus_discr	40	40.073956	28119	5068
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.035531	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.026311	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.090212	9416	1413
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.127121	3030	1046
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.095102	32113	6963
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.057698	18102	4224
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.031931	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.048314	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.070827	9729	1768
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_neq	40	40.110883	46746	5021
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.101172	39061	4251
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.021276	10	3	0.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.093545	30906	6390
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.057675	20871	3404
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.089832	36007	4328
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.066038	21650	6004
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.084676	29744	6341
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.100951	35712	5972
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.remove_In	40	40.093112	32985	6998
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.052100	17465	4128
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.075007	22047	4596
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.051626	14195	5271
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.099931	38405	5723
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	13.001357	4382	2161	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.192693	89196	7694
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.082624	30661	4654
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.344109	1856	693	3.1.0.0.0.3.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.052699	14588	5651
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.076288	26933	6095
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	2.927473	851	328	1.0.0.0.3.5.3	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.067297	11241	2031
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.055743	18164	4716
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.071218	21467	5051
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.109439	4457	1869	0.0.0.0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.171748	21	12	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_gt	40	40.115529	19125	4487
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.085070	30183	8606
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.058222	18137	3871
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.065841	20231	8847
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.063806	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.123326	47621	5136
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.060966	17414	5869
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.750592	582	70	26	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.056006	16237	5757
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.078320	16792	943
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.010131	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.514404	39	6	9	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.011395	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.069855	18731	5052
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.407892	200	36	4.11	synth with cache (only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.291934	30	28	1.3.0	synth with cache (only 1: revert q; only 1: intro q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.027591	9	3	1.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.109526	40729	7711
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.042271	13530	4106
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_minus2	40	40.069014	25731	3120
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.094641	35353	7636
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.082286	26738	6657
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.061025	22675	3034
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.132225	28245	4888
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.097665	34548	10038
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.048084	10000	3444
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.048987	11726	3938
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.040136	13218	3500
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.050693	3	3	0.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.107189	41556	5806
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.043592	11626	4227
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.811793	1253	123	0.0.0.0.0.0.0.0.20.0	synth with cache (only 1: unfold natural_isomorphism; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.062770	18180	6337
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.048146	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.060342	22447	3014
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	40.130381	52324	6678
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.067434	20943	4454
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	40.055753	15654	4552
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.170459	33	12	2.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.030875	9015	2551
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.046596	15652	1571
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.047426	14448	3580
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.075567	24497	6581
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	34.541627	26276	5909	1.0.1.0.19.7.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: rewrite mul_comm; only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.110563	44439	4956
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	1.913451	602	237	0.1.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: destruct (mod_bound_pos a c); only 1: auto'; only 1: auto'; only 1: order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_spec	40	40.136204	27152	5159
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.224448	50	15	7.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.062809	19446	7415
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.413646	556	198	1.4.1.1.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.049217	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.072351	23921	4332
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.528869	80	49	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.072896	21160	7001
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.065235	18257	5954
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	40.202814	6817	781
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.065043	19715	7338
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.009736	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.125717	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.050129	17159	3049
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.106243	36956	8037
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.015515	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.031985	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.018682	5	2	3.0	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.012110	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.009512	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.010840	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.071771	23363	6950
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.082445	26184	7321
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.057466	19763	4356
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.110609	39225	8369
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.399201	2032	840	0.0.1.0.0.0.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.180420	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.062240	22120	3770
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.127873	34337	5136
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.083161	30511	6635
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.011919	5	2	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.062907	18030	5837
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.062266	19779	5335
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.219197	47883	7263
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.171821	75340	6200
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.180080	74398	9126
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.168635	75961	5063
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.085061	30993	5558
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.101254	38231	6803
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.051302	15342	3715
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.061667	20503	3764
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.067240	23877	3427
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.077278	26587	6323
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.075922	24582	5838
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	3.193353	1511	478	1.0.0.6.1.0.0.5.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.051007	14211	4097
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.073007	22622	6270
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.061680	19467	7759
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.949508	467	206	0.0.1.5	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.181797	84263	1406
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.072486	24090	4884
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.115081	44467	8382
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.063231	22608	5158
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.071415	24139	4717
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.058247	18503	4169
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.508313	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.039065	10913	2701
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.106726	47185	2793
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.070624	28097	2431
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.069334	22646	5348
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.082510	28775	4474
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.067434	20801	7574
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.025353	6006	2662
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.046697	6	5	1.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.072063	28884	3809
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.074652	28110	6178
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.079124	27214	4741
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.274179	94	17	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.092251	33718	7501
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.016649	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.703792	262	83	0.0.0.0.7.0	synth with cache (only 1: induction n; only 1: split; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	5.419631	1071	569	0.0.4.3.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.078217	25290	8378
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.345077	51	24	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_alt	40	40.115498	44227	7123
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.101338	39332	7344
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.122195	49943	2957
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.732291	191	89	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.062135	23014	3638
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.434385	927	258	0.0.0.8.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.091310	15662	5771
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.129599	53524	6755
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	7.387189	2565	1176	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.046910	13706	4804
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.310555	1758	385	0.0.0.10.2	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.132837	16	9	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.045949	14838	2792
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.068167	23014	4026
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.028094	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.073021	22603	6272
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	21.517230	4676	1126	5.7.4.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.059110	17248	5929
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.046794	12569	4999
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.641844	198	98	0.1.0.1.0.0.1.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.800091	772	444	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.060752	18165	4866
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.173907	75919	3886
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.008264	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_lt	40	40.070074	21737	5195
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	9.106243	3788	979	0.0.0.0.0.0.0.4.2.1.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.034151	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.390915	124	57	1.0.1.0.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.543925	150	55	0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.121146	47069	4272
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.331294	291	70	9.0.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.109420	45478	5744
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.067196	19709	6113
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.737748	2215	424	0.0.9.4.7	synth with cache (only 1: intros x y Hxy Hyz Hy; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	7.176018	2868	1231	1.3.0.0.0.1.0.0.0.0.0.2.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	3.860710	2501	505	0.1.0.0.0.0.0.2.0.15	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros a n Hn; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.056687	17734	5527
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.829271	932	406	3.0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.071577	27081	4475
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.089073	30623	7439
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.204900	89609	4735
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.010521	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.454088	37	17	0.1.3.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.058046	22871	1611
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.083869	28706	5658
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.974720	553	107	2.1.3.0.3	synth with cache (only 1: intro H; only 1: apply divide_antisym; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	7.613034	4584	1201	1.8.0.7.0.3.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros m Hm IHm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.644844	144	84	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.048757	13660	5263
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.048047	15755	2126
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.026397	7601	2257
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.098180	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.100343	37343	6535
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.074901	26289	7140
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.038986	9828	4114
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.147508	58833	6457
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.166291	647	275	1.1.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.040264	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.191658	77594	3765
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.054231	18350	2685
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	0.888697	487	112	0.9.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.087338	29642	5488
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.657376	531	126	9.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.069142	23077	6252
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.072591	21414	6186
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.050801	15032	3302
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.088570	31083	5678
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.009404	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.691608	2288	988	0.0.0.2.0.0.0.0.0.0.1.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.concat_app	40	9.274455	9035	1450	2.20.0.0.0.0.0.1	synth with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto using (app_assoc (A:=A))).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_length	40	0.206050	35	20	1.0.0.0.0.2	synth with cache (only 1: intros; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.074666	25484	4663
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_eq_nil	40	0.525663	255	82	0.0.0.5.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: intros; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.076348	24887	5344
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.286357	2524	804	1.0.0.0.2.1.0.1.0.1.2.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.012919	2	2	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.071361	15559	2718
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.154420	67646	3706
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.054916	16583	5569
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.061565	18020	6805
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.184461	73558	14182
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.058178	21712	2589
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.054143	13763	3947
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.205432	95399	10993
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.142798	64903	6711
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.099000	24305	6142
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.086394	846	305	0.0.9.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.059130	21421	3952
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.103990	41462	5868
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.066601	21657	4877
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.516452	129	47	0.1.0.0.3.1.0.0	synth with cache (only 1: destruct x; only 1: intros; only 1: intuition Z.order; only 1: destruct p; only 1: easy; only 1: now destruct 1; only 1: easy || now destruct y; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.030953	9	4	1.2.2	synth with cache (only 1: intro n; only 1: intro q; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	1.554683	799	116	3.24	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.064835	25470	3947
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z_eq_mult	40	1.332139	1083	101	0.5.17.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	22.853588	7241	1110	0.3.2.1.21.1	synth with cache (only 1: intros x y z; only 1: intros X; only 1: red; only 1: intros H H'; only 1: apply H; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negbFE	40	0.008890	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraT	40	0.525318	302	36	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.077842	22175	5851
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.050982	16691	3591
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.050571	12303	4771
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraFT	40	0.657162	206	19	2.17	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.016122	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.011149	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.008865	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.006735	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.022348	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.095222	16452	1696
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.035184	8338	2387
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.103696	37581	8367
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	26.509086	14196	3689	1.7.2.7.1.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.060422	20097	10040
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.066305	23918	4369
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.055742	15549	3139
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.181321	71922	8030
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.178919	77184	5482
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.040098	11575	3967
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.139782	56603	3932
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.054175	17198	4899
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.count_occ_map	40	40.117185	48102	4342
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.358854	171637	7612
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.085675	14388	2636
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.529522	247	58	12	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.011584	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.303811	142471	3025
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.063949	21432	4169
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.053233	16149	5670
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.103418	36441	12165
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.060988	22743	3770
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.map_ext_in_iff	40	10.434110	6671	2076	0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1.1.1	synth with cache (only 1: intros A B f; only 1: intro n; only 1: repeat split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.744777	215	71	2.0.0.0.0.0.7	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.063664	18266	1405
coq-tactician-stdlib.8.13.dev	Coq.Setoids.Setoid.gen_st	40	0.319480	204	66	10.0	synth with cache (only 1: intro n; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.052676	16617	4567
coq-tactician-stdlib.8.13.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.009579	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.087422	27068	8151
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.725761	1144	235	1.14.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply lt_le_incl, lt_0_1; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.051606	17616	3823
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	4.902336	4819	1397	0.0.1.0.0.0.0.0.13	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.933935	308	151	1.0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.895834	475	100	1.3.0.3.1.0.6	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.094442	31855	7462
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.055857	17379	4025
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.248033	22	11	0.4	synth with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.051813	17471	3517
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.113162	39619	11876
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.052219	14382	4550
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.081563	26911	5231
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.317570	23688	789
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.219095	96016	11405
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003797	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.006094	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.006007	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.657324	199	43	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.013792	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	1.479354	430	53	0.21	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.211028	94301	6603
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.335405	174	25	0.16	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.026372	6541	2107
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.061074	21334	4223
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.057871	16651	6147
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.009245	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.149413	63217	6120
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.175102	15	4	4	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.015497	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.409869	91	88	3.1.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.081334	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.078712	23810	6571
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.074728	23651	6399
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.059832	22900	3788
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.073877	24945	5518
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.069891	24886	4499
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.045335	12688	3360
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.025060	6727	1799
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.071366	20698	7150
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.262398	122704	8902
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.025070	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.042676	11927	5465
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.261730	79577	4752
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.079187	23360	6534
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_length	40	40.092429	36146	4912
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.111944	26892	3346
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.081022	24961	7271
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.045399	15414	2980
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.081399	29908	3490
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.033308	7743	2804
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.007807	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.022665	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.064181	21167	3987
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.060086	20053	3771
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	24.449858	19589	4524	1.1.20.0.2.0.0.1	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.060249	17371	5218
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.006857	17982	3120
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.060271	15046	11832
coq-tactician-stdlib.8.13.dev	Coq.Program.Subset.match_eq_rewrite	40	1.048083	1325	199	0.1.8.2.5	synth with cache (only 1: intros n P IH0 IHS; only 1: intro m; only 1: destruct m; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.010399	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.058804	16291	3719
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.incl_right	40	0.013098	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005424	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.UIP_refl_refl	40	0.065836	48	18	9	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.010210	17	2	8	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.solution_left	40	0.226096	131	43	1.2.3.3	synth with cache (only 1: intro eq_rect_eq; only 1: simple destruct 1; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.296811	140020	9095
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_false	40	0.040295	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.045154	4113	559
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.084349	23341	2203
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_or	40	0.921572	502	272	0.3.0.3.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.362828	22648	1295
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.lock	40	3.686813	39683	387
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.065338	20755	5660
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.seq_trans	40	4.199080	4500	820	0.0.2.0.15.3	synth with cache (only 1: destruct x; only 1: intro H; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.063609	19558	4791
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.010837	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.092486	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.055378	9551	8464
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.353665	170115	6207
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_tag	40	0.575919	967	103	0.0.15.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct H; only 1: destruct (H z); only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig	40	0.007767	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig2	40	0.018142	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.050764	15443	3224
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.072618	23832	4956
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.083884	25778	4168
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.067944	24506	4150
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.054434	16261	4194
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	4.298818	6204	982	0.0.5.2.6.0.0.0.0.6.0.41	synth with cache (only 1: constructor; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.070992	22943	4295
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.091055	36235	5088
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.073183	22912	2552
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.049814	13551	5435
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.219606	54431	4723
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.074706	24195	5454
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	17.120839	13654	2673	0.4.0.2.0.0.21	synth with cache (only 1: intros z n; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_rev_right	40	40.090337	31130	6410
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.074574	26037	4733
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.044285	13153	3219
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.050069	16180	4545
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.047161	12282	3981
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.070642	24645	5664
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.266988	978	234	0.0.1.0.0.0.1.0.0.1.6	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.047776	14961	4458
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	2.823274	2045	278	0.5.2.15	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.016040	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.062764	21638	5214
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.045481	12184	3363
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.034638	7235	2437
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	10.905482	4887	1969	0.6.0.3.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.805094	149	55	3.1.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.017482	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	6.033407	1977	990	5.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	8.805045	5297	1288	0.0.0.10.0.0.2	synth with cache (only 1: intros a b c Ha Hb Hc; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.049250	7061	1253
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.050893	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.037148	13369	1471
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.087864	29134	6653
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.042814	22	10	4.0	synth with cache (only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.079672	845	392	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004102	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.126631	49370	8776
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.407307	40016	1991
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.locked_withE	40	40.633307	312142	8074
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.042545	12154	3116
coq-tactician-stdlib.8.13.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.393615	182289	5100
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.270339	125243	8594
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.038829	9915	1078
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.005592	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.008214	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_proper	40	0.017499	4	3	1.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.027410	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	4.202175	56914	495	0.0.3.3.252	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	25.302342	4720	1138	0.1.0.1.0.0.1.5.6	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.008545	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.063077	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.018690	3	2	1.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.009703	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.041341	17	7	6.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.008471	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.975205	328	143	5.4	synth with cache (only 1: unfold lt; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.546042	26593	791	5.0.3.1.32.57	synth with cache (only 1: intro x; only 1: exists x; only 1: red; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.314642	142467	11267
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.009221	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.508759	1053	39	45	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.333622	546	66	3.5.16	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.031292	77	9	0.12	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.048679	14226	4411
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	13.458214	10015	1659	1.1.3.0.18.12	synth with cache (only 1: intros H1 n H2; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	3.596992	39593	274
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.065539	22757	7682
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.116511	28305	4433
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.080110	28698	5879
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.007781	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.006017	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.006181	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.008755	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.090272	34528	3737
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	2.723745	1261	450	2.6.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.062245	21412	4764
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	18.995137	354160	2997
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.024456	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.040863	11165	6529
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	5.504656	3072	1138	1.8.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.087533	32209	5691
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.157055	22580	4235
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.154772	45	25	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.218321	50	28	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_symmetric	40	40.132656	51840	6875
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.051646	15621	4338
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.051523	18321	3098
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.076040	28945	7100
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.051922	15771	3498
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.108412	40106	7812
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.062910	19776	5569
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.052397	14811	3554
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.062463	20985	5784
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.062198	17120	14882
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.197559	114	30	8.0	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.013350	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.010529	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.017023	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.proper_proper	40	0.427415	131	61	1.0.0.4.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.404443	200584	13308
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.075621	29657	7905
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.196927	41985	2124
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	4.681844	1437	415	0.0.2.0.0.1.1.1.3.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.386955	330	83	3.3.2.1	synth with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.014338	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.436157	437	25	0.28	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.037231	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.nary_congruence	40	40.111061	42353	10557
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.004564	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.012470	11	4	0.3.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.137306	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.056712	20161	4447
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.746229	1384	223	1.2.1.4.10.1	synth with cache (only 1: intro H; only 1: destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_is_true	40	0.007063	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_iff_true	40	0.021543	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eqb_prop	40	0.007080	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.072621	24651	7805
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_sym	40	0.008304	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007496	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_true_iff	40	0.018336	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_false_intro	40	0.023565	5	3	0.2.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_r	40	0.005587	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_l	40	0.005557	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.033043	5959	1748
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_true_eq	40	0.089331	26	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_diag	40	0.005399	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_false_elim	40	0.031829	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.020882	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.016148	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_r	40	0.005731	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_l	40	0.010779	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_true_l	40	0.003882	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.013937	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_eq	40	0.008901	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.016309	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.030654	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.044155	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.011670	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.016706	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_true	40	0.011259	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.013092	3	2	0.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.012459	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.061536	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.013750	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.reflect_dec	40	0.018431	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.090437	32785	7311
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.210998	675	32	0.35	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.034407	8884	3270
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.318209	147445	8893
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.070262	23605	4083
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.073272	23892	6670
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.100703	36620	8643
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.012254	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.075319	25997	5829
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.abstract_context	40	10.688555	138299	1664	0.120.88	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.037467	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.465836	69	27	0.2.0.2	synth with cache (only 1: intro H; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.133799	58064	8685
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.052994	17124	4105
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.418150	119	40	0.3.1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	7.498874	8721	777	0.6.11.6.6.1.2	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intro p; only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.027768	5142	2333
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.147964	66917	4114
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.050148	15068	5578
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	40.672671	339791	5146
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.114728	19	11	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.054827	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.075821	27490	4562
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_spec	40	0.012936	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	40.078342	29022	8441
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.283289	17	7	5.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.031229	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.forallb_forall	40	40.090260	8352	2062
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	22.682889	14949	4772	0.0.0.0.4.0.0.0.2.0.0.1.4.4	synth with cache (only 1: apply min_unicity; only 1: destruct (min_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: destruct (lt_total n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.093115	35058	4432
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.144618	2294	370	1.1.5.10.12	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.013780	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.059264	23	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.060514	20390	5757
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.023538	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.041543	10	5	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	5.574052	1415	350	0.0.2.0.9	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.013715	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.009990	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.112781	22	9	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	28.513508	29552	2880	3.1.19.0.4.6.12.0.5.5.4.4	synth with cache (only 1: constructor; only 1: constructor; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: intro l; only 1: intro x; only 1: intros h1 h2; only 1: red; only 1: transitivity x; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.069827	2	2	0.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.895434	326	135	0.3.1.0.0.0.0	synth with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.062708	21723	6601
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.294077	675	283	1.1.6.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.075432	26035	10391
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.101617	37621	10244
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.584898	737	255	2.0.1.6	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	26.418962	7154	2583	0.3.0.0.0.0.0.0.0.10	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.896233	334	131	0.0.0.0.3.0.1.0	synth with cache (only 1: intros B C x H'; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.177370	50	24	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.061705	23067	3495
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.046009	11908	6213
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.139448	53880	11661
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind	40	40.444237	220192	13146
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.367443	108912	4300
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.112592	25740	4279
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.compose_assoc	40	0.009268	4	3	0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.flip_flip	40	0.009098	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.dec_True	40	0.008037	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.030050	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.473366	238893	10044
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.314596	147590	11482
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004342	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007828	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.012767	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.016399	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.008855	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.019545	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.057712	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.075261	132	35	2.2.2.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.237571	115634	3456
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.329940	5514	1168	3.2.0.7.0.0.2.2.4.11	synth with cache (only 1: intro p; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.010104	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.501741	232514	8036
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.233611	433	43	4.4.17	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.003486	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.062528	19048	6144
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.216111	389	38	0.0.11.10	synth with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.077796	27480	4794
coq-tactician-stdlib.8.13.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.043675	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.095369	188	26	0.13	synth with cache (only 1: intros [? [? ?]]; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.112949	23912	5810
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.218222	98873	14355
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.088465	32888	9172
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	10.223084	33574	3795	1.11.1.11.0.9.3	synth with cache (only 1: induction 1; only 1: red; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	16.291231	5123	2009	0.0.0.8.1.1.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.067169	23824	3562
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.243175	113532	4020
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.042653	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	28.637866	19200	3683	1.0.0.0.1.0.4.0.0.0.0.0.0.0.2.2.15	synth with cache (only 1: intros a Ha; only 1: symmetry; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: case compare_spec; only 1: order; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: rewrite H; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.053693	15370	4791
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.056635	19	11	0.0.2	synth with cache (only 1: rewrite sqrt_up_eqn0; only 1: now rewrite ?Hx; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.265110	132664	5946
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	11.706101	52620	2961	0.72.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.965755	2690	270	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.052575	15208	4736
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.120449	51325	3468
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.053110	16835	7203
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	3.036648	8328	1026	1.9.17.1	synth with cache (only 1: intro m; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.815383	16009	1328	4.41.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.019343	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.152253	66776	7784
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.266902	216	41	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.010130	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.040298	11574	3833
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	3.405881	6129	658	0.0.0.15.5.7.5.3.0.3.3.4.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: destruct H; only 1: apply eq_existT_uncurried; only 1: subst; only 1: simpl in *; only 1: exists eq_refl; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.084344	30557	6056
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	14.907698	11716	1826	1.0.1.0.0.0.1.1.18.0.0.2.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: split; only 1: apply pow_lt_mono_r_iff; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.and_hprop	40	40.286310	129069	13024
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.true_hprop	40	0.007957	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.not_hprop	40	0.238982	216	55	0.0.1.0.6	synth with cache (only 1: intros h1 h2; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.049019	22134	2301
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.067146	25055	3267
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.087765	31302	8684
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	22.768835	10041	3611	0.0.1.13.3	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.546405	129	44	0.0.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.096526	35741	9861
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.100534	39098	6681
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.031061	7	5	1.0.0.1.0	synth with cache (only 1: intros x y z H' H'0; only 1: elim (Strict_Rel_is_Strict_Included U); only 1: unfold contains; only 1: intros H'1 H'2; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.984387	645	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.050897	17548	3886
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	26.761395	75599	9206	0.23.4.7.0.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.557523	564	132	0.2.4.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.010442	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.022530	4	3	0.1.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.008016	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.184806	79666	11042
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.478222	235086	13448
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.338873	99874	3878
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.401448	516	97	2.5.5	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.13.dev	Coq.Bool.DecBool.ifdec_left	40	6.922273	12758	2200	2.1.0.4.0.14	synth with cache (only 1: intro n; only 1: unfold not; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.pred_Sn	40	0.028182	12	9	3.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.213352	98243	12205
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	3.047962	57625	491
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.plus_n_Sm	40	0.286273	222	91	1.0.0.0.0.8	synth with cache (only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.206279	95695	11367
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	10.748701	8648	1834	0.0.7.6.0.12	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT_eta	40	0.009488	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.290435	38338	837	0.0.0.73.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.015872	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.rew_sig	40	0.016102	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.041866	13307	4500
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.093979	36664	10144
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.115946	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.041832	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.013505	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.097088	20458	4447
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.124887	50631	8610
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	11.874413	12388	3651	11.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.8	synth with cache (only 1: constructor; only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: left; only 1: auto; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.382577	78	19	3.2.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.023892	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.389227	192807	12452
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.010308	8	3	5.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.072798	26492	5552
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.497911	248202	13598
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.018379	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.072912	28080	4537
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.063444	23426	6459
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.158906	73287	9631
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007989	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.022775	13	4	0.0.3	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.009570	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	4.302049	3542	381	3.11.12.8.1	synth with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.004525	6	5	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002800	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_iff_compat_l	40	0.131428	1101	131
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.698025	2866	600	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.087221	32457	6522
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.052007	16625	7932
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_left	40	20.714797	64764	5719	3.17.0.1.14.0.9.2	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: intro; only 1: destruct H; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_right	40	0.010860	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.find_none	40	40.049227	16825	4010
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.997925	520929	8374
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.067220	23750	4486
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.392057	184059	8532
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.097107	36022	8558
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.443354	526	80	1.13.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.034957	9551	2666
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.hset_hOneType	40	40.230910	103691	11430
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.140557	66335	4445
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.074390	27827	3792
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.104055	30780	8789
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.106523	41491	9638
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.013167	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.306703	148413	11214
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.733578	404	130	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.211195	62	36	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.170026	570	205	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classicP	40	40.415611	201916	8547
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	12.406613	11022	2437	0.1.2.1.0.0.1.2.0.1.0.1.2.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.457336	377	50	0.15	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.of_bits_to_bits	40	41.049181	548073	4270
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.133359	38	16	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	9.173512	19072	2525	1.38	synth with cache (only 1: intros [HypL HypR]; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.761094	490	116	1.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.034538	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.mult_n_Sm	40	40.144044	62860	11564
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.110807	39377	7430
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.196592	90863	10110
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.013516	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.pair_andP	40	0.034171	19	4	7	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.045129	15045	4209
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.868205	442862	3925
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.338731	160975	7236
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.095415	35910	12030
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.094309	37071	11460
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.070158	25284	6736
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.393489	196208	14708
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.064418	14876	5977
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	15.403929	98502	4062	0.39.10.0.38.11.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.068885	27906	4662
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.036853	11270	3953
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.andb_true_intro	40	40.994535	533215	16293
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.505755	3907	207	0.13.29.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.358024	924	110	0.4.10.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.015353	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andFb	40	0.006795	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andbAC	40	0.015880	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orTb	40	0.005830	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbb	40	0.015554	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbC	40	0.012768	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbAC	40	0.021330	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_id2r	40	0.023899	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_idl	40	0.014890	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_id2l	40	0.063109	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_and	40	0.008649	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andKb	40	0.010844	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbK	40	0.008871	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orKb	40	0.013997	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybT	40	0.014656	5	1	4	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyFb	40	0.006012	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyTb	40	0.010141	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_imply	40	0.011932	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybE	40	0.011468	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybN	40	0.011463	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbF	40	0.007134	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbACA	40	0.049732	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addl	40	0.012347	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addr	40	0.014241	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addKb	40	0.011306	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addIb	40	0.014055	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbT	40	0.012423	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_cancel_l	40	40.565065	270919	23057
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.land_spec	40	40.095990	35105	4600
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_comm	40	0.183830	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.088389	29801	8590
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.filter_map	40	40.075534	26218	6074
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classic_pick	40	40.066060	20149	3726
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_refl	40	0.070992	143	13	0.16	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.008630	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.066774	22618	4684
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.025114	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.152310	70724	10357
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.009119	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.070881	23377	6429
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.118700	46359	5958
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.078037	32145	4070
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.059897	20791	3782
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.059771	21040	5106
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.078694	30260	7511
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.026722	5	3	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.072180	16272	3648
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.to_bits_of_bits	40	40.091860	39451	4532
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.subrelUr	40	20.112879	49850	4506	15.12.4.41	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.318623	153507	12598
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	1.094204	11448	144
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.le_S_n	40	40.199314	90367	15470
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.209968	96588	14608
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.259309	8835	945
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.008111	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.008324	4	1	3	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.064998	15723	2674
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.145292	62405	3479
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.032454	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.036415	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.074115	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.655221	342035	7339
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.064193	19171	6969
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.026084	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.219319	100470	11188
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.047062	12659	2645
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.276659	14	5	2.0	synth with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.202115	13447	564
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.050278	13378	5485
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_split_r	40	28.112823	16326	4267	0.0.0.0.0.0.1.6.0.0.1.0.0.0.0.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros p H; only 1: auto; only 1: simpl; only 1: intros p H; only 1: destruct p as [a0 b]; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H as [H| H]; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_assoc	40	40.384492	182014	16541
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004755	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007658	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.005627	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.007407	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_trans	40	0.506407	140	33	0.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: elim H0; only 1: auto; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_tail	40	0.036351	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.409573	1625	50
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.005894	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_opp_l	40	0.009457	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal4	40	0.016153	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal5	40	0.033075	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.006212	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_sym_involutive	40	0.007882	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.map_subst_map	40	0.009959	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_swap	40	0.011614	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_id_comm_l	40	0.330729	1863	54
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.006382	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all	40	0.455666	213	45	0.0.3.0.12	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_double_ind	40	12.974919	34629	5102	1.3.14.0.0.1.3.11.4	synth with cache (only 1: intro; only 1: intro p; only 1: intros H x0; only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.055685	18175	4806
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.095102	34841	6468
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.min_l	40	4.402068	2709	1537	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.839637	436143	15009
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.rew_pair	40	0.009633	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.448124	351	89	1.2.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.100937	37470	5324
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_assoc	40	40.498058	251802	16282
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.236019	25257	6858
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.018852	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.gt_lt	40	0.905381	285	111	2.2.2.1.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: destruct (le_gt_cases n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.lt_gt	40	0.006585	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	13.236954	16045	3707	0.0.1.0.0.12.0.0.0.1.1.0.1.0.0.0.0.0.0.0.10.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: apply clos_rt1n_step; only 1: auto; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.648817	303381	3996
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all2	40	10.813690	4065	1677	0.3.1.3.1.0.0.0.1.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: now simpl; only 1: now simpl; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl in *; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_O	40	0.006385	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.074176	26237	4100
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.031941	3930	1413
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.092418	34544	5036
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.126519	56311	5119
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.042088	12268	2451
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.137982	25746	6959
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.071730	24527	3774
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ge_le	40	11.726256	7093	1458	0.0.1.19.0.1	synth with cache (only 1: intro H; only 1: rewrite le_lteq; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: now left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.159030	30319	7588
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_O	40	0.027811	5	5	0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.323074	238	42	0.0.0.11	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_all	40	0.032600	7	5	0.0.0.1.1	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_prod	40	40.062459	19160	6764
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.704967	349352	2285
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.006236	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_skipn	40	5.130757	2784	791	4.0.0.0.0.2.3.0.1	synth with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.047408	27	5	0.8	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.013075	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.012761	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.019627	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.014717	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.155230	68387	14388
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_in12	40	0.441872	140	18	0.15	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.743427	370848	2889
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.007798	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.080552	25759	7907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.111999	42309	4431
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.051568	15848	3364
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_app	40	36.564872	15973	4273	7.0.0.4.9	synth with cache (only 1: intros l n x d H; only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_length_le	40	24.118598	10046	4067	1.0.0.2.2.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: intro l; only 1: simpl; only 1: inversion 1 as [H1| ?]; only 1: simpl; only 1: now subst; only 1: destruct n; only 1: simpl; only 1: intro H; only 1: easy; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.075186	24428	4914
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.050117	15846	4214
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.700184	906	116	2.0.12.7.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros H; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.085628	13577	4404
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.487310	226153	4420
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	5.713994	2823	805	4.0.3.9	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.113972	44113	7087
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.227475	648339	8275
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.087101	30501	6218
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.062869	22139	3544
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.699101	545	63	0.12.4.0	synth with cache (only 1: apply eq_opp_r; only 1: unfold lnot; only 1: nzsimpl; only 1: now rewrite one_succ, opp_pred, opp_0).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.093756	34660	8184
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.061583	19670	4803
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.072913	26236	4126
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.152232	63682	11155
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.387984	183390	6907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.053973	17380	4479
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.075967	25770	4461
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.049179	15600	3249
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.067938	20980	7386
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.076037	28105	4699
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.047800	13505	4193
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.092808	32638	7465
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.017177	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.060391	21131	4157
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	2.421663	1173	331	0.0.0.1.0.0.0.0.0.0.1.0.2	synth with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.054523	16416	5761
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.085100	31651	6767
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007744	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_app	40	40.174335	74214	6998
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.130937	53963	12444
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.261306	116799	3879
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.032121	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.265438	120566	4482
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	19.841584	37363	1845	0.0.15.15.10.4.39	synth with cache (only 1: Bool.destr_bool; only 1: move  =>mf mg x y; only 1: intros; only 1: rewrite -> H; only 1: trivial; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.076354	27676	4136
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.077943	27649	4116
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.047767	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.025570	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_split	40	40.084408	29120	7238
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_inv	40	40.187451	81916	7434
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.056937	17882	4465
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.064461	20455	5609
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.065181	19255	7893
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.233024	101791	3396
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	24.400558	30621	3726	0.0.11.25	synth with cache (only 1: compute; only 1: intros m H1 H2; only 1: intro n; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.088620	31213	5813
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.081643	28531	3938
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.059220	16912	5813
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.048094	13481	5449
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.057798	19684	2846
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.074225	24600	7746
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_r	40	0.181304	68	32	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.056221	21628	3506
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.113391	16	9	0.1	synth with cache (only 1: apply max_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.117960	24	16	0.0.0.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.134232	53758	11419
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.110752	41327	4343
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.110810	41017	4419
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.101669	37637	3587
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.063489	19419	5897
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.087546	32442	3893
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.091718	32345	7654
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.109915	30429	5730
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.050070	16706	3950
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.121770	50321	8070
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	40.089441	33305	7477
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.079729	29819	5959
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.087043	29517	4653
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.088548	24456	4868
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.088609	31179	6419
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.066798	22166	4273
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.082561	27049	6437
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.083626	30034	5017
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.111172	44358	5491
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.077440	25629	6647
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.063858	22703	5442
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.091478	31522	7623
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.151519	58876	8891
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Repeat.repeat_length	40	0.734063	494	66	2.0.0.23	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.100552	36806	7126
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.118651	21051	4255
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.058674	18872	4670
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.056595	17938	3873
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.053862	17088	4011
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.068309	23084	3892
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.085117	29141	4691
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.092559	33364	5397
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.072382	25482	4779
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.067416	21162	6058
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.027040	6	5	0.0.0.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.043774	12976	4427
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.086923	30572	6400
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.072951	23574	6234
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_app	40	40.074288	27183	6257
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.134234	58532	4493
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.055901	14448	3227
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.080347	27021	6577
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.102987	38763	7571
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.100363	46246	4540
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.102461	38939	5602
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.080819	33492	5850
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.060626	20597	5220
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.079831	29010	5551
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.087788	34557	10324
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.082270	31435	5090
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.109204	45601	5365
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.091005	40316	7265
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.096442	27483	3436
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.094967	38425	5217
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.121525	53489	7791
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.105751	51671	6668
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.153387	73287	10514
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.063829	18837	4073
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.067878	27492	5919
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.072070	32822	3035
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.077080	33669	6633
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.104989	52124	6471
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.055945	21865	7041
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.076666	31045	6879
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.038627	14866	4472
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pplus_minus	40	40.147962	57046	9296
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.043902	18210	4260
