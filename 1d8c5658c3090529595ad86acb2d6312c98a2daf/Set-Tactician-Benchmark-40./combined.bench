coq-tactician-stdlib.8.16.dev	Coq.Floats.FloatLemmas.shift_value	40	0.031935	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin2	40	0.041293	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.580793	275	43	0.11.0	synth with cache (only 1: intro; only 1: rewrite Nat.div2_succ_double; only 1: Nat.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.nsatz.Nsatz.Rsth	40	0.198455	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.072845	31257	5398
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.048360	18745	2884
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.058802	21448	3620
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.054821	22284	2808
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.038240	14684	3318
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.437517	130	39	0.0.0.2.0.0.2.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: apply Nat.lt_lt_add_r; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.interior_P1	40	40.182599	86829	7812
coq-tactician-stdlib.8.16.dev	Coq.Reals.Alembert.Alembert_C3	40	40.028343	9219	4044
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.046899	17198	4661
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.quadruple	40	0.030422	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.049176	8	2	6.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.included_trans	40	0.464181	278	51	0.10.1	synth with cache (only 1: intros f D l x0 H H0; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.028942	9720	4054
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.099513	43671	4353
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.MVT_cor1	40	40.086215	37918	5111
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.062169	24185	4988
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.091050	40563	5553
coq-tactician-stdlib.8.16.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.057516	24951	4307
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.094442	42490	4721
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.031459	10320	3308
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.034985	11618	3949
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.distance_refl	40	40.048851	19704	3892
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.039365	14724	3429
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.036042	12732	3348
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.035533	13783	2792
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.exp_ineq1	40	40.041408	15835	3678
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	4.578154	1387	420	0.0.0.0.3.4.0.1.1.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite Rmult_1_r; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_R.Rcri	40	24.136911	14796	1416	17.35.3.4	synth with cache (only 1: intros x H; only 1: unfold equality; only 1: rewrite <- (Rmult_comm x); only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.145842	71527	4271
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.021229	7096	2297
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.037539	14797	2946
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.028705	10069	3248
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.tech	40	40.028270	10040	2713
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.067783	30372	2562
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	12.673622	2413	593	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: apply Rinv_neq_0_compat; only 1: assert (Hyp : 0 < 2); only 1: change 2 with (INR 2); only 1: apply lt_0_INR; only 1: Nat.order'; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Binomial.pascal	40	40.034693	12256	3209
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	3.579701	3743	350	0.0.0.0.1.12.2.27	synth with cache (only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: prove_sup; only 1: now apply (IZR_le 0 2); only 1: auto with real; only 1: apply sqrt_positivity; only 1: now apply (IZR_le 0 2)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.719806	177	73	0.2.3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: cut (1 + 0 * x = 1); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.057286	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.16.dev	Coq.nsatz.Nsatz.Rcri	40	40.044974	18144	2124
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.067922	26435	4082
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.alternated_series	40	40.066071	25195	4939
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.C_maj	40	40.044048	15873	3587
coq-tactician-stdlib.8.16.dev	Coq.Reals.Alembert.Alembert_C5	40	40.023615	6536	3640
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.interior_P3	40	40.171195	82311	6061
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.056365	20340	5087
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.094179	41524	5285
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.043532	16774	3988
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cos_plus.cos_plus	40	40.047127	17099	3282
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.MVT_cor3	40	40.030415	10840	3716
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.048366	16339	4835
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.059963	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.070674	30303	4486
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	0.745292	787	90	3.0.2.9.2	synth with cache (only 1: intros; only 1: intro; only 1: intros; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.complementary_P1	40	3.835027	7934	657	1.8.7.15.2	synth with cache (only 1: intros H1; only 1: intro H; only 1: destruct H as [alp [Halp H]]; only 1: apply H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.092823	41970	4368
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.068719	28878	3680
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.055139	21695	3784
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.057884	23380	3231
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.027769	8689	3387
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.exp_Ropp	40	40.064077	26951	3912
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.050534	20536	3599
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.057946	10858	2949
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.054102	21993	2340
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.048172	19457	3424
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rderiv.Dx	40	40.052908	20548	5373
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.Machin_2_3	40	40.048391	19389	2582
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.049713	20423	3004
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.147425	4	3	0.1.0	synth with cache (only 1: intro m; only 1: simpl; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech1	40	40.091931	39720	5301
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech5	40	0.062348	19	8	0.1.0	synth with cache (only 1: simpl; only 1: intros x y; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.minus_neq_O	40	1.368195	588	157	10.3	synth with cache (only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.055697	23033	3799
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.040676	14096	3945
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.058913	22788	5187
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.730189	127	70	1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros H'2; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.043584	16022	4586
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.032724	10727	4287
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.growing_cv	40	40.138669	64010	6031
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.038496	14434	4213
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.058904	22917	4206
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.037991	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.041856	14925	4613
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.033118	9577	4386
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P1	40	40.105026	46151	6278
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.041293	15905	4063
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.026226	7932	3397
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.055307	22570	3403
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.AbsList_P2	40	31.620177	21415	3743	2.0.2.1.3.6.0.9.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: intros; only 1: inversion H; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.050382	18601	3965
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.ln_exp	40	40.064046	26561	3807
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.040887	15997	2987
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Rsor	40	40.118115	50189	5524
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.le_double	40	27.406266	21089	3639	5.19.7	synth with cache (only 1: simpl; only 1: intros H x; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.tech8	40	0.408670	78	19	4.3	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.089024	38875	5234
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.031612	10617	3418
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.038363	13193	2482
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.068193	29281	3369
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.336749	171639	5002
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.040578	14646	2265
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rderiv.Dopp	40	40.064168	26710	4781
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.052680	21744	2816
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.073620	29382	3897
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_O	40	0.021373	4	2	0.2	synth with cache (only 1: intros a; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_1	40	0.022557	8	2	6.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_add	40	0.065993	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech6	40	40.057790	22172	5042
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech12	40	0.006894	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_mult	40	40.108389	48170	5015
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.060055	25257	3055
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.052647	20215	3360
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	4.812260	1762	515	1.4.0.0.5.1.0	synth with cache (only 1: intros r1 r2 H; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_plus	40	4.905087	3237	582	8.2.13.0	synth with cache (only 1: intros x y; only 1: elim archimed with x; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.080388	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	1.651938	669	153	4.2.4.0	synth with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	8.790761	1201	473	0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: apply g_wf; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.073634	21612	4948
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.032472	11876	2393
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.072856	30873	5393
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.053881	20384	4297
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.192836	92714	6289
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.038913	12832	4386
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	40.037277	14999	2807
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.positive_derivative	40	40.034389	10846	4377
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.075052	30324	6397
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P4	40	0.483161	1693	57	4.52	synth with cache (only 1: intros p q; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.052094	22058	3667
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.MaxRlist_P2	40	40.092597	30908	5473
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.049459	19892	2721
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.048160	17419	4151
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.091731	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.029888	9079	3695
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.ln_inv	40	40.030099	10483	3506
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreals.IZR_nz	40	0.008937	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Qle_true	40	40.101530	43844	3956
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.107859	47869	4568
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.027918	9747	3027
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.042695	16920	3228
coq-tactician-stdlib.8.16.dev	Coq.Reals.DiscrR.IZR_eq	40	0.031791	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_refl	40	0.301795	391	50	4.10	synth with cache (only 1: right; only 1: now try rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.070279	27780	6043
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.022919	6781	3166
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_le	40	0.116051	56	16	2.3.1	synth with cache (only 1: intros p q H; only 1: left; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.030122	9965	2267
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.042800	15687	3134
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.scal_sum	40	40.079527	33464	3893
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.067544	25488	5034
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.044498	17025	3646
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_ge	40	5.578588	3673	823	2.9.0.0.0.4	synth with cache (only 1: induction 1 as [| x y z]; only 1: red; only 1: tauto; only 1: generalize (total_order_T r1 r2); only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005399	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.069863	25330	7048
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.050051	17288	6198
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.051064	19135	4845
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.114840	52463	6658
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.047343	17141	5091
coq-tactician-stdlib.8.16.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.049915	18994	4523
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.046886	18455	3421
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.increasing_decreasing	40	40.076272	32112	4191
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_P3	40	40.033980	11859	4420
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.051658	20503	4188
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	4.969923	1233	635	0.0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply (sqrt_positivity x H); only 1: apply sqrt_pos).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	17.266623	6329	3195	0.2.0.0.3.6	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P1	40	40.063966	24922	5800
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.tan_0	40	40.058910	22181	3960
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.033365	11351	3405
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.372850	31	24	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_pow	40	40.036572	13289	3573
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreals.Qle_Rle	40	40.067517	27535	3920
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.fp_R0	40	40.690294	47486	3005
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.013711	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	4.882800	1329	384	1.0.0.2.6	synth with cache (only 1: intros r1 r2 H H0; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.070312	28028	4263
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.132012	61735	4293
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.027810	10023	2468
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.027069	8039	3548
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.376295	36213	4392
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.124862	55977	5170
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.tan_increasing	40	40.040397	14542	2721
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.048489	15702	940
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.poly	40	40.067450	25069	5086
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.plus_sum	40	40.911944	35528	2688
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.limit_minus	40	40.037259	12100	4721
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.035674	11746	4250
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.197991	33	20	1.0.0.0.0.2	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.061550	22120	3446
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.039146	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.871634	929	247	7.3.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.159480	72128	6086
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.061687	22887	5918
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.065271	26646	5326
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	5.824611	6226	342	68	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.Vn_growing	40	40.098612	44076	4280
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.not_Rlt	40	0.007888	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.148795	70018	6646
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.038079	13350	3860
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.null_derivative_1	40	40.033187	11007	4788
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	5.873487	5910	967	0.0.4.4.1.6.2.3	synth with cache (only 1: intro l; only 1: intros H H3; only 1: induction 1; only 1: eauto with *; only 1: auto; only 1: destruct r; only 1: eauto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.Rsepare	40	40.058965	21678	4941
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.044492	14661	5192
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.043209	15433	4080
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P2	40	40.067735	26677	5443
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.115705	52150	5395
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_lt	40	40.052956	19467	3661
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.055395	18416	1857
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.057018	25091	2221
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.base_fp	40	40.077084	30127	6674
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.078826	15	9	0.0.0.2.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.108083	45757	4442
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.040025	12938	4643
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.047328	19381	3140
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.035818	13274	3223
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.072429	7	4	0.2.0.1	synth with cache (only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.family_P1	40	19.717413	18433	2914	1.0.13.12.8	synth with cache (only 1: intros LE p Hp1 Hp2; only 1: intro; only 1: simpl; only 1: intros HF; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.096515	38561	6121
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.038366	15224	2283
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.041540	10016	2321
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P6	40	2.612563	1399	402	8.3.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.133263	59667	5158
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.sum_eq	40	40.068645	29116	4751
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	40.062342	23694	4036
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.083390	34705	5057
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.175863	46	22	0.0.0.0.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.019987	5548	1344
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.597098	148	55	0.0.1.2.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto using Rnot_lt_le with rorders).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.033625	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_asym	40	0.055660	11	7	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.053687	18272	6056
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_antisym	40	1.245732	510	150	0.6.0.0.0.3	synth with cache (only 1: intros * []; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.027246	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.013505	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.041706	15313	4629
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.906623	1604	301	0.0.0.11.6	synth with cache (only 1: intro z; only 1: intros def_n0; only 1: intros g c; only 1: intros n0 H' m; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.031000	6	5	0.0.0.1.0	synth with cache (only 1: intros x x' y y'; only 1: intros H1 H2 H3; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	33.173793	63716	4580	0.0.0.7.11.4.36	synth with cache (only 1: intros Base Step n; only 1: induction 2; only 1: constructor; only 1: setoid_rewrite  <- H; only 1: eauto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.013795	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.027044	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.455970	70	41	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.529152	345	43	5.17	synth with cache (only 1: intro Ha; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.072941	27630	5075
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.approx_min	40	40.071835	28550	5600
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.112184	47364	5124
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.IVT	40	40.061663	24576	4075
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.046829	17755	4212
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	30.091623	20947	4180	0.0.0.0.0.10.0.13	synth with cache (only 1: intro; only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_trans	40	8.904308	12698	1472	0.2.1.37	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros v1 v2 env env' H ? ? ?; only 1: intuition eauto  3).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.042627	14082	4541
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.109362	47075	3409
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.020927	11	3	5.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P3	40	40.038733	12440	5177
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.039694	12963	3274
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.091830	36699	4213
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.048889	18215	3836
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.099897	43228	4763
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.070584	29275	3648
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.194911	20	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.132446	60523	5111
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	12.924101	7045	1491	1.0.0.0.1.0.0.1.2.6.1.3	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: unfold Rmax; only 1: rewrite Rlt_def; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: intro; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.053958	22070	1969
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.031369	10609	3001
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.034452	12020	3150
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.sum_cte	40	34.987184	20139	3634	2.9.0.2.0.0.1.0.5.2.1.1.0.0.2	synth with cache (only 1: intros z [| n]; only 1: simpl; only 1: apply Rquot1; only 1: rewrite Rmult_1_r; only 1: auto with *; only 1: simpl; only 1: elim n; only 1: rewrite Rmult_plus_distr_l; only 1: simpl; only 1: ring; only 1: simpl; only 1: intro; only 1: intro; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.020238	296	124	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalZ.of_iff	40	40.087835	34716	5831
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.104396	44605	4682
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.046423	16684	3502
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.236063	7940	844
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	36.766472	18390	4107	0.0.0.0.3.14.0.0.1	synth with cache (only 1: generalize PI2_RGT_0; only 1: intro; only 1: unfold Rdiv; only 1: pose proof PI_4 as t; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: Lra.lra).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.077554	29182	5367
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.compact_EMP	40	40.159195	74199	4856
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_le	40	1.030013	264	113	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.045460	14937	5012
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.066650	12535	1458
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.063944	9	8	1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: induction n as [| n IHn]; only 1: destruct x; only 1: simpl in *; only 1: auto; only 1: intro l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.319824	76	33	1.0.0.0.0.3	synth with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: split; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.046064	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl in *; only 1: now try rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.028947	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.056107	21934	4199
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	23.352890	5994	1434	15.2.4	synth with cache (only 1: intro p; only 1: intro q; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.149433	63049	5392
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.080050	8	6	0.0.0.2.0.0	synth with cache (only 1: intros m x; only 1: functional induction find x m; only 1: easy'; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.UL_sequence	40	40.071609	29008	4275
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.100738	43628	3191
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.129334	57609	5323
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.094459	38760	4190
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.019589	3883	702
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_period	40	40.036261	12079	3154
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P6	40	40.059804	23124	5047
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.051848	19760	2752
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.033737	11230	3231
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.051836	17738	4498
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.082632	34145	4729
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.041277	17489	1591
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.052654	23532	2736
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_complete	40	0.019075	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.042827	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.023807	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.086981	32739	6234
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.013484	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.325362	67	39	6	synth with cache (only 1: apply Unsigned.of_inj).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.051131	21332	3207
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.077016	30525	4994
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.182376	86609	1980
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.frame_tan	40	40.032009	11372	2353
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.GP_infinite	40	40.043486	15247	3703
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.135208	40031	2415
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.084391	34122	4904
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.080871	33711	3249
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.657275	2256	346	19.1.0.6.3	synth with cache (only 1: split; only 1: split; only 1: congruence; only 1: red; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_mult	40	40.075314	27121	3703
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.056400	21957	4608
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.129102	53581	6895
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.046991	14619	5647
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow1	40	8.784365	4450	927	0.2.0.2.0.0.20	synth with cache (only 1: unfold IZR, IPR; only 1: simple induction n; only 1: reflexivity; only 1: intros v w; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.225098	105589	5749
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.037649	3	3	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.126177	56236	4612
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.045452	14883	2453
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.082810	37572	2543
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_plus	40	40.075750	27484	4602
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	22.435513	6718	3463	0.3.9.0	synth with cache (only 1: revert q; only 1: intro n; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_dec	40	40.056728	20105	3982
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.052803	19820	3697
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_dec	40	1.063025	519	128	1.0.10	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.036929	4	3	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	40.057645	21120	5148
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P7	40	40.066625	24308	5206
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.043357	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.094644	34546	6778
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.021719	3330	704
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.062997	24791	3231
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.limit1_ext	40	40.037486	13721	3580
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.033698	10280	4889
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.069715	25130	5814
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.R_uncountable	40	40.157447	76411	6552
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.074703	34807	2109
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	10.421094	46133	1380	1.0.4.0.0.54.28	synth with cache (only 1: intros m; only 1: case m; only 1: intro n; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.080063	31737	4062
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.073579	30333	5458
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.053630	19305	5070
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.CV_shift	40	40.067793	25202	5019
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.078646	31113	5997
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.037767	13074	2799
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.635410	17844	2879
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.044328	14918	4335
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.081655	34745	4144
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.031497	10064	4032
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.107655	45906	4546
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.047485	14740	6820
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.203281	97169	5019
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.033290	11992	3773
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.076130	27850	5207
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.049108	15571	2413
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.072485	26111	3942
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.868337	845	208	0.6.10	synth with cache (only 1: simpl; only 1: intros a n ?; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.102515	45126	4968
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.118280	51049	5379
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.052296	18611	3886
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.028654	10824	2349
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.082180	23	7	3.0.1	synth with cache (only 1: intros x y H; only 1: intros; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P8	40	40.059167	20733	4929
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.044158	15268	3913
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.052329	20514	1178
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.044786	15093	3349
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Dln	40	40.028023	8647	3439
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.027141	8701	2263
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	10.470082	35017	1607	62.9	synth with cache (only 1: intro n; only 1: now constructor).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.156693	146	24	4.6	synth with cache (only 1: intros m Hm; only 1: exact 0%Z).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.061418	21997	2851
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.115906	49369	5076
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	11.382771	3767	1068	1.0.0.0.0.12	synth with cache (only 1: rewrite <- Ropp_0; only 1: apply Ropp_lt_gt_contravar; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.256931	127314	4705
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.108144	46867	3231
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.065504	22173	5667
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.in_int	40	40.037079	12668	2576
coq-tactician-stdlib.8.16.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.225597	105559	9724
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.061292	23260	2890
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.040697	13196	3104
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.048655	14110	1256
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.054884	20989	3645
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.081246	32356	3569
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.022369	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.054313	18200	4679
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.132580	58240	5356
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	5.801676	4699	651	0.4.0.5.0.0.0.4.11	synth with cache (only 1: intro n; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: set_iff; only 1: now intros ->; only 1: unfold Same_set, Included, mkEns, In; only 1: inversion 1; only 1: eauto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qpower_positive_0	40	40.055330	22323	2436
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.051742	19047	3441
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.062286	22502	4123
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.069799	24953	5692
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.033405	9346	1952
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.049573	15718	3393
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.067697	24545	4970
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_mult	40	40.033271	10126	4532
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	17.131745	14038	2220	4.4.0.4.1.1.2.1.0.0.0.2.0.2.2.4.0.0.0.0.2.0.2.3.8.1.1.8	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: generalize (rev d); only 1: intros H'; only 1: trivial; only 1: simpl; only 1: now case d; only 1: simpl; only 1: now case d; only 1: generalize (rev d); only 1: simpl; only 1: intro H'; only 1: now induction d; only 1: generalize (rev d); only 1: reflexivity || ring; only 1: simpl Little.double; only 1: now induction d; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.035360	5	4	1.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.076654	29839	4226
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.056292	17238	5624
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.026408	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.254445	14	4	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.013230	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.adherence_P4	40	18.363601	22665	2557	11.3.9.9.1.4	synth with cache (only 1: unfold included; only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: intros y Ey; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P9	40	40.082300	32160	4956
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P18	40	0.693136	180	79	0.0.0.0.0.4	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.033004	11617	2948
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.051985	18603	3889
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.009896	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.070472	25729	4822
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.051972	21532	1731
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	26.725657	9563	3259	17.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.053869	21806	2946
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.046313	14202	4645
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.067644	25844	4229
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.D_in_imp	40	11.147441	3167	988	3.4.6	synth with cache (only 1: intros r r1 r2; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.043531	16292	2158
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.103610	44025	6010
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.028522	10583	2699
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.131126	58631	4851
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.199821	96780	1795
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.D_in_ext	40	10.355783	3435	1056	0.3.0.5.1.0.0.2	synth with cache (only 1: intros; only 1: generalize H, H0; only 1: unfold D_in; only 1: intro; only 1: elim H1; only 1: intro; only 1: unfold limit1_in; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.016938	3899	1307
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.109937	45373	3405
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.305458	158466	3082
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.072148	28377	3801
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.064085	25406	4466
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.043977	13377	4331
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.038412	14020	1201
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.046218	14113	4138
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.tech9	40	40.090049	37576	4764
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.072284	28036	4556
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.092195	35017	4709
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.092545	38110	4109
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.020036	2	2	0.0	synth with cache (only 1: intros x y H; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.domain_P1	40	40.150486	69024	4039
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.054572	18399	4269
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.054755	19520	3721
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.081972	33379	3667
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.060814	21170	5223
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.100311	41856	5072
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.028106	13	4	3.3	synth with cache (only 1: intros x l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.070498	27145	5497
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.063954	25241	3899
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.096532	38872	5818
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.124236	33372	2793
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.099103	43838	3064
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.043189	15883	3359
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.027367	7109	3945
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.034295	9676	2060
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.133940	27199	1486
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.020508	5179	2561
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.347760	177127	2105
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.317423	159099	2528
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.014650	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.846376	60	54	5.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.646857	60	48	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.010700	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.550796	118	41	0.0.0.0.5.1	synth with cache (only 1: intros; only 1: destruct (In_dec x s'); only 1: rewrite <- not_mem_iff; only 1: auto with *; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.014064	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.127517	35	18	2	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.071345	26974	4331
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.082059	33509	3344
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.251378	94	25	0.2.6	synth with cache (only 1: intuition; only 1: red; only 1: auto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.085749	31411	5473
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.117647	47584	10479
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.015325	2985	1158
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.083148	17910	3306
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.079587	32206	4963
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.041530	12652	3797
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.104308	44016	4641
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.086772	34888	3868
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.tech13	40	40.093046	39811	4153
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	6.854865	6976	1054	30	synth with cache (only 1: apply N.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.060914	22853	4662
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.115979	48797	5342
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rsqr_0	40	40.310928	159437	794
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.Heine	40	40.085842	34052	4771
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.047456	14821	4479
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.300906	30	24	0.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (Dec.F.mem_iff s x), (Dec.F.elements_iff s x), (existsb_exists (Dec.F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: generalize (Dec.F.mem_iff s x), (Dec.F.elements_iff s x), (existsb_exists (Dec.F.eqb x) (elements s)); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.852961	1428	361	2.0.2.0.4.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.056034	20928	3395
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.089994	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.029528	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	1.197687	248	113	0.2.2.2	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.084118	33409	4937
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.475051	34	11	0.0.6	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.101782	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.082498	33047	4178
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.393197	14	3	2	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.014869	9	2	2	synth with cache (only 1: f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.028923	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.031212	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.057520	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.027170	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.624351	1247	45	0.48	synth with cache (only 1: intro LT; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.346878	42	14	0.0.0.5	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.063135	2	1	1	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.097369	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.094834	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.078721	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.446441	18	6	0.0.3	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.084113	32969	5560
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.387193	22	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.548213	23	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.045905	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.046210	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.390792	12	3	1.3	synth with cache (only 1: intuition; only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.062755	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.079149	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.076731	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.077444	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.101429	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.414876	6	3	0.1.2	synth with cache (only 1: intros; only 1: red; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.037498	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.272112	6	3	1.0.2	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.062658	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.036906	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.044216	14800	2785
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.041608	13421	3769
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.598476	23	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.023134	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.024343	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.064996	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.069604	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.063539	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.166035	72224	6128
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.132433	60449	3221
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.443137	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.393725	21	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.093666	40134	3230
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.041259	15944	3396
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.039661	10644	6116
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.024918	314	110	3.0.1.2.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: intros; only 1: intuition; only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	1.753790	99	34	3.2.1.0	synth with cache (only 1: expAdd; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.101294	44538	2921
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.111503	47520	3438
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.043290	16271	2862
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.109489	45261	4958
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.131568	63	19	0.0.3.2	synth with cache (only 1: intros a m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	37.146462	18221	5083	12.0.7	synth with cache (only 1: intros x ?; only 1: unfold permutation; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.126060	54200	4068
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.arcsinh_0	40	40.053643	18849	3656
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.119358	53829	5789
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.038284	9450	5084
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.022265	7823	686
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.223879	37	14	2.1	synth with cache (only 1: unfold opp, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qabs.Qabs_Qinv	40	1.947196	1419	277	9.0.9	synth with cache (only 1: unfold Qeq in *; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.057939	20855	3795
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_minus	40	40.029137	8607	4445
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	18.482302	30465	454	9.177	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.045148	6	3	0.3.0	synth with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.010011	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.016635	2	2	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.028534	8489	1851
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.732986	87	71	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.115135	48976	5348
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.056553	20649	2481
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.029477	9	3	1.1	synth with cache (only 1: intro n; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.014334	4192	897
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.076067	29241	4876
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.102327	40052	4857
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.128006	29737	3502
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.081319	34663	3429
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	3.229328	1903	500	0.0.0.0.2.0.1.3.0.0.0.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.147148	24196	3117
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.020507	6890	1507
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.047477	15616	3369
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.105223	43886	5577
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.066149	23215	4984
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.095126	40644	2632
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.023693	7689	2134
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.112771	46155	4067
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.082557	32175	5153
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.050996	20038	2775
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.639456	321231	1538
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.040804	12008	4152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.944166	363	95	0.1.0.1.2.0.2	synth with cache (only 1: intro q; only 1: zify; only 1: apply Zmod_small; only 1: split; only 1: Z.order; only 1: pose proof gt_wB_1; only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.075388	31039	3662
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.043226	13821	3630
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.678618	88	48	0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.053213	18258	2499
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.098246	41639	3021
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	32.944737	4629	3661	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.021808	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.015606	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.022636	4	2	2.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.090049	37320	5016
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.022393	7005	1360
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	40.038359	10855	3313
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.219357	26927	3411
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.098795	39530	4684
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.108289	42646	5733
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.073311	26871	4036
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.089386	35588	5708
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	2.948764	563	137	1.11	synth with cache (only 1: intros l x; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.027902	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.025473	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.026728	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.525998	265111	1553
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.948227	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.008931	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.100066	14741	3062
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.098030	14	8	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.323826	153261	7027
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.074296	16	6	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qsor	40	40.051616	17578	3091
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.082224	33616	4375
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.133337	57771	5564
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.081370	182	13	19	synth with cache (only 1: now rewrite ?Ring_polynom.local_mkpow_ok).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qfloor_le	40	40.078498	31856	3602
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.030760	8092	3694
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.086995	30776	6204
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.109527	29021	2647
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.037561	14	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.109112	46754	2733
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.071059	27736	4620
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.182831	39296	3914
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.039253	12464	2662
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.024816	7576	2810
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.415213	1072	229	1.14	synth with cache (only 1: intros m Hm; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.417123	22	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.353131	175911	2391
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.032993	11613	2306
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	1.025100	559	98	0.1.8.4	synth with cache (only 1: intros a b; only 1: intros c Hc IH; only 1: rewrite add_spec; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.084260	37134	2648
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.059415	54	15	3.5	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.121486	49238	4769
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.106343	40147	8913
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.009376	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.009863	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.009444	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008454	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.010805	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.008190	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.008126	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qred_iff	40	40.096615	42366	3975
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.029007	11	4	3.1	synth with cache (only 1: intro n; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.105694	45594	4382
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcge_alt	40	1.012836	581	114	1.2.2.7	synth with cache (only 1: simpl; only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.036152	9095	3954
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	5.939150	7598	914	0.34	synth with cache (only 1: intro q; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.103471	43595	5239
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.031768	7840	1884
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.057186	20067	4259
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	6.472571	1371	617	1.2.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	3.179504	835	174	6.5.4	synth with cache (only 1: intro r; only 1: intros ? ? IH p1 p2; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.039850	11882	3498
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	25.852566	44885	2946	45.22	synth with cache (only 1: intros m H; only 1: now elim H).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.QNpower	40	0.019990	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.169449	27636	5548
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.159925	71280	5095
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.064420	22289	7076
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	4.417919	3187	503	2.20	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.048724	13	5	1.0.2	synth with cache (only 1: unfold Subset; only 1: intros a b c Hc Ha Hb; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	7.128424	9383	1478	0.0.24.5	synth with cache (only 1: intro n; only 1: <Coq.Strings.String.t_eqb>; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.113418	36351	5001
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.094252	4	2	2.0	synth with cache (only 1: intros; only 1: now field).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.280946	82	23	4.3.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.027774	9	4	1.3.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.612963	120	42	0.2.0.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	0.624376	152	65	1.3.0.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.158303	73028	3767
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.090546	37147	3605
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.061807	22775	4958
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.226942	106314	4837
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qle_ceiling	40	40.076185	25070	3589
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.105064	42505	7145
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.923885	437	107	12	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.013801	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.038143	12821	3309
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.106409	44774	4957
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.079102	28646	4955
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.053647	10907	8031
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.121881	53073	4929
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.041933	15950	2524
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.123280	50813	5431
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.213435	32294	5533
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.022089	6570	2869
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.758688	373	68	7.2.1	synth with cache (only 1: intros p H2 H3; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.093463	36761	3952
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.155091	72745	1562
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.101084	41025	5180
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.046266	4	1	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.075756	26051	4756
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.009642	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.075212	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.009183	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.008340	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.010811	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.011878	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.009775	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.121411	16	6	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.158428	72783	5767
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.010523	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.099422	45266	2365
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.074200	29800	3997
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.111508	46007	4789
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.040760	12375	4064
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.008953	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.553165	173	42	4.0.0.2.0	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	41.659943	20497	2444
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.071228	25989	4139
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.103830	38107	6045
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.090218	32332	6553
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.058931	16080	1801
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.076780	27379	6060
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.086933	27950	3658
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.113184	48221	4078
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	13.093296	10638	1293	11.1.4.4.11	synth with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intros a H; only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.062650	24651	3516
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.083056	32418	5735
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.099543	42726	3641
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.108064	43261	4844
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.092982	38590	3840
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.193112	70309	8393
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.169584	73979	5696
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.050047	17466	3564
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	5.524440	3332	790	0.1.0.0.1.0.7.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: simpl; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex2	40	2.437046	1489	256	0.1.0.2.7.8	synth with cache (only 1: intro z_ne_0; only 1: intro a; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex6	40	0.013858	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex7	40	0.014230	9	2	1	synth with cache (only 1: exact Qplus_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.134538	57197	4975
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.098103	36529	5081
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.024333	7786	2322
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.070456	26006	5348
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.166164	72342	5827
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.038547	15039	2855
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.052787	17784	2960
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	5.869078	5870	964	4.3.0.5.15	synth with cache (only 1: intros a b q r Hr EQ; only 1: intuition; only 1: apply fold_rec; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.066631	12389	1894
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.092032	36935	4108
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.013758	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.065637	27494	2681
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.202551	91021	5733
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.084324	33797	1020
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.066137	25464	4149
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	27.342829	10402	2166	0.4.0.0.0.14	synth with cache (only 1: firstorder; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: rewrite <- H0; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.039354	14533	1934
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	3.665153	1215	493	2.0.0.0.1.6	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.115714	37467	5479
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.084724	34617	3999
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.154776	70449	3695
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.050510	25	7	0.1.3	synth with cache (only 1: split; only 1: now try Nat.order'; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.012282	4	2	2.0	synth with cache (only 1: intro n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.202583	92262	6694
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.034420	14	4	0.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.117684	48613	3323
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.230352	65	21	7.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.093442	38168	2971
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.097982	36148	6356
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.051038	16903	3819
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.047849	15140	4808
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.022972	11	4	0.0.1	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.118852	48437	4370
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.111930	11311	1312
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.010316	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.011719	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.116585	48254	5263
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.012316	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.231584	105483	4586
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.622325	281	91	1.1.1.1.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: auto with sets; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.090397	25097	3198
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.026654	7546	3252
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.090681	33713	4854
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.052437	11877	7342
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.175560	77636	3338
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.040493	14834	2545
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.105258	41378	6819
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.013870	6	2	4.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	34.591251	24726	3079	0.0.1.23.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.018392	5673	2202
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.095929	39394	3628
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	18.596890	6215	1544	0.0.0.0.0.0.0.0.0.0.0.1.6	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.147041	66420	5854
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.081433	12108	4506
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.065241	25485	2752
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	2.386397	976	282	0.4.0.0.0.4.2	synth with cache (only 1: intros op Hop; only 1: intros x y Hxy Hyz Hy; only 1: apply fold_rec_bis; only 1: intros; only 1: eauto; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	40.137749	57463	7855
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.053337	20205	4312
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.217814	96771	6886
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.020924	6	3	1.0.2	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	40.098143	39314	6037
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.059024	19040	5237
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.083042	29379	5125
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.715125	199	70	0.0.0.0.5	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.173585	84	20	2.1.4	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.553213	22	5	3.4	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.106641	44245	4409
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.009792	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.013729	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.100299	39974	7467
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	3.457469	3504	566	0.1.1.0.2.19	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: now split; only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.134048	55313	5099
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.047939	19911	2012
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.149483	62049	6491
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.072851	30267	3200
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.041467	11633	5189
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.127674	57169	6051
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.044420	16172	3012
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.055977	19123	4213
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.064391	19755	6569
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.100748	43216	4173
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.100480	39599	6160
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.021722	5208	3096
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.129881	56385	5840
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.246874	119157	3114
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.031871	11137	2572
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.041076	13604	1665
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	40.076532	27802	4372
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.011012	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.056024	19464	3815
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	3.154211	1714	343	2.5.0.2.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: rewrite Qmult_comm; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.031860	8166	1814
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.259597	1413	260	0.8.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.isZ0_0	40	0.413907	125	48	0.0.0.0.0.0.2.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.062190	22296	1577
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.070241	27314	3651
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.044569	15585	4324
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.298243	145466	5869
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.087536	35059	2781
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.096061	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.059875	18339	5198
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.024287	4409	1132
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.051514	18728	2989
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	1.880474	1156	167	1.1.3.12	synth with cache (only 1: intros n m; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_correct	40	40.105878	39980	6227
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.565156	261	65	9.1.0	synth with cache (only 1: intros w1; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.068297	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.071865	27879	4035
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.113484	51602	2529
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.207675	97777	4485
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.069383	22544	4353
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.250438	62830	4636
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.017657	5267	1031
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.090790	30510	8029
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.347142	179	42	11	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.053056	17449	4372
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.064087	22700	5024
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	19.090943	10291	1837	1.0.27	synth with cache (only 1: intros P l; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.125708	52462	4339
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.090913	33511	5929
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.068548	22572	7807
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	4.495423	1792	430	1.2.12	synth with cache (only 1: intros H'1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.102033	43302	5775
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.024249	6107	2908
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.119043	49134	6017
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	29.865228	24358	3441	0.0.2.30.0.0	synth with cache (only 1: intros; only 1: qc; only 1: Z.nzsimpl'; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.PI_ineq	40	40.031394	10510	2646
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.051289	19224	2502
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.242689	113244	2750
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.100776	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.022024	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.055244	18123	2888
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.034087	11272	2378
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.737705	420	61	0.10.3.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.111414	45263	4933
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.062686	20025	8006
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.054220	18731	3114
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.056568	21101	1734
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.090432	37742	2626
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.083586	28926	4559
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.098801	10436	2373
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.372146	59	25	0.0.4.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.074659	28509	3820
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.188560	57575	3272
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.117264	32	16	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.088540	34560	3739
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.096126	30011	2164
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.347699	168970	3624
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.108298	44456	3914
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.055798	12359	7400
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.142095	69020	2308
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.101725	35213	8482
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.051036	15719	4404
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.024143	8021	1269
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.349112	1402	286	5.0.0.0.0.0.0.5.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.071421	26893	5121
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.056182	19753	4828
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.035512	8049	5005
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.027529	10202	1673
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.025196	5720	2819
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.102749	41424	5669
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.086472	32936	3662
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.182029	88242	1623
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.035302	9	3	4.0	synth with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.109098	45701	5168
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.177173	79419	5162
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.100298	41195	4234
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_one	40	40.094640	33715	6821
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.017696	4	3	0.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.172418	78101	4042
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.183325	82510	6639
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.061939	19440	7554
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.070732	27869	4121
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	1.443157	788	206	0.0.0.0.0.0.6.1	synth with cache (only 1: intros i s; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.018454	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.134823	56773	3291
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.067140	23266	288
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.022519	5	3	0.1.1	synth with cache (only 1: intuition; only 1: rewrite diff_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.039465	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.074017	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.053766	9757	1843
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.042788	15857	2318
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.155752	42906	4445
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.044683	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.029279	4	4	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.055518	21499	3787
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.067556	23594	5731
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.149373	64961	4491
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.139462	60967	4204
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.296815	145268	8615
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.157573	66241	7512
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.099649	37950	4776
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.183348	84449	6424
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.078683	31734	3183
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.153910	68687	4742
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.060078	22170	3129
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.057507	22640	4845
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.073059	28565	3273
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.038192	8499	5520
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.038944	12347	4009
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.086823	31861	6402
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.073515	23298	5188
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.085549	35786	4266
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.pr_nu	40	7.127055	6275	884	0.0.6.2.3.16	synth with cache (only 1: intros k f1 f2 pol; only 1: destruct pol; only 1: unfold derive_pt; only 1: apply derive_pt_eq_0; only 1: simpl in *; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	6.878184	19464	445	1.0.2.47.3.17.102	synth with cache (only 1: split; only 1: intuition; only 1: auto; only 1: intro q; only 1: intros l'; only 1: intros Ha Hb H; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.063565	21556	5244
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.105548	41819	5297
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_le_trans	40	40.159754	68452	6485
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.042402	10	7	0.2.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.088010	32517	4215
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.034278	14673	733
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.086755	35104	5702
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.046769	15664	2158
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.047201	18646	2268
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.024634	5569	661
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.325169	151400	3106
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	2.089272	1274	313	0.0.0.0.0.0.13	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.042232	6407	1779
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.052945	17379	3723
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.069852	22094	6167
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.069243	24359	4703
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.083031	30986	4254
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.178662	71084	2756
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.102097	39842	6782
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	6.505532	764	274	6.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	5.416910	1327	489	0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.136433	57920	5677
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.106016	45373	4081
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.119734	47550	5383
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.162183	25	11	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.348621	66	30	1.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.072019	25307	6197
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.146823	64652	4966
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.064701	27338	3235
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.110562	45365	5260
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.108666	41	16	0.0.0.1	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	13.839144	7137	1294	0.2.1.2.15	synth with cache (only 1: intros l x e r; only 1: simpl; only 1: intros sorted belong1; only 1: inversion_clear 1; only 1: constructor 1).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.079600	32457	3515
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	40.081089	29289	6419
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.046192	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.024533	6087	3539
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	12.482397	17592	2003	12.0.0.0.0.0.0.12.1.17	synth with cache (only 1: intro x; only 1: destr_bool; only 1: CRelationClasses.simpl_crelation; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.096607	35398	7516
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.074422	26855	5318
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_trans	40	1.653588	1203	360	5.0.2.0.0.0.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: eapply Qle_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: apply Qle_refl).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.121731	53473	3900
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_not_le	40	2.266873	1832	310	2.0.13.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intro l; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.126657	54291	4650
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.179040	79216	6679
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_alt	40	40.155998	68998	4979
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.115657	126	18	15	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.061834	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_lb	40	40.066759	23216	6788
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.075739	29176	4951
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.394637	189466	5063
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.035454	13706	1365
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.080486	34141	2743
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.027298	6669	677
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.134572	54228	5612
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.079956	77	7	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.141795	61809	4631
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.073807	41	12	0.0.2.0.2	synth with cache (only 1: intros ->; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.056965	22538	2282
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.078678	26531	7008
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.866796	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.170863	71792	6799
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.041116	14561	3698
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.062464	22711	4388
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	40.059960	19795	5856
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.089660	34345	5381
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.123416	49900	6620
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.137645	60314	3340
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.177971	87635	1320
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.049905	15951	4425
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.115916	43585	5932
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.082538	32947	4820
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.441752	186	57	7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.080391	28954	5807
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	2.414666	1313	305	8.1.0.2.0.0.2	synth with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.054211	20129	4162
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.037124	12692	3009
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.133794	56234	7151
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.119977	51697	6749
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.116706	48179	5513
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.166587	74701	5191
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.121446	49624	6351
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.089223	37704	3700
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.789992	3277	455	12.4.0.6	synth with cache (only 1: intros x x'; only 1: unfold Empty; only 1: destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_ub	40	40.114347	46829	6885
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.056758	18541	4879
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.NilZero.sis	40	40.060712	19253	6048
coq-tactician-stdlib.8.16.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.377835	187847	7713
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.028802	5853	828
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.125472	52023	6320
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.072234	25107	2146
coq-tactician-stdlib.8.16.dev	Coq.Logic.Epsilon.iota_statement	40	40.235304	109682	7731
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.104203	38599	5016
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.062519	20042	2702
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.037014	8502	3980
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.015614	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.008131	2998	345
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.088774	31316	5961
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.047117	13904	3858
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.045769	13342	2390
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.942792	7071	1333
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.051228	10624	2815
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.068678	20481	3620
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.065061	24085	4242
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalChoice.choice	40	40.152985	67801	7315
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.094705	34197	6728
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.087212	33936	5212
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.972245	561	149	0.0.10	synth with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.082605	32653	3663
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.097207	40752	4292
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.097044	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.034572	10765	2879
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.074913	26105	4212
coq-tactician-stdlib.8.16.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.074806	29895	3823
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.078524	27719	5640
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.073811	27783	5160
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_trans	40	40.116002	45300	6388
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.148402	42641	3204
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.043135	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.093361	32651	4431
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.138428	63519	5951
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.127276	18571	3905
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.056786	21606	4474
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.146746	66905	5975
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.089942	36755	4187
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.060744	13715	5551
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.086273	25337	4905
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_lt	40	40.138475	21875	2558
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.039248	6739	3171
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	3.104577	531	443	0.0.0.0.0.0.1.1	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.005388	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003896	911	346
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.100209	41003	6550
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	18.707382	9361	2128	4.0.10.0.0.1.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: apply Qmult_le_r).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.050240	14882	7610
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.132504	55066	4419
coq-tactician-stdlib.8.16.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.107812	46974	5040
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.069491	27563	4531
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.075802	27943	4421
coq-tactician-stdlib.8.16.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.102574	23752	4340
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.089049	35418	5499
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.057179	18193	1999
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.136493	54478	6177
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.073802	28528	4534
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.082410	29342	5322
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.030916	8272	3574
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.089581	17980	2905
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.151286	66042	5271
coq-tactician-stdlib.8.16.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.125292	30469	2019
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.343645	167620	4610
coq-tactician-stdlib.8.16.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.019336	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.022683	9	4	2.2.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.118678	49114	4948
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.090670	39996	3652
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.122474	51496	5414
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.081856	33003	3967
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.626269	273	62	0.0.0.1.8	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.009190	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.104151	8	1	7	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.011115	3	2	1.0	synth with cache (only 1: unfold Zlength; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.081807	15	4	4	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.087779	36433	5211
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.092276	35877	5205
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.193223	91045	8606
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.104213	39806	4709
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.033158	6187	5036
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.420477	25241	3178
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.029955	10611	2274
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005614	2133	214
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.102314	43299	4543
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.067194	22311	4561
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.259856	80	37	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.049073	11389	2268
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.058412	9	8	1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcpower_0	40	1.934644	1430	316	1.0.0.0.0.2.1.10	synth with cache (only 1: intros n; only 1: Nat.cases n; only 1: intro H; only 1: qc; only 1: now elim H; only 1: simpl; only 1: intros n IH; only 1: auto with qarith).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.078038	26057	2944
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.063804	25491	2937
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.098900	38191	5932
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.043557	7	4	3.0.0.0	synth with cache (only 1: intros z Base Step; only 1: rewrite eq_option_alt; only 1: intro e; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.124660	53624	7231
coq-tactician-stdlib.8.16.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.095559	38986	5595
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_refl	40	40.162914	72325	6124
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	40.092937	37208	4774
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.114948	46196	3822
coq-tactician-stdlib.8.16.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.122180	50714	6479
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.008272	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.007259	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.083166	26432	3319
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.138578	58837	5547
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.107473	43898	5659
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.129297	57919	3842
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.128627	54883	6858
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.442251	67	24	3.0.0.5	synth with cache (only 1: split; only 1: intro; only 1: intuition_in; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.061119	26	6	4	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.015898	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.076483	30065	4562
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.100718	41423	5827
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.114863	47695	5350
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.not_prime_1	40	40.087764	39310	2758
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.050219	19541	2917
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.034227	9260	3754
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.287860	131597	9629
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.060841	18643	6273
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.294812	142323	2170
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	34.277967	812	158	2.0.2.2.2.2.3	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.812834	2255	613	0.3.0.1.0.7	synth with cache (only 1: intros z n H; only 1: apply Z.ge_le; only 1: rewrite ?eval_pol_sub; only 1: rewrite <- !eval_pol_norm; only 1: Z.nzsimpl; only 1: now destruct Hn || easy).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.034910	8032	4707
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.076087	30476	4155
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.088158	37690	3271
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.060513	41	12	1.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.214492	20920	2605
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.104219	43113	3751
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.118781	49596	5595
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.077371	28417	6101
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.154301	65964	4936
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.133155	57378	4218
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.075492	27774	5207
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.096186	39944	4522
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_sym	40	40.104132	39992	5037
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.035104	13103	1128
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.087677	30194	5482
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	2.094136	1769	141	15.18	synth with cache (only 1: intros m Hm IHm; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.141119	60375	6721
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	0.238426	171	19	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_spec	40	40.134615	55681	4105
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.054110	15534	7361
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.055991	18041	4553
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.148020	59545	7858
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_refl	40	1.199327	571	120	0.12.2	synth with cache (only 1: destruct x; only 1: apply Nat.eqb_eq; only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.090907	31432	8662
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.080442	30244	4561
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	40.091415	36701	4354
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.108104	45612	3359
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.600289	200	58	0.0.3.6	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.295926	48	16	5	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.664760	389	97	0.8.1	synth with cache (only 1: intro n; only 1: Z.nzsimpl; only 1: Z.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.084334	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.064765	19125	4708
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.788330	2517	470	2.19	synth with cache (only 1: intros n m; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.258007	64	28	2.0.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.088345	31885	6886
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.578934	369	64	1.0.8.4	synth with cache (only 1: intros l; only 1: intuition; only 1: intros z Hin; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	28.406745	118258	2491	54.103	synth with cache (only 1: intro q; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.025788	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.103522	41821	5122
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.334626	2774	352	11.15	synth with cache (only 1: intro LS'; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.033744	11863	1361
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.094282	38241	3500
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.094899	41129	2418
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.061064	25012	2684
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007241	2640	140
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.111506	43839	4992
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.022269	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.895383	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.036051	7886	5112
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.126862	57894	3321
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.042910	13897	3111
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.086495	34791	1806
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.065885	13959	3136
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.755248	401	91	11.2	synth with cache (only 1: intros m; only 1: now destruct m).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.063355	20139	4473
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.050818	14221	5539
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.118341	51201	4366
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	5.654079	3143	680	1.0.1.1.2.6.2.2	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct p; only 1: reflexivity; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.find_left_path	40	40.146350	66906	6373
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_eq	40	40.057317	16671	7407
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nless_def_2	40	3.766262	1844	710	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.162738	68662	4465
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.129311	54386	3856
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	25.269217	43885	3412	0.0.2.2.0.22.0.5.13	synth with cache (only 1: intro l; only 1: intros l' H; only 1: unfold Subset, Empty, impl; only 1: intros n m IH H1; only 1: do 2 rewrite inter_iff; only 1: intros (EQ, LE); only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.069424	17403	1222
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.046660	15867	3014
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.066575	23310	3789
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.101224	38196	9412
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_eq	40	40.095202	21810	5444
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_neq	40	0.023736	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.135686	55922	6558
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_compat	40	0.022804	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	2.829267	3828	132	57.4	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.079311	29865	4721
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.023350	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.177762	26381	1967
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.091641	32650	7247
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.111584	43146	6714
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.140755	63347	3330
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.047565	11872	6598
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.066041	22719	5444
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.130321	57952	3192
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_le_2	40	7.485323	11278	1207	0.0.0.3.0.9.21	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.085780	34638	4145
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.236802	109773	6533
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	35.723274	44364	1652	0.0.5.123	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	1.319203	380	161	3.0.0.0.5.0.0.0	synth with cache (only 1: Nat.induct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros [| i]; only 1: auto; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.094779	38830	3722
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	3.943780	2731	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003242	831	165
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.031282	6764	5268
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.046890	11728	1984
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.211467	11543	1352
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_minus	40	40.051371	15476	4730
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.083033	28774	5193
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	7.451604	4518	500	18.14.1	synth with cache (only 1: intros x; only 1: intros Base Step n; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.138402	56869	6161
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.272076	117145	4950
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.index_correct1	40	40.102277	37853	7337
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N0_less_2	40	40.104924	42292	6941
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.056876	19945	3417
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.127903	51648	5599
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.163008	72936	5139
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.067651	23979	3950
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	40.035707	8432	574
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.072288	24803	6378
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.137750	60591	5784
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.059197	23503	2266
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.043757	4051	674
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.177839	84203	4122
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.107069	29	10	0.0.0.4	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.067997	26326	1879
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.125641	53108	5813
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.152477	26256	3408
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.093478	38687	3896
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.115711	48675	3929
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.046628	14340	3350
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.070927	26941	3767
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.118836	49090	4361
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.092990	37752	4198
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.567739	74	32	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.094905	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.015757	4	3	1.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.141074	59610	4582
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.134758	58470	4180
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002610	922	101
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.436551	221428	9116
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.094990	34064	4802
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.071850	20947	3022
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.058208	18430	5996
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	6.385623	10080	1162	15.22	synth with cache (only 1: intros a Ha; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.014709	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.081097	20661	5912
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.byte_dec_bl	40	40.046928	11160	676
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.index_correct4	40	40.115737	44971	8319
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.141938	63116	6015
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.049056	15321	2507
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.191633	86179	7078
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.092070	36174	5358
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zabs.Zabs_dec	40	40.127960	34137	5029
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.106599	45120	4194
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.133474	55201	2455
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.177694	61903	6157
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.194762	89422	4096
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.081696	31435	5151
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.103020	30012	1715
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.055213	25813	441
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.142112	63292	4560
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.029970	9078	3455
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.441122	210157	2965
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	2.699047	2235	351	3.0.3.0.9.3.1.2	synth with cache (only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: generalize (Z.compare_eq n m); only 1: intro H; only 1: destruct (n ?= m); only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.051863	17833	3832
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.070458	28092	3669
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	4.152479	4627	147	63.6	synth with cache (only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.084928	32231	4076
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.062875	23668	3580
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.067234	21824	8817
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.133108	53053	5326
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.033518	7840	4059
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.163762	71888	4565
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.155038	70757	5118
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001009	153	78
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.041427	15075	3308
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.058287	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.083331	32271	4923
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_0_1	40	0.040079	13	5	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.125004	52589	5497
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.087161	33101	4473
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.112010	43842	5001
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_plus_1	40	4.546749	1554	715	3.9	synth with cache (only 1: intros p; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	34.813445	30275	4810	0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0.0.0.0.0.9.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: simpl; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.S_INR	40	1.097777	293	74	0.3.1.3.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	22.438773	10251	2584	1.6.0.0.0.1.1.1.8.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.315361	151042	1960
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.331560	25	12	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	1.967058	8358	243	4.4.0.0.33.72	synth with cache (only 1: compute; only 1: elim s; only 1: reflexivity; only 1: intros; only 1: f_equal; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.078135	29618	4995
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	2.023679	736	236	0.0.0.4.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.069920	24197	4595
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.007697	2	1	1	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.138565	52449	6394
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.215779	60	19	2.5	synth with cache (only 1: unfold Z.le, Z.max; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.025104	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.030280	7561	467
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.041520	10710	3732
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.028329	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.094673	34163	6946
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.016493	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.118568	48184	5453
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.142769	60436	4572
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.052448	16154	2198
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.011776	1	1	0	synth with cache (only 1: apply Zle_is_le_bool).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.061173	24651	686
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.593391	3448	361	0.0.0.6.33	synth with cache (only 1: intros n; only 1: destruct n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	0.251648	43	17	0.0.0.0.0.4	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.129145	53644	6692
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.139197	55122	4782
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.331427	163169	5013
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.082114	33808	4156
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.031863	9755	1415
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.149930	46954	3829
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.120801	51719	2375
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.948503	239	50	2.0.3.8	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.044797	12996	1385
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.074355	23061	5300
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.023241	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.113953	52253	1687
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	22.308019	18642	3041	3.19.6.3	synth with cache (only 1: intros f Hf; only 1: intros a n H; only 1: intro l; only 1: eauto with set).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.101598	39460	3980
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.050833	21201	1635
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zegal_left	40	40.087476	20022	3035
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zle_left	40	0.008879	2	1	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.009730	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.009690	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.016160	11	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.024286	8537	1474
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.552103	26	9	7	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000638	61	28
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.057083	17277	5232
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.146043	64552	5210
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.043813	13170	3845
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.plus_INR	40	40.024990	7809	2219
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.123072	48856	6910
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.551114	279049	2067
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.066411	22559	3759
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.050456	15389	5385
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.not_Zne	40	40.150976	67220	3455
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.148222	63735	2375
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.162065	68935	4940
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.180318	78953	5863
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.156831	68257	5474
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zone_pos	40	0.776364	544	53	24	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.111872	4447	2294
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.724380	262	65	3.1.7	synth with cache (only 1: intros; only 1: unfold Z.geb, Z.leb; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.797468	333	86	0.0.0.9.1	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	2.974111	490	324	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.029379	8557	2273
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N	40	40.064480	27328	2373
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.093124	39883	3087
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.074027	25333	5518
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.243723	93823	4325
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	7.944968	6030	1528	0.0.0.20.0	synth with cache (only 1: unfold Z.gtb, Z.gt; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.023521	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.085669	33181	4972
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.060953	24853	1449
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	1.558174	1034	237	0.0.3.0.6.0.1	synth with cache (only 1: unfold Zeq_bool; only 1: intro H1; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	5.960601	12444	697	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.48	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.089080	36330	2999
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	25.368343	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	2.581824	6060	544	39	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.083764	33064	4902
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.083048	32800	3698
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.010227	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N_nat_Z	40	40.143159	52147	4420
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.032599	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.positive_N_nat	40	0.010281	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.147828	51363	5188
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.073426	26270	5746
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zge_left	40	0.135755	60	11	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.030472	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.089380	36204	3846
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.052558	10165	2059
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.169356	75525	4861
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.108039	46879	4608
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.169504	73022	9955
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.197724	89223	5442
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.minus_INR	40	40.091739	38160	4127
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.130829	53427	5407
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.096812	35424	6266
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.050053	21477	1111
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.099802	37535	5229
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.758230	262	95	0.0.0.0.0.0.0.0.0.0.3.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.107609	43279	4976
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zge_trans	40	0.043830	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.035647	9	3	1.1	synth with cache (only 1: red; only 1: Nat.order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.005230	3	1	2	synth with cache (only 1: exact Nat.le_trans).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.104290	42633	3716
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.063039	21030	4020
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.767272	792	119	19.4	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.027633	8885	2405
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.044708	11904	5143
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.072798	27434	3367
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.039179	9736	807
coq-tactician-stdlib.8.16.dev	Coq.micromega.Env.S.nth_jump	40	0.509008	391	57	4.4.3.9	synth with cache (only 1: destruct p; only 1: easy'; only 1: now destruct p; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Env.S.nth_pred_double	40	0.020934	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.127686	56651	7763
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z_nat_N	40	28.294239	19561	2119	0.0.0.1.0.0.0.0.2.2.0.0.19.3.7	synth with cache (only 1: bitwise as m; only 1: f_equal; only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: N.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.111259	45779	4716
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.168800	58515	1469
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.099935	26511	1342
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj	40	2.689548	2951	356	1.0.0.1.0.1.0.0.15	synth with cache (only 1: destruct n, m; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007335	8	1	7	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.257762	125410	6006
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.115609	45336	5442
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.000906	147	43
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	2.191051	260	146	1.10	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	40.148657	44729	3754
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.033968	10353	1454
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_dec	40	1.385496	1030	228	1.0.0.7.1.1.0.0.7.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.100191	42366	3903
coq-tactician-stdlib.8.16.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	3.989793	9826	530	23.21.54	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: destruct y; only 1: now destruct x).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.059881	16	9	2.3	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.041852	7	4	0.1.2.0	synth with cache (only 1: do 2 red; only 1: induction l; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.057140	14	5	4.0	synth with cache (only 1: intro; only 1: simpl_relation).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.087357	33289	6863
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.091283	30603	2976
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.063818	17451	7765
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.008353	5	1	4	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.011858	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.129047	56805	3015
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.261566	18230	3457
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.282699	113262	2533
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.092420	35706	4818
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.025091	4	2	1.1	synth with cache (only 1: repeat intro; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.171990	82439	5258
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.123536	49460	6288
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	6.243778	7663	1241	4.1.22.0	synth with cache (only 1: intros A ? x y z H H0 H1; only 1: rewrite H1 in H; only 1: assert (x == y) by (transitivity z; eauto); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.mult_INR	40	40.053395	17786	3897
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	40.148478	63942	4074
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.064413	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.077526	29559	3666
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.086729	33978	6016
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.114852	49055	4883
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.135406	59111	9074
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.026282	7108	2822
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.image_empty	40	2.783382	2285	545	2.1.2.1.3.0.3.1	synth with cache (only 1: intro H'5; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: destruct 1; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.045513	14793	4295
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	14.491407	12769	1855	37.2	synth with cache (only 1: intros; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.097743	40290	3856
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	11.740013	8123	888	2.0.0.30.1.2	synth with cache (only 1: intros LT; only 1: intros H; only 1: destruct 1; only 1: compute in H0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.169888	65156	885
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.361785	244	60	3.2.5.2	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.530150	2297	245	11.0.0.3.2.1.1.26	synth with cache (only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: easy; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.084651	32229	5628
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.082910	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.047856	7	5	1.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.104992	45983	5888
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.251591	108493	4372
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.129676	50875	7801
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.308393	144990	3700
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.048502	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.029776	8882	1796
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.095466	36118	3503
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.264830	111942	2582
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000739	120	29
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.121851	43024	5225
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.053560	5	3	0.2.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.102343	41146	7688
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.058871	22937	3031
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.087281	29614	7351
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	20.814133	14736	4419	3.8.0.10	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA8	40	40.113499	50505	3115
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.973147	262	57	8.0.1	synth with cache (only 1: repeat red; only 1: intros f g l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.100716	41354	6638
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.192982	42003	1974
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.397038	10797	2319
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.005853	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006107	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007016	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.003921	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004636	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005647	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	3.498141	3409	580	0.3.5.14	synth with cache (only 1: intros x H; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.098481	40541	4110
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.663004	1452	439	0.0.0.0.0.2.6.1.0.0.2	synth with cache (only 1: induction 1; only 1: easy; only 1: intuition; only 1: simpl; only 1: simpl in *; only 1: destruct H0; only 1: auto; only 1: auto; only 1: cbn; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.103406	41985	4955
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.lt_0_INR	40	40.077070	28064	4830
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	40.442221	217387	5180
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.110041	42605	5417
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.118099	54199	2393
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.031507	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008512	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.004907	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Znot_le_succ	40	0.386916	585	70	1.19	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.036287	4	2	1.1	synth with cache (only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.012894	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.099104	37717	3924
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.168320	73911	7631
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.103964	41391	2317
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_comp	40	40.092666	38330	4414
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.079422	8834	1167
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.045672	18019	2336
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.064813	28301	1776
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.094214	36226	6053
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.101650	42142	5486
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.164236	70719	5116
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.070501	23251	7587
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.070916	25026	5850
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorEq.CAST.cast	40	1.350806	700	211	13	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.021047	6157	2204
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.107346	45067	8769
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.053069	22294	2358
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001065	209	36
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.131901	19288	1829
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.070656	27634	3710
coq-tactician-stdlib.8.16.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.176818	77479	8730
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	40.100702	41322	4665
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.094039	41289	2095
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.054445	18234	4929
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.057186	20339	3729
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zle_compare	40	3.657472	4634	446	1.0.0.0.3.22	synth with cache (only 1: intros n Hn; only 1: case Z.compare_spec; only 1: unfold Z.le, Z.max; only 1: intuition; only 1: intuition; only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.523123	212	64	1.1.0.4.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: intro H1; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.035193	9165	1042
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.105980	31364	6533
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.131619	56062	4089
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.311933	149396	6829
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.078692	26617	6803
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.149568	66675	3017
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	3.043556	2831	494	0.1.1.15	synth with cache (only 1: intros a; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.007792	6	1	5	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.030687	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	35.959677	13401	1402	19.0.0.6.9.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: nzinduct p; only 1: now Z.nzsimpl; only 1: intro p; only 1: Z.nzsimpl; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.232498	113463	5454
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.133421	52699	7073
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.675722	1708	213	7.1.4.4.22	synth with cache (only 1: split; only 1: repeat red; only 1: intros n m p q H1 H2; only 1: now f_equiv; only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.508393	711	199	0.10.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.314221	105	22	0.0.0.11	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.184064	112	20	5.4	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.010606	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	5.054322	3102	655	0.0.0.0.0.0.0.10.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: dintuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	2.869254	712	152	19	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.574360	512	38	14.13	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.046158	13454	4934
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.025400	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.120470	47757	8210
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.096750	37587	2882
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.065965	22762	2538
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.078248	26573	5889
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.033016	11292	1341
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.150977	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.049064	17170	1955
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.085702	3966	591
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.137906	57219	5169
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.007039	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.006751	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	7.946837	10639	706	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.163832	117	16	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.073755	30899	3259
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.114310	43530	7876
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.004525	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	7.296568	4432	1360	1.2.0.0.1.0.1.1.0.6	synth with cache (only 1: induction l; only 1: intros l'; only 1: intros H H0 H1; only 1: constructor; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.le_INR	40	20.252143	11236	2671	4.0.18.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: destruct n; only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.014096	3064	1971
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	7.514246	2362	309	3.3.1.9.2.14	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	14.186877	19668	2331	21.3.18	synth with cache (only 1: intros l; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.216782	99155	10111
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.195932	79290	3624
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	8.115614	11073	1253	0.0.2.2.25.0.0.0.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.146104	27863	4111
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.265787	97161	3893
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.070145	29338	3064
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003873	389	48
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_not_0	40	7.962028	3968	840	1.1.3.7.0.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction n; only 1: intro; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	10.651100	9943	1750	2.5.0.18.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hy; only 1: rewrite Hx; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	8.190181	4187	243	5.1.0.0.1.37	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.073383	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.051876	20875	2824
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA16	40	40.084030	35583	2173
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.046735	13969	3329
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.019150	6	2	3.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.032951	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.022225	3	2	1.0	synth with cache (only 1: unfold elements; only 1: constructors).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.051851	14861	3598
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.077876	18066	1963
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.014488	5	2	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.114701	43123	5583
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.175622	99	23	3.1.3	synth with cache (only 1: intros m H; only 1: inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.192241	442	228	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.145793	62909	6622
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.137003	13045	2118
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.062797	16025	2323
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.025090	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.050423	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.009957	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.141062	54243	7513
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.063831	22036	3796
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.133139	41651	5842
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.059009	19105	3384
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.051449	10	4	0.1.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.044578	13315	4142
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.120571	50991	6132
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.103982	44160	3875
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.133308	47912	303
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	0.904996	890	85	17.17	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	19.413236	8032	1435	4.0.2.0.0.0.15.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: trivial; only 1: induction l; only 1: simpl; only 1: constructor; only 1: constructor; only 1: cbn; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.040406	12102	3267
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.116074	44401	6850
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	5.972141	1531	845	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.075344	27472	6404
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.028868	9778	1257
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.040719	15500	1300
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.066229	24384	5000
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.102002	36052	6739
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.125774	42008	4319
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.272411	146	38	0.0.0.2.1.3.1	synth with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.111825	25533	5453
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.227848	104723	3600
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.158636	71965	3195
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.007839	514	82
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_eq	40	40.070497	26483	5413
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.158909	65758	7222
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.opp_succ	40	11.628408	14472	2808	0.0.1.0.1.0.6.0.0.0.0.8.3.3.0	synth with cache (only 1: apply opp_inj; only 1: apply opp_inj; only 1: apply opp_inj; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.012265	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	28.980237	28605	6613	1.0.0.0.22.0.3.0.3	synth with cache (only 1: destruct s; only 1: inversion_clear 1; only 1: now constructor; only 1: simpl; only 1: descolor; only 1: split; only 1: contradiction; only 1: contradiction; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.103240	40250	8530
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.212372	502	139	4.5.0.0.1.0	synth with cache (only 1: intros [| x acc]; only 1: intros; only 1: exfalso; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.027101	6511	1798
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.063122	12429	6559
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.039288	9556	1389
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.029508	8395	2321
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.055432	15	7	0.0.0.0.0.2	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.128248	34904	5776
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.194836	85222	5901
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.090884	24440	5843
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.018907	2	2	0.0	synth with cache (only 1: intros; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.061521	24845	2432
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.059018	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.024343	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.021424	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.189551	80662	6999
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	10.897629	11214	1620	4.0.4.0.0.0.33	synth with cache (only 1: destruct m; only 1: do 2 rewrite InA_alt; only 1: intros [x [? ?]]; only 1: firstorder; only 1: do 2 rewrite InA_alt; only 1: intros [x [? ?]]; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	28.229735	66244	3417	36.26.0.124	synth with cache (only 1: assert (forall s s', s = s' -> ~ L.lt s s'); only 1: Nat.order; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	5.354068	4871	743	0.0.8.1.7.0.14	synth with cache (only 1: intros H0; only 1: induction 1; only 1: left; only 1: destruct (split (A:=l)); only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.070338	29680	2463
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.057585	6607	2876
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.104238	41627	7775
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.079089	23637	4407
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.090906	31866	6354
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.106489	15765	872
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.054735	17871	5660
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.085548	33137	7530
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	17.676348	14867	1942	2.0.0.0.0.1.0.1.0.1.1.7.0.0.0.0.1.1.0.9	synth with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: Z.swap_greater; only 1: Z.order; only 1: discriminate; only 1: simpl; only 1: Z.swap_greater; only 1: destruct 1; only 1: intros H; only 1: Z.order'; only 1: easy || now destruct y; only 1: trivial; only 1: simpl; only 1: trivial; only 1: Z.swap_greater; only 1: now destruct 1 || intros _; only 1: simpl; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: easy || now destruct y).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.033096	11932	1553
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.064582	17406	4990
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.089527	35328	8765
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.056323	22476	1711
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.117379	39166	3310
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.id	40	0.036598	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.027232	2	2	0.0	synth with cache (only 1: simpl; only 1: now N.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.008225	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.084461	30613	5642
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	1.338581	718	160	0.12.0	synth with cache (only 1: intros Hn Hm; only 1: unfold N.ltb, N.lt; only 1: now rewrite <- N2Z.inj_compare, !id).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	2.377718	2856	392	6.18	synth with cache (only 1: intros H a l H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.076197	25206	4014
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.not_1_INR	40	40.036972	12753	3088
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000710	54	30
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.173990	71227	5978
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.max_r	40	40.101173	38487	8422
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.057109	16	5	6.0	synth with cache (only 1: unfold le, max; only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.663972	237	95	0.0.0.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.015612	7	3	0.4.0	synth with cache (only 1: intros; only 1: now rewrite Pos.sub_xI_xI || now rewrite Pos.sub_xO_xO || now rewrite Pos.sub_xO_xI || now rewrite Pos.sub_xI_xO || subst; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	1.033904	496	128	0.0.0.5.4.1.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: intro n; only 1: order; only 1: trivial; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.016277	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.016040	3	2	1.0	synth with cache (only 1: simpl; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.121707	46172	6940
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.id	40	0.023722	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.046568	8	6	0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.029078	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.033313	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.077324	30524	3380
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.050648	16612	4561
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.126685	55206	6872
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.043651	8490	1301
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.040690	13508	2610
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.088490	34310	7165
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.071494	13787	5094
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.082390	30732	6122
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	1.014710	494	129	0.4.6.0.0	synth with cache (only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.527362	771	220	1.9.1	synth with cache (only 1: red; only 1: intro eq_dep_eq; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.131630	44160	6605
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.175176	84226	2395
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.032726	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	1.873890	175	31	0.5	synth with cache (only 1: cbn; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.082709	31985	5743
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010547	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.081805	34157	3954
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.107344	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.076467	31225	5640
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.218253	102561	9694
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	1.428787	1166	201	8.12	synth with cache (only 1: intros s' i j heqij heqss'; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.035509	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.059206	18587	3116
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.003316	219	99	0.0.1.2.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.075156	24043	6811
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.184013	22402	1430
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.740589	128	73	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.380512	1204	201	0.0.0.0.0.0.0.1.13	synth with cache (only 1: intros f Hf; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.057745	19755	3685
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.119617	51774	2584
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.120704	29267	2505
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.010727	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.029455	9692	2163
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.031303	11224	1822
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.discr	40	16.690866	105296	2448	0.91.0.1.102	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: constructor; only 1: now exists n).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.012919	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.008058	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.162904	73107	4115
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.126974	40930	5281
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.067101	23036	3342
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.064922	26031	4124
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Finite_alt	40	40.190122	85635	6323
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_IPR	40	40.063847	23090	4174
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000702	57	32
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.210230	82844	8485
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.223454	57816	4138
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.094050	35581	6405
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.235900	55	30	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.069201	26414	4438
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.113940	46296	10910
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.369163	170447	7621
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.042830	11310	4719
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.091381	36283	6215
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.171025	73592	8468
coq-tactician-stdlib.8.16.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.115656	49640	7432
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.730271	4208	742	9.13	synth with cache (only 1: intro A; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.089910	35955	6287
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.588684	851	247	0.0.0.1.0.0.1.1.2	synth with cache (only 1: intros n m p; only 1: split; only 1: inversion 1; only 1: auto; only 1: subst; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.148896	13179	2131
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.032367	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.081759	32857	3913
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.114881	45139	7429
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.235202	31617	4233
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.074704	11	10	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.083727	17	11	0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.103399	38212	6251
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	1.550519	574	168	0.0.0.7.1	synth with cache (only 1: unfold eqk, eqke; only 1: intros s' s x **; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.188810	29425	2026
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.055351	18787	4923
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.164705	7922	1046
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.111252	39407	5243
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.065942	24186	4779
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.013849	9	2	2	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.014932	4461	1396
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.bi_induction	40	40.197515	88672	8621
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.023284	7589	1753
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.of_nat_ext	40	40.265379	125946	4710
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.091296	22171	5974
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.028090	6	4	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.134762	53005	4671
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.107939	43447	6245
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.164872	62794	5196
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Rtauto.with_env.compose0	40	14.579729	26522	3104	9.2.2.1.29	synth with cache (only 1: intro H; only 1: induction F; only 1: destr_bool; only 1: unfold push, map, contents, index; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.099012	39222	5535
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.mult_IZR	40	40.066925	25146	3979
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000791	83	35
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.202331	87140	5889
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.153091	14082	2673
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.043387	8	5	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.047689	15690	3393
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.079397	28714	7838
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.180207	78126	5692
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.147940	27475	8059
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.009213	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.040905	10116	5588
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.062543	18333	8363
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.139953	59998	10073
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.075313	8501	1612
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.110158	44737	6034
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.061607	19315	3885
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.566066	1179	193	2.0.13.7	synth with cache (only 1: firstorder  auto with crelations; only 1: inversion H; only 1: firstorder; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.103141	39483	4668
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Prop.NNPP	40	40.301032	151260	10979
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.009228	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.073277	25993	5481
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.098695	39310	5217
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.074520	26459	3472
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.099631	40654	3420
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.072463	27196	5411
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.125498	24700	6117
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.021746	7042	1544
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.125980	53334	6044
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.055191	31	14	0.0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.028154	10805	1243
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.225479	107866	4890
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.080675	27944	6464
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.009198	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.442290	97	55	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.711800	349467	2586
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.120210	50913	5330
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	40.188843	78839	4376
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	3.119295	1865	685	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.503084	493	134	0.1.1.1.3.0.5	synth with cache (only 1: destruct n; only 1: easy; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.517561	210	87	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.033048	13	3	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.279102	132450	6194
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.365106	174668	14414
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	1.395376	617	205	0.1.0.0.0.0.0.0.0.2.2	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.021562	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.succ_IZR	40	40.054848	17809	4475
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.213284	97090	5999
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.L_R	40	6.486569	8325	332	10.0.2.99	synth with cache (only 1: induction n; only 1: Nat.nzsimpl; only 1: assumption; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	10.310996	6534	584	30.1.2.0.17	synth with cache (only 1: simpl; only 1: unfold to_nat; only 1: simpl; only 1: f_equal; only 1: exact (inj_mul 2 p)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.183740	81641	3377
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.136911	26386	4899
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.240468	27739	3557
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.009680	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.107910	46104	2442
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.030300	10216	1288
coq-tactician-stdlib.8.16.dev	Coq.Arith.Euclid.eucl_dev	40	40.173992	69824	3866
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.156624	66312	5537
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.make_conj_impl	40	12.960686	8622	3119	2.0.2.6.0.0.0.0.0.0	synth with cache (only 1: intros A eval l; only 1: intro; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: cbn; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.106408	38477	6810
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.221780	99361	6743
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	40.046695	17401	2382
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.030381	8	5	1.0.1.0.1	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.052474	19291	3886
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	15.043748	19251	4061	1.30	synth with cache (only 1: intros; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.008033	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.008987	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.128421	58664	4723
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	33.856208	26008	5825	5.0.0.0.0.0.1.0.0.0.0.9.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.150105	64509	9296
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.569493	1787	723	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.067115	25043	5186
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.079981	31509	4691
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.103251	43768	6395
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.132446	53276	7509
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.084241	32858	4775
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.022727	8625	694
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.140264	42842	4396
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	40.128949	56211	5780
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.108227	42913	9564
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.009725	1	1	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.198971	40256	6166
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.091542	36341	5395
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.126730	54787	6307
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.104307	12219	4808
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Z_R_minus	40	40.067687	25156	4261
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.004204	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.379087	1319	112	4.4.9.25	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.123656	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.154896	67296	4218
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.108823	43627	6632
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.113078	41885	5276
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.088197	17499	6064
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	32.334720	33539	4839	19.0.8.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.041523	12326	4847
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	4.191957	2660	551	11.0.0.9.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.036581	9892	4250
coq-tactician-stdlib.8.16.dev	Coq.Arith.Euclid.quotient	40	40.069975	27446	4529
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.066124	25414	6004
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.make_conj_rapp	40	40.087370	32191	7256
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.090934	32594	6474
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.not_make_conj_cons	40	5.740950	1869	539	0.0.0.3.0.1.2.2	synth with cache (only 1: simpl; only 1: intros A eval l; only 1: intros n m; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	40.195189	88750	8906
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.056327	15390	3484
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.129886	7	4	2.1.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.050402	17680	3675
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.zerop	40	2.818548	3702	362	25.0.0.10	synth with cache (only 1: induction n; only 1: now left; only 1: right; only 1: Nat.auto').
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_refl	40	0.039139	41	8	6.2	synth with cache (only 1: red; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.235568	109350	6201
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.291706	176	51	0.5.4	synth with cache (only 1: intros l; only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.077939	31917	5212
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.070251	22907	6688
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.167651	74151	7843
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003514	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.096720	38277	6256
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.019831	5395	2557
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	8.421154	11805	1185	0.0.0.1.0.0.1.4.0.24.0.17.12	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: apply Nat.le_0_l; only 1: destruct m; only 1: right; only 1: apply Nat.lt_0_succ; only 1: elim (IHn m); only 1: intros H; only 1: left; only 1: now apply le_n_S; only 1: intros H; only 1: right; only 1: now apply Nat.succ_le_mono in H).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.172252	76773	5848
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.079050	29394	7283
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	0.930086	550	101	0.0.16	synth with cache (only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.105082	42074	8310
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.018330	6026	1496
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.161351	25594	4437
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.leb_le	40	40.070452	25421	8868
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.099683	28641	5150
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.067197	25914	3654
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.068735	28819	5393
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.eq_IZR	40	40.026628	7029	2826
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.039148	14846	1815
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.097778	34912	7248
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.150200	61749	4545
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.eqb_eq	40	40.084642	33618	7594
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.094640	29739	6662
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.113615	47	19	1.0.0.0.2	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.099755	37284	8430
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.029542	7416	4300
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	40.100985	38247	6537
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.031958	9684	1984
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.700314	278	56	11	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.184157	85466	8057
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.105556	25688	6748
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.destruct_list	40	19.211226	77955	2554	101.23.27	synth with cache (only 1: induction l as [| T l IHl]; only 1: RelationClasses.simpl_relation; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.162627	73672	6084
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.026761	4	4	0.0.0.0	synth with cache (only 1: intros P ? ? l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	14.712541	7330	1771	3.1.2.0.2.2.7	synth with cache (only 1: revert m; only 1: unfold Z.geb, Z.ge; only 1: Nat.cases ltac:(n); only 1: intro m; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.070332	18649	6155
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.121217	31814	5362
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.255507	192	27	2.0.10.0	synth with cache (only 1: constructor; only 1: intuition; only 1: inv; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.exists_le_S	40	11.134346	15268	1941	1.25.1.1.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: auto; only 1: apply le_n_S; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_trans	40	40.152595	66978	6090
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	0.511668	110	26	1.7.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: Z.order').
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.096270	32232	7632
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.071654	43	11	0.7.0	synth with cache (only 1: intros x y H; only 1: elim H; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.009560	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.036685	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.064126	23625	5179
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.123501	50748	6629
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.110887	45336	8482
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.008823	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.151277	66255	6719
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.le_dec	40	40.113647	43430	8347
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.064563	25541	3458
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.081920	31400	5496
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.092311	34880	7488
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.034092	13296	1535
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.074385	5280	2479
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.080617	28082	8784
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.043757	12248	1833
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.172265	25386	2680
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.067833	26250	4427
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.le_0_IZR	40	40.088618	36363	4912
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.163771	72089	6284
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.086960	31818	6535
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.gt_dec	40	10.253213	9129	1856	0.1.10.19	synth with cache (only 1: revert n m; only 1: intro m; only 1: intro H; only 1: apply le_dec).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.ge_dec	40	0.005400	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.085109	29004	9017
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.039167	13633	3035
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.097178	37518	6754
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	10.362485	3616	452	19.1.3.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.013350	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.005372	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	40.198752	93996	4476
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.145208	61930	6898
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.129456	56456	5660
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.297172	137017	4812
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	0.138253	39	15	0.2.0.1.1	synth with cache (only 1: destruct l as [| x xs]; only 1: intro m; only 1: discriminate; only 1: red; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.005112	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	5.093842	3434	1143	1.0.1.1.0.0.1.0.0.0.0.6	synth with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.043408	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.053558	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.194697	65800	3625
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.160097	39860	3875
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.102125	39534	4678
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.not_eq	40	14.982993	12562	2144	5.1.12.18	synth with cache (only 1: intuition; only 1: destruct (lt_eq_lt_dec n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.not_lt	40	0.007214	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.056416	15217	8254
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.057092	831	439	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.126764	7096	1627
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.between_in_int	40	40.180012	79505	10143
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.222466	112083	2508
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	4.821506	3410	643	0.2.0.9.6	synth with cache (only 1: intros E; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.in_int_between	40	2.472487	2082	417	0.0.5.9.0	synth with cache (only 1: intro k; only 1: induction 1; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.144037	32235	4696
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.127337	55329	6627
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.093644	35608	5143
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.app_eq_nil	40	15.049747	13090	3627	18.0.5.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now intros ->; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.app_length	40	0.761886	581	132	0.1.0.12.1	synth with cache (only 1: intros n m; only 1: induction n; only 1: split; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.in_eq	40	0.130145	69	18	5.3	synth with cache (only 1: intros ? ?; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.108070	42928	8903
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.in_cons	40	0.028192	12	5	0.0.3	synth with cache (only 1: intros l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.016287	4	3	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.063003	23017	4839
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	5.403963	2832	795	0.3.2.1.0.5.0.2	synth with cache (only 1: intros l; only 1: intros [y H]; only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros x a0 **; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: eauto with *).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	6.417893	2901	937	0.0.1.1.0.0.7.1.0.7	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.154845	66877	5379
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.013918	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Map.get_map	40	40.076605	27291	6116
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.017614	5284	1589
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	3.470498	17017	608	5.73	synth with cache (only 1: intros (b, Hb); only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.min_l	40	40.092623	33328	9084
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.099542	41143	4792
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.138460	57921	5895
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.067961	18205	3855
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_spec	40	0.178912	3	1	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.140773	61417	11069
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.IZR_ge	40	40.059285	22389	3696
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.258481	115863	5806
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.093337	39341	6761
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.180576	74679	8128
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.091549	21510	6868
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.161155	72487	6352
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.086559	27620	10469
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	40.313751	149613	6659
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_add	40	14.265841	7462	1747	0.1.0.0.1.0.2.0.15	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: unfold succ, add; only 1: split; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.078660	26517	6272
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.068340	20039	4445
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.146614	29040	4766
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	14.338307	10908	2705	2.0.0.3.5.1.7.6.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl; only 1: Nat.cases ltac:(n); only 1: trivial; only 1: induction n as [| n H]; only 1: simpl Pos.of_nat; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.010084	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.071144	23164	9370
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007420	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.008632	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.158090	65395	9391
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_double_add	40	5.173334	875	271	0.1.0.0.1.0.4.0.3	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: split; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.div2_double	40	0.021922	5	4	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.065603	17272	5835
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.106889	40759	7091
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.097621	39854	5161
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_lt_mono	40	5.648240	2543	411	10.4.2.0.5	synth with cache (only 1: cases m; only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m IH; only 1: now destruct n, m).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.191387	41	28	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.in_int_exists	40	40.159001	72200	5668
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.096068	27924	3059
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	1.591794	1155	107	25.7	synth with cache (only 1: intro; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	0.129613	20	7	1.1.0	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.107252	45201	7309
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.722617	105	50	2.0.3.0	synth with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: now Z.nzsimpl; only 1: now apply Z.mod_add).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	7.530369	3648	1313	0.0.7.6	synth with cache (only 1: intros x; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	1.563112	673	189	0.0.2.5.0.1	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros EQ; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.130449	51308	8814
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.056804	14419	4818
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.112895	12548	2708
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.069547	25019	7180
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	36.041286	19558	4138	17.0.7.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	3.375703	2658	551	0.6.3.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros H; only 1: now zero_or_not b; [ intros; subst | apply Z.mod_opp_l_z ]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.023712	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.071291	24371	5656
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012201	3376	1403
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.350216	172160	7347
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.100141	40124	5833
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.172738	76436	6272
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.169528	77699	10894
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.048779	15278	4343
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.092563	38472	4329
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.213511	42	20	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	8.995628	3398	1603	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.137332	42854	7104
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	2.844073	1732	543	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.114496	44537	7678
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.071902	24514	7128
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.uniquify_map	40	40.098709	38481	7007
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.091764	30444	11633
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	20.021824	7222	2007	0.0.0.0.4.3.3.2.0.2	synth with cache (only 1: intros l k e H H0; only 1: invlist InA; only 1: intuition; only 1: inversion H; only 1: subst; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.081125	30818	5712
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.253776	30	20	0.1.2.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.025975	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.051191	14994	4852
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.059701	18257	7666
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.123897	51923	7814
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.170237	39146	3809
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.leb_compare	40	40.068129	20982	11010
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.139228	52075	9083
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.093797	26033	7972
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pow_neg_r	40	40.116760	48065	5188
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.between_or_exists	40	40.117326	46087	7356
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.083750	32450	5213
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.216366	106924	2649
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.067537	22874	5748
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_In	40	40.116487	47352	10412
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.041480	11026	4666
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.094460	32903	6622
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.266723	65	40	0.2.0.0.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.087886	33717	5813
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.146917	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.128994	29	22	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.024973	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.084374	29708	7030
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.664596	223	78	0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.813956	141	86	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	31.489767	17115	5311	0.0.0.3.1.2.1.1.0.2.0.2	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_sym; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_left; only 1: apply munion_perm_left; only 1: apply munion_ass; only 1: apply meq_sym; only 1: apply meq_right; only 1: apply meq_left; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015267	4662	1491
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.map_2	40	40.108084	46761	5707
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.146202	31950	5255
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.052672	18537	1878
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.165847	74123	13230
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.050125	17595	3837
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.075878	26704	5652
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.double	40	0.404510	175	31	5.5	synth with cache (only 1: intros a; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.109854	25020	3552
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	16.149834	9085	1263	1.0.3.0.0.23.3.3.0	synth with cache (only 1: induction s1 as [| a s1 IHs1]; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.077805	24350	7278
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.size_log2	40	19.533427	16145	2954	21.0.0.0.5	synth with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.139520	27659	7190
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.070516	23539	9683
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.010913	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.062929	25822	1827
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.244489	23594	2600
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.048107	17046	4495
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.028304	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.047923	13836	5656
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.076153	26394	7027
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.131979	29929	5454
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.168575	32978	5533
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.125087	49045	8393
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.070731	24821	5622
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.075600	25704	8812
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	15.150338	9038	4089	0.0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	13.810862	9720	1513	0.2.14.0.16	synth with cache (only 1: intros Heq; only 1: intuition; only 1: inversion H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.nth_le	40	40.115773	44516	6651
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.064759	23568	5620
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.107902	40359	6051
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.min_l	40	7.730648	4371	2068	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.008130	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.010257	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.In_nth	40	40.167105	63582	7103
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.event_O	40	5.921116	31211	858	2.3.43.19.17	synth with cache (only 1: intros * []; only 1: Nat.le_elim H; only 1: now Nat.nzsimpl; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.035996	10035	4022
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.074279	25262	5712
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	6.477020	1317	627	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.109408	16	10	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.079475	25936	6207
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.048244	15578	3834
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.042051	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.045452	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.091337	38132	6090
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.029900	10651	674
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.083285	28744	7018
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.054008	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.174185	44386	3096
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.058566	14818	4389
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.338027	170803	18723
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.061113	18796	6582
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.024377	5013	2279
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.084024	30531	6800
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.082725	30791	5395
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.057901	15915	5864
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.size_gt	40	40.090864	25592	5197
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	11.206778	7183	2096	0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.062031	22064	5690
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	10.929250	3454	1817	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.068888	23106	4511
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.214445	97157	6214
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.105986	39388	6322
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.077959	25695	7307
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.091188	33295	6927
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.090525	34061	5220
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.935687	273	129	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.007709	6	1	5	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.006617	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.105020	40572	8351
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.095609	33215	8669
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.080239	23647	7812
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.062033	3694	1959	0.0.0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.242184	26	13	4.1.0	synth with cache (only 1: intros; only 1: pose proof (add_mul_mod_distr_l a b c 0) as E; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.055257	15269	7998
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.111706	44037	6798
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.086766	31438	6675
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_indep	40	40.104664	40687	8654
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.067355	22750	5493
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.058956	19688	3559
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.087787	29568	6224
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.096370	29997	7115
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.328629	35	18	4.2	synth with cache (only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.768136	216	119	1.3.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: auto'; only 1: order').
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.map2_2	40	40.078781	30594	6409
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.019137	5361	902
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	4.380060	5140	592	2.1.1.0.8.8.7.2	synth with cache (only 1: intros; only 1: generalize H; only 1: CRelationClasses.simpl_crelation; only 1: compute in H0; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.155691	64461	3828
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.226604	178	32	5.7.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.055721	15044	6124
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.072346	21648	8614
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.153911	71980	5101
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.812850	214	91	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.046738	13056	5760
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.246619	112972	13981
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.087995	22297	3286
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	5.208609	290	146	0.0.0.1.0.1.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.095892	24454	5095
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.log2_spec	40	40.083213	31130	5665
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.103112	36074	7082
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.102766	37167	7278
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.082109	33071	4758
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.660949	552	303	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.705503	278	64	10.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.075465	25868	4745
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.136766	9816	1723
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.077314	25859	5545
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.056666	16410	7067
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.117774	24294	6177
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.088008	35626	4130
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.090139	31483	8159
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.058054	2314	722	0.0.5.0.7	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.087077	30663	4512
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.107089	26651	7750
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.125759	49231	6158
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	26.809050	20344	4986	7.14.5	synth with cache (only 1: intros a b c Hb; only 1: apply pow_le_mono_r; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	2.595123	1802	601	1.4.2.1.2	synth with cache (only 1: intros n IH; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.174932	1055	370	2.0.0.2.0.0.3	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.069688	20399	8424
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.053448	16811	3918
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.092387	32101	9371
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_split	40	40.084252	28894	6446
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.080965	30572	3888
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.090867	31776	6042
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.310461	92009	5141
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.142813	58066	8781
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.080409	30385	6047
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.086236	28934	6169
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.050003	15346	5297
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.063234	20699	3062
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.040156	10953	4694
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013172	2890	1185
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.107510	41898	6366
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.087779	8828	1561
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.068371	22055	5607
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	3.443449	1086	419	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.042705	11450	5152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.148957	58924	8895
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.123527	54931	5772
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.102103	42670	2865
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	9.343540	5712	1104	0.2.6.18.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.027885	5898	1156
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.073057	21761	6382
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.100076	39615	5879
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.113916	29820	6120
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.115375	47882	6414
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.090039	27889	7908
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.025630	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.133493	51671	6461
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.027994	12	4	1.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.451482	527	242	0.3.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.105882	27540	8345
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	15.008257	12065	3008	1.0.8.4.0.8.1.1.1.0.0.0.0	synth with cache (only 1: intros n; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: now rewrite opp_nonneg_nonpos; only 1: destruct_max n; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: now apply divide_abs_l; only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: now apply divide_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.126540	46906	8587
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.065087	19271	8577
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.066372	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	23.457630	12014	2310	2.0.1.1.11.15	synth with cache (only 1: intros m IH; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: apply eq_true_iff_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.372544	563	277	2.3.2	synth with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.049373	17475	2961
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.463807	1906	915	0.0.0.1.0.0.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.100815	37167	5798
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.083827	28311	4287
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.063673	22720	6704
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.010948	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_error_None	40	40.159691	68463	8920
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.058590	21524	4029
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.058686	6502	3508
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.099793	36879	5003
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.013637	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	0.226769	362	36	0.0.17	synth with cache (only 1: intros (e, abs); only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.030510	21	4	6	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	17.180783	13771	2946	1.0.17.1.0.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.175723	79381	6618
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.045123	13189	3506
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.022607	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.153465	7	4	1.0.2.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.024802	6027	407
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.039617	11353	4088
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.191031	258	109	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.034420	8269	1522
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.131933	46653	9935
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.069440	21757	5200
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.176717	29	23	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.142015	58873	7374
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.mod_lt	40	40.111101	43419	6752
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.100937	36604	6441
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.072237	21333	5650
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	2.569829	688	341	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.056163	18625	3728
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.102390	37551	6563
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.107749	38647	5745
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.077668	24500	5849
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.047023	10802	3262
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.083922	26404	7028
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.256719	14	6	2	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	19.878066	6865	2597	6.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.094061	7	5	0.1.1.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.033106	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.097964	34341	6352
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.093147	20714	7617
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.inj_neq	40	40.204862	44428	6632
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.931720	293	126	0.0.0.0.1.0.0.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.003595	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.112214	6	1	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.015026	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.091355	27	5	6	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.006731	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.008936	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.057005	16609	5263
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.051357	15029	4518
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.062726	3354	1333
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.067022	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.065964	18843	7820
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.075635	26961	6007
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.039312	8931	2110
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.102766	33162	5273
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.098498	78	12	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.053378	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.125923	30361	8884
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	24.824275	10452	3306	1.0.0.1.1.1.5.13	synth with cache (only 1: intros n IH; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.397710	44	18	2.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.056708	22127	3735
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.279011	38	16	1.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.062156	18330	3870
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	10.931951	11755	2246	14.6.8	synth with cache (only 1: intro m; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.849112	1323	140	0.0.0.0.0.0.0.0.19.1.0	synth with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.088678	33139	5443
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.126746	53474	6718
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.063161	17163	5996
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	7.774375	2898	735	1.9.8	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.028511	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	40.129863	13251	4440
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.028864	8880	1259
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.066171	18593	942
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.030972	7342	3476
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.047623	5	5	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.072860	24542	6164
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.032695	8358	3436
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.053260	15848	4354
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.118613	13	10	1.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.064992	18012	6608
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.138735	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.071913	20832	6277
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.040928	10260	3909
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.914284	644	311	0.0.2.4.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.425593	46	26	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.094442	512	106	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.089656	33257	5296
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	1.653662	968	182	0.0.0.8.0.3	synth with cache (only 1: intros a; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.053502	18231	3848
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.084873	23951	8342
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.093636	31568	7672
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.069592	19690	7417
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.inj_minus2	40	40.224851	40679	5177
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.067644	23163	3563
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.110189	42366	6327
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.009006	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.031715	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.013629	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.034784	8	2	3.3	synth with cache (only 1: unfold Pos.le; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.016843	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.009105	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.008548	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.057870	18583	4031
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.079247	23341	9941
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.064828	16622	5577
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.063603	10837	2797
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.065494	21119	4771
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.094127	31139	8646
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.131507	34490	6133
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.050693	17533	3407
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.077995	25634	6444
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.170268	75062	7313
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.065953	21192	5608
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.134223	46893	5649
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.063325	17920	6192
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.039302	11292	2806
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.044364	11936	1326
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.071335	26275	5538
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.066990	17182	3965
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.066220	19963	5444
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.257868	115171	9244
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.303919	141270	3925
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.063380	18392	5693
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.070084	21678	5663
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.058852	19032	4382
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.063097	16949	4881
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.399125	79	31	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.700265	1040	385	0.0.0.4.5	synth with cache (only 1: intros n m p Hp; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: now f_equiv; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.068186	19988	6161
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.082474	28752	6222
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.055727	14399	4054
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.549158	476	189	3.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.236406	27	12	0.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.081177	28109	6015
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.199297	73639	8520
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.012214	2	2	0.0	synth with cache (only 1: revert P a f; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.777232	436	111	0.2.1.3.3.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.075454	25389	4392
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.099060	37621	5450
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.149409	65397	3483
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.153151	58099	6199
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.083917	34968	2659
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.048156	12711	4651
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.085449	20863	3662
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	40.088165	31184	4677
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	11.444252	7776	1826	2.13.0.3.1.0.7	synth with cache (only 1: intro l; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros n m; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.082359	27576	6900
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.remove_In	40	40.097686	35920	6491
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	11.907073	4818	1810	4.11.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.034010	10993	1782
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	1.359633	907	209	0.0.0.0.5.4	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.116925	15	9	0.0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.094903	33960	5824
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.134641	56019	3369
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.088666	30269	5535
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.117873	49269	6708
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.074547	24277	3542
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.072751	23577	5781
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.079360	8	4	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.065898	20048	5541
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.173015	71756	4695
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.081197	24501	8388
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.115624	45405	5433
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.120961	46310	7724
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.095497	33395	5552
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.018368	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	4.588954	1808	698	1.0.0.6.1.0.0.5.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.070630	22883	5534
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.028689	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.078586	27316	3185
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.391954	284	74	2.2.0.3	synth with cache (only 1: intros x x0; only 1: firstorder; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.063819	38	10	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.050967	14386	5849
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.064345	23356	4064
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	4.026519	1545	444	0.0.0.0.5.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.030967	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	6.365426	2182	934	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	24.715780	13460	4577	0.3.9.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.075489	23991	5760
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.063442	19370	5024
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.067258	22106	6204
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.088040	20218	6205
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.127554	51169	6071
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	2.072772	1602	402	4.0.11	synth with cache (only 1: intro a; only 1: unfold lcm; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.190513	80566	3318
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.009970	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	1.412907	723	206	0.0.0.1.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.069179	22873	4629
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.058152	22221	1601
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.098526	35424	6237
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.052774	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.048346	14649	2914
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.242561	108566	6029
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.008899	3	2	1.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	4.607081	2106	914	2.0.0.0.0.0.1.1.0.0.1.1.1.0.1.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.139343	51142	7205
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.150960	60062	6073
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.064329	23282	3645
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.093425	29976	5253
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.507090	1806	821	2.1.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.011551	2	2	0.0	synth with cache (only 1: autorewrite with order; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negbFE	40	0.005854	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.contraT	40	0.085481	41	9	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.contraFT	40	0.181386	51	8	1.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.007006	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.074907	21367	7009
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.011484	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.005476	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.010438	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.010371	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	40.076290	23345	8560
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.030437	8086	2374
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.101455	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.157891	64894	7538
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	3.829549	1836	717	0.0.0.4.1.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.064535	18177	5144
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.604182	1861	208	23.0.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.065351	20722	5209
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	0.795162	518	84	2.23	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	2.367888	1139	209	12.0.1.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.092348	33876	2909
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.021800	6682	1410
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.120917	43994	7083
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.061411	20732	3728
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.066887	20411	4387
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.198438	77203	9998
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.061406	20086	4250
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.059377	687	410	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	22.386138	7568	1975	0.0.0.0.0.2.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.057697	18885	3721
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.083227	26180	5656
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.119812	43967	11665
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.047050	11702	5001
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.082558	25188	5377
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.045346	11106	4514
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.070755	20146	6543
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.051465	17451	3615
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.078949	27282	4244
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.088950	32095	4935
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.059306	16820	4445
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.073046	24731	4376
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	39.245235	9727	1508	0.0.0.18.16	synth with cache (only 1: intros H x y Hxy; only 1: rewrite Hxy; only 1: red; only 1: intros h1 h2; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.064830	19317	7299
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.078693	26430	4108
coq-tactician-stdlib.8.16.dev	Coq.Setoids.Setoid.gen_st	40	0.641603	369	179	3.8	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.553362	268913	6248
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.145487	56495	5161
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.316782	27914	1256
coq-tactician-stdlib.8.16.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.228295	95644	8468
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.756051	450	43	0.25	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	1.213807	976	191	5.12	synth with cache (only 1: unfold not; only 1: iorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.013136	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.658541	370	38	0.23	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	16.065429	26689	2436	0.6.0.0.32.0.14	synth with cache (only 1: unfold Z.lt; only 1: simpl in *; only 1: unfold Z.succ, Z.pred; only 1: destruct x; only 1: congruence; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.020004	6	2	3.1	synth with cache (only 1: intros x y H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.031659	6753	2231
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z_eq_mult	40	2.089691	1455	275	7.6.9	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.008726	2	1	1	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.091454	33088	5853
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.089100	29159	6029
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.071574	21966	4774
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.438360	80	40	0.4.1	synth with cache (only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.211119	89546	8665
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.073539	20156	5490
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.093805	32269	8478
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.080806	27843	4372
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.057359	17409	5337
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.074462	16864	1275
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.004188	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.012714	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.004219	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.051142	17342	3540
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.094945	30970	9566
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.319006	61	14	1.2.3.0	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.007394	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.093702	35751	3949
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.093342	26885	6764
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.042838	11248	3585
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.100886	34445	11470
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.062368	15141	3960
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.003247	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.007795	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.112676	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.428461	119	102	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.060673	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.074027	22567	5739
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.038041	8690	4317
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.076466	23489	7039
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.064744	23757	4082
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.770503	168	40	0.0.0.8.1	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	4.689952	2695	709	0.0.0.4.0.0.5	synth with cache (only 1: intros a b n ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.070528	22680	4138
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.261970	102789	7078
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.057562	20721	3050
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	6.477621	3676	647	0.5.0.12.0.0.8	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_2; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.084146	26381	8545
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.rev_alt	40	40.109831	37847	7648
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.concat_app	40	2.893966	1449	488	1.5.0.0.0.1.0.0.3	synth with cache (only 1: intro l; only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- app_assoc; only 1: f_equal; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.map_length	40	0.034009	6	5	1.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.map_eq_nil	40	0.028794	10	3	2.0	synth with cache (only 1: intro l; only 1: now destruct l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.064839	19127	6333
coq-tactician-stdlib.8.16.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.071748	16245	12369
coq-tactician-stdlib.8.16.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.010044	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.355150	158084	9533
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.227792	99146	8829
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.007965	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.010591	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.022395	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.320789	15516	893
coq-tactician-stdlib.8.16.dev	Coq.Program.Subset.match_eq_rewrite	40	0.607968	350	94	0.1.0.3.6	synth with cache (only 1: intros n P IH0 IHS; only 1: intro H; only 1: destruct H; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.incl_right	40	0.013900	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	10.332657	3239	844	2.0.2.0.0.0.4.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_r; only 1: rewrite <- succ_le_mono; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.029230	6245	2048
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.465884	2820	527	1.0.2.11.0.5	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.012216	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.057533	19296	3758
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.009015	3	1	2	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.UIP_refl_refl	40	0.026081	11	6	4	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.122162	47619	5450
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.181290	182	13	19	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.solution_left	40	0.036259	28	8	0.0.7	synth with cache (only 1: intros y H; only 1: destruct 1; only 1: exact y).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.086038	24711	9387
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.058158	17016	5226
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.066859	25327	4409
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.074065	25222	4066
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.div2_spec	40	0.016020	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.055114	18162	4068
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.090869	27653	7738
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.024112	6652	1729
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.090827	30367	7821
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.157272	66095	6231
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.028276	3998	620
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	2.477252	1321	323	0.0.17.4	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.071673	23395	4247
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.067974	23209	4037
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.078861	25161	4858
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.109280	34792	13718
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.706844	185	102	0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.917839	962	249	0.1.1.0.0.0.0.4.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.070161	16906	14722
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.057930	15316	6062
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.076523	25503	6101
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.070487	21390	5835
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.097196	35173	4891
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.036481	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.105535	14	8	0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.097347	24390	2543
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.061966	21628	4065
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	11.222072	6593	1168	0.2.0.2.17.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.471903	215237	7743
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	35.052791	27373	6344	1.0.4.0.0.0.0.0.0.4.0.1.1.7	synth with cache (only 1: intro n; only 1: induct n; only 1: intro n; only 1: intro H; only 1: apply le_0_l; only 1: intros n IH m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: now rewrite pred_succ; only 1: intros k H1 H2; only 1: apply le_succ_l in H1; only 1: rewrite pred_succ; only 1: apply lt_le_incl in H1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.IfProp.IfProp_false	40	0.027506	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros A B H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Bool.IfProp.IfProp_or	40	0.016663	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	29.508477	9519	2752	17.0.7	synth with cache (only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.708249	156	51	5.0.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.020153	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.count_occ_map	40	40.115558	46476	4506
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.094873	36419	7473
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.108438	41907	4953
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.426343	38173	1856
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.254200	793	208	0.0.1.0.0.1.0.0.4.5	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.061115	18552	5151
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.lock	40	41.109200	562610	7481
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.081623	21410	6258
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.094961	28994	8173
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.091025	27225	4801
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.079556	26174	7837
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.135035	53653	7105
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.154123	63856	4354
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.map_ext_in_iff	40	11.556043	10739	2083	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.15	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.061241	17210	6928
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.057034	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004201	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.072384	24205	4270
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.105901	40322	5266
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.047484	12869	6034
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.027852	5645	870
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.062475	11	2	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.111058	38259	6744
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.049401	12484	4281
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.074019	23853	4318
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.114340	37596	6224
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.032000	10137	1172
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.003699	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.006610	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.proper_proper	40	0.036416	8	3	5.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.024698	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.063445	18990	5148
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	4.690763	42904	1052	5.0.1.50.67	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.236286	66	15	0.0.0.9	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.106805	38557	9230
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.133579	40	21	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.164799	53	27	0.2.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.047582	11102	6486
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.070572	23260	5734
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.089131	30836	7942
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.065005	11287	3279
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.794911	627	93	2.3.5.15	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.118339	47980	4086
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	16.018169	8371	3149	0.9.0.2.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.088007	8	6	0.0.0.0.0.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	6.570118	4000	1446	0.0.1.0.0.0.0.1.0.0.0.0.2.0.1.0.0	synth with cache (only 1: revert q; only 1: induction p as [p| p| ]; only 1: simpl; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: intros H; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.029122	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_tag	40	40.897995	418561	4246
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_sig	40	0.011090	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_sig2	40	0.016874	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.16.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.285778	130141	9068
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.056507	16289	3772
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	40.028984	5044	1164
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.006939	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.061188	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.020466	6	2	3.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.005830	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.008133	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.007913	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.082218	29196	6864
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.468850	34147	982
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.542917	500	27	0.30	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.057695	18965	3572
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	34.304728	45507	7070	0.0.14.5.6.0.1.0.43.2.0.1.3.0.2	synth with cache (only 1: split; only 1: intro n; only 1: intro m; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: revert m; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	16.678080	5981	2366	0.0.1.7.0.0.0.0.0.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	5.991114	2024	539	0.0.3.0.0.1.1.1.4.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.locked_withE	40	40.610931	307352	11373
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.084119	28946	6582
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.048862	14980	4283
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.072244	25299	7826
coq-tactician-stdlib.8.16.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.506680	243729	6594
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.090298	33288	5643
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_left_length	40	40.131270	53474	6004
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	5.591520	3131	590	0.5.2.14	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.368632	175078	10156
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.209169	165	28	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.122663	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.035496	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.009087	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.140314	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.080316	28992	5853
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.063173	20803	4870
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.061082	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.056872	16618	5496
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.066229	15400	13183
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.048068	37	8	2.4	synth with cache (only 1: intros R H x x0 y H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.023968	18	6	0.0.6	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.008509	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.022906	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.067961	21729	5033
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.proper_proper	40	0.502267	200	103	2.6	synth with cache (only 1: simpl_relation; only 1: apply H).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.939135	1615	262	1.1.12.5.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.not_false_is_true	40	0.007430	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.not_false_iff_true	40	0.014612	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eqb_prop	40	0.005174	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_sym	40	0.006034	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.009078	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_true_iff	40	0.013746	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_false_intro	40	0.024972	6	6	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_true_r	40	0.005060	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_true_l	40	0.004566	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_true_eq	40	0.078912	27	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_diag	40	0.005969	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_false_elim	40	0.078610	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.023860	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.012317	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_false_r	40	0.008050	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_false_l	40	0.010777	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_true_l	40	0.004283	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.013158	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.090640	29587	11405
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_eq	40	0.008411	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.011543	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.012800	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.065370	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.010115	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.017211	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.absurd_eq_true	40	0.011447	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.011204	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.011028	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.018742	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.014340	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.reflect_dec	40	0.016003	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.019275	2032	629
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.381089	1149	60	0.41	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.046567	15174	3333
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.031308	8547	3488
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.080820	31574	4430
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.293970	73	20	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.032173	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.042424	10444	6008
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.053577	15547	5517
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.035802	11699	1718
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.015113	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.086964	30250	7031
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.056713	16504	7064
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.343279	151056	12687
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.007361	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.550919	1284	127	9.16.3	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.085562	297	18	24	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.113774	45783	7059
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	16.764317	3841	1444	0.0.3.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.179210	51	23	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.064409	19788	11644
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.062910	21076	5917
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	1.722026	22338	204
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.792186	306	102	2.0.1.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.486953	140638	5339
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.110145	32	11	0.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.078216	27221	7212
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.066290	21927	5773
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.006222	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.010636	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.007682	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.013189	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	13.966829	4493	2044	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.549035	265	90	0.1.1.0.0.0.2	synth with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.071226	24700	5432
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.210321	90538	11167
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.nary_congruence	40	40.107105	36908	9558
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.800956	696	352	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.050307	14666	5002
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.118191	9	3	2.4	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.111414	43757	7716
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.052056	14	7	0.0.2.1	synth with cache (only 1: intro x; only 1: intros; only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.349059	162784	10709
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.006458	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.006477	2	2	0.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.010897	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.125490	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.007528	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.020497	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.085828	3	2	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.land_spec	40	40.089261	36291	4120
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_left_rev_right	40	40.098049	34470	7235
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.055971	16944	3709
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	6.437979	48133	744	0.0.0.3.3.217	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: split; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.115830	50897	4994
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.107886	4	4	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.038432	4988	1514
coq-tactician-stdlib.8.16.dev	Coq.Logic.Decidable.dec_True	40	0.007068	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.351966	107	30	0.2.2.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.027829	5453	2275
coq-tactician-stdlib.8.16.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.031908	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.048462	12642	6284
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.045815	12591	4591
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.088594	28106	9772
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.JMeq_ind	40	40.272827	126663	11433
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.255207	120339	3964
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.063426	16780	4143
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	32.337775	456569	3201
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.075840	24834	6820
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.abstract_context	40	22.674034	293162	2578
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.090891	34168	6333
coq-tactician-stdlib.8.16.dev	Coq.Program.Combinators.compose_assoc	40	0.012136	5	3	1.0.1	synth with cache (only 1: intros A B f g H x; only 1: intro a; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Program.Combinators.flip_flip	40	0.007401	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.057268	16555	7696
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.104044	38891	9281
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.374426	172715	9627
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.234645	108896	13612
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.106870	41488	7313
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.020634	18	7	1.1.3	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.119381	45133	8972
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.014250	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.115513	44678	10371
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.025341	8	2	6.0	synth with cache (only 1: intros A a b H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	40.058401	20622	4793
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.420665	82112	3511
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.095045	36884	6008
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.027246	7	6	0.0.1.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: symmetry; only 1: now rewrite ?Hx; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.053918	15972	6407
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.218591	96224	10083
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	5.198530	8107	1656	2.2.0.0.2.1.2.5.0.0.0.0.8	synth with cache (only 1: intro n; only 1: constructor; only 1: constructor; only 1: auto  10 with sets; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: red; only 1: intros A B [H1 H2]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.009911	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.065595	22763	4265
coq-tactician-stdlib.8.16.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.183935	3813	623	0.12.6.0	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.092435	40024	1494
coq-tactician-stdlib.8.16.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.014708	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.041331	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.100720	38589	3971
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.413081	206116	10043
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.053183	51	13	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.gt_lt	40	0.255127	42	13	0.4.0.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: intro H1; only 1: false_hyp H ltac:(H1)).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.lt_gt	40	0.007922	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_symmetric	40	40.119595	46318	6660
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.091881	28512	9330
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.114514	41617	6617
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.059022	19923	3452
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.061012	18514	5873
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.053285	15685	5495
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.035241	9522	3946
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	11.866011	6329	2589	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.027701	10	4	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.and_hprop	40	40.198608	84832	11457
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.103520	21	10	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.true_hprop	40	0.019185	28	6	4.2.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.063403	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.not_hprop	40	0.014866	6	5	0.0.1.0.0	synth with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.503435	60	30	5.0.1	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.094144	31237	9383
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.287241	134767	11959
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	1.425598	18500	185
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.057962	19464	4501
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.152304	64337	6708
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.005177	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.008281	7	2	0.5	synth with cache (only 1: intros [x y]; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.157230	72400	3618
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	17.807310	27657	5070	7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.17.7	synth with cache (only 1: constructor; only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	14.298733	58394	2675	0.82.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.379000	3383	341	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.068830	23439	4604
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	39.045564	114762	12882	2.3.2.3.0.7.23.4	synth with cache (only 1: red; only 1: intros A P H; only 1: destruct H; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.060172	20452	4775
coq-tactician-stdlib.8.16.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.010935	3	3	0.0.0	synth with cache (only 1: intros A B f g H x; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.087563	33386	7295
coq-tactician-stdlib.8.16.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.289053	130080	10035
coq-tactician-stdlib.8.16.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.048455	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	7.717370	20461	1719	8.40.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.437525	349	60	2.11	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.470608	219942	8328
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.081265	27912	7657
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	2.233744	3068	413	0.1.5.9.1.4.1.3.3.5.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ge_le	40	28.972341	20398	3725	4.19.0.5	synth with cache (only 1: unfold min, le; only 1: intro H; only 1: rewrite Pos.compare_gt_iff; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	5.220898	66450	630
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.pred_Sn	40	0.048259	12	8	3.1.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.091754	18098	3703
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.093544	34039	9626
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.plus_n_Sm	40	0.273253	180	74	1.0.0.0.0.4.2	synth with cache (only 1: intro n; only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.013633	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.classicP	40	40.430014	208255	8555
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.055569	15404	6049
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.206507	90239	6124
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	1.620411	1311	311	0.0.0.2.2.1.0.3	synth with cache (only 1: unfold Setminus at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: tauto; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Bool.DecBool.ifdec_left	40	11.250655	18788	3196	0.2.0.1.19	synth with cache (only 1: intros h1 h2; only 1: intros; only 1: destruct H; only 1: auto; only 1: contradiction).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.199112	59	33	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.065575	19610	7429
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	31.380213	12971	3881	1.4.11.3.0.0	synth with cache (only 1: intros; only 1: apply odd_add_even; only 1: nzsimpl'; only 1: exists m; only 1: nzsimpl'; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.102390	509	190	0.1.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT_eta	40	0.009795	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.017219	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.349647	158602	9087
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.113597	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.115705	22	7	3.0.2	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.318838	149351	10139
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	4.548742	46856	939	0.0.0.85.50	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.023545	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig.rew_sig	40	0.039503	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.028780	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.forallb_forall	40	40.080740	11493	2364
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.041446	11825	3106
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.068251	20419	7691
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.861023	641	141	0.1.0.0.9.8	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.016179	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.055190	25	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.023289	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.042133	11	5	5	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.097049	18	8	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.075088	26508	6298
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	40.065536	7674	2353
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.075061	24601	4884
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.hset_hOneType	40	40.201834	90325	10640
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.080955	15378	4282
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.014417	86	27	2.2.0.0.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.003552	12	5	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.012705	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.013321	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_iff_compat_l	40	0.141669	1250	143
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.398850	33	15	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.510102	2321	414	9.9.0.1.4	synth with cache (only 1: intros H ?; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	8.294077	13074	1757	6.6.34	synth with cache (only 1: intros H ?; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.andb_true_intro	40	9.106643	86559	3119	1.110.3	synth with cache (only 1: destruct 1; only 1: subst; only 1: repeat split).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.066041	22033	4924
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.387951	1941	138	0.33	synth with cache (only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.203600	91158	8356
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.088258	31044	9875
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.026622	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.032536	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.370021	169258	11789
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.272523	128399	7572
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.039612	33	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.104572	39512	12114
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	4.085316	11295	1298	0.37.1.0.0.1.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.014147	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.pair_andP	40	0.024247	14	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	37.526584	94306	10410	0.23.4.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.705253	574	170	0.2.4.2.0	synth with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.010741	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.012395	8	3	0.5.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.008550	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.391446	615	114	2.6.6	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.065340	23521	4615
coq-tactician-stdlib.8.16.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.917560	474037	7807
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.076121	27877	6985
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.090092	30804	11466
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.326064	147946	7613
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	1.356351	1551	206	3.20.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.071222	23004	7681
coq-tactician-stdlib.8.16.dev	Coq.Init.Byte.of_bits_to_bits	40	41.336679	702148	6699
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.mult_n_Sm	40	40.144849	61402	11237
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.classic_pick	40	40.179606	71897	3520
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.902202	307	89	0.0.9	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.044130	14144	4858
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.044968	12489	5598
coq-tactician-stdlib.8.16.dev	Coq.Init.Tactics.decide_left	40	40.334408	153919	11745
coq-tactician-stdlib.8.16.dev	Coq.Init.Tactics.decide_right	40	0.012625	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.053981	16773	4890
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.352095	165029	6291
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.027418	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.517108	1009	117	0.2.13.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.014894	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andFb	40	0.004752	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andbAC	40	0.010954	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orTb	40	0.006703	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbb	40	0.051605	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbC	40	0.008247	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbAC	40	0.009798	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_id2r	40	0.019898	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orb_idl	40	0.012881	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orb_id2l	40	0.019057	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negb_and	40	0.010937	2	1	1	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andKb	40	0.011992	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbK	40	0.010694	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orKb	40	0.051537	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybT	40	0.009782	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implyFb	40	0.008755	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implyTb	40	0.009466	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negb_imply	40	0.011570	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybE	40	0.007136	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybN	40	0.007986	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbF	40	0.007476	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbACA	40	0.022603	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_addl	40	0.010748	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_addr	40	0.015330	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addKb	40	0.013195	4	1	3	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addIb	40	0.013461	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbT	40	0.009786	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.159311	68503	3790
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.058959	20183	3882
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	7.742712	11087	1260	0.2.28.10	synth with cache (only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.028403	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.155121	65805	7348
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.036327	5	4	0.0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.065740	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	36.901836	23205	2410	38.24	synth with cache (only 1: intro n; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.087734	31306	6621
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.066641	23265	5975
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.047960	15807	4007
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.088519	30232	7901
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.and_cancel_l	40	40.606676	304931	23987
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.390550	192533	11246
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_comm	40	0.178050	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.815058	396855	14250
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.rew_pair	40	0.016113	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	2.029271	21500	200
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.143497	58242	12656
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.191191	83150	10900
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.222926	98981	10403
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.subrelUr	40	12.857947	32047	2621	9.20.15.38	synth with cache (only 1: intro z; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.339918	159040	10459
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.sub_refl	40	0.190406	431	37	2.2.22	synth with cache (only 1: intro; only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.041578	15	5	0.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.389174	8492	937
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.092956	36249	5172
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.101148	36786	5975
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.094747	33474	8663
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.043320	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.052474	6	3	0.1.2	synth with cache (only 1: unfold leb, le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.069856	24039	6596
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	9.140001	81228	607
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	11.492990	12605	2890	0.0.0.0.0.10.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.12.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.find_none	40	40.053069	7437	1922
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_split_r	40	0.055354	6	6	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: intros [? ?]; only 1: cbn; only 1: now intros [[=]| ?%IHl]; destruct (split l); [ left | right ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.264272	9540	929
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.007934	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.007446	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.156726	65856	11223
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.008990	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Byte.to_bits_of_bits	40	40.111878	46469	4847
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.le_S_n	40	40.240003	108066	16838
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.087273	31348	6643
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.051818	16297	4313
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.595754	304648	6402
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.085467	29409	4633
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.091514	32583	7103
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.015684	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.063061	20862	3491
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	40.092716	33390	7382
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004620	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.008047	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.116115	16233	3254
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.006486	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.007849	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.331416	1625	50
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.rew_opp_l	40	0.007888	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.f_equal4	40	0.016721	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.and_assoc	40	40.412259	202042	17971
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.f_equal5	40	0.022385	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.008070	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_sym_involutive	40	0.008877	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.map_subst_map	40	0.009396	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.rew_swap	40	0.010314	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_id_comm_l	40	0.420852	2052	57
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.146096	66124	4713
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.090878	27574	8994
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.059162	16849	4962
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.075289	24348	6595
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.092695	31809	4720
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_assoc	40	40.574250	280068	18369
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.length_order.lel_tail	40	0.008081	1	1	0	synth with cache (only 1: now intros ?%Nat.succ_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.034967	21	8	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	7.824235	5192	1420	0.1.0.1.0.0.0.1.0.1.0.0.1.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.202979	88260	12403
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.923879	857	103	0.21	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.049502	21	10	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.086571	30960	3831
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.558990	321	73	0.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.180894	87	29	0.0.1.0.7	synth with cache (only 1: intro b1; only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Filtering.filter_map	40	40.136082	23751	6823
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.567418	259874	3563
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.006713	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_all	40	0.293952	98	45	0.0.0.1.4	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.067095	21867	6479
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.100185	32095	5548
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.078344	26695	8464
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.044953	14051	3648
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	19.263003	12073	3435	1.7.10.0.1.4	synth with cache (only 1: revert m; only 1: intro q; only 1: unfold lt, le; only 1: revert q; only 1: intro H; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.048441	13872	5115
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	3.658112	1870	523	0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: apply testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: assumption; only 1: order_nz).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.109216	42094	7932
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.542586	256394	2528
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.165905	65016	9828
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_trans	40	7.228308	5214	1133	0.0.1.0.7.0.0.3.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.148448	29588	6498
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_O	40	0.005964	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	11.208924	7042	1002	1.1.2.0.18.4	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.027190	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.607902	306033	3501
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.006810	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.140680	50	7	0.10	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.080976	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.010834	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.079969	44	9	3.6	synth with cache (only 1: intros r s; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.013250	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.sub_in12	40	0.638336	455	33	2.26	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.068576	16065	3976
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.nat_double_ind	40	40.184243	79251	12025
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.086534	30531	6326
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.SetIncl.incl_app	40	27.882962	13868	2657	11.1.0.1.7.4	synth with cache (only 1: intros l m a; only 1: induction l; only 1: intros H; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.min_l	40	4.417338	2719	1483	0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_O	40	0.029836	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: cbn; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.096379	23730	5257
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.463152	449	48	0.0.17	synth with cache (only 1: intros [| n]; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_all	40	0.033169	8	6	1.0.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_prod	40	40.131888	18502	6910
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.076569	24598	8871
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.082735	22530	4487
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.124325	48418	8568
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.length_order.lel_trans	40	40.148160	60807	5938
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_skipn	40	4.431985	2630	835	2.0.0.3.0.0.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.079916	33241	4070
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.852933	438310	11435
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.069431	25783	3618
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.035306	4409	1718
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.090294	33514	5700
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_app	40	7.352299	38815	773	2.39.1.11.2.177	synth with cache (only 1: revert a; only 1: intros H; only 1: induction l1 as [| h l1 IHl1]; only 1: now constructor; only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.163722	65379	10682
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.076823	14615	2731
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.088841	31803	5625
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.nat_rect_succ_r	40	17.343100	31428	4096	1.2.7.0.32.4	synth with cache (only 1: simpl; only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.383094	177668	3381
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.060901	18022	7510
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.010723	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.089471	32592	4621
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.096063	20439	3414
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.018344	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.080939	28419	6221
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007927	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_preorder	40	40.184282	81760	9004
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.082856	28554	5705
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.089145	30726	6917
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.377080	174387	6397
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	11.636052	10152	1360	18.4.0.0.0.0.0.3	synth with cache (only 1: assert (H : forall n, Even n -> Even (- n)); only 1: intros n (m, H); only 1: exists (- m); only 1: rewrite mul_opp_r; only 1: now f_equiv; only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.067629	20695	8195
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.137540	56630	11646
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	5.656846	4076	1178	1.0.3.0.14	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: exists r; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.069914	22694	6888
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.085898	29939	6680
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.242361	105106	3828
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.108681	13652	2347
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.045155	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.062902	20729	5037
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.107442	25292	3615
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.098872	34584	7120
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.058111	18786	5405
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.132436	36183	5301
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.124998	56549	5252
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_split	40	40.112554	46450	7268
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.053316	15082	5167
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.080719	25709	7546
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.069185	25284	4701
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.108631	17475	5142
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.max_r	40	0.646836	306	101	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now apply le_antisym; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.114396	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.137174	37232	4459
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_inv	40	40.146098	60251	7578
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.149287	37900	4436
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.290658	126669	3380
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.050369	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.112105	43546	7514
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.077194	25177	6797
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.105175	38733	7710
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.130142	37773	4658
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.076224	27054	5082
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.087602	31899	6406
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.088311	31724	5812
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.148852	62960	6678
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	32.080933	59449	2355	13.6.14.19.8.56	synth with cache (only 1: Bool.destr_bool; only 1: move  =>mf mg x y; only 1: rewrite -> H; only 1: trivial; only 1: by [  ]; only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.278134	120045	2965
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.080321	27792	5426
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.106669	38928	8335
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.159059	44240	5947
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.106259	44255	3247
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.NatSeq.seq_shift	40	23.373331	27488	4517	4.0.0.0.0.0.0.0.0.0.13.8	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros []; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: intros []; only 1: f_equal; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.086880	29689	5733
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.082044	27768	5295
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.062122	19862	4850
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.067012	22704	5394
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.041034	12454	3202
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.103058	34821	7443
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.138244	57691	5833
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.050599	17352	3536
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.072176	28011	4667
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.056214	17682	5922
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.046699	13288	4150
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	40.120857	25734	6275
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.075309	24573	4673
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.089993	31705	5398
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.NatSeq.seq_app	40	40.075005	26500	5916
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.065879	20337	7041
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Repeat.repeat_length	40	1.640198	1163	217	2.1.0.27	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.125631	43832	5122
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.129535	26834	5952
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.087632	29657	5114
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.142915	60016	6712
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.012605	3	2	1.0	synth with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.081585	28853	7210
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.186805	43252	4306
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.117619	47152	6041
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.138777	32340	7806
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.083686	30272	5572
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.076095	27250	5435
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.182671	79727	6729
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.115156	47546	7162
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.099323	41000	5060
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.071607	22936	7070
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.099879	40560	7442
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.064026	22068	5671
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.084443	29651	6451
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.056482	20545	4853
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.124079	53887	6160
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.053310	20987	4255
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.075684	31700	5237
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.080113	34983	8353
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.156803	78581	8124
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.057592	22653	5693
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.051932	22082	2705
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.165967	84451	9446
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.048407	18543	6417
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.126381	68813	7503
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.084197	37252	6327
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.072658	34513	6998
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.034870	14411	3784
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pplus_minus	40	40.138110	84479	11134
