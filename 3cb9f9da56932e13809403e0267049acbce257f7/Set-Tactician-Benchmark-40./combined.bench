coq-tactician-stdlib.8.16.dev	Coq.Floats.FloatLemmas.shift_value	40	0.031358	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.551787	275	43	0.11.0	synth with cache (only 1: intro; only 1: rewrite Nat.div2_succ_double; only 1: Nat.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin2	40	0.039359	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.065085	23180	3890
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.047970	19645	3012
coq-tactician-stdlib.8.16.dev	Coq.nsatz.Nsatz.Rsth	40	0.185257	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.075904	32018	5690
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.interior_P1	40	40.204035	97584	8822
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.055003	22754	2866
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.039280	15234	3450
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.included_trans	40	0.373073	278	50	0.10.1	synth with cache (only 1: intros f D l x0 H H0; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.392649	130	39	0.0.0.2.0.0.2.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: apply Nat.lt_lt_add_r; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.046271	18830	5134
coq-tactician-stdlib.8.16.dev	Coq.Reals.Alembert.Alembert_C3	40	40.030934	9625	4198
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.quadruple	40	0.039943	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.048170	8	2	6.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.103738	45679	4552
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.032177	10316	4263
coq-tactician-stdlib.8.16.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.062710	26370	4543
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.068751	26200	5356
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.095813	41624	5731
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.MVT_cor1	40	40.092282	40559	5397
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.097726	43945	4844
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.036680	11522	3624
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.038485	12663	4306
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.distance_refl	40	40.052659	20758	4140
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.043570	16040	3698
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.037092	13799	3636
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.036959	14417	2907
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.exp_ineq1	40	40.048339	15939	3694
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	4.350062	1387	420	0.0.0.0.3.4.0.1.1.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite Rmult_1_r; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.148085	73928	4566
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_R.Rcri	40	22.050629	14771	1414	17.35.3.4	synth with cache (only 1: intros x H; only 1: unfold equality; only 1: rewrite <- (Rmult_comm x); only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.022193	7503	2430
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.040150	15786	3116
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	12.461933	2413	593	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: apply Rinv_neq_0_compat; only 1: assert (Hyp : 0 < 2); only 1: change 2 with (INR 2); only 1: apply lt_0_INR; only 1: Nat.order'; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.tech	40	40.029058	10666	2880
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.032654	10653	3471
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.067544	30661	2604
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	3.432739	3794	351	0.0.0.0.1.12.2.28	synth with cache (only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: prove_sup; only 1: now apply (IZR_le 0 2); only 1: auto with real; only 1: apply sqrt_positivity; only 1: now apply (IZR_le 0 2)).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.047732	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Binomial.pascal	40	40.037767	12374	3234
coq-tactician-stdlib.8.16.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.703874	177	73	0.2.3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: cut (1 + 0 * x = 1); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.nsatz.Nsatz.Rcri	40	40.046213	19346	2264
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.alternated_series	40	40.064135	27984	5461
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.072972	27199	4202
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.interior_P3	40	40.179391	86643	6789
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.C_maj	40	40.042563	16180	3665
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.097716	42946	5434
coq-tactician-stdlib.8.16.dev	Coq.Reals.Alembert.Alembert_C5	40	40.022532	6893	3844
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.056608	21579	5350
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cos_plus.cos_plus	40	40.048256	18295	3527
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.053016	17035	5031
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.073663	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.073095	31211	4690
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.complementary_P1	40	3.430259	7934	657	1.8.7.15.2	synth with cache (only 1: intros H1; only 1: intro H; only 1: destruct H as [alp [Halp H]]; only 1: apply H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.MVT_cor3	40	40.033269	11403	3912
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	0.803475	787	90	3.0.2.9.2	synth with cache (only 1: intros; only 1: intro; only 1: intros; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.048314	18026	4251
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.103959	46513	4816
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.058796	23517	4079
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.075092	31331	3972
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.062430	24703	3436
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.028536	8946	3506
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.exp_Ropp	40	40.065800	27107	3939
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.050666	22255	4010
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.062411	11651	3126
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.052133	23208	2513
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.Machin_2_3	40	40.052073	20534	2752
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.pow2_ge_0	40	39.321030	20422	3583	2.12.11.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: pose proof (sin2_bound x); only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.049994	21584	3170
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rderiv.Dx	40	40.058763	21564	5632
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.044464	14502	4046
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech1	40	40.099856	42848	5644
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech5	40	0.078964	19	8	0.1.0	synth with cache (only 1: simpl; only 1: intros x y; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.156101	4	3	0.1.0	synth with cache (only 1: intro m; only 1: simpl; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.070796	22767	3755
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.minus_neq_O	40	1.349452	588	157	10.3	synth with cache (only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.046704	16701	4734
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.060973	24169	5556
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.031823	10809	4358
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.040800	15146	4366
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.063450	24136	4403
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.050951	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.762310	127	70	1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros H'2; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.043280	15525	4794
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P1	40	40.110049	48444	6709
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.035431	10128	4688
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.growing_cv	40	40.143978	70061	6727
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.043295	17236	4524
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.059016	24061	3623
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.027783	8566	3680
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.049163	19845	4225
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.ln_exp	40	40.065005	26511	3797
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.042903	17167	3204
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.AbsList_P2	40	26.587576	19767	3345	2.0.2.1.3.6.0.9.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: intros; only 1: inversion H; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.032236	10999	3555
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.le_double	40	27.228728	21120	3643	5.19.7	synth with cache (only 1: simpl; only 1: intros H x; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.tech8	40	0.419796	78	19	4.3	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.034456	13986	2642
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Rsor	40	40.119891	51022	5597
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.093729	39402	5294
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.041917	15460	2425
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.344180	170039	5037
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.070656	32795	3777
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.054201	22418	2883
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rderiv.Dopp	40	40.069957	28332	5080
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.059993	20116	3332
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech6	40	40.062589	23259	5318
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech12	40	0.006606	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.075159	29328	3880
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_O	40	0.020533	4	2	0.2	synth with cache (only 1: intros a; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_1	40	0.021660	8	2	6.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_add	40	0.061796	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.060963	25044	3023
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_mult	40	40.110912	50189	5206
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.076808	32712	5574
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.061760	23570	5351
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	8.567031	1201	473	0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: apply g_wf; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.055802	21944	4599
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_plus	40	4.817525	3237	582	8.2.13.0	synth with cache (only 1: intros x y; only 1: elim archimed with x; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.071554	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.041934	13388	4580
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.036663	11586	2333
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	40.038331	15878	2989
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.079490	34128	7191
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	1.510497	669	153	4.2.4.0	synth with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P4	40	0.413285	1693	57	4.52	synth with cache (only 1: intros p q; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.positive_derivative	40	40.034843	12088	4837
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.196294	95144	6660
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.061060	23306	3990
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.050743	20626	2846
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.054955	18275	4362
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.090992	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.032049	9417	3800
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.ln_inv	40	40.031119	10443	3492
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.MaxRlist_P2	40	40.084958	32603	5781
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.030080	10250	3153
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	5.062856	1762	515	1.4.0.0.5.1.0	synth with cache (only 1: intros r1 r2 H; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreals.IZR_nz	40	0.009286	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.048673	17850	3391
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Qle_true	40	40.100780	47372	4257
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.112076	47827	4563
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.070770	28346	6167
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.023763	7284	3432
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.030025	10419	2357
coq-tactician-stdlib.8.16.dev	Coq.Reals.DiscrR.IZR_eq	40	0.039131	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.052651	19043	4498
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_refl	40	0.296811	391	50	4.10	synth with cache (only 1: right; only 1: now try rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_le	40	0.120710	56	16	2.3.1	synth with cache (only 1: intros p q H; only 1: left; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.049720	17909	3786
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.scal_sum	40	40.083780	32457	3798
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.077781	15169	3065
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.068593	27425	5283
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_ge	40	5.088665	3662	820	2.9.0.0.0.4	synth with cache (only 1: induction 1 as [| x y z]; only 1: red; only 1: tauto; only 1: generalize (total_order_T r1 r2); only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005707	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.053715	20583	5175
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.069130	17517	5262
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.049061	20314	3701
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.053030	18615	6641
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_P3	40	40.033277	12319	4696
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.increasing_decreasing	40	40.081812	35325	4435
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.125815	56402	6971
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	4.901319	1233	635	0.0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply (sqrt_positivity x H); only 1: apply sqrt_pos).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.055846	22463	4639
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.tan_0	40	40.062218	23826	4239
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.031769	12492	3708
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.354046	31	24	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_pow	40	40.037509	13252	3566
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P1	40	40.068753	25997	6102
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.013102	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.071191	25160	7004
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreals.Qle_Rle	40	40.068463	26520	3798
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.030122	10670	2593
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.027574	8535	3787
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.fp_R0	40	40.705991	48559	3047
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.072876	28664	4420
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.136125	63292	4418
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.260796	37560	4561
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.129118	57439	5263
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.tan_increasing	40	40.042157	15201	2905
coq-tactician-stdlib.8.16.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.162652	67737	6284
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.039474	12364	4529
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.217185	33	20	1.0.0.0.0.2	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.poly	40	40.070035	26348	5331
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.plus_sum	40	40.823775	36923	2793
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.047023	15829	941
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.limit_minus	40	40.038673	12753	4986
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.060024	22741	3551
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.040352	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	17.129729	6329	3195	0.2.0.0.3.6	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.735335	929	247	7.3.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.068230	28122	5675
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.172286	77468	6459
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	4.694568	1329	383	1.0.0.2.6	synth with cache (only 1: intros r1 r2 H H0; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.039342	13956	4038
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.065364	24320	6366
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.Rsepare	40	40.059486	23100	5287
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.null_derivative_1	40	40.037099	12494	5248
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.Vn_growing	40	40.104502	47161	4547
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.not_Rlt	40	0.008870	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	6.180853	6226	342	68	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.047977	15405	5452
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.047964	16724	4435
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_lt	40	40.055147	20001	3750
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P2	40	40.072900	26887	5567
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.140784	52178	5415
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.046540	19468	1940
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.049915	20637	3349
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.family_P1	40	18.456916	18385	2909	1.0.13.12.8	synth with cache (only 1: intros LE p Hp1 Hp2; only 1: intro; only 1: simpl; only 1: intros HF; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.base_fp	40	40.078500	30814	6911
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.036654	14343	3421
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.058296	7	4	0.2.0.1	synth with cache (only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	5.411007	6062	987	0.0.4.4.1.6.2.3	synth with cache (only 1: intro l; only 1: intros H H3; only 1: induction 1; only 1: eauto with *; only 1: auto; only 1: destruct r; only 1: eauto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P6	40	2.455691	1399	402	8.3.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.108839	50293	4790
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.096475	40875	6366
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.040733	13530	4882
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.040147	16182	2428
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	40.064982	25306	4302
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.134966	62911	5529
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.sum_eq	40	40.074419	29753	4877
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.039323	10117	2357
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.022676	5548	1344
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.090835	34960	5098
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.166334	46	22	0.0.0.0.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.045271	16387	4946
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.593339	148	55	0.0.1.2.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto using Rnot_lt_le with rorders).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.018588	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_asym	40	0.046876	11	7	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.403511	70	41	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_antisym	40	1.205871	510	150	0.6.0.0.0.3	synth with cache (only 1: intros * []; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.012253	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.688031	1604	301	0.0.0.11.6	synth with cache (only 1: intro z; only 1: intros def_n0; only 1: intros g c; only 1: intros n0 H' m; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.029948	6	5	0.0.0.1.0	synth with cache (only 1: intros x x' y y'; only 1: intros H1 H2 H3; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.069679	30116	3997
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.183732	20	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.057089	26371	2248
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.070843	15	9	0.0.0.2.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.IVT	40	40.066927	27298	4466
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.052458	20273	6673
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.049756	19004	4503
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.approx_min	40	40.076407	31139	5992
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalZ.of_iff	40	40.092553	36900	6247
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.046338	15240	4838
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.129800	48751	5255
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_trans	40	9.957205	15603	1787	0.2.1.39	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros v1 v2 env env' H ? ? ?; only 1: intuition eauto  3).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.045600	14318	3594
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.049672	18589	3930
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.075923	28446	5207
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P3	40	40.043338	13059	5455
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	33.375056	66029	4573	0.0.0.7.11.4.38	synth with cache (only 1: intros Base Step n; only 1: induction 2; only 1: constructor; only 1: setoid_rewrite  <- H; only 1: eauto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.016152	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.032131	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.562425	558	53	5.24	synth with cache (only 1: intro Ha; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.093148	37316	4273
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.086314	36494	7031
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.013193	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.310479	67	39	6	synth with cache (only 1: apply Unsigned.of_inj).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.031462	11456	3315
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.103952	43867	4807
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.033989	13427	3447
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.012420	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	22.207253	5622	1293	15.2.4	synth with cache (only 1: intro p; only 1: intro q; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	34.381465	18390	4107	0.0.0.0.3.14.0.0.1	synth with cache (only 1: generalize PI2_RGT_0; only 1: intro; only 1: unfold Rdiv; only 1: pose proof PI_4 as t; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: Lra.lra).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.compact_EMP	40	40.168114	80164	5172
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.sum_cte	40	33.487035	20462	3674	2.9.0.2.0.0.1.0.5.2.1.1.0.0.2	synth with cache (only 1: intros z [| n]; only 1: simpl; only 1: apply Rquot1; only 1: rewrite Rmult_1_r; only 1: auto with *; only 1: simpl; only 1: elim n; only 1: rewrite Rmult_plus_distr_l; only 1: simpl; only 1: ring; only 1: simpl; only 1: intro; only 1: intro; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.141620	66868	5559
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	0.927277	296	124	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.053591	23445	2133
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.109399	47153	4931
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.049377	18149	3811
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	29.278236	20987	4187	0.0.0.0.0.10.0.13	synth with cache (only 1: intro; only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.078544	31899	5847
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.181115	8315	883
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_le	40	0.982595	264	113	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.058228	23865	4528
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.049012	15743	5245
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.109788	48646	3544
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	13.538205	7044	1490	1.0.0.0.1.0.0.1.2.6.1.3	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: unfold Rmax; only 1: rewrite Rlt_def; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: intro; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.UL_sequence	40	40.114249	29667	4437
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.098635	44382	4817
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.109088	46772	3369
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.010538	11	3	5.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_complete	40	0.032215	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.037592	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.023372	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.137016	60850	5599
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_period	40	40.039544	13027	3410
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.726040	2570	395	4.15.1.0.5.3	synth with cache (only 1: split; only 1: split; only 1: congruence; only 1: red; only 1: intros n; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.035660	11467	3273
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P6	40	40.065466	24503	5347
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.153558	66767	5687
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.053403	8	6	0.0.0.2.0.0	synth with cache (only 1: intros m x; only 1: functional induction find x m; only 1: easy'; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.053377	19441	2696
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.082695	31245	4011
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.056364	24552	2823
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.053673	19160	4842
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.079997	12573	1470
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.055255	23741	3530
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.057288	9	8	1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: induction n as [| n IHn]; only 1: destruct x; only 1: simpl in *; only 1: auto; only 1: intro l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.298336	76	33	1.0.0.0.0.3	synth with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: split; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.025676	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl in *; only 1: now try rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.026638	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.084478	35067	3476
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.083724	32923	5364
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.044972	18369	1660
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.063124	24546	5087
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.frame_tan	40	40.033432	12494	2565
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.GP_infinite	40	40.070700	16870	4039
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.130068	56776	7295
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	20.777015	6718	3463	0.3.9.0	synth with cache (only 1: revert q; only 1: intro n; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.182634	86608	1984
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.161043	40031	2415
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.084102	37029	5432
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_mult	40	40.074926	30289	4138
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.130376	58737	4841
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.085945	38070	2572
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow1	40	7.786974	4450	927	0.2.0.2.0.0.20	synth with cache (only 1: unfold IZR, IPR; only 1: simple induction n; only 1: reflexivity; only 1: intros v w; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.034637	3	3	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.045189	16184	6359
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.089847	33480	4674
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_plus	40	40.094331	29865	4937
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.055293	21224	3954
coq-tactician-stdlib.8.16.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.247188	117996	10758
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_dec	40	40.062415	21087	4096
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	40.060230	25140	6091
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_dec	40	1.084453	519	128	1.0.10	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.040672	4	3	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.084239	34699	4133
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.limit1_ext	40	40.037733	13685	3567
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.041837	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P7	40	40.071420	25122	5368
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.047853	15096	2477
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.267973	135149	4986
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.062209	24484	3180
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.083546	38807	2340
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.034144	11056	5205
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	9.745558	46323	1390	1.0.4.0.0.54.28	synth with cache (only 1: intros m; only 1: case m; only 1: intro n; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.229766	110418	5959
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.042480	17154	4984
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.082474	32869	5767
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.R_uncountable	40	40.172068	80173	6803
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.032668	11585	4577
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.CV_shift	40	40.070937	27546	5429
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.037829	14285	2999
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.113914	46988	4685
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.122603	52031	5464
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.092729	37683	7382
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.059723	20494	5399
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.082633	32331	6253
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.421588	18380	2966
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.035925	12661	3939
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.072575	28718	4326
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.042411	17026	2616
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.049786	16074	7380
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.068452	26125	6160
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.110923	46666	5665
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.055563	20276	4179
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.048624	17497	4382
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.030541	10768	2320
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.095731	23	7	3.0.1	synth with cache (only 1: intros x y H; only 1: intros; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.034717	14570	1325
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Dln	40	40.027874	8892	3538
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P8	40	40.061682	22608	5358
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	5.422325	4637	638	0.4.0.5.0.0.0.4.11	synth with cache (only 1: intro n; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: set_iff; only 1: now intros ->; only 1: unfold Same_set, Included, mkEns, In; only 1: inversion 1; only 1: eauto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.075196	30550	5298
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.043829	14713	3288
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.062030	25187	3278
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	10.246389	3767	1067	1.0.0.0.0.12	synth with cache (only 1: rewrite <- Ropp_0; only 1: apply Ropp_lt_gt_contravar; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	9.843921	35233	1617	62.9	synth with cache (only 1: intro n; only 1: now constructor).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.134015	146	24	4.6	synth with cache (only 1: intros m Hm; only 1: exact 0%Z).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.121726	53882	5526
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.207986	99869	5219
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.043491	14661	3449
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.680530	793	199	0.6.10	synth with cache (only 1: simpl; only 1: intros a n ?; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.058183	24015	4230
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.in_int	40	40.036652	13698	2875
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.085388	35115	3957
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.079002	30724	4435
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.065533	25342	6423
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.113847	49943	3434
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.063606	23566	2940
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.007218	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.051372	20249	3788
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.064502	23316	4348
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.adherence_P4	40	14.457230	22379	2516	11.3.9.9.1.4	synth with cache (only 1: unfold included; only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: intros y Ey; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.055097	19892	5095
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.070494	27936	6427
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.027188	8273	2157
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.133304	58937	5594
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_mult	40	40.035440	10926	4889
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.065257	26531	5360
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	15.574642	13978	2208	4.4.0.4.1.1.2.1.0.0.0.2.0.2.2.4.0.0.0.0.2.0.2.3.8.1.1.8	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: generalize (rev d); only 1: intros H'; only 1: trivial; only 1: simpl; only 1: now case d; only 1: simpl; only 1: now case d; only 1: generalize (rev d); only 1: simpl; only 1: intro H'; only 1: now induction d; only 1: generalize (rev d); only 1: reflexivity || ring; only 1: simpl Little.double; only 1: now induction d; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.044805	5	4	1.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.061965	18006	5854
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.023800	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.255928	14	4	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.015104	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.140675	60757	4997
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.035127	11714	2962
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qpower_positive_0	40	40.055153	22702	2461
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P9	40	40.089533	40517	5969
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.059811	22152	4627
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.319360	152300	2945
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P18	40	0.675364	180	79	0.0.0.0.0.4	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.225566	87745	2505
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.050407	15497	3350
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.051780	18389	3853
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.049314	16964	5558
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.057403	23390	3156
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.052091	22366	1801
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.D_in_imp	40	10.249493	3167	988	3.4.6	synth with cache (only 1: intros r r1 r2; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.068490	28141	4629
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.032896	9474	1986
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	23.650066	9374	3189	17.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.030543	11251	2932
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.093074	37296	4932
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.042932	17275	2313
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.119640	50252	5967
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.084278	38026	4081
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.D_in_ext	40	9.874201	3435	1056	0.3.0.5.1.0.0.2	synth with cache (only 1: intros; only 1: generalize H, H0; only 1: unfold D_in; only 1: intro; only 1: elim H1; only 1: intro; only 1: unfold limit1_in; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.312642	31	24	4.0.0.0	synth with cache (only 1: intros; only 1: generalize (Dec.F.mem_iff s x), (Dec.F.elements_iff s x), (existsb_exists (Dec.F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.769868	1402	354	2.0.2.0.4.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.066271	26138	4938
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.046497	14057	4545
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.domain_P1	40	40.185618	78844	4678
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.075255	25696	4811
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.107408	47011	3493
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.tech9	40	40.142316	39378	5051
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.125307	29326	4806
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.098755	42238	2967
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.096370	41142	4462
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.036019	2	2	0.0	synth with cache (only 1: intros x y H; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.358829	178794	2211
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.073408	29013	3882
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.050951	17990	4653
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.097614	34456	2946
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.116588	45971	10439
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.092714	39666	4535
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.014813	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.968014	67	63	5.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.047189	14090	4133
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.051924	19452	3689
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.697057	60	48	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s (x:=x) (y:=y) H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.008958	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.580588	118	41	0.0.0.0.5.1	synth with cache (only 1: intros; only 1: destruct (In_dec x s'); only 1: rewrite <- not_mem_iff; only 1: auto with *; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.009441	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.126395	35	18	2	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.070065	28796	4432
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.109240	46940	5615
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.025607	13	4	3.3	synth with cache (only 1: intros x l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.028164	7389	4086
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.047456	17587	3713
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.106496	41408	6130
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.035605	14276	1227
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.075070	28646	5801
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.074167	28059	4452
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.019110	5983	2905
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.201507	94	25	0.2.6	synth with cache (only 1: intuition; only 1: red; only 1: auto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.114597	47941	5436
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.033135	9904	2106
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.135815	26407	1453
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.083871	36456	5332
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.227414	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.083143	34401	3458
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.028804	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	1.216189	248	113	0.2.2.2	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.491606	34	11	0.0.6	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.102961	46603	5609
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.093381	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.323446	12	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.527089	1158	48	0.46	synth with cache (only 1: intro LT; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.091910	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.087542	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.079992	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.541487	23	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.047814	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.084598	34344	5375
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.047574	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.062872	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	3.027550	1905	501	0.0.0.0.2.0.1.3.0.0.0.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.373049	6	3	0.1.2	synth with cache (only 1: intros; only 1: red; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.041991	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.057757	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.029256	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.043295	14070	4189
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.Heine	40	40.091860	40596	5728
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.064963	22381	5457
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.087825	33782	5783
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.tech13	40	40.098701	42489	4395
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.063089	23760	4835
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.093528	40421	3332
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	6.792377	6944	1050	30	synth with cache (only 1: apply N.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rsqr_0	40	40.303880	147853	753
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.086009	36341	4821
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.092662	17952	3309
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.133608	60927	3254
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.080163	32135	5278
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.088320	35100	4004
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.057748	21388	3442
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.140939	55873	4265
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.039504	15646	4376
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.090196	35179	5941
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	35.254587	18220	5082	12.0.7	synth with cache (only 1: intros x ?; only 1: unfold permutation; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.041388	10858	6366
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.045010	17598	3670
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.172756	78291	6646
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.107311	43375	4545
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.049225	14823	2789
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.012503	9	2	2	synth with cache (only 1: f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.025903	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.046636	17578	3068
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.015494	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.066768	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.028514	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.354760	42	14	0.0.0.5	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.060358	2	1	1	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.442042	18	6	0.0.3	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.490014	33	11	3.0.2	synth with cache (only 1: intros; only 1: red; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.410186	12	3	1.3	synth with cache (only 1: intuition; only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.117675	49896	5434
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.069434	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.083325	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.058214	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.088003	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.262181	6	3	1.0.2	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.375760	10	5	2.1.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.021184	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.024379	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.056169	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.062594	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.103908	48179	3138
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.081443	36009	3537
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.056066	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.111827	51816	3774
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.429853	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.arcsinh_0	40	40.052346	20059	3875
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.378658	21	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.126996	63	19	0.0.3.2	synth with cache (only 1: intros a m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.104517	314	110	3.0.1.2.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: intros; only 1: intuition; only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	1.696130	99	34	3.2.1.0	synth with cache (only 1: expAdd; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.127531	60199	6619
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.349728	163837	7399
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.020592	7055	1541
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.039390	10515	5554
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.169684	37	14	2.1	synth with cache (only 1: unfold opp, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	18.953534	31709	475	10.177	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.043398	6	3	0.3.0	synth with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.011087	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.015520	2	2	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.085491	34798	4381
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.715110	90	75	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s (x:=x) (y:=y) H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_minus	40	40.031176	8833	4604
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.040934	8312	1812
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.099842	41128	2645
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.057061	22832	2703
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.026643	9	3	1.1	synth with cache (only 1: intro n; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.041678	13173	4541
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.897488	362	95	0.1.0.1.2.0.2	synth with cache (only 1: intro q; only 1: zify; only 1: apply Zmod_small; only 1: split; only 1: Z.order; only 1: pose proof gt_wB_1; only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qabs.Qabs_Qinv	40	1.868621	1440	284	9.0.9	synth with cache (only 1: unfold Qeq in *; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.068077	26205	5515
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.093544	38511	6202
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.060965	20554	3679
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.049369	17594	3751
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.120367	30060	3523
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.097512	19872	2706
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.042944	14283	3765
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.105303	46081	3282
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.682778	88	48	0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.113749	47137	5989
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.025725	7823	686
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.024628	8548	2369
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.052204	22265	3229
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.108733	45577	6090
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.019485	11	3	3.1	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.441400	1095	238	1.14	synth with cache (only 1: intros m Hm; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.063755	17229	3505
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.117825	48415	4190
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.085623	36400	5751
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.162383	14	8	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.123253	16	6	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.527577	53	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.953579	549	99	0.1.8.4	synth with cache (only 1: intros a b; only 1: intros c Hc IH; only 1: rewrite add_spec; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.075575	31042	3662
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.648483	332848	1576
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.095567	39114	5318
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	6.215917	8536	989	0.35	synth with cache (only 1: intro q; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.091749	34943	6596
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	40.037810	11508	3541
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	3.160206	856	181	6.5.4	synth with cache (only 1: intro r; only 1: intros ? ? IH p1 p2; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	39.146605	5582	4409	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.019414	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.009100	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.021130	4	2	2.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.021669	3858	723
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.193858	26159	3279
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	4.256696	3238	510	2.20	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.057988	13	5	1.0.2	synth with cache (only 1: unfold Subset; only 1: intros a b c Hc Ha Hb; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.103255	41688	4934
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qsor	40	40.051990	18598	3289
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.073228	28678	4780
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.073325	27963	4267
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	3.417520	740	174	1.12	synth with cache (only 1: intros l x; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.025715	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.035826	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.027971	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.113769	51436	2957
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qfloor_le	40	40.080957	31539	3542
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.191400	27918	3527
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.034069	8859	4105
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.108259	44711	10325
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.010331	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.009303	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.007200	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.010861	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.010587	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.009123	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.009398	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.107983	48301	4606
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.121948	51611	4942
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.076938	30098	2722
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qred_iff	40	40.099416	40577	3859
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.036854	14	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.022585	7243	1381
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.091747	11	4	3.1	synth with cache (only 1: intro n; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.112045	45977	5288
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.309756	928	46	42	synth with cache (only 1: now rewrite ?(Ring_polynom.local_mkpow_ok Rsth pow_th)).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcge_alt	40	1.099373	581	114	1.2.2.7	synth with cache (only 1: simpl; only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.026438	7949	2969
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	6.281547	1371	617	1.2.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.034803	12372	2462
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.067923	21628	6832
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.216822	42183	4168
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.038137	13305	2801
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.139972	29165	5825
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.092136	37265	3608
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.827838	437	107	12	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.017452	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.124849	52938	5647
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.084333	37777	2697
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	23.389538	44903	2968	45.22	synth with cache (only 1: intros m H; only 1: now elim H).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.QNpower	40	0.018095	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.669984	284	53	7.1.1	synth with cache (only 1: intros p H2 H3; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.108874	45103	5417
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.242775	117138	4844
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.112642	43121	7112
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	7.037744	9316	1459	0.0.24.5	synth with cache (only 1: intro n; only 1: <Coq.Strings.String.t_eqb>; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.057914	20591	4406
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.032420	9790	4227
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.084188	37505	4847
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.023915	3480	786
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.163149	73439	5239
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.098867	37773	5194
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.035650	4	2	2.0	synth with cache (only 1: intros; only 1: now field).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.323798	82	23	4.3.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.031494	9	4	1.3.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.624929	120	42	0.2.0.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	0.612583	152	65	1.3.0.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qle_ceiling	40	40.092657	25138	3625
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.053414	11733	3472
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.042259	13915	3603
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.158734	74246	5933
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.153171	70091	1500
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.095419	38043	4065
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.111225	48060	5302
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.031000	7915	1911
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.237597	108505	4902
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.103414	45031	5624
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.044867	4	1	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.101693	48834	2534
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.045140	14062	4254
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.008950	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.607513	173	42	4.0.0.2.0	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.045006	17296	2771
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.024164	6792	2976
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.047173	16621	1844
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.078914	31215	5305
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.045380	13854	10055
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.064545	26175	3726
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.181717	82213	9833
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.254639	33751	5800
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.190527	46056	7238
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.079057	32284	4275
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.121991	54389	4969
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.094541	35776	3458
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.079246	29072	6415
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.117511	46268	4827
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	12.674173	10471	1276	11.1.4.4.11	synth with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intros a H; only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.077155	26552	4937
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.009804	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.108243	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008358	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.014286	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.016676	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.007307	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.005623	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.117642	16	6	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.010517	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.058391	24684	5488
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.052055	20904	1225
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.089419	34698	7092
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.098036	39005	6709
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.079183	29492	3732
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.108295	44098	4919
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.076267	25946	4087
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.053284	19027	3861
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.020419	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.047245	12453	1932
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.148065	66343	5801
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.069055	19111	3212
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.178177	79630	6208
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.022717	11	4	0.0.1	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.103441	42707	3544
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.094741	38622	4309
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	41.914980	20600	2445
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.080635	34536	1038
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.028595	8656	2532
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	5.523906	3329	786	0.1.0.0.1.0.7.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: simpl; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.039923	15209	2909
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.102731	39372	5378
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.141071	61887	5436
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.052268	18605	4189
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.241261	113364	4826
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.181789	85811	6859
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.146150	42418	6177
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.070964	27709	4478
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.074903	26613	5466
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.124738	57127	6009
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.209218	99004	6942
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.058730	14	4	0.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.615911	281	91	1.1.1.1.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: auto with sets; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.123467	51706	3555
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.215573	65	21	7.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.066619	27624	2698
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	5.416198	5868	964	4.3.0.5.15	synth with cache (only 1: intros a b q r Hr EQ; only 1: intuition; only 1: apply fold_rec; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.086150	34266	6191
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.475492	124	56	1.3.2.0	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: intros; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	26.054302	10402	2167	0.4.0.0.0.14	synth with cache (only 1: firstorder; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: rewrite <- H0; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	23.772059	24028	4279	17.3.0.18	synth with cache (only 1: split; only 1: apply M.elements_2; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.159869	70679	7207
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.156106	72633	3814
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.046544	25	7	0.1.3	synth with cache (only 1: split; only 1: now try Nat.order'; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.008177	4	2	2.0	synth with cache (only 1: intro n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.119431	50742	4541
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	33.117987	24726	3079	0.0.1.23.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.079101	32063	3194
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	18.439101	6212	1543	0.0.0.0.0.0.0.0.0.0.0.1.6	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.007259	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.010004	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.009062	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.028728	8405	3604
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.086609	35323	4081
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.054701	12245	4562
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.017411	4031	1349
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.115382	40754	3749
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.094825	26619	3301
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.136122	62388	6534
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.037984	14465	1930
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.230210	103170	7204
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.019117	6	3	1.0.2	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.043219	16161	2761
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.094973	38048	5348
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.019800	5554	2151
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.055117	14337	8855
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.076146	31437	3323
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.174866	81484	3480
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.066284	22579	7473
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.109976	42358	6950
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.012162	6	2	4.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.055644	22174	4701
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.137382	60855	5374
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.104959	45123	4289
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.148725	67506	6007
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.050047	16136	5141
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.061901	20938	5853
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	40.103957	43041	6432
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.630446	199	70	0.0.0.0.5	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	1.215098	472	147	0.0.9.1.0	synth with cache (only 1: intros; only 1: apply (MP.fold_equal st (f:=f) Comp Ass); only 1: apply MP.remove_equal; only 1: rewrite not_mem_iff; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	2.407892	977	283	0.4.0.0.0.4.2	synth with cache (only 1: intros op Hop; only 1: intros x y Hxy Hyz Hy; only 1: apply fold_rec_bis; only 1: intros; only 1: eauto; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	1.633223	1156	167	1.1.3.12	synth with cache (only 1: intros n m; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.568882	353	84	10.1.0	synth with cache (only 1: intros w1; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.023402	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.348160	161322	6435
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.007495	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.009328	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.087028	37722	9790
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.272366	179	42	11	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.280342	135769	3785
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.101228	42678	7916
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	3.366479	3504	566	0.1.1.0.2.19	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: now split; only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.042206	16597	3069
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	40.078762	28183	4423
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.034959	8339	1845
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.140633	55673	5029
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	3.029738	1714	343	2.5.0.2.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: rewrite Qmult_comm; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.022777	5625	3358
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.112868	48579	4836
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.055128	20476	3998
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.196379	1413	260	0.8.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.110862	44330	6811
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.015910	3028	1177
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.122940	55587	4574
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.080425	30153	5225
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.200659	84	20	2.1.4	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.089145	36297	2850
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.552345	22	5	3.4	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.014905	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex2	40	2.526406	1570	271	0.1.0.2.7.8	synth with cache (only 1: intro z_ne_0; only 1: intro a; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex6	40	0.014993	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex7	40	0.021433	9	2	1	synth with cache (only 1: exact Qplus_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.031115	12591	2934
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.139910	59585	6066
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.055461	19670	4905
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.252891	123770	3166
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.069727	23339	7974
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.015756	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.062050	13626	1673
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.049115	16122	4511
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_correct	40	40.107773	42261	6564
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.197813	70584	4922
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.104377	42045	5680
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.017225	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.019227	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.isZ0_0	40	0.438125	125	48	0.0.0.0.0.0.2.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.042074	12403	5477
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.051353	19805	3135
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.070082	22246	1479
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.135319	60216	3510
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.105537	32	16	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.650958	333093	1818
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.151624	71583	4262
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.819640	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.004748	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	27.147694	24358	3441	0.0.2.30.0.0	synth with cache (only 1: intros; only 1: qc; only 1: Z.nzsimpl'; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.097768	41039	9793
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.328346	1906	362	6.0.0.0.0.0.0.6.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.346055	161669	3629
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	18.662802	10438	1859	1.0.27	synth with cache (only 1: intros P l; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.067450	24483	4656
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.037877	11566	2456
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.152705	63596	7192
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	3.829376	1792	430	1.2.12	synth with cache (only 1: intros H'1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.660704	420	61	0.10.3.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.025623	6516	3122
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.070696	30088	4367
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.052247	18876	2981
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.121086	53442	6433
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.054327	21652	1740
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.023184	4462	1146
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.PI_ineq	40	40.034971	11113	2790
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.050596	17168	4900
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.032577	8512	5261
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.249052	120610	2920
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.052931	19165	2509
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.072821	28743	3855
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.014964	4291	934
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.027031	10408	1711
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.046348	13021	8366
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.187309	88072	5646
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.067420	24750	5386
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.113704	47072	5100
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.007043	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_one	40	40.098405	37520	7630
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.015431	4	3	0.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.073942	26931	5775
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.319385	59	25	0.0.4.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.067309	19442	7763
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.071830	25086	6112
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.095300	40238	2931
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.163843	70079	3974
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.090264	35726	3889
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.155654	72191	4933
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.329846	153418	8920
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.176625	67902	2206
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.112323	48231	4278
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.079685	30827	5641
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.058768	21588	5211
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.182263	83708	4301
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.023372	6533	3182
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.092232	37292	3989
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.100217	42281	4351
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.106370	44398	5953
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	8.776813	11168	1264	0.1.1.0.0.1.2.0.0.29	synth with cache (only 1: elim (ZArith_dec.Z_lt_ge_dec x y); only 1: destruct x; only 1: intros; only 1: auto; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.069173	41	12	0.0.2.0.2	synth with cache (only 1: intros ->; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.151000	59682	3388
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.024115	5	3	0.1.1	synth with cache (only 1: intuition; only 1: rewrite diff_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.042954	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.167137	11047	2476
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.079528	33415	3369
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.036504	9047	5907
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.111319	47541	5359
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.203493	99053	1810
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.023312	9	3	4.0	synth with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.063061	22406	4008
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.074500	29491	3229
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.099466	38363	4822
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	6.221315	19377	389	1.0.2.47.4.19.100	synth with cache (only 1: split; only 1: intuition; only 1: auto; only 1: intro q; only 1: intros l'; only 1: intros Ha Hb H; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.111287	43952	5479
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.182162	83820	6720
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.064440	25381	2767
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_le_trans	40	40.166647	74622	7029
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.056563	10	7	0.2.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.345759	48648	4985
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.021766	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.044399	4	4	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.063913	18513	7304
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.069490	26203	5031
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	1.426240	788	206	0.0.0.0.0.0.6.1	synth with cache (only 1: intros i s; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.036837	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.143206	61835	4231
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.114371	50602	4288
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.067371	25726	5742
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	5.116260	1327	489	0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.113879	47898	5559
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.136131	59023	5794
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.114619	41	16	0.0.0.1	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.192674	83771	6399
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.156215	70381	7951
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.062849	23786	5141
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.087950	34512	4351
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.043792	13422	4272
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.153261	68663	4771
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.107589	40219	6763
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.085643	33735	6665
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.094596	38959	5305
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.pr_nu	40	6.678054	6275	884	0.0.6.2.3.16	synth with cache (only 1: intros k f1 f2 pol; only 1: destruct pol; only 1: unfold derive_pt; only 1: apply derive_pt_eq_0; only 1: simpl in *; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.336905	164194	2872
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.040256	15929	2330
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	2.167253	1274	313	0.0.0.0.0.0.13	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.038682	10075	1911
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.067239	26627	3191
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.059173	23373	5668
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.088526	38844	4589
coq-tactician-stdlib.8.16.dev	Coq.Logic.Epsilon.iota_statement	40	40.259496	116765	8121
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.072358	22983	6408
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	40.083137	31245	6820
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.118540	49222	5675
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.131937	57477	4889
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.026513	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.116831	25	11	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_alt	40	40.168301	78420	5611
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.347722	67	31	1.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.091994	37908	5806
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.071722	27006	3530
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_lb	40	40.071594	24752	7207
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.058145	18565	3956
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.045767	18170	2276
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.240381	110118	3187
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.096227	39441	3044
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.099256	40506	8538
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	6.281709	764	274	6.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_trans	40	1.423360	1203	360	5.0.2.0.0.0.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: eapply Qle_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: apply Qle_refl).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.093647	36687	5810
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.126288	47497	6352
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.122596	49615	6534
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.148283	66586	5180
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_not_le	40	2.028855	1833	312	2.0.13.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intro l; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.590290	276	79	8.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.102957	45713	4090
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.026147	6634	3851
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.087062	32339	4422
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.060766	25292	4859
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.093376	24488	4917
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.074780	25972	5436
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.023704	6545	1803
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	11.317918	14921	1747	11.0.0.0.0.0.0.11.1.17	synth with cache (only 1: intro x; only 1: destr_bool; only 1: CRelationClasses.simpl_crelation; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.135313	57185	5896
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.126492	77	7	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.049468	16847	4668
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.196463	93541	7645
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.100136	146	21	16	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.061011	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.386882	188739	7698
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	13.207253	7137	1293	0.2.1.2.15	synth with cache (only 1: intros l x e r; only 1: simpl; only 1: intros sorted belong1; only 1: inversion_clear 1; only 1: constructor 1).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.125298	53918	3947
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.078823	27074	7152
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.189952	76322	5307
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.054441	20206	4153
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.138201	61409	3389
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.129616	55508	6940
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.170321	76815	7230
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.008684	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.634344	3304	458	12.4.0.6	synth with cache (only 1: intros x x'; only 1: unfold Empty; only 1: destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.073403	29485	4943
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.052806	17667	2714
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.071569	31149	7494
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_ub	40	40.116251	48533	7126
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.078038	34358	2716
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.043688	14271	3616
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.049306	19759	2010
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	40.063758	20741	6217
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.034849	13864	702
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.046718	13616	2474
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.120348	50283	5814
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.090390	37103	7278
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.861383	561	149	0.0.10	synth with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.040006	13160	3122
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.088232	34233	6403
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalChoice.choice	40	40.158539	71850	7442
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.059484	22249	2269
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.129372	54224	5391
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.133260	55981	7093
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.068750	25578	2171
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.065640	25845	4516
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.090891	39179	3845
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.083480	33071	4820
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.073467	19653	2640
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.086193	34913	2936
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.098799	37035	3836
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_trans	40	40.118315	45334	6393
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	2.509015	1297	285	8.1.0.2.0.0.2	synth with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.085599	20421	3616
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.029577	10359	2220
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.085660	34818	4643
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.055055	19278	4924
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.074526	29886	4385
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.196291	91682	1921
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.141769	63235	6050
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.122120	54008	6575
coq-tactician-stdlib.8.16.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.158970	23282	4262
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.016175	5321	1042
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.051771	14922	4194
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.135427	55750	4468
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.913263	6934	1337
coq-tactician-stdlib.8.16.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.087659	28494	3703
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.115606	28334	5280
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.373116	179086	4851
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.137301	61354	6924
coq-tactician-stdlib.8.16.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.106779	44131	4708
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	21.085378	9215	444	34.33.5.18	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intro He; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.081507	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.037167	11353	3083
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.102523	42813	6803
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.078240	31936	4839
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.074031	26989	4327
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.034191	8689	3686
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.015508	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.052459	14308	5815
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.092708	36581	5646
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	18.797420	9364	2133	4.0.10.0.0.1.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: apply Qmult_le_r).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	2.872249	531	443	0.0.0.0.0.0.1.1	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.184384	39768	3038
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.039840	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_lt	40	40.075316	21781	2548
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.123474	53168	6969
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.081842	30608	5414
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.120156	39099	3556
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.084618	31328	3407
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.112682	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.073945	28963	4586
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.074995	31327	4255
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.085446	41	12	1.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.120561	52950	5572
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.109948	18288	3769
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.039686	11266	2990
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.046908	15338	2135
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.146142	68703	6479
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.085412	33957	3898
coq-tactician-stdlib.8.16.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.094737	36782	5284
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.054854	15394	7940
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.071481	25438	2782
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.075184	26301	4375
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.023806	8180	1251
coq-tactician-stdlib.8.16.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.117167	30907	2049
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.NilZero.sis	40	40.061853	18787	5980
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.114612	48743	3955
coq-tactician-stdlib.8.16.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.024178	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.031519	9	4	2.2.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.022476	5650	670
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.032903	8674	3765
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.104572	43719	4576
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.263664	80	37	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.006595	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.105129	8	1	7	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.012040	3	2	1.0	synth with cache (only 1: unfold Zlength; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.051062	21576	3389
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.107026	47951	3491
coq-tactician-stdlib.8.16.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.048140	15	4	4	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.289518	48	16	5	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.042055	6898	3304
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.577236	389	97	0.8.1	synth with cache (only 1: intro n; only 1: Z.nzsimpl; only 1: Z.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.151382	66533	5302
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.026970	6523	5307
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.065638	22429	4688
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.079020	33226	4044
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcpower_0	40	2.005175	1425	315	1.0.0.0.0.2.1.10	synth with cache (only 1: intros n; only 1: Nat.cases n; only 1: intro H; only 1: qc; only 1: now elim H; only 1: simpl; only 1: intros n IH; only 1: auto with qarith).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.599381	273	62	0.0.0.1.8	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.077107	29934	5974
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.105230	42425	5959
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.143805	60171	5647
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.077118	27285	4375
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.100975	41094	6375
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.128832	59989	3410
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.028753	7	4	3.0.0.0	synth with cache (only 1: intros z Base Step; only 1: rewrite eq_option_alt; only 1: intro e; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.009627	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.008397	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.120139	52138	5677
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.091199	38279	5383
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.034593	13559	1341
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.132154	59149	7808
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.201781	86526	8191
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.099277	40036	4762
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.050266	11510	2296
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.053236	9	8	1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.136969	58584	4371
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_refl	40	40.169498	77037	6581
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.064712	25558	2940
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.059102	23400	3277
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.083508	33496	6141
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.020391	6745	684
coq-tactician-stdlib.8.16.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.130143	49310	6359
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.123889	51073	5797
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.840702	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.113119	50327	6455
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.080520	33470	5176
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.408517	26004	3248
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.020320	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.127943	58916	4032
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.289613	137010	2105
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.028033	8745	5153
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.092162	37128	3236
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	33.614467	42852	1582	0.0.5.122	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.155692	69544	5245
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	1.175923	380	161	3.0.0.0.5.0.0.0	synth with cache (only 1: Nat.induct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros [| i]; only 1: auto; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.not_prime_1	40	40.087453	38381	2707
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.105443	43452	3779
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.066946	20696	5080
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.053705	15425	7302
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.323144	155234	4267
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.108661	26286	3278
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.076609	27241	5237
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.085926	32907	7432
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.055908	18941	4842
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.050436	19395	2894
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.719659	527	82	1.0.10.4	synth with cache (only 1: intros l; only 1: intuition; only 1: intros z Hin; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.023636	5751	816
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.098313	42092	4746
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.299522	147467	10630
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.028999	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.278429	2991	368	11.16	synth with cache (only 1: intro LS'; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.056403	21385	7422
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	6.026893	2255	613	0.3.0.1.0.7	synth with cache (only 1: intros z n H; only 1: apply Z.ge_le; only 1: rewrite ?eval_pol_sub; only 1: rewrite <- !eval_pol_norm; only 1: Z.nzsimpl; only 1: now destruct Hn || easy).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.080614	29342	6251
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.073999	27861	4921
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_sym	40	40.097812	35193	4470
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.080455	33948	3660
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.124443	56031	3921
coq-tactician-stdlib.8.16.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.146482	61802	6851
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.049462	14316	3243
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.736405	401	91	11.2	synth with cache (only 1: intros m; only 1: now destruct m).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zabs.Zabs_dec	40	40.085357	36536	5370
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.007880	2972	336
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.148751	63857	8314
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	23.352175	45519	3555	0.0.2.2.0.22.0.5.13	synth with cache (only 1: intro l; only 1: intros l' H; only 1: unfold Subset, Empty, impl; only 1: intros n m IH H1; only 1: do 2 rewrite inter_iff; only 1: intros (EQ, LE); only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.187691	91130	4517
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	30.313719	119610	2505	55.102	synth with cache (only 1: intro q; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	5.305561	3143	680	1.0.1.1.2.6.2.2	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct p; only 1: reflexivity; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.097445	29	10	0.0.0.4	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.023765	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.260219	22479	2773
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.095238	35085	9263
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.094047	41788	2463
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.031859	8599	5581
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.089750	35296	1869
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nless_def_2	40	3.757192	1844	710	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.139239	60542	4658
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.098616	41649	5103
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.091174	35381	7770
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.045772	16014	3012
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.126255	53429	6538
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.463107	67	24	3.0.0.5	synth with cache (only 1: split; only 1: intro; only 1: intuition_in; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.111658	50615	4523
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.080175	26	6	4	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.017643	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.067629	25153	4009
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.079653	28069	4232
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.055425	19289	4045
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.find_left_path	40	40.154316	70033	6545
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.089617	33371	4505
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.091524	40353	3656
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_le_2	40	7.335972	11278	1207	0.0.0.3.0.9.21	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.061326	27548	2916
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.108179	43812	4958
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.066021	21625	4839
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.083160	29571	5795
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_eq	40	40.056046	17607	7818
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.083004	33941	6636
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.127428	56761	6111
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	2.638755	2235	351	3.0.3.0.9.3.1.2	synth with cache (only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: generalize (Z.compare_eq n m); only 1: intro H; only 1: destruct (n ?= m); only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003767	889	337
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.106239	46506	11915
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.166867	78744	5619
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.150294	71682	5025
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.041274	14418	3248
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.137356	57847	6766
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.141923	66795	3554
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.084397	35563	4236
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.027519	7213	5621
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.150717	62555	6241
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.042398	12073	2045
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N0_less_2	40	40.106649	43589	7164
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_spec	40	40.123059	55362	4094
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_refl	40	1.167165	571	120	0.12.2	synth with cache (only 1: destruct x; only 1: apply Nat.eqb_eq; only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.166799	75687	4785
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.044124	11990	6675
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	5.942324	4047	458	17.14.1	synth with cache (only 1: intros x; only 1: intros Base Step n; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.066616	23968	3937
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	40.088525	38542	4202
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.143276	62275	6300
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.609424	199	56	0.0.3.6	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	40.044130	12646	4642
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.087890	35426	5079
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.699805	2112	407	2.18	synth with cache (only 1: intros n m; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.245912	64	28	2.0.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.251181	123919	5160
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.131564	58982	3073
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.069931	26941	3767
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.248500	122778	7127
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.094434	40684	3866
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.063871	24006	1317
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_minus	40	40.048841	16847	5073
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	3.897444	2715	598	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	1.662285	1765	140	15.18	synth with cache (only 1: intros m Hm IHm; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	0.229509	171	19	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.index_correct1	40	40.106348	45041	8607
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.089350	38512	5617
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.198363	89731	7322
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.328998	160207	4924
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.112476	46905	3818
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.771735	239	50	2.0.3.8	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005566	2059	205
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.068365	26209	6740
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.101957	42929	6135
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.138895	62689	7611
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.064164	25566	3314
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.132384	55682	5759
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.122643	37509	4130
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.127212	11881	1421
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.584055	74	32	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.111925	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.016510	4	3	1.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.099318	38429	5391
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.117991	49657	5582
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.141796	61874	5923
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_eq	40	40.075940	23134	5731
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_neq	40	0.011840	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_compat	40	0.020686	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.093680	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.112716	51651	1669
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.089016	35592	3614
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	5.688565	10024	1152	15.22	synth with cache (only 1: intros a Ha; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.108447	47259	4550
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.062265	21074	6110
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.078723	28098	4295
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.033965	9243	3751
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.104117	44948	6908
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.069000	22591	9195
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.116585	51775	4528
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.141274	60513	4289
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.113476	49595	4017
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.060147	19616	6352
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.453537	228737	9478
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.053006	17621	1219
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.index_correct4	40	40.125465	54234	9951
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.122833	52186	4849
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	2.756423	3809	131	57.4	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zegal_left	40	40.047896	19350	2945
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zle_left	40	0.007942	2	1	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008798	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.010738	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.146281	55727	6704
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.007624	2	1	1	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.178660	60	19	2.5	synth with cache (only 1: unfold Z.le, Z.max; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.021718	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.199271	91278	4219
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	34.866279	812	158	2.0.2.2.2.2.3	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.080322	31378	5142
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.062794	22357	4415
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.114821	41691	3223
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.051668	17428	3681
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.193098	87226	3988
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.112275	21720	3096
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.033265	8205	4304
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.158216	70650	5018
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.078419	30528	5082
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zone_pos	40	0.790729	544	53	24	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	24.179822	17996	2603	3.16.3.0.7.0	synth with cache (only 1: intros m x; only 1: red; only 1: simpl; only 1: intros; only 1: compute; only 1: auto using (find_1 (elt:=elt)), (add_1 (elt:=elt)) with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.096669	26841	1980
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.790141	262	65	3.1.7	synth with cache (only 1: intros; only 1: unfold Z.geb, Z.leb; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.083082	34593	3881
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.853717	333	86	0.0.0.9.1	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.072432	28293	3681
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.014519	4186	690
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.128535	54198	5674
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.096637	35833	7208
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.108326	45243	5190
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.041396	11687	4016
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.010494	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.011961	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	8.082737	6030	1528	0.0.0.20.0	synth with cache (only 1: unfold Z.gtb, Z.gt; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.023111	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.123152	51774	5706
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.032607	11533	1342
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	1.653310	1059	255	0.0.3.0.6.0.1	synth with cache (only 1: unfold Zeq_bool; only 1: intro H1; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.123850	54471	5727
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	20.977201	18715	3058	3.19.6.3	synth with cache (only 1: intros f Hf; only 1: intros a n H; only 1: intro l; only 1: eauto with set).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.086983	31782	4841
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_0_1	40	0.047634	13	5	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.150745	69662	5121
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	23.180877	10177	2558	1.6.0.0.0.1.1.1.8.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.171009	31	16	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.323410	155266	1996
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	40.091035	38374	4943
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	1.815132	8358	243	4.4.0.0.33.72	synth with cache (only 1: compute; only 1: elim s; only 1: reflexivity; only 1: intros; only 1: f_equal; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	2.127585	736	236	0.0.0.4.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.063149	22989	2228
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.018543	9	3	1.1	synth with cache (only 1: red; only 1: Nat.order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.005033	3	1	2	synth with cache (only 1: exact Nat.le_trans).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.112062	48995	4986
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_plus_1	40	4.282905	1554	715	3.9	synth with cache (only 1: intros p; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.053309	15694	5489
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zge_left	40	0.200864	60	11	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.031501	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.687778	742	105	19.4	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.byte_dec_bl	40	40.107039	10997	673
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.S_INR	40	1.099168	293	74	0.3.1.3.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.not_Zne	40	40.149575	68205	3507
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.131512	56771	1408
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.006942	2511	136
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.033397	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.926395	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.053271	16217	2201
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.130369	58579	7964
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.141808	60480	4591
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.010696	1	1	0	synth with cache (only 1: apply Zle_is_le_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.040833	14599	3137
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.063479	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.592467	3522	387	0.0.0.6.33	synth with cache (only 1: intros n; only 1: destruct n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	0.263649	43	17	0.0.0.0.0.4	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.123917	52056	7348
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.119624	50439	2361
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.071453	25874	1852
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.100498	40157	3620
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.079138	32703	4045
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.056193	25778	440
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.042527	13103	4469
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.175473	74692	5585
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.023323	8930	1540
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.142192	64537	5355
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.500042	27	11	7	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.047460	15738	3117
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.108247	46623	3480
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.421512	206201	2934
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.222329	102144	5332
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	3.014140	515	331	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.073869	25447	5688
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.022465	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.012357	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.097942	37470	3939
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.059888	16	9	2.3	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.027554	7	4	0.1.2.0	synth with cache (only 1: do 2 red; only 1: induction l; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.041643	14	5	4.0	synth with cache (only 1: intro; only 1: simpl_relation).
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.012282	5	1	4	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.007821	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	3.897520	8969	478	22.21.53	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: destruct y; only 1: now destruct x).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.066942	12240	1062
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.078048	31653	1796
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.067122	21991	3677
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.527229	269650	2007
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.069982	27478	2709
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.129455	56041	8726
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.plus_INR	40	40.026290	7662	2167
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.104389	42608	4904
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zge_trans	40	0.069076	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.307190	143510	3656
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.036307	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	6.488733	7589	1216	4.1.22.0	synth with cache (only 1: intros A ? x y z H H0 H1; only 1: rewrite H1 in H; only 1: assert (x == y) by (transitivity z; eauto); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.031253	7420	462
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003334	788	158
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.012685	4	2	1.1	synth with cache (only 1: repeat intro; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.image_empty	40	2.813003	2128	518	2.0.1.3.1.1.0.3.1	synth with cache (only 1: intro H'5; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: red; only 1: destruct H1; only 1: elim (Noone_in_empty U x); only 1: auto with sets; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.089365	37187	3977
coq-tactician-stdlib.8.16.dev	Coq.micromega.Env.S.nth_jump	40	0.478590	391	57	4.4.3.9	synth with cache (only 1: destruct p; only 1: easy'; only 1: now destruct p; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.164902	73102	5863
coq-tactician-stdlib.8.16.dev	Coq.micromega.Env.S.nth_pred_double	40	0.021906	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.106777	46664	5987
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	5.501107	12444	697	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.48	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.049380	21492	1677
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	2.344564	6060	544	39	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.032437	10566	2827
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.097473	37083	6549
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.103570	35297	2939
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.762069	262	95	0.0.0.0.0.0.0.0.0.0.3.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.032720	10179	3808
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.085298	34847	5204
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.109558	46167	4777
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	4.057702	4617	146	63.6	synth with cache (only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.104126	43068	3723
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	15.336886	13265	1947	37.2	synth with cache (only 1: intros; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.740498	350	82	3.2.7.2	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.197166	93653	5659
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.169616	77267	4949
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.742391	2350	248	11.0.0.3.2.1.1.27	synth with cache (only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: easy; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.084999	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.044349	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.138009	60075	5109
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.041274	13553	3221
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.044030	12615	5487
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N_nat_Z	40	40.124769	54012	4684
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.031867	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.positive_N_nat	40	0.011734	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.169459	74152	4651
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.060494	24687	684
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.100716	38918	5402
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.048185	21594	1148
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.minus_INR	40	40.093811	39616	4235
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.087432	35903	6314
coq-tactician-stdlib.8.16.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.103382	39693	7439
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.166090	76207	10392
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	22.151030	15023	4479	3.8.0.10	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_cons	40	1.249514	262	57	8.0.1	synth with cache (only 1: repeat red; only 1: intros f g l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.229999	113533	2535
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002619	921	100
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.298025	74146	7674
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.060224	18378	8170
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.947624	1452	439	0.0.0.0.0.2.6.1.0.0.2	synth with cache (only 1: induction 1; only 1: easy; only 1: intuition; only 1: simpl; only 1: simpl in *; only 1: destruct H0; only 1: auto; only 1: auto; only 1: cbn; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.072607	23836	4087
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.102967	42796	5554
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	40.099594	46117	3881
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N	40	40.062295	26953	2330
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.073236	28431	3467
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z_nat_N	40	26.116304	19561	2119	0.0.0.1.0.0.0.0.2.2.0.0.19.3.7	synth with cache (only 1: bitwise as m; only 1: f_equal; only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: N.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_dec	40	1.220296	1030	228	1.0.0.7.1.1.0.0.7.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.095729	40330	5209
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.092967	10373	2109
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.116183	49083	5733
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj	40	2.190781	2951	356	1.0.0.1.0.1.0.0.15	synth with cache (only 1: destruct n, m; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007247	8	1	7	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.976060	269	149	1.10	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.084395	33549	4989
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.032197	10006	1452
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.115463	48188	4793
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.169784	50711	7778
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.122156	50629	6458
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.134891	57335	3035
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.079770	30471	5532
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.063284	23920	3594
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.045353	14901	4356
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.094072	24798	5772
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorEq.CAST.cast	40	1.487137	700	211	13	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.075937	27833	3472
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.060167	21014	3534
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.019846	4705	2375
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.523178	468	263	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.mult_INR	40	40.054000	18652	4043
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.127988	59673	2628
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.030447	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008496	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.007914	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.164292	71081	8412
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Znot_le_succ	40	0.435514	585	70	1.19	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.022153	4	2	1.1	synth with cache (only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.013580	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.218122	49026	8665
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.178011	83636	5291
coq-tactician-stdlib.8.16.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.924114	888	259	1.9.1	synth with cache (only 1: red; only 1: intro eq_dep_eq; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.237678	38323	1840
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.006376	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.009056	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.014050	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.006982	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004640	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005225	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.083238	29555	7333
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.116899	47504	8469
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001103	148	76
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.080719	30433	6304
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.135295	61895	5507
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.014958	11	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.094191	40066	3786
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.030334	9494	771
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.094680	41426	5054
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.137440	56979	6858
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.057056	5	3	0.2.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.097259	37581	3587
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.133481	11541	1889
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.295510	18599	3532
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.221301	106857	2483
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.065243	25210	1449
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.099000	41049	4046
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.112089	24041	7858
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.119374	47293	5002
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA8	40	40.109329	45874	2870
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Finite_alt	40	40.208583	85884	6351
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.114403	44267	4639
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.043302	13124	1356
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.110015	44059	2523
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.030636	9396	2516
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.070201	15396	2525
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.189453	32113	6164
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.lt_0_INR	40	40.074821	29096	5025
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	37.949537	13405	1405	19.0.0.6.9.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: nzinduct p; only 1: now Z.nzsimpl; only 1: intro p; only 1: Z.nzsimpl; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.of_nat_ext	40	40.272341	123237	4611
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.160200	72317	9222
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.112250	44038	4447
coq-tactician-stdlib.8.16.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.109940	45006	6879
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	40.098028	39692	4524
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.246020	40221	6058
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.257148	45825	5912
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.105162	43842	3868
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zle_compare	40	3.288053	4634	446	1.0.0.0.3.22	synth with cache (only 1: intros n Hn; only 1: case Z.compare_spec; only 1: unfold Z.le, Z.max; only 1: intuition; only 1: intuition; only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.438901	212	64	1.1.0.4.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: intro H1; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.203768	28027	5950
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_comp	40	40.092530	39492	4515
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.202859	65216	900
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.046884	20079	1893
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.224430	32757	7989
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000625	61	28
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.067838	24977	5960
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.012071	2	2	0.0	synth with cache (only 1: intros; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.299789	11102	2399
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.051428	21774	2290
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	3.124717	4333	770	9.13	synth with cache (only 1: intro A; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.070225	27388	1369
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.049296	13684	5085
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.022382	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.109923	40876	7433
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.006813	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.098382	27975	3765
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.093426	41344	2096
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.122779	52975	3913
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.122886	38377	5473
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	2.953848	2828	491	0.1.1.15	synth with cache (only 1: intros a; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.251141	117002	4645
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.085882	32333	4933
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.101645	40874	3133
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	19.566780	8032	1434	4.0.2.0.0.0.15.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: trivial; only 1: induction l; only 1: simpl; only 1: constructor; only 1: constructor; only 1: cbn; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	4.834392	3090	639	0.0.0.0.0.0.0.10.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: dintuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	35.472887	30250	4806	0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0.0.0.0.0.9.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: simpl; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.026367	7684	3017
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.197212	36142	7531
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.077654	27176	6936
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.040724	16280	2357
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.011968	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.034004	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.007601	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	25.484034	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.277297	105467	4805
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.078094	30739	6429
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.037648	8545	980
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	14.145838	19694	2343	21.3.18	synth with cache (only 1: intros l; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.L_R	40	6.620332	8325	332	10.0.2.99	synth with cache (only 1: induction n; only 1: Nat.nzsimpl; only 1: assumption; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.064754	23637	4409
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.093987	34928	6712
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.052840	19730	2676
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.070542	22207	2496
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.198528	98265	3893
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.186463	81983	7104
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.145960	64389	2925
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.007773	6	1	5	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.021038	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.081036	30756	6128
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.043059	17671	2324
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.715386	1701	206	7.1.4.4.22	synth with cache (only 1: split; only 1: repeat red; only 1: intros n m p q H1 H2; only 1: now f_equiv; only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	1.066156	494	130	0.4.6.0.0	synth with cache (only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.393145	105	22	0.0.0.11	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.le_INR	40	20.209431	11246	2676	4.0.18.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: destruct n; only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.238145	112	20	5.4	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.010438	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.172248	84684	3903
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.137031	56024	9380
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.030894	9120	1854
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	2.888576	712	152	19	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.693302	512	38	14.13	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	7.950014	4187	243	5.1.0.0.1.37	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.170018	43509	6760
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.102061	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.164527	29636	3068
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.222327	31993	5539
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA16	40	40.083750	37095	2261
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.280939	120281	5764
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Prop.NNPP	40	40.297238	141736	10583
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.010793	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_not_0	40	8.003305	3968	840	1.1.3.7.0.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction n; only 1: intro; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.039396	10259	1445
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.176274	78950	5798
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.123488	32581	6546
coq-tactician-stdlib.8.16.dev	Coq.Arith.Euclid.eucl_dev	40	40.152531	65968	3698
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	9.245258	10230	698	63	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.216146	117	16	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.043460	13546	3913
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.opp_succ	40	12.545969	14472	2808	0.0.1.0.1.0.6.0.0.0.0.8.3.3.0	synth with cache (only 1: apply opp_inj; only 1: apply opp_inj; only 1: apply opp_inj; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.013040	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.217736	36317	6391
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.063083	25641	2489
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.039140	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.021900	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.024003	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	11.311560	8025	856	2.0.0.30.1.2	synth with cache (only 1: intros LT; only 1: intros H; only 1: destruct 1; only 1: compute in H0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.000982	146	42
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.067466	29577	1838
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.075316	29733	7851
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.054308	18493	2060
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.discr	40	16.818186	105271	2447	0.91.0.1.102	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: constructor; only 1: now exists n).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.014676	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.008016	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.066589	23297	4865
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.166726	41376	6327
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Rtauto.with_env.compose0	40	14.917767	27821	3203	9.2.2.1.30	synth with cache (only 1: intro H; only 1: induction F; only 1: destr_bool; only 1: unfold push, map, contents, index; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.083559	33506	6039
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.262034	22259	2926
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.104333	39571	8432
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.054078	17052	3157
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.050482	10	4	0.1.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.254189	46132	6846
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	16.886019	14885	1946	2.0.0.0.0.1.0.1.0.1.1.7.0.0.0.0.1.1.0.9	synth with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: Z.swap_greater; only 1: Z.order; only 1: discriminate; only 1: simpl; only 1: Z.swap_greater; only 1: destruct 1; only 1: intros H; only 1: Z.order'; only 1: easy || now destruct y; only 1: trivial; only 1: simpl; only 1: trivial; only 1: Z.swap_greater; only 1: now destruct 1 || intros _; only 1: simpl; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: easy || now destruct y).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.069003	4065	607
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.102142	44401	4510
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.233849	146	38	0.0.0.2.1.3.1	synth with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	6.450474	7225	1084	2.3.2.5.14	synth with cache (only 1: intros x H; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	6.587113	4392	1324	1.2.0.0.1.0.1.1.0.6	synth with cache (only 1: induction l; only 1: intros l'; only 1: intros H H0 H1; only 1: constructor; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.389877	180933	14648
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.022279	6794	2390
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.013049	9	2	2	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.262337	40168	6294
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.244338	53265	3063
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.094568	34560	5805
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.230140	42613	6401
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_eq	40	40.073101	27126	5535
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.075644	28383	2965
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.117822	22363	6415
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.143848	61466	9125
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.564231	1204	201	0.0.0.0.0.0.0.1.13	synth with cache (only 1: intros f Hf; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Euclid.quotient	40	40.070379	26839	4431
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.112644	47906	303
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	0.934123	890	85	17.17	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.987843	1825	745	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.140464	56308	5646
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.max_r	40	40.098248	35618	7829
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.059840	16	5	6.0	synth with cache (only 1: unfold le, max; only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.788836	237	95	0.0.0.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.019095	7	3	0.4.0	synth with cache (only 1: intros; only 1: now rewrite Pos.sub_xI_xI || now rewrite Pos.sub_xO_xO || now rewrite Pos.sub_xO_xI || now rewrite Pos.sub_xI_xO || subst; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	1.072507	488	128	0.0.0.5.4.1.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: intro n; only 1: order; only 1: trivial; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.015397	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.065105	3	2	1.0	synth with cache (only 1: simpl; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.309318	8784	1161
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.034024	11913	1414
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.142676	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	11.090305	9927	1746	2.5.0.18.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hy; only 1: rewrite Hx; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000783	113	28
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.384674	139626	6987
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.040125	9586	1397
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.bi_induction	40	40.127449	53791	6325
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.051724	17633	5044
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.eqb_eq	40	40.114989	32354	7400
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.236241	28041	4155
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	7.263843	2362	309	3.3.1.9.2.14	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	2.484613	2852	391	6.18	synth with cache (only 1: intros H a l H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.145704	32142	4312
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.070480	11	10	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.131664	17	11	0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.114650	44172	6651
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.id	40	0.024699	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.068504	28161	2357
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.047565	8	6	0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.027813	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.zerop	40	3.341552	3702	362	25.0.0.10	synth with cache (only 1: induction n; only 1: now left; only 1: right; only 1: Nat.auto').
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.031631	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.071613	27126	2326
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.011430	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.098704	41213	3455
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.id	40	0.033496	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.026813	2	2	0.0	synth with cache (only 1: simpl; only 1: now N.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.012453	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.197162	40624	3418
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.050871	18408	3302
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.074931	27457	6125
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	1.356023	718	160	0.12.0	synth with cache (only 1: intros Hn Hm; only 1: unfold N.ltb, N.lt; only 1: now rewrite <- N2Z.inj_compare, !id).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.132749	54586	6290
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.013677	3274	2093
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	8.685266	11784	1182	0.0.0.1.0.0.1.4.0.24.0.17.12	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: apply Nat.le_0_l; only 1: destruct m; only 1: right; only 1: apply Nat.lt_0_succ; only 1: elim (IHn m); only 1: intros H; only 1: left; only 1: now apply le_n_S; only 1: intros H; only 1: right; only 1: now apply Nat.succ_le_mono in H).
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.069208	24460	6057
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.215283	17293	4653
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.093708	15756	1752
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.123376	28256	5098
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.not_1_INR	40	40.037633	12632	3055
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.038732	11496	3131
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	10.437128	6530	582	30.1.2.0.17	synth with cache (only 1: simpl; only 1: unfold to_nat; only 1: simpl; only 1: f_equal; only 1: exact (inj_mul 2 p)).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.070454	7939	1044
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.114140	15760	872
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.157729	71743	7751
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003512	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	40.156341	65949	4216
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.049911	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.125198	41782	6756
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.191514	57579	4099
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.075109	26741	5917
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.310883	82932	7781
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001079	209	35
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.255792	61387	6490
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.038408	8479	1312
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.128102	54295	6124
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.072302	31	14	0.0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	3.120719	1864	683	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.522985	210	87	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.032048	13	3	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.354645	100053	3407
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.030084	9971	1286
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.064082	26759	4218
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.091683	39263	4647
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.083976	34266	3976
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.113533	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	40.129643	46776	6256
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.051017	15097	3659
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.097409	37343	7748
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.184686	11771	6207
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.103367	40075	5222
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.072753	27054	5104
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	1.858690	2290	223	0.0.9.7.0.14	synth with cache (only 1: intros H0; only 1: induction 1; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.015726	5	2	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.183061	99	23	3.1.3	synth with cache (only 1: intros m H; only 1: inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.040751	16583	1369
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.le_dec	40	40.108927	42639	8191
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.124795	51559	7344
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.046814	13977	3329
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.017626	6	2	3.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.016251	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.014369	3	2	1.0	synth with cache (only 1: unfold elements; only 1: constructors).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	35.292365	73212	3628	36.26.0.129	synth with cache (only 1: assert (forall s s', s = s' -> ~ L.lt s s'); only 1: Nat.order; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.119897	47116	5645
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.155036	26970	2876
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_IPR	40	40.065429	23234	4201
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	32.752714	168002	1777	15.296.0	synth with cache (only 1: unfold singleton; only 1: repeat red; only 1: intuition eauto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.108369	40898	5148
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.072262	26128	3431
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.134244	22604	1443
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.108106	38922	8141
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.gt_dec	40	10.402242	9129	1856	0.1.10.19	synth with cache (only 1: revert n m; only 1: intro m; only 1: intro H; only 1: apply le_dec).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005084	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.ge_dec	40	0.006154	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.254281	32770	6351
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.107284	13939	2631
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.027328	8	5	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.071533	13166	4067
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.389739	118305	6153
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.221242	86171	5905
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.004461	388	47
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	5.981374	1531	845	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.106973	43522	9660
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.009868	1	1	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.133401	25727	4054
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.101202	39749	7448
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.not_eq	40	15.752795	12562	2144	5.1.12.18	synth with cache (only 1: intuition; only 1: destruct (lt_eq_lt_dec n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.not_lt	40	0.009672	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.108156	43137	6223
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.057124	23502	1782
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.133937	58281	4693
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.082700	34716	4107
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.158498	76771	5964
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.240860	52687	2685
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.066357	21730	5871
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.100934	6	4	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.066622	25995	4395
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.085865	33866	5762
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.028521	8696	2417
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.056498	15	7	0.0.0.0.0.2	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.035012	12479	1617
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.105250	27004	6765
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.028369	6496	1795
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.175799	83887	2357
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	0.960100	550	101	0.0.16	synth with cache (only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.136615	6838	2959
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.098259	39565	4593
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.mult_IZR	40	40.126418	24933	3959
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.243428	112463	5617
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.457787	711	199	0.10.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.209696	29676	6647
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.080075	29219	4374
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.178128	29160	2004
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.109369	42942	8913
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.214835	26206	6896
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.007941	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.008429	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.239728	87955	3637
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.360736	103589	8957
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.055267	14022	5222
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	8.144897	11076	1251	0.0.2.2.25.0.0.0.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.051948	17860	5653
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.003335	513	81
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.leb_le	40	40.128305	24993	8726
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.131951	23944	3576
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.227527	106101	10285
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.070464	23412	9460
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007364	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.009340	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.031092	11774	1910
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.120194	53032	5517
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.080782	32726	5325
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.055152	20203	4036
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.170219	24864	4037
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.080344	30195	6839
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.463507	236883	4972
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.010668	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.136422	62859	10804
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.303724	13597	2147
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.445765	97	55	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.028420	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.041032	13962	2528
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.199700	493	134	0.1.1.1.3.0.5	synth with cache (only 1: destruct n; only 1: easy; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.030811	10201	2283
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	1.248754	617	205	0.1.0.0.0.0.0.0.0.2.2	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.051207	17505	4833
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.023256	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.090993	35318	6169
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.109128	31021	5432
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.055577	18205	3025
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.101438	41922	6100
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.succ_IZR	40	40.055222	18233	4618
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.045617	219	99	0.0.1.2.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.604168	108	60	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.030654	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.793482	41	9	0.5	synth with cache (only 1: cbn; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010187	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.061968	23078	3918
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.086427	33381	6799
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.025073	5270	2499
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	1.530496	1163	198	8.12	synth with cache (only 1: intros s' i j heqij heqss'; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.032354	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.218880	102191	7278
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.602793	851	247	0.0.0.1.0.0.1.1.2	synth with cache (only 1: intros n m p; only 1: split; only 1: inversion 1; only 1: auto; only 1: subst; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.053343	18614	6441
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.462787	174894	7665
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.309992	88884	5906
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	3.534151	2660	551	11.0.0.9.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.172682	74886	8624
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.223528	26535	5583
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.067651	20422	3819
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000612	52	29
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.095033	28674	8920
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.124942	53627	4972
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.212096	45206	7385
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.leb_compare	40	40.085579	21290	11171
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.014686	4643	1449
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.064422	25349	5532
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.091784	37492	5546
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.101479	47	19	1.0.0.0.2	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.053849	19970	4064
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	25.386572	28827	6760	1.0.0.0.22.0.3.0.3	synth with cache (only 1: destruct s; only 1: inversion_clear 1; only 1: now constructor; only 1: simpl; only 1: descolor; only 1: split; only 1: contradiction; only 1: contradiction; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.147208	502	139	4.5.0.0.1.0	synth with cache (only 1: intros [| x acc]; only 1: intros; only 1: exfalso; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.206458	39095	5126
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.087291	29069	7870
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.203523	97251	13137
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.119770	49490	5876
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.039599	10944	4558
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.206373	1005	155	2.0.12.7	synth with cache (only 1: firstorder  auto with crelations; only 1: inversion H; only 1: firstorder; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.039877	12866	5043
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.072062	26969	4535
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.004002	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.023451	7873	1803
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Map.get_map	40	40.076186	28081	6327
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.032295	1319	112	4.4.9.25	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.030869	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.083268	32067	5254
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Z_R_minus	40	40.068136	25769	4370
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.057478	19718	5153
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.093528	37836	6566
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.221353	46160	6561
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.exists_le_S	40	11.940424	15161	1930	1.25.1.1.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: auto; only 1: apply le_n_S; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	1.653888	565	159	0.0.0.7.1	synth with cache (only 1: unfold eqk, eqke; only 1: intros s' s x **; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	40.195075	86012	8665
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.138272	8783	1665
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.231265	28149	9187
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.320780	96528	5956
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	40.096875	40026	6797
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.060951	18541	8466
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	14.676791	10908	2706	2.0.0.3.5.1.7.6.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl; only 1: Nat.cases ltac:(n); only 1: trivial; only 1: induction n as [| n H]; only 1: simpl Pos.of_nat; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.083544	31362	5779
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.096439	40125	5338
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000643	57	32
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.min_l	40	40.091087	33300	9071
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_spec	40	0.276475	3	1	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.766007	384010	2751
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.022430	7332	1622
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.129789	57030	6838
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.073564	24628	3470
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.081511	29325	9124
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.036506	13389	2992
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.053202	18525	3807
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_refl	40	0.038680	41	8	6.2	synth with cache (only 1: red; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.make_conj_impl	40	13.087331	8622	3120	2.0.2.6.0.0.0.0.0.0	synth with cache (only 1: intros A eval l; only 1: intro; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: cbn; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.078674	32265	3549
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	30.097184	22410	5134	5.0.0.0.0.0.1.0.0.0.0.8.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.150518	65913	12979
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.039077	9826	5480
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_add	40	15.276267	7457	1744	0.1.0.0.1.0.2.0.15	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: unfold succ, add; only 1: split; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.048517	15644	3383
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.028212	11073	1283
coq-tactician-stdlib.8.16.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.159611	68250	3711
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.096649	35787	7447
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.127920	44465	3084
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.eq_IZR	40	40.028964	6988	2802
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.149268	32125	4678
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_double_add	40	5.080124	875	271	0.1.0.0.1.0.4.0.3	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: split; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.div2_double	40	0.023084	5	4	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.073853	27731	5536
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_lt_mono	40	5.709390	2731	460	10.4.2.0.5	synth with cache (only 1: cases m; only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m IH; only 1: now destruct n, m).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.201335	41	28	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.between_in_int	40	40.177942	80643	10395
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.061229	18314	6043
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.in_int_between	40	2.551079	2069	414	0.0.5.9.0	synth with cache (only 1: intro k; only 1: induction 1; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	40.139189	18379	2525
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	22.996566	20986	3181	19.0.8.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.035489	8	5	1.0.1.0.1	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	15.338985	7330	1771	3.1.2.0.2.2.7	synth with cache (only 1: revert m; only 1: unfold Z.geb, Z.ge; only 1: Nat.cases ltac:(n); only 1: intro m; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.239175	39917	7588
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.010237	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.149172	63777	3719
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	40.200672	95769	4592
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.192894	68157	5640
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.126449	53023	7974
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.160324	72538	4089
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.072179	26847	5617
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000661	83	35
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	4.951348	3434	1143	1.0.1.1.0.0.1.0.0.0.0.6	synth with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.041695	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.052221	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.destruct_list	40	20.650668	82051	2686	103.23.27	synth with cache (only 1: induction l as [| T l IHl]; only 1: RelationClasses.simpl_relation; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.116169	42328	4337
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.109601	47692	7644
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.043648	12065	1795
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.694268	105	50	2.0.3.0	synth with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: now Z.nzsimpl; only 1: now apply Z.mod_add).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.213792	70899	7823
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	1.503998	673	189	0.0.2.5.0.1	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros EQ; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.099972	22253	7044
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_trans	40	40.151313	66900	6005
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.make_conj_rapp	40	40.110504	33047	7472
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	0.468293	110	26	1.7.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: Z.order').
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	14.383194	19329	4026	1.30	synth with cache (only 1: intros; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.009191	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.007243	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	3.220508	2658	551	0.6.3.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros H; only 1: now zero_or_not b; [ intros; subst | apply Z.mod_opp_l_z ]).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.098422	38919	6963
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.170859	55	30	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.124825	23757	6922
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.010404	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.not_make_conj_cons	40	5.959771	1869	539	0.0.0.3.0.1.2.2	synth with cache (only 1: simpl; only 1: intros A eval l; only 1: intros n m; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.314150	155812	17401
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.027851	10712	1323
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.067841	25652	4778
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.023404	8835	705
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.le_0_IZR	40	40.091318	35651	4746
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	10.523789	3616	452	19.1.3.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.103168	41557	8211
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.014947	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.007992	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.165647	71314	5920
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.030267	4	4	0.0.0.0	synth with cache (only 1: intros P ? ? l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.083667	31859	5997
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pow_neg_r	40	40.122550	49494	5376
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.053906	15170	8222
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.in_int_exists	40	40.173163	71082	5657
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.156712	38341	8661
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.055644	15247	3453
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.144099	7	4	2.1.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.096217	40906	3974
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.256416	60657	4316
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.067563	24121	5724
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.206074	31064	5593
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.076811	24510	5079
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.144734	63900	5310
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.056632	19993	4441
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.294938	141319	5006
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.071759	25815	4472
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	0.197696	39	15	0.2.0.1.1	synth with cache (only 1: destruct l as [| x xs]; only 1: intro m; only 1: discriminate; only 1: red; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.005422	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.138499	58045	5946
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.110077	43645	7467
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.size_log2	40	18.560538	16145	2954	21.0.0.0.5	synth with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.116680	23547	6884
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.156485	71960	4636
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.242734	114799	6308
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.301820	176	51	0.5.4	synth with cache (only 1: intros l; only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.120699	50945	6640
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.115882	50238	2675
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.179421	85494	6297
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.035858	9722	4151
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.108094	38990	4711
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.190041	88343	13175
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.app_eq_nil	40	14.617859	13090	3627	18.0.5.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now intros ->; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.app_length	40	0.783584	581	132	0.1.0.12.1	synth with cache (only 1: intros n m; only 1: induction n; only 1: split; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.043330	12246	4832
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.in_eq	40	0.099279	69	18	5.3	synth with cache (only 1: intros ? ?; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.in_cons	40	0.029079	12	5	0.0.3	synth with cache (only 1: intros l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.017597	6294	1564
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.019444	4	3	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.IZR_ge	40	40.059352	21235	3550
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.101543	831	439	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.106664	28241	10694
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.090967	33311	7152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.055462	18213	3860
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.172031	77401	5886
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.063169	17559	5930
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.between_or_exists	40	40.113122	47095	7492
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.093895	40510	7103
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.081588	31491	5315
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.291990	192	27	2.0.10.0	synth with cache (only 1: constructor; only 1: intuition; only 1: inv; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.080804	30600	4937
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.009823	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.165479	69803	6139
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.192772	86967	7918
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.088961	34246	7063
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	31.133520	17108	5308	0.0.0.3.1.2.1.1.0.2.0.2	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_sym; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_left; only 1: apply munion_perm_left; only 1: apply munion_ass; only 1: apply meq_sym; only 1: apply meq_right; only 1: apply meq_left; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.105182	37481	6040
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.056100	18804	7874
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	40.332934	80400	4453
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.019708	5069	2365
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.168780	77404	6328
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.201113	27888	7653
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.size_gt	40	40.087369	26522	5299
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.096834	40106	5203
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.107077	46474	6858
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.169692	128	29	0.10.0	synth with cache (only 1: intros x y H; only 1: elim H; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.018396	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.040022	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	2.044611	1354	125	27.7	synth with cache (only 1: intro; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	0.088718	20	7	1.1.0	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.154610	35277	6225
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.078267	24345	5761
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.150371	64540	9303
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.029803	9359	2025
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.757004	278	56	11	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	6.542888	2900	935	0.0.1.1.0.0.7.1.0.7	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.034926	7356	4263
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.034625	13426	1547
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.128582	52477	8861
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.068206	24277	6975
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.092161	38915	4394
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.023183	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.160674	42	20	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.105672	39963	6943
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.105778	32221	12218
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	38.227109	19558	4138	17.0.7.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.046246	14131	4036
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.067596	25274	3399
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	8.100366	3648	1313	0.0.7.6	synth with cache (only 1: intros x; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	9.482600	3398	1603	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.072799	25821	7889
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.nth_le	40	40.106319	43328	6572
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.177882	79625	6366
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.343096	1732	543	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.104499	7056	1613
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.095210	38178	3725
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.366231	111841	5685
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.147274	62464	6979
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.event_O	40	5.619904	31211	858	2.3.43.19.17	synth with cache (only 1: intros * []; only 1: Nat.le_elim H; only 1: now Nat.nzsimpl; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	4.851117	3403	640	0.2.0.9.6	synth with cache (only 1: intros E; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.069041	24402	6194
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.095072	27842	6656
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.146524	62931	6381
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.073593	26902	7159
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	40.123274	51371	5322
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.059890	24065	1663
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.056133	21482	5536
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.074396	27181	5769
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.log2_spec	40	40.111276	29664	5426
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.732548	278	64	10.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.082196	32326	4637
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.219167	106996	2646
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	5.144668	2773	758	0.3.2.1.0.5.0.2	synth with cache (only 1: intros l; only 1: intros [y H]; only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros x a0 **; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: eauto with *).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.129470	46974	8307
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.050729	14320	4682
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.138029	24059	5587
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.017748	5429	1620
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.131041	56636	5672
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_In	40	40.117230	45124	9969
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.053931	18220	3951
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.double	40	0.434692	175	31	5.5	synth with cache (only 1: intros a; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.067380	23228	5288
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.100627	21660	8924
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.023757	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.093096	32914	6626
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.267967	65	40	0.2.0.0.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.145430	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.132081	29	22	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.024851	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.745929	223	78	0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.048892	17717	1796
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.149404	64412	5392
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.022393	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.902948	141	86	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.310071	2904	210	0.24.4.0	synth with cache (only 1: intuition; only 1: apply (Raw.elements_3 (elt:=elt)); only 1: case m; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.067006	22251	5606
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	4.724897	19862	846	1.0.1.72	synth with cache (only 1: intros (c, Hc); only 1: apply Raw.PX.Sort_NoDupA; only 1: apply (Raw.elements_3 (elt:=elt)); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.096853	25892	8845
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.uniquify_map	40	40.093070	34665	6920
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.075629	23149	6947
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.086376	34392	5835
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	15.072746	9040	4089	0.0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.119102	44456	7350
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	40.341633	147746	6471
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.221744	29503	6035
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.074606	27033	2958
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.097180	26950	6385
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.086249	28267	6767
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.038079	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.061229	22515	4769
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.074116	26187	7450
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.065028	21432	4204
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.040160	15110	1837
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.min_l	40	8.139077	4371	2068	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.008310	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.010192	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.202582	33022	4745
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.057673	18894	6611
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.127680	42643	2864
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.062292	24114	5742
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	11.510354	7183	2096	0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.115280	2326	729	0.0.5.0.7	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.189954	12824	2631
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.046854	13352	5463
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.119012	46678	8016
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	2.820440	1802	601	1.4.2.1.2	synth with cache (only 1: intros n IH; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	6.628673	1317	627	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.085302	32860	5738
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012605	3374	1401
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.In_nth	40	40.250598	61865	6999
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.023622	5174	2379
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.086481	30147	7131
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.088750	30684	8119
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.869139	216	119	1.3.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: auto'; only 1: order').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.743359	552	303	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.048533	14161	4218
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.047397	15731	3870
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.041734	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.058928	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.111507	39611	5975
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.map_2	40	40.109480	43817	5477
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.069935	24324	8041
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.054646	16569	6056
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.050935	13801	7243
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.087800	34716	5347
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	18.765833	6916	1826	0.0.0.0.4.3.3.2.0.2	synth with cache (only 1: intros l k e H H0; only 1: invlist InA; only 1: intuition; only 1: inversion H; only 1: subst; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.952268	273	129	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.008257	6	1	5	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.008594	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	11.726032	3454	1817	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.302565	25418	3600
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.080229	31165	5781
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.251030	30	20	0.1.2.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.025215	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.084306	30703	4936
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.137762	20592	8259
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.917752	214	91	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.147829	64149	3809
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.049176	13443	4543
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.195452	178	32	5.7.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.055458	17289	7338
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.069733	25325	4627
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.085629	30074	6405
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.231677	51465	5479
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.152923	72523	5141
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.mod_lt	40	40.131948	43578	6780
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	28.782361	20344	4986	7.14.5	synth with cache (only 1: intros a b c Hb; only 1: apply pow_le_mono_r; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.130964	36200	7128
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.108782	3693	1957	0.0.0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.260101	26	13	4.1.0	synth with cache (only 1: intros; only 1: pose proof (add_mul_mod_distr_l a b c 0) as E; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.275202	1055	370	2.0.0.2.0.0.3	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	16.323302	9099	1274	1.0.3.0.0.23.3.3.0	synth with cache (only 1: induction s1 as [| a s1 IHs1]; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.102023	40321	8284
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.064169	18892	8360
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.104448	37232	5978
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.060804	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.056437	18510	3387
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.198075	25533	5746
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.097211	16	10	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015576	4684	1499
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_indep	40	40.104157	41682	8786
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.082670	30134	4438
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.062956	11187	5045
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.051820	14196	5746
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.109321	43473	6712
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.094457	39654	6314
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.079065	27132	7907
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.097391	35529	6949
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	17.270046	13771	2946	1.0.17.1.0.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.065449	19121	7968
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.068986	23411	2483
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.086092	36277	4195
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.049526	17077	4481
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.024546	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.083459	30883	6946
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.082437	19950	2980
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.134416	56737	8584
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.040011	11424	4824
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.102496	40475	6001
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	3.726257	1086	419	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.142131	5875	1150
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.087567	30646	8917
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.250911	55726	7030
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.051441	15567	5350
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	13.050783	9852	1405	0.2.14.0.17	synth with cache (only 1: intros Heq; only 1: intuition; only 1: inversion H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.070772	25097	6314
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	9.959706	5712	1104	0.2.6.18.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.146036	56237	8458
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.163427	49103	6119
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	19.174106	6865	2597	6.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.035328	7	5	0.1.1.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.032395	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.050088	16749	2872
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.977202	293	126	0.0.0.0.1.0.0.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.119767	30372	5940
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.089522	29686	7718
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.082120	24030	5142
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.104314	29675	3767
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.270574	29887	6281
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.354536	35	18	4.2	synth with cache (only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_split	40	40.085252	31155	6485
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.029114	10336	660
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.122792	49516	6157
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.029089	12	4	1.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.092456	27823	5913
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.110552	8858	1572
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	16.309715	12065	3008	1.0.8.4.0.8.1.1.1.0.0.0.0	synth with cache (only 1: intros n; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: now rewrite opp_nonneg_nonpos; only 1: destruct_max n; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: now apply divide_abs_l; only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: now apply divide_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.107371	17061	3966
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.map2_2	40	40.132058	46160	6448
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.078968	28836	8769
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.065489	21965	5585
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	5.036202	1906	915	0.0.0.1.0.0.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.098387	39893	6171
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.115281	49085	6562
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.022162	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.150500	536	250	0.3.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.211045	95900	6189
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.065649	22801	3368
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.035284	10544	4135
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.077248	24810	5911
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.071630	21329	5110
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.054568	18205	3661
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.275441	14	6	2	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.062648	22554	6671
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.010188	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.044150	11198	3865
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	2.653355	688	341	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.078681	24756	5309
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.004664	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.140218	6	1	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.015615	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.056391	27	5	6	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.133029	6027	407
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.008785	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.057174	13063	5762
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.005683	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	24.358961	12014	2310	2.0.1.1.11.15	synth with cache (only 1: intros m IH; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: apply eq_true_iff_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.258685	258	109	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.097506	37225	6492
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.171303	46580	8471
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.115205	3357	1331
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.094672	34292	6042
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.721440	563	278	2.3.2	synth with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.071333	26203	5376
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.088237	27758	7878
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.069470	21981	6439
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.058658	21751	4060
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.099171	30152	5874
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_error_None	40	40.162338	68404	8902
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.018448	5594	937
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.092709	32811	6110
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.066321	8010	1473
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	5.158766	290	146	0.0.0.1.0.1.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.157450	28892	4375
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.068571	21796	7996
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.124166	45230	9591
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.083419	32761	6352
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.063778	18647	7739
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.182340	29	23	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.073699	27395	6087
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.025975	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.030594	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.inj_neq	40	40.112056	47481	7165
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.148122	9632	1690
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.128361	21028	5567
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.067282	22951	5535
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.019708	4	3	0.1.0	synth with cache (only 1: intros m x y e e'; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: auto using (Raw.PX.eqke_equiv elt)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.071105	20751	6234
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.091647	31378	5003
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.111639	78	12	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.050531	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.188511	78365	5129
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.047526	11268	3412
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.039243	10463	4530
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.104059	40589	6080
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.059578	18738	6857
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.009158	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.033780	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.053392	16758	5353
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.064239	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.026499	8	2	3.3	synth with cache (only 1: unfold Pos.le; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.017503	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.012362	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.008728	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.026557	9301	1317
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.037190	9987	3809
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.073920	23412	9948
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.775217	1323	140	0.0.0.0.0.0.0.0.19.1.0	synth with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.056210	8389	3441
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.049347	14372	4321
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.063858	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.074602	26209	6986
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.104795	38078	5667
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.106659	41394	6285
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.056922	19710	3396
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.032735	6509	3513
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.206368	31945	9365
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.089972	29372	7290
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	11.669219	11753	2243	14.6.8	synth with cache (only 1: intro m; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	8.056006	2896	735	1.9.8	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.026914	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.146231	18386	939
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013453	2936	1215
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	26.623712	10452	3305	1.0.0.1.1.1.5.13	synth with cache (only 1: intros n IH; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.363118	44	18	2.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.259307	38	16	1.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.107620	8916	2104
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.045364	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.069249	512	106	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.191084	19627	7390
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.176819	77130	6259
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.031249	6962	3322
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.055385	17279	5810
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.048790	5	5	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.090759	17121	5981
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.inj_minus2	40	40.098178	40036	5137
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.948802	644	311	0.0.2.4.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.399196	50	27	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.094688	15106	4180
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.119324	13	10	1.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.223680	89768	5029
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.060760	22963	3534
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.091969	29598	8194
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.092696	32443	2776
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.085552	17639	3746
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.071698	18553	4020
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.146930	65105	3466
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.078716	11460	1279
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.046693	10694	2783
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.063176	17113	5366
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.191075	73053	7173
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.079268	23271	8100
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.099891	31279	5020
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.068076	16943	3910
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.040351	11080	4007
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	1.712812	968	182	0.0.0.8.0.3	synth with cache (only 1: intros a; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.048353	15965	3136
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.056505	18741	3952
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.100388	35163	6240
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.080647	28376	6047
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.074997	25976	6523
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.057321	11106	2757
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.262476	110274	8911
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.066341	20839	4708
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.295363	140742	3783
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.062981	18604	4276
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.380753	79	31	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.180451	76073	8860
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.012316	2	2	0.0	synth with cache (only 1: revert P a f; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.862157	436	111	0.2.1.3.3.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.129562	53408	6704
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.047334	13200	4887
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.067582	17747	6113
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.068126	20728	5463
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.052438	19770	3034
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.983337	1040	385	0.0.0.4.5	synth with cache (only 1: intros n m p Hp; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: now f_equiv; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.065804	19059	5231
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.100488	36054	5566
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.015631	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	0.283060	362	37	0.0.17	synth with cache (only 1: intros (e, abs); only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.029111	21	4	6	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.103483	25398	4392
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.084407	27841	6948
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.098643	19539	5346
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.079888	27878	6038
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.153210	59049	6263
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.169551	77594	3195
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.014150	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.089539	19296	5332
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.078280	20768	3644
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.110268	35288	5860
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.018345	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	4.695080	1808	698	1.0.0.6.1.0.0.5.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.056195	14245	4015
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.194495	27	12	0.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	40.055451	14208	4708
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.097357	37672	5466
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.082814	36963	2835
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.067145	20180	6236
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.034335	10669	1741
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	12.127210	4818	1810	4.11.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.528951	476	189	3.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	1.466576	907	209	0.0.0.0.5.4	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.remove_In	40	40.100677	36170	6544
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.124456	15	9	0.0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.130339	54712	3301
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.066018	22208	6225
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.093681	33663	5746
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	2.233180	1602	402	4.0.11	synth with cache (only 1: intro a; only 1: unfold lcm; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.078773	24902	6083
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.070347	8	4	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	1.451410	723	206	0.0.0.1.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.142299	44975	7476
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	40.090511	31930	4808
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.192276	46051	5491
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	11.328727	7776	1826	2.13.0.3.1.0.7	synth with cache (only 1: intro l; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros n m; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.066146	22873	5522
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.067910	20940	6437
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.097982	36247	6407
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.123774	48143	5732
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.044624	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.078497	25514	3718
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.073988	29818	3504
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	3.904835	1564	448	0.0.0.0.5.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.030451	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.381285	284	74	2.2.0.3	synth with cache (only 1: intros x x0; only 1: firstorder; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.072278	36	10	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.079985	23538	8050
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.048344	14064	5693
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.098281	36885	5626
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	5.850157	2182	934	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.137894	52075	7338
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.078350	25837	4155
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.095148	24386	5834
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.div2_spec	40	0.015567	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.069939	22230	4492
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.075818	26666	4147
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.062176	14638	2913
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.116937	45756	7347
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.047032	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.065413	23770	4117
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.059705	19599	5096
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.116476	48443	5788
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	26.065095	13461	4576	0.3.9.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	39.825665	22759	1647	0.1.0.0.57.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: now nzsimpl; only 1: apply le_refl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	4.348813	2106	914	2.0.0.0.0.0.1.1.0.0.1.1.1.0.1.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.064243	23670	3701
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.028261	8387	2450
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.102205	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.111443	30170	5294
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.156955	57965	5829
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	40.079348	22141	8246
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.008526	3	2	1.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.086476	22627	7274
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.456246	1806	821	2.1.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.009176	2	2	0.0	synth with cache (only 1: autorewrite with order; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.625954	810	256	0.0.0.4.1.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.064296	20536	5146
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.086400	31176	4810
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	0.879925	518	84	2.23	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negbFE	40	0.008539	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	16.203457	26689	2436	0.6.0.0.32.0.14	synth with cache (only 1: unfold Z.lt; only 1: simpl in *; only 1: unfold Z.succ, Z.pred; only 1: destruct x; only 1: congruence; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.contraT	40	0.079614	41	9	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.contraFT	40	0.168176	51	8	1.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.012677	6	2	3.1	synth with cache (only 1: intros x y H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.007771	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.012451	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.006380	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007417	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.011425	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z_eq_mult	40	2.103376	1455	275	7.6.9	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.263434	120450	6610
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.161242	70833	8163
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.021335	6465	1369
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.587757	1907	211	23.0.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.059430	20316	3655
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.068005	20639	6680
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.117659	47945	6605
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	2.354686	1139	209	12.0.1.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.389316	687	410	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.090296	19620	5474
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.064469	21419	4595
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.280827	126484	11174
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.058002	20416	4345
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.067040	22007	5746
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.080956	25318	5502
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.rev_app_distr	40	27.788916	20777	4829	0.8.1.0.0.1.2.0.14.3	synth with cache (only 1: intro l; only 1: induction l as [| a tail]; only 1: intros l2; only 1: symmetry; only 1: apply (app_nil_r (A:=A)); only 1: intros l2; only 1: cbn; only 1: rewrite !(app_assoc (A:=A)); only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.094299	24633	5263
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.163068	70261	4773
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.167731	17117	4527
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.121430	45145	14999
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	22.070496	7568	1975	0.0.0.0.0.2.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.090883	31894	8387
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.056744	19154	3762
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.042720	11496	4657
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.050615	17469	3633
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.076320	11850	5033
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.067289	24678	4364
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.076578	29094	4414
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.025071	6747	2234
coq-tactician-stdlib.8.16.dev	Coq.Setoids.Setoid.gen_st	40	0.723561	470	210	3.9	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.013401	2	1	1	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.005540	9747	1513	0.0.0.18.16	synth with cache (only 1: intros H x y Hxy; only 1: rewrite Hxy; only 1: red; only 1: intros h1 h2; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.139830	58327	5278
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.094557	31696	5555
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.643164	316300	6516
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	1.207791	976	191	5.12	synth with cache (only 1: unfold not; only 1: iorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.013253	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.066218	19871	4320
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.472077	80	40	0.4.1	synth with cache (only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.297572	28650	1293
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.759115	450	43	0.25	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.612895	370	38	0.23	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.234884	107070	9164
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.076543	27727	4358
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.075467	23041	6920
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.208420	89882	8722
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.092851	31837	10113
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.237852	107391	7366
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.084573	30571	6385
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.055223	16217	5046
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.057610	16819	1269
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.050721	16407	3361
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.094200	33467	5560
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003325	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.007714	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.004643	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.334316	64	16	1.2.3.0	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.007384	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.040895	10584	3360
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.rev_alt	40	40.110634	40005	7872
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.068923	22499	5730
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.093060	32876	5566
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.065127	21951	3996
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.099573	35385	11852
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.concat_app	40	2.776269	1438	484	1.5.0.0.0.1.0.0.3	synth with cache (only 1: intro l; only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- app_assoc; only 1: f_equal; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.098687	35570	3929
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.057615	17751	3975
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.map_length	40	0.033100	6	5	1.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.map_eq_nil	40	0.027896	10	3	2.0	synth with cache (only 1: intro l; only 1: now destruct l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.080452	28087	7012
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.034762	8772	4351
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.062562	22578	3936
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.051703	15608	4082
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.057312	20124	2978
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.002494	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.007657	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.705144	168	40	0.0.0.8.1	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.111524	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.449754	120	103	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.025516	6366	2098
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.068892	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.084168	29439	8400
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	4.520178	2695	709	0.0.0.4.0.0.5	synth with cache (only 1: intros a b n ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.118818	49135	5608
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.006928	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.017334	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.063457	18183	5994
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.055479	18429	3585
coq-tactician-stdlib.8.16.dev	Coq.Program.Subset.match_eq_rewrite	40	0.488617	350	94	0.1.0.3.6	synth with cache (only 1: intros n P IH0 IHS; only 1: intro H; only 1: destruct H; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.incl_right	40	0.013577	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.256999	118469	10117
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	6.426688	3656	643	0.5.0.12.0.0.8	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_2; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.021278	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.280947	2804	523	1.0.2.11.0.5	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.011920	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.056122	16895	5185
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005145	4	1	3	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.UIP_refl_refl	40	0.022682	11	6	4	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.190616	203	14	20	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.solution_left	40	0.031905	28	8	0.0.7	synth with cache (only 1: intros y H; only 1: destruct 1; only 1: exact y).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.324122	15619	899
coq-tactician-stdlib.8.16.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.375684	175696	10622
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.099961	27644	7733
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.190336	25119	5974
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.064132	26488	4581
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.163647	69102	6750
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	2.726635	1322	324	0.0.17.4	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.105877	25886	2539
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	10.926917	3239	844	2.0.2.0.0.0.4.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_r; only 1: rewrite <- succ_le_mono; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.097275	24954	9464
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.022428	6633	1724
coq-tactician-stdlib.8.16.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.079508	17869	14174
coq-tactician-stdlib.8.16.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.008282	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.090199	30872	7987
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.038150	4099	576
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.074861	25837	4973
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.055438	15673	6227
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.land_spec	40	40.097680	34384	3906
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.180715	36902	5213
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.031737	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.093045	14	8	0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.112422	41009	16188
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.069543	23597	4275
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.067237	16964	6811
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.700546	185	102	0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.060647	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.count_occ_map	40	40.122058	48772	4698
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	33.912989	27403	6309	1.0.4.0.0.0.0.0.0.4.0.1.1.7	synth with cache (only 1: intro n; only 1: induct n; only 1: intro n; only 1: intro H; only 1: apply le_0_l; only 1: intros n IH m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: now rewrite pred_succ; only 1: intros k H1 H2; only 1: apply le_succ_l in H1; only 1: rewrite pred_succ; only 1: apply lt_le_incl in H1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.067769	23557	4111
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	30.119109	9519	2752	17.0.7	synth with cache (only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Bool.IfProp.IfProp_false	40	0.026462	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros A B H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Bool.IfProp.IfProp_or	40	0.015891	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.723858	156	51	5.0.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.020004	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.060105	22861	4244
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.964380	962	249	0.1.1.0.0.0.0.4.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.073471	18873	16267
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.496787	222825	8009
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.078461	21728	5912
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.091543	33850	7400
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	10.683035	6593	1168	0.2.0.2.17.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.068835	21366	6237
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.map_ext_in_iff	40	10.649933	10739	2083	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.15	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.191091	793	208	0.0.1.0.0.1.0.0.4.5	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.113143	47009	5549
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.024799	8086	1305
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.406496	39805	1926
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.lock	40	41.180052	604615	7993
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.222323	40600	9718
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.148891	40	21	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.181209	53	27	0.2.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.129134	51801	6868
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.044133	12367	5811
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.105475	39504	6945
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.092156	30096	7747
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.059936	17749	4967
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.089929	29567	8325
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.852181	627	93	2.3.5.15	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004144	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.070080	25656	4522
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	6.796351	4000	1446	0.0.1.0.0.0.0.1.0.0.0.0.2.0.1.0.0	synth with cache (only 1: revert q; only 1: induction p as [p| p| ]; only 1: simpl; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: intros H; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.031907	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.100136	38885	5121
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.116101	36356	6331
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.038083	5754	874
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.064947	11	2	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.069212	23993	4343
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.059793	18309	5030
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.121733	38423	3950
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.068443	22032	5423
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.gt_lt	40	0.398149	42	13	0.4.0.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: intro H1; only 1: false_hyp H ltac:(H1)).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.lt_gt	40	0.006395	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.045537	12125	4156
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	17.066821	8371	3149	0.9.0.2.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.032817	8	6	0.0.0.0.0.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.347539	161575	8799
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.054829	16437	3799
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.079268	27592	8272
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.039545	10756	3156
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.102140	38179	6349
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.026037	9771	1130
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.004204	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.004829	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.proper_proper	40	0.066709	8	3	5.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.025433	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_tag	40	40.946061	469523	4625
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_sig	40	0.011185	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_sig2	40	0.016975	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.095599	10885	6374
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.120059	50548	4368
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.083005	27941	6373
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_left_length	40	40.128814	53442	5994
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.066427	22252	6324
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	6.578008	2024	539	0.0.3.0.0.1.1.1.4.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	40.034524	5124	1197
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.005810	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.008203	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.037657	6	2	3.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.006927	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.007997	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.006659	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	37.698152	507802	3547
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	4.676804	44891	1083	5.0.1.49.71	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.409803	34521	987
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	34.954464	44784	7014	0.0.14.5.6.0.1.0.43.2.0.1.3.0.2	synth with cache (only 1: split; only 1: intro n; only 1: intro m; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: revert m; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.250100	66	15	0.0.0.9	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.538565	500	27	0.30	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.locked_withE	40	40.669071	342069	12353
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.057135	16625	5497
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.053867	19403	3638
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.081566	14526	4139
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.385003	186172	10764
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.448601	574	86	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.117214	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.035724	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006156	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.137669	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	17.479276	5964	2360	0.0.1.7.0.0.0.0.0.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ge_le	40	28.048093	20398	3725	4.19.0.5	synth with cache (only 1: unfold min, le; only 1: intro H; only 1: rewrite Pos.compare_gt_iff; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.073433	27662	3710
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.067617	16003	6872
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.060444	19737	4615
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.074331	25137	7820
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.030113	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	6.033512	3131	589	0.5.2.14	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.064995	16614	14235
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.051010	37	8	2.4	synth with cache (only 1: intros R H x x0 y H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.026469	18	6	0.0.6	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.006409	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.025836	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.proper_proper	40	0.822627	316	159	3.6	synth with cache (only 1: simpl_relation; only 1: apply H).
coq-tactician-stdlib.8.16.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.504804	238085	6491
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.003084	1679	270	1.1.12.5.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.not_false_is_true	40	0.009477	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.403193	1149	60	0.41	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.not_false_iff_true	40	0.019268	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eqb_prop	40	0.009302	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_sym	40	0.011144	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007216	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_true_iff	40	0.014547	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_false_intro	40	0.024404	6	6	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_true_r	40	0.008616	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_true_l	40	0.004358	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.084328	14923	3290
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_true_eq	40	0.089905	27	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_diag	40	0.006373	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_false_elim	40	0.062250	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.013915	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.013729	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_false_r	40	0.006827	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_false_l	40	0.006910	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_true_l	40	0.006644	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.011229	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_eq	40	0.008864	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.012437	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.015094	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.039154	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.009549	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.028462	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.absurd_eq_true	40	0.007913	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.010806	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.011315	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.018874	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.013329	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.reflect_dec	40	0.015839	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.079349	29233	4127
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.284418	73	20	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.025721	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.068419	22836	5282
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.085331	29293	6844
coq-tactician-stdlib.8.16.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.117165	45799	7067
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.041597	10063	5799
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.092220	30877	11883
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.111474	45530	8086
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.046812	2021	624
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.342247	154949	13081
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.007333	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.567777	1277	126	9.16.3	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.087252	297	18	24	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.052372	16370	5821
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.013976	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.051583	14431	4942
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.057716	19660	6115
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_left_rev_right	40	40.098550	35197	7363
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.786193	306	102	2.0.1.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.105623	31	11	0.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.065269	19922	11937
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.161666	77173	3756
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	1.686564	22550	205
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	8.482839	5247	568	0.4.10.4.3.1.1.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intro p; only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.077931	27208	7231
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.007183	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.010631	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.031338	8393	3390
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.007071	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.008876	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.413281	144811	5468
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.nary_congruence	40	40.116124	37548	9748
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.124573	9	3	2.4	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.046606	12277	6122
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.063101	21212	5583
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.596732	265	90	0.1.1.0.0.0.2	synth with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	14.517886	4493	2044	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.121418	51555	4848
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.096878	4	4	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Decidable.dec_True	40	0.007765	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.124115	23774	5173
coq-tactician-stdlib.8.16.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.038208	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.775549	696	352	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.086197	5089	1593
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.310911	104	27	0.2.2.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.058296	16763	7789
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.037111	5166	2149
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.062632	17395	3810
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.228849	94689	11015
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.JMeq_ind	40	40.289184	133523	11941
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	4.928516	43335	543	0.0.0.3.3.214	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: split; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	18.140952	3830	1434	0.0.3.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.204389	51	23	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.261364	123981	4067
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.057474	17367	4322
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.347072	160850	10690
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.071935	24898	6835
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004990	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007278	2	2	0.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.012033	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.122961	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005377	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.021306	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.083695	3	2	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.040983	11576	4263
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.103900	40035	9515
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.abstract_context	40	20.635835	293336	2579
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.246320	114723	14247
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.021312	18	7	1.1.3	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.084940	33837	6286
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.084963	29463	10261
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	5.109849	8088	1646	2.2.0.0.2.1.2.5.0.0.0.0.8	synth with cache (only 1: intro n; only 1: constructor; only 1: constructor; only 1: auto  10 with sets; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: red; only 1: intros A B [H1 H2]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.011493	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Program.Combinators.compose_assoc	40	0.010646	5	3	1.0.1	synth with cache (only 1: intros A B f g H x; only 1: intro a; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Program.Combinators.flip_flip	40	0.005419	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.453560	231426	11077
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.375746	174954	9706
coq-tactician-stdlib.8.16.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.119531	3813	623	0.12.6.0	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.013742	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.063635	22709	4257
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.066461	51	13	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_symmetric	40	40.122008	47946	6818
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.006168	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.103218	40934	10904
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.017741	8	2	6.0	synth with cache (only 1: intros A a b H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.120523	45763	9159
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.010697	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.255712	123216	7155
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.074158	31825	2203
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.038620	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	40.056801	19398	4504
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.418434	82273	3519
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.052746	16038	5636
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	14.444697	62965	2866	0.83.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.307811	3369	340	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.092964	35324	5749
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.030239	7	6	0.0.1.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: symmetry; only 1: now rewrite ?Hx; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.050982	16408	6613
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.and_hprop	40	40.215801	92280	12345
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.true_hprop	40	0.017522	28	6	4.2.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.not_hprop	40	0.012678	6	5	0.0.1.0.0	synth with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.056957	20014	3457
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.090388	36215	7797
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	12.033549	6329	2589	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.027968	10	4	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.057806	17692	5627
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.106141	21	10	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.053702	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.085816	29051	9568
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.529082	60	30	5.0.1	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.226131	102378	10333
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.288358	136105	12119
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	1.310537	18887	187
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.108215	42591	6787
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.008368	7	2	0.5	synth with cache (only 1: intros [x y]; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	8.862099	25746	2086	11.40.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.463100	348	59	2.11	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	35.001419	114326	12802	2.3.2.3.0.7.23.4	synth with cache (only 1: red; only 1: intros A P H; only 1: destruct H; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.103992	41641	7336
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	2.370933	3308	430	0.1.6.9.1.4.1.3.3.5.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.161147	73298	6864
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.056431	19158	4429
coq-tactician-stdlib.8.16.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.028546	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.011029	3	3	0.0.0	synth with cache (only 1: intros A B f g H x; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.063272	23125	4542
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.033461	9449	3912
coq-tactician-stdlib.8.16.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.299047	140029	10697
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.082578	29179	7946
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.056500	19853	4614
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.096011	31555	9530
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	16.275628	26391	4718	7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.17.6	synth with cache (only 1: constructor; only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.507381	243763	9064
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.065591	19061	7228
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.forallb_forall	40	40.101992	11515	2356
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.086937	33493	9489
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.015410	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.338277	155945	10564
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	29.981004	12971	3881	1.4.11.3.0.0	synth with cache (only 1: intros; only 1: apply odd_add_even; only 1: nzsimpl'; only 1: exists m; only 1: nzsimpl'; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Bool.DecBool.ifdec_left	40	10.515554	18085	3089	3.1.0.0.13.4	synth with cache (only 1: unfold not; only 1: intros h1 h2; only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.pred_Sn	40	0.024638	12	8	3.1.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.plus_n_Sm	40	0.261057	180	74	1.0.0.0.0.4.2	synth with cache (only 1: intro n; only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	1.534334	1310	310	0.0.0.2.2.1.0.3	synth with cache (only 1: unfold Setminus at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: tauto; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.200035	59	33	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.076457	18079	3698
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.183579	82806	11326
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.107286	509	190	0.1.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT_eta	40	0.008444	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.415235	189551	10620
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.018847	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.015367	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	5.407167	66815	632
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.classicP	40	40.439818	208449	8578
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	4.359733	47020	947	0.0.0.85.50	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.022679	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	7.778847	13074	1757	6.6.34	synth with cache (only 1: intros H ?; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig.rew_sig	40	0.020096	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.029337	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	4.437468	3480	415	3.12.10.8.2	synth with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.014533	86	27	2.2.0.0.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.003801	12	5	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_iff_compat_l	40	0.142568	1250	143
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.527149	2321	414	9.9.0.1.4	synth with cache (only 1: intros H ?; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.195585	90687	6138
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.andb_true_intro	40	8.988866	87562	3140	1.111.3	synth with cache (only 1: destruct 1; only 1: subst; only 1: repeat split).
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.334294	1541	119	0.30	synth with cache (only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.101530	16079	6261
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.hset_hOneType	40	40.209988	94166	11022
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	40.066173	7171	2055
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.074260	28153	7050
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.073378	25666	6145
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.039393	12214	3199
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.086691	15239	4244
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.013169	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.012050	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	35.785200	94362	10419	0.23.4.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.431713	33	15	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.671169	574	170	0.2.4.2.0	synth with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.010744	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.012886	8	3	0.5.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.009267	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.370770	615	114	2.6.6	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.064874	22523	8343
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	3.723185	10099	1210	0.37.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.014478	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.pair_andP	40	0.020072	14	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.089212	32082	10192
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.025582	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.032949	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.807058	641	141	0.1.0.0.9.8	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.013778	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.053485	25	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.022238	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.041122	11	5	5	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.104994	18	8	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.336353	157871	7983
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.381980	181482	12619
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.035415	33	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.201290	94033	8676
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	1.436920	1551	206	3.20.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.061872	22301	4364
coq-tactician-stdlib.8.16.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.937529	477749	7849
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.073996	25258	5027
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.085954	32250	11944
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.060267	21621	4830
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.102841	40697	12463
coq-tactician-stdlib.8.16.dev	Coq.Init.Byte.of_bits_to_bits	40	41.341964	686239	6713
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.091336	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.053964	17079	5011
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.213762	68826	7589
coq-tactician-stdlib.8.16.dev	Coq.Init.Tactics.decide_left	40	40.341634	164924	12488
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.mult_n_Sm	40	40.147668	62534	11340
coq-tactician-stdlib.8.16.dev	Coq.Init.Tactics.decide_right	40	0.013534	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.071772	23185	7741
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.951076	307	89	0.0.9	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.354999	173566	6591
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.classic_pick	40	40.173340	72163	3525
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.162648	72333	3850
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.406701	191758	11255
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.029243	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.034341	5	4	0.0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.062072	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.and_cancel_l	40	40.599088	292772	22901
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_comm	40	0.177435	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	2.050443	21500	200
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.719448	1009	117	0.2.13.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.012530	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	8.211537	11089	1261	0.2.28.10	synth with cache (only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andFb	40	0.003941	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orTb	40	0.005117	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbb	40	0.004521	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andbAC	40	0.062635	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbC	40	0.006367	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbAC	40	0.013417	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orb_idl	40	0.009841	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_id2r	40	0.024728	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orb_id2l	40	0.020751	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negb_and	40	0.008739	2	1	1	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andKb	40	0.008429	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbK	40	0.008253	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orKb	40	0.010762	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybT	40	0.008824	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implyFb	40	0.006571	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implyTb	40	0.006092	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negb_imply	40	0.007257	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybE	40	0.008017	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybN	40	0.008027	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbF	40	0.007426	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbACA	40	0.022089	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_addl	40	0.010748	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_addr	40	0.013679	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addKb	40	0.011765	4	1	3	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addIb	40	0.012077	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbT	40	0.008438	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.sub_refl	40	0.180371	402	36	2.2.21	synth with cache (only 1: intro; only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.045627	13652	4735
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.829777	417591	14869
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.rew_pair	40	0.014894	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.046700	12150	5509
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.048312	15463	3904
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.108133	34025	8791
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.062833	21610	5600
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.058399	18900	3664
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	39.482745	23445	2437	38.24	synth with cache (only 1: intro n; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.371815	8492	937
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.090426	31293	6613
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	9.278097	81228	607
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.087695	31626	8215
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.039032	15	5	0.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.344265	168825	11001
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.subrelUr	40	12.402798	31457	2600	9.20.15.37	synth with cache (only 1: intro z; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.009245	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.144912	62037	12996
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.010043	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.071354	24819	6803
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.029269	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.030204	6	3	0.1.2	synth with cache (only 1: unfold leb, le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.196581	78011	11469
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.010690	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.100073	36737	5963
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.101856	34074	4737
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.282182	9551	931
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.find_none	40	40.048550	7424	1918
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_split_r	40	0.112285	6	6	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: intros [? ?]; only 1: cbn; only 1: now intros [[=]| ?%IHl]; destruct (split l); [ left | right ]).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.211732	94988	10153
coq-tactician-stdlib.8.16.dev	Coq.Init.Byte.to_bits_of_bits	40	40.111844	45957	4815
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.079054	28665	4529
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.050518	15922	4177
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.208920	16623	3337
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.le_S_n	40	40.250845	107242	16870
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.647670	322508	6771
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	10.375984	12550	2870	0.0.0.0.0.10.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.12.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.093057	32624	7109
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.016191	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.and_assoc	40	40.397255	186231	16621
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004900	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007731	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.005425	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.010342	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.357747	1625	50
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.rew_opp_l	40	0.007683	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.f_equal4	40	0.014874	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.f_equal5	40	0.022000	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.007820	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_sym_involutive	40	0.006924	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.map_subst_map	40	0.008496	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.rew_swap	40	0.009470	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_assoc	40	40.583176	268619	17788
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_id_comm_l	40	0.413766	2052	57
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	40.098115	33332	7364
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.085434	29306	6199
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.072400	25028	6810
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.080712	27772	8805
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.053847	17292	5125
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.060098	21516	3655
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.149669	66537	4772
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.090571	34145	5034
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Filtering.filter_map	40	40.203213	23910	6904
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.087592	30164	9751
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.length_order.lel_tail	40	0.007518	1	1	0	synth with cache (only 1: now intros ?%Nat.succ_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.035603	23	7	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.546465	261529	3590
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.537246	253022	2516
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.008812	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.054838	38	6	0.9	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.014909	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.012805	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.079908	44	9	3.6	synth with cache (only 1: intros r s; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.013812	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.085093	31249	3864
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.sub_in12	40	0.630522	455	33	2.26	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_trans	40	7.356458	5214	1133	0.0.1.0.7.0.0.3.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.202286	93382	13352
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.008894	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_all	40	0.190646	72	33	0.0.0.1.4	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.611024	290371	3476
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.048708	15673	5811
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	19.853593	12073	3435	1.7.10.0.1.4	synth with cache (only 1: revert m; only 1: intro q; only 1: unfold lt, le; only 1: revert q; only 1: intro H; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.010203	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.064490	21878	6481
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.098765	30155	5255
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.044177	14312	3702
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	7.446126	5199	1423	0.1.0.1.0.0.0.1.0.1.0.0.1.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.910489	857	103	0.21	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.048717	21	10	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.110061	43464	8155
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.615598	321	73	0.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.122833	87	29	0.0.1.0.7	synth with cache (only 1: intro b1; only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.372150	172275	3325
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.083021	30372	6608
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_O	40	0.009086	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.051332	16511	4082
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	11.639139	7042	1002	1.1.2.0.18.4	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_prod	40	40.061489	19236	7124
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_O	40	0.045355	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: cbn; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.nat_double_ind	40	40.193173	83893	12752
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.453590	449	48	0.0.17	synth with cache (only 1: intros [| n]; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_all	40	0.035310	8	6	1.0.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.100401	24644	5452
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	3.761971	1870	523	0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: apply testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: assumption; only 1: order_nz).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_skipn	40	3.427580	2276	667	2.0.0.3.0.0.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.158300	63300	10222
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.min_l	40	4.346190	2719	1483	0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.length_order.lel_trans	40	40.148976	61568	6016
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.SetIncl.incl_app	40	27.551471	13840	2649	11.1.0.1.7.4	synth with cache (only 1: intros l m a; only 1: induction l; only 1: intros H; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.080765	25124	9009
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.862831	438363	11437
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.130779	48958	8668
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.088234	31945	6583
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_app	40	8.045072	39711	818	2.39.1.11.2.178	synth with cache (only 1: revert a; only 1: intros H; only 1: induction l1 as [| h l1 IHl1]; only 1: now constructor; only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.119356	22964	4543
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.027848	4628	1858
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.068667	25450	3540
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.079293	32191	3952
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.145864	33657	5728
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.370559	172015	6277
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.nat_rect_succ_r	40	17.106101	31428	4096	1.2.7.0.32.4	synth with cache (only 1: simpl; only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.112165	14955	2785
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.248202	103945	3801
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.029441	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.083322	27383	6008
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.167398	71806	11660
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.020782	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.061128	18032	7517
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_preorder	40	40.192911	82351	9109
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.006893	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.089059	30782	6933
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.296644	131587	3541
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.087140	33131	4700
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.029683	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.152564	31349	5556
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.071195	21555	8515
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	5.778583	4076	1178	1.0.3.0.14	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: exists r; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.279973	124468	3087
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.070757	23388	6984
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	11.772378	10152	1360	18.4.0.0.0.0.0.3	synth with cache (only 1: assert (H : forall n, Even n -> Even (- n)); only 1: intros n (m, H); only 1: exists (- m); only 1: rewrite mul_opp_r; only 1: now f_equiv; only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.133510	19485	3252
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.043295	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.128789	13155	2284
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.153389	25232	3610
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.124651	28482	5691
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.058690	19127	5461
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.144871	57512	12043
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.097788	36172	7397
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_split	40	40.115408	45065	6826
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.max_r	40	0.746380	306	101	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now apply le_antisym; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.034300	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.119694	21296	5155
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_inv	40	40.172040	73470	7397
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.168578	36269	5321
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.143967	25487	4748
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.120955	26637	7797
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.189815	18377	5381
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.049845	14549	4983
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.132378	59840	5248
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.166240	36123	4315
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.188668	72922	2824
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.106755	41530	8203
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.117434	47476	7781
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.091009	32345	6485
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.134755	30958	6882
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.079077	24800	6709
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.183850	39732	4635
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.098685	37020	4583
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.152050	62221	6602
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.104410	40808	8792
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.161323	26680	5005
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.167782	45051	6043
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.106536	44637	3240
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.NatSeq.seq_shift	40	24.476502	27962	4593	4.0.0.0.0.0.0.0.0.0.13.8	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros []; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: intros []; only 1: f_equal; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.159693	26539	5259
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.077998	26393	5070
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.157345	18947	4645
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.124397	12479	3205
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.051943	16823	3453
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.176745	31013	5679
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.143758	59991	6065
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.113078	33574	7187
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	40.076240	26142	6403
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.068414	22251	5323
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.NatSeq.seq_app	40	40.075125	27742	6117
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.046392	13423	4197
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.055878	17972	6026
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.077957	23272	4432
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.117262	28137	6257
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.073226	27916	4655
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.015300	3	2	1.0	synth with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Repeat.repeat_length	40	1.701517	1166	219	2.1.0.27	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.080747	15345	3774
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.090901	30900	5265
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.111015	43274	4304
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.142837	63553	6982
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.193003	44577	5725
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.090249	29452	5701
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.183431	43778	5113
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.065700	20730	7145
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.087492	30499	5232
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.084772	27486	6879
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.180583	32542	7849
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.268494	77416	6517
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.071805	26537	5282
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.114615	48355	7267
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.097987	39414	5153
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.095643	41400	7615
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.070886	23384	7219
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.060844	21400	5530
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.080393	31538	6823
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.125117	52926	6033
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.078378	31240	5090
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.080530	33101	6082
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.157652	75531	7919
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.077667	34966	8404
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.168654	82872	9273
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.058363	25487	6320
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.049930	21614	2652
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pplus_minus	40	40.151380	76646	10089
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.048924	19650	6800
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.125682	68190	7423
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.081488	38789	6526
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.056527	28086	6409
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.066969	35660	7364
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.036441	13430	3594
