coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.shift_value	40	0.032603	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.024585	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin2	40	0.038837	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.P_Rmin	40	0.079928	20	8	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_R.Rcri	40	1.320829	445	45	0.14.8	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rsth	40	0.183996	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rcri	40	1.254878	524	78	0.16.4	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.104648	38320	5669
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.062812	26571	2675
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.059428	24564	3831
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.034866	13180	2586
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.058026	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.038275	14343	3278
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C3	40	40.035815	11340	4417
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P1	40	40.132291	61187	7209
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.050490	19664	4672
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple	40	0.026610	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.095887	42074	4306
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.035115	11124	4422
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.included_trans	40	0.940565	863	143	10.5.1	synth with cache (only 1: intros x y z Hxlty Hyltz; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.020121	491	86	5.11	synth with cache (only 1: intros a0; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.048233	17858	5066
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.070580	28233	5537
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	0.048865	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.060102	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor1	40	40.108485	53193	4280
coq-tactician-stdlib.8.13.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.059627	25579	4568
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.frexp_spec	40	44.506760	54633	1346
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.092657	37333	4860
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.052714	19568	4429
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.distance_refl	40	40.051018	20295	3060
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.035178	11776	3870
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.055106	20946	3699
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.037512	13581	3552
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.511446	143	46	3.4.2	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.030213	10278	2963
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_ineq1	40	40.031758	11047	3295
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.166653	80619	4591
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.rotation_PI2	40	5.578712	1803	529	0.0.0.7.0.0.0.4.0.4.0	synth with cache (only 1: intros x y; only 1: split; only 1: pose proof PI_RGT_0 as H; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.022498	8209	2415
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.037621	15389	2944
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.030211	9914	3476
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.tech	40	40.027447	9121	2497
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.050093	20945	2922
coq-tactician-stdlib.8.13.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.607391	516	187	3.2.4	synth with cache (only 1: intros n0 H'; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.078974	33687	5588
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series	40	40.096298	40729	5989
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.C_maj	40	40.044690	18219	3211
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C5	40	40.023241	7475	3575
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.053759	22522	4847
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.050914	19899	4589
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P3	40	40.068834	28733	6287
coq-tactician-stdlib.8.13.dev	Coq.Reals.Binomial.pascal	40	40.036035	13885	2108
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.complementary_P1	40	0.691079	550	86	17.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.cos_plus	40	40.051813	20243	3091
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.046249	16531	4199
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.055093	21581	4025
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor3	40	40.044101	17523	4514
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	1.267128	345	137	0.0.0.0.5.1	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	41.459450	43844	2512
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.090970	38819	4685
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.054550	21210	3280
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.067317	26330	3717
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.043184	14742	3399
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_Ropp	40	40.045653	16047	2794
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.042755	17179	3400
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.060539	25417	2860
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	14.289994	9120	1567	1.0.0.8.20	synth with cache (only 1: intros SF H8; only 1: intros H3; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.044180	16460	3881
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.031679	11737	3060
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dx	40	40.076889	33445	5351
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.050020	21495	2771
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.041340	14660	3539
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.020755	7	3	1.0.3	synth with cache (only 1: simpl; only 1: intro x; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech1	40	40.106798	43394	5097
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech5	40	0.015595	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_2_3	40	40.034179	10788	2464
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.052315	22054	3082
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.027792	11748	1733
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.growing_cv	40	40.085258	35594	7039
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.160377	30	9	1.0.3	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.069637	28791	5353
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	9.311011	2970	524	3.0.3.0.0.2.7.6	synth with cache (only 1: intros x y H; only 1: rewrite <- (Rplus_0_r x); only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.057074	21781	4071
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_plus	40	6.106838	3755	419	1.7.16.3	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro H; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.089121	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.276264	76	23	4.0.2	synth with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Rsor	40	40.132804	63804	4089
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.040577	14633	4361
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.033969	11664	4179
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P1	40	40.110657	48637	6509
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.035843	11930	4516
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.034288	10209	4246
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.058581	23190	3930
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.025341	7228	2274
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.041474	14832	3318
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.036484	11733	3789
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_exp	40	40.053357	20573	3468
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.056437	23231	3060
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.066028	25114	3407
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.034247	10875	4493
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.066057	26976	4805
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.025573	8312	3540
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dopp	40	40.045327	17708	4775
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.040193	17104	2423
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.AbsList_P2	40	40.062345	24081	4337
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.121083	54174	4944
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.048734	17757	3198
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.051335	20830	2537
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_O	40	0.016430	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_1	40	0.121059	12	11	2.0.0.1.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech6	40	40.055932	19431	5107
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.034092	12327	2031
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.040505	14260	2446
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.048429	19421	3176
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech12	40	0.418960	150	51	5.5	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_add	40	0.636851	83	51	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.114654	53148	5372
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.minus_neq_O	40	25.237668	19123	2845	36.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	1.851475	166	82	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.le_double	40	3.202176	2306	389	0.5.0.0.0.0.1.0.1.0.16	synth with cache (only 1: intros a n; only 1: destruct a as [| a]; only 1: Nat.nzsimpl; only 1: intro H; only 1: destruct H as [H| H]; only 1: induction n; only 1: auto; only 1: constructor; only 1: assumption; only 1: intuition; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.tech8	40	0.093945	11	4	5.0	synth with cache (only 1: intros n m; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.045459	17407	2111
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.067424	27642	5308
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.074235	30482	5861
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.066977	26113	6361
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Qle_true	40	40.088710	37189	4236
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	37.897322	12037	3614	0.0.0.2.0.0.8.8.0	synth with cache (only 1: intro; only 1: case n; only 1: red; only 1: auto with real; only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: discrR; only 1: fold pow; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.060740	24165	4847
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.091816	39649	6149
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P4	40	0.014764	2	2	0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	1.315609	580	123	0.1.4.0.0.1.1	synth with cache (only 1: unfold Rle; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros Eq0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.049928	17919	4349
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.054760	23687	4213
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.IZR_nz	40	0.009520	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.083119	34544	4279
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.051077	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.068338	26569	2698
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.099803	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.031367	7611	3867
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	0.035852	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_inv	40	40.037166	13245	3640
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.842069	855	340	3.0.8	synth with cache (only 1: intros pol; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.positive_derivative	40	40.035056	11744	4553
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.032328	11845	2934
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.084091	36574	5225
coq-tactician-stdlib.8.13.dev	Coq.Reals.DiscrR.IZR_eq	40	0.021061	6	2	4.0	synth with cache (only 1: intros z1 z2 H; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.061153	25936	3221
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_refl	40	1.185739	1879	219	3.21.0	synth with cache (only 1: intros; only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	37.992869	36848	4976	4.6.15.10.0	synth with cache (only 1: unfold EUn; only 1: intros m'; only 1: red; only 1: intros H'1; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_le	40	0.281789	121	39	6.0.1	synth with cache (only 1: intros x y H; only 1: left; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.MaxRlist_P2	40	40.061527	24290	3253
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_ge	40	0.508553	255	48	11.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_lt	40	0.008093	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.047341	18684	3507
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.024926	7026	3029
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.072472	29310	5093
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.scal_sum	40	40.093832	40781	3854
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.044227	13992	2379
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.024185	6216	2121
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.109124	49897	5696
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.065797	26182	4500
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.064870	24640	6185
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.079745	28477	3471
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.052717	18516	3532
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.037854	13218	3749
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_P3	40	40.041597	15242	5064
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.094859	40608	5951
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	40.047261	15498	4839
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.015748	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.046968	19917	4323
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.Qle_Rle	40	40.071929	29975	4223
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.059389	22144	3139
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_0	40	40.043804	14533	3632
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.fp_R0	40	40.105522	48591	3766
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_pow	40	40.031482	10585	3088
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing	40	40.056791	22986	4176
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.068915	28444	4291
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.088837	40670	3709
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.025878	8579	3430
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.028019	9581	2759
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.099660	43026	3461
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.086452	36601	4519
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P1	40	40.076666	30559	4765
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.109930	49195	4418
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.042641	5	5	0.0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.247567	129917	3585
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.589154	774	210	0.3.5.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_increasing	40	40.032233	11458	2777
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_minus	40	40.033672	10670	4423
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.plus_sum	40	40.072800	30541	3296
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.poly	40	40.060389	22930	4765
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.Vn_growing	40	40.062623	23109	6953
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.not_Rlt	40	0.009060	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.598075	167	49	0.0.0.9	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.075644	33714	5504
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.064795	25705	5008
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.042921	4966	682
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.035908	12571	3632
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.215971	105576	5885
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Rsepare	40	40.060899	21175	5166
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	40.044642	14718	6902
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.055131	19	6	0.0.0.3	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.044464	15108	5232
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.family_P1	40	3.140469	3032	419	7.2.1.5.9	synth with cache (only 1: intros x y H; only 1: red; only 1: intros; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.041433	15831	1689
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.048768	18069	3123
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.035653	11193	3307
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P6	40	7.253599	8035	1298	16.0.6.7	synth with cache (only 1: intros n m p (q, Hq); only 1: intro; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.base_fp	40	40.058217	19808	6171
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_lt	40	40.054013	21760	3742
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	3.279438	1370	218	0.1.0.0.0.8.8	synth with cache (only 1: intros n; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.089982	39363	3557
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.null_derivative_1	40	40.038193	12775	4695
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.040457	13260	4519
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.035649	13430	2916
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	28.107702	57538	4717	0.0.12.13.8.26	synth with cache (only 1: intros p1 p2; only 1: intros H1 n H2; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.037410	13583	3353
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.075919	22	7	0.0.0.3	synth with cache (only 1: induction m; only 1: intros H'; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.022024	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.055562	18556	1352
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.083709	33244	3975
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	2.888764	1936	296	1.6.13.0	synth with cache (only 1: red; only 1: intros l2; only 1: intro n; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P2	40	40.067197	27566	5111
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.020279	6394	1294
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.054337	20583	5031
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.193020	25	14	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.072645	5	4	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.030102	9881	2659
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.018323	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_asym	40	0.042319	8	5	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_eq	40	40.063712	25167	3974
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.071325	29693	5619
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.approx_min	40	40.039101	14146	4363
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.176575	42760	5382
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.047237	18120	5095
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.348087	75	32	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.051516	17298	6299
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.167387	39900	3591
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.IVT	40	40.055679	22053	4263
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.021136	3472	564
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.066052	28547	2911
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.107910	45280	5636
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.043935	13429	4698
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.111184	39422	3639
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.069121	66	14	0.9	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	2.042819	883	269	1.0.1.0.0.3.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros n; only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	2.025018	929	228	2.0.0.0.1.7	synth with cache (only 1: unfold Rle; only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.123522	17	7	0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.025281	6429	3367
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.034694	4384	469
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.compact_EMP	40	40.235671	112904	6090
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.420651	196	56	4.0.0.3	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intro l'; only 1: intros N; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.074759	29039	5312
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.049293	16023	3630
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_period	40	40.035571	10878	2873
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.070231	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.068836	27761	3845
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.054431	21637	4665
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.071938	24766	1887
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.031462	11097	2913
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.043585	17507	2353
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.014630	2	2	0.0	synth with cache (only 1: intros a n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.043781	14244	2940
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.124033	56330	5218
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.155293	66248	6066
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P3	40	40.043270	14976	5100
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	13.925360	7720	677	19.8.0.9	synth with cache (only 1: destruct x; only 1: intros; only 1: destruct y; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.039281	13387	3464
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_antisym	40	40.115636	24913	3400
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.026786	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_cte	40	40.051527	18654	3446
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.117252	51494	5343
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalZ.of_iff	40	40.213159	36324	4345
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.195075	314	156	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.458505	1057	173	14.3	synth with cache (only 1: intros n m s1 s2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.038997	12	6	0.1.1.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace y with y'; only 1: replace x with x'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_le	40	0.827223	174	76	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_trans	40	0.121580	11	3	4.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.UL_sequence	40	40.055471	21985	4113
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.061513	23707	3973
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	6.762816	4025	690	2.1.0.8.3.10	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros def_n0; only 1: intros H0 ?; only 1: unfold Rge; only 1: intuition eauto  3).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_dec	40	0.154477	9	4	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_dec	40	0.160192	9	4	1.1.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.068987	3	3	0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.063540	25257	4861
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.065972	24883	5366
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.104262	43703	3962
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.074825	32161	3778
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	3.689438	1485	595	1.1.2.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: apply Rsqr_incrst_1; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.080747	32476	4458
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.021920	2347	526
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.077053	25958	6237
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.060740	24032	2104
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.070103	28294	3496
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.024816	5	2	1.2	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.030360	9469	3008
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.036229	11337	3123
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.555348	1982	342	1.27	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.036885	11402	4274
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.125672	523	83	0.23	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.096194	43344	4507
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	7.860265	3119	1338	4.4.3.2.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: edestruct Rle_lt_dec; only 1: eauto with rorders; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	31.578492	5499	1487	0.2.0.3.3.1.5.2	synth with cache (only 1: intros; only 1: Nat.induct ltac:(n); only 1: split; only 1: simpl in *; only 1: intro l; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.006266	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.041563	14695	2834
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	2.657918	1041	364	4.1.2.0.2.2	synth with cache (only 1: intros n m; only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.027740	9070	1073
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.060042	25610	3363
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.041015	15249	2876
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.375436	63004	3251
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P6	40	40.052677	19507	4622
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.GP_infinite	40	40.063218	22785	4862
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.108924	48398	3809
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete	40	0.019191	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.041268	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.024203	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.317962	62	39	0.1.2.0	synth with cache (only 1: revert q; only 1: intro m; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.699587	558	116	12.2	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.029127	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.frame_tan	40	40.040037	14787	2736
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.235965	115484	2972
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.014663	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.073765	28782	4944
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_mult	40	40.065165	24531	3910
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.797495	823	236	7.5	synth with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_plus	40	40.085180	36815	5418
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	17.965788	6656	1489	0.0.0.6.0.5.0.0.2.2	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: intros; only 1: case (Rtotal_order 0 x); only 1: auto with real; only 1: intro; only 1: rewrite <- Ropp_0; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.119986	52653	4634
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.016167	3	2	1.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.096126	44199	4506
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.104143	45063	3759
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.056363	21047	5108
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.055606	19838	4289
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	1.012416	279	83	8.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.033453	11673	1386
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.137613	57787	3376
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.106239	44778	4803
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.122446	55890	5159
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.limit1_ext	40	40.030904	10759	2749
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.081260	4	3	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.038036	11295	4585
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.088332	35887	4257
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.032920	8497	3708
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.031730	10694	3774
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.043210	15305	2624
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.058456	21234	5979
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.R_uncountable	40	40.144311	60916	4883
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.089375	41028	2570
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.045033	18004	2955
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.086579	38987	2583
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.650192	25336	3118
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.028388	7570	1561
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P7	40	40.047510	14962	5354
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.CV_shift	40	40.093430	33213	5054
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.162225	75113	4682
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.098953	40929	5875
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.041787	14952	3129
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.056480	22895	4782
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow1	40	40.077548	28110	3918
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.071041	11	4	0.3.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.081196	32213	3959
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.097766	43933	5461
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.069639	28509	3837
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.052087	16565	4901
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.024283	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.061281	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.130951	12	12	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.017905	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.047305	18142	4528
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.014936	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.072170	25606	5146
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	4.515549	9888	515	1.1.0.4.50	synth with cache (only 1: intros H; only 1: destruct H; only 1: now auto with arith; only 1: now auto with arith; only 1: now auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.047052	17543	3714
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.059323	20629	5445
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.065919	27041	2446
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.082403	31843	4294
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.102636	41555	4223
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Dln	40	40.023317	7044	3313
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	24.620330	64613	499	3.13.3.0.0.13.318	synth with cache (only 1: constructor; only 1: easy; only 1: red; only 1: intros; only 1: intuition; only 1: compute; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.039528	14158	4100
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.048352	15067	4626
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.064842	25263	5297
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.038188	14068	2331
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.adherence_P4	40	2.716794	2271	432	0.2.10.2	synth with cache (only 1: do 2 intro; only 1: unfold included; only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	18.203843	31103	2380	1.51.0.0	synth with cache (only 1: intros n bv; only 1: induction bv as [| h n bv]; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.052271	21710	2736
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.778319	1276	85	24.2	synth with cache (only 1: intros m IH; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.056943	20977	4668
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P8	40	40.037812	11503	3014
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.074244	28370	4589
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.233836	107463	10510
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.128232	18964	1791
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.068173	25695	3736
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.197962	90097	5048
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.862016	123	55	0.0.0.1.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.in_int	40	40.028960	7865	3234
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.035359	12331	2640
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.170145	77684	4010
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_mult	40	40.032874	10715	4514
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.036733	12384	3796
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	19.303877	10750	2340	0.0.1.6.0.2.0.0.4.0.1	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real; only 1: intros H1; only 1: apply Rminus_diag_uniq; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.274258	39453	3713
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.026376	3	3	0.0.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.044001	15597	3958
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.065849	25087	4180
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.119875	55056	3561
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.088278	36201	5319
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.019808	2615	924
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.050286	18020	3688
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	15.368709	4572	2145	0.2.1.6.0.1.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: intro; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech9	40	16.399756	10799	2179	1.1.1.6.12	synth with cache (only 1: intros a b H; only 1: intro q; only 1: intros; only 1: apply Rge_le; only 1: now apply growing_prop).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.103189	17341	3096
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.058999	21835	5525
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	22.772952	14698	2019	7.8.12.6	synth with cache (only 1: simpl; only 1: intros Hn; only 1: intros l; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.906909	569	86	17	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.046535	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.079764	28644	6052
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.106917	44383	4268
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.031340	11239	2900
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.105801	46527	2270
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.044456	15274	3232
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.436971	20	7	0.1.3.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	8.927492	6608	1174	14.14	synth with cache (only 1: rewrite <- Z.eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_imp	40	4.839755	1506	429	5.2.7	synth with cache (only 1: intros x y z; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.052765	18407	3869
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.domain_P1	40	40.054884	23682	1682
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.060391	24465	2978
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.216670	20816	2882
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.070699	26159	3775
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P9	40	40.067253	25226	4760
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P18	40	0.098348	23	11	0.0.0.0.1	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.141958	62629	4876
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.118087	50876	4847
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	13.280583	4972	1500	0.3.1.0.4.1.0.0.0.2.1	synth with cache (only 1: intros l a; only 1: induction l as [| y l]; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl; only 1: tauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.037820	8345	1749
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.062955	27241	3133
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.025502	8045	2588
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.048601	15124	3828
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.054528	22039	2614
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.008824	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0	40	40.048049	20162	1154
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.069684	27702	4803
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.157323	75286	1760
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.007091	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.087619	37939	2163
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.069865	25898	2827
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.017044	3284	1060
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.088517	33850	2622
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech13	40	40.090833	40216	4597
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.057483	21382	2144
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.062657	13	4	0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.023835	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.033022	7	2	0.5	synth with cache (only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.034356	9959	1956
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.086286	33156	3999
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.113538	47562	4746
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_ext	40	40.026310	8534	2990
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.062123	16862	3666
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Heine	40	40.075015	30654	5404
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.101147	43009	5104
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.017373	4	2	0.2	synth with cache (only 1: intros n bv; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.043965	13618	4668
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	7.880970	15997	582	0.6.0.2.0.0.2.87.8	synth with cache (only 1: red; only 1: generalize 1%positive; only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: split; only 1: now Z.nzsimpl; only 1: apply gt_wB_1).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.232359	22111	2916
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.123763	55304	4901
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.052202	19646	4232
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.107262	47453	4887
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.022162	5407	2166
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.036554	7568	1398
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.030898	7784	2141
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.023435	6932	2654
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.131110	60403	3973
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.043131	15210	3647
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.075829	31988	4072
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.101926	41065	3724
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.068636	27624	3245
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.036196	2	2	0.0	synth with cache (only 1: Bool.destr_bool; only 1: field).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.076111	30397	4880
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.064738	24231	4068
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.071367	43	8	6.2	synth with cache (only 1: intros; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.115864	49285	2095
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.074768	28606	4320
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.081918	33454	5028
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.073817	26767	4619
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.089165	10	4	2.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	40.091858	40316	4482
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.824854	1265	228	16.3	synth with cache (only 1: intros x y; only 1: apply Z.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.060621	23360	3221
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	8.439956	3954	950	6.0.10.0	synth with cache (only 1: unfold permutation, meq; only 1: intuition; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_minus	40	40.033518	10516	4476
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	40.267031	130040	1198
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	5.693059	5532	1133	18.0.3	synth with cache (only 1: intros a ?; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.329332	3874	361
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.031139	8022	1449
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.048262	18242	3120
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.056285	21112	2698
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.022833	11	4	0.0.1	synth with cache (only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.086089	31128	4158
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.021623	6891	1010
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.043443	12405	4560
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.149690	68531	4720
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.109308	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.046376	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.127264	4	4	0.0.0.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.065802	27616	3158
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.123195	54506	2583
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.066298	25467	4955
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.097120	42929	4856
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	2.044407	368	220	3.3.0.1	synth with cache (only 1: generalize (F.mem_iff s x), (F.elements_iff s x), (existsb_exists (F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.073408	9658	4470
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.016381	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.124562	11	3	1.5	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.406582	19	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.094483	40597	4452
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.066964	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.099946	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	1.118450	1416	57	51	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.107128	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.095503	4	1	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.043572	16295	2569
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.843417	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.009691	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.158877	16	6	0.0.4	synth with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.039452	8	5	0.3.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.022970	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	2.170891	240	24	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.060292	6	2	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.065572	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.071761	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.074503	29232	2059
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.049728	16644	3181
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.593489	23	6	0.0.5	synth with cache (only 1: destruct (is_empty s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.057067	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.066314	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.036534	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.457505	22	7	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	10.641129	3250	1249	0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.065379	14	6	3.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.065868	26038	2674
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.078505	32838	3322
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.290989	77	18	0.4.0.2.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.078431	12836	2382
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.307305	378	21	27	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.027846	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.060657	25183	2866
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.021105	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.047221	9	3	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.086965	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.030002	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.007062	3	1	2	synth with cache (only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.021724	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.022837	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.095717	5	4	0.0.1.0	synth with cache (only 1: split; only 1: intros ->; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.071869	3	2	1.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.125423	55814	6089
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.960382	67	58	1.0.4	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.331270	15	6	0.3.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.419636	14	8	0.0.1.2	synth with cache (only 1: intuition; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.074183	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.076479	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.085378	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.128909	58005	2341
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.109639	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.534928	33	13	0.7	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.076620	31010	4209
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.463198	17	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.024590	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.022699	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.063979	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.651927	1071	52	1.43	synth with cache (only 1: intro H1; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.150694	69593	5666
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.062279	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.117372	51851	2909
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.477909	21	13	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.254964	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.798294	366	74	1.19	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.043626	14790	2745
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qabs.Qabs_Qinv	40	0.491109	137	64	0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: simpl; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.180774	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.129227	55885	5338
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.082459	33830	3872
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.038724	6	3	2.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	19.614746	11631	1085	1.7.25.2.1	synth with cache (unshelve (only 1: intros; only 1: apply subset_1; only 1: intros ? H1; only 1: eauto with set relations); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.058418	20210	4262
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.048792	7530	1319
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	7.516045	8920	766	2.2.10.23	synth with cache (only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_0	40	40.062289	22680	3154
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.133442	21800	2404
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.070568	27089	3699
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.120869	35984	1767
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.037163	12217	2880
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.476135	179	37	8.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.034593	12155	2825
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.191407	55556	4169
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.078218	31331	4842
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.091285	34725	5242
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.041452	13304	3586
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.029332	9227	2266
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.092423	36564	4308
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.028400	8558	3639
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.083860	33509	6512
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.063923	23145	5173
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.074018	24523	4138
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.074432	31096	3576
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.195951	91482	4919
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	0.916189	2543	71	5.64	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.036823	11728	2878
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.067950	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.327325	52	33	3.3.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.012321	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.070046	26399	5011
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.915867	769	116	2.15	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.032110	8	4	0.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.077548	30943	3137
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.021976	5834	1637
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.090688	37196	5742
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.069278	28102	5468
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.023504	5034	3527
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.110860	42517	3865
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.059796	21329	5053
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	10.049968	2828	530	3.7.0.8.3	synth with cache (only 1: intuition; only 1: destruct H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.049757	8865	2412
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.174599	23254	2838
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.104945	42072	3967
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	2.184056	517	254	0.1.0.1.3.0	synth with cache (only 1: unfold Rle; only 1: destruct 1; only 1: left; only 1: auto with real; only 1: elim H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.108540	45544	4467
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.093818	18	4	0.3	synth with cache (only 1: intros P; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.482322	29	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.075688	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.076176	32030	2671
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.059635	22991	2584
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.139949	62492	5256
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.408082	2605	252	47	synth with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?EnvRing.Pmul_ok).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	6.741803	5993	719	6.21	synth with cache (only 1: intros a b c0; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.078374	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.149695	64306	4751
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.063606	22725	6795
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.032529	11340	2982
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.111438	17099	3672
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qsor	40	40.065117	25809	3601
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.029252	9039	2463
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.122561	53147	3780
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.038565	10903	3555
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.096296	39972	7540
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.085183	34269	5633
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.055488	19532	3895
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.085006	30457	4604
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_le	40	40.167896	25031	3355
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.431125	79	38	0.6	synth with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.101076	29	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	40.026011	4760	2789
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.523595	60	44	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.100886	44407	5409
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qred_iff	40	40.069846	27741	4489
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.012467	2	2	0.0	synth with cache (only 1: destr_bool; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcge_alt	40	0.021025	5	3	0.2.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.096758	40539	3799
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.075255	27301	4724
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.095152	135	20	4.6	synth with cache (only 1: intros a; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.108693	38414	5727
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.515512	178	56	1.11	synth with cache (only 1: intros IH m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.471295	37	9	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.060693	24502	3355
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.022829	11	3	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.093886	15	3	5	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.374492	181544	1610
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.125748	55780	4302
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.186978	85113	5250
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.071581	24956	6328
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.009567	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.054120	9981	2880
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.114279	5	2	2.1	synth with cache (only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.136025	4	2	1.1	synth with cache (only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008982	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.010734	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.009078	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.047313	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.060668	21308	1945
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.033693	9587	1948
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	7.827188	9307	1060	7.20.9	synth with cache (only 1: intros n m p Hp Hn Hm H; only 1: apply H; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex2	40	0.005995	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex6	40	0.015557	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex7	40	0.635582	433	57	0.13.0.3	synth with cache (only 1: red; only 1: simpl; only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	9.739128	13695	1703	0.0.28.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	23.676371	18065	1416	0.2.1.7.1.8.0.0.0.3.5.12	synth with cache (only 1: intros m p; only 1: destruct p; only 1: intuition subst; auto with qarith; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl in *; only 1: reflexivity; only 1: split; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.QNpower	40	0.025479	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	4.298476	864	428	1.1.1.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.070493	29623	2516
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.227701	49419	4672
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.067188	22988	4552
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	24.893418	3801	2249	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.205191	50	5	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.008864	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.017034	4	2	0.2	synth with cache (only 1: intros Ha Hb; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.335808	205	35	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.045525	51	6	9	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.088860	34817	2086
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.037956	14283	1981
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.066620	25111	3456
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.040463	13233	3438
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.046736	15375	2501
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.023681	6959	2954
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.030649	8817	3459
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.074053	30010	3880
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.050624	16258	5087
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qle_ceiling	40	40.066070	22976	3513
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.101859	42442	4186
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.066763	26933	3443
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.111197	48516	4684
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.008235	2	1	1	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.118670	52557	4073
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.128010	54852	5172
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.329396	163674	1301
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.139780	61610	5375
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.177848	85336	2711
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.031090	6245	1748
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.058378	17597	3525
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.083234	23519	4980
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.144245	23	14	0.0.2.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.358854	122	43	0.0.0.0.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.071080	24780	5024
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.185709	13001	1801
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.045293	12782	3996
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.099970	16	4	0.4	synth with cache (only 1: intros e1 e2 EQ; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.064268	22985	3131
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.175181	83354	4449
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	3.410090	1577	441	0.0.0.9.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.103673	46790	4023
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.266971	16963	2043
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.112246	46718	5978
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.188533	85112	9410
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.096422	41910	4233
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.078863	30654	6646
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.023201	6502	1051
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.047983	13490	2589
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.120970	7698	1102
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008462	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.007012	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.008311	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.018028	4903	2221
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.040574	15102	2981
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.020696	4241	2888
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.079286	33233	3874
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.048398	15461	5476
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.102509	42417	4931
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.082024	31891	3326
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	3.003961	2448	487	2.2.0.0.12.1	synth with cache (only 1: intros HP HIS; only 1: intro x; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.077290	31001	4349
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.082758	31618	2088
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.093602	39199	1537
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.061845	19917	5934
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	2.080022	705	189	0.0.7.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: rewrite Pos.mul_comm; only 1: f_equal; only 1: simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.196825	91083	5218
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.125081	54048	4407
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	5.106820	3276	482	0.2.3.6.12	synth with cache (only 1: intros n; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	0.067107	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.166931	74260	5511
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.142360	61727	4465
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.214050	30397	2864
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.140006	61304	4103
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.087094	35557	4693
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.171018	78104	6220
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.122006	54852	4564
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.349482	1011	204	10.7	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.057270	20905	3689
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.174082	84306	4597
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.067998	25382	3355
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.009767	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.014501	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.081630	31174	5318
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.019736	7	3	0.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.304297	7981	1839
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.074865	28173	4344
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.010838	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.089917	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.007816	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.010514	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.017254	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.009174	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.008295	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.163126	20	4	1.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.015290	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.156592	71795	3891
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.190477	22776	2985
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.111117	46369	5288
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.042588	9897	6036
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.125590	162	28	2.2.5	synth with cache (only 1: intro Hxz; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.095812	23681	2855
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.033791	9826	2471
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.274454	13639	1721
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.016397	4627	2064
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.028313	6368	2937
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.049557	16340	3860
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.114778	47427	4684
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.061276	23347	3741
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.107542	47476	4633
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.044154	16260	2334
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.090179	37562	325
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.074125	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.093557	30198	2424
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.006283	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.076159	31705	3271
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.050639	17122	2600
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	40.132997	52320	10566
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.233398	954	190	0.0.6.0.7	synth with cache (only 1: simpl_relation; only 1: apply fold_rec; only 1: intros HF; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.351027	446	116	0.0.1.0.5.1	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.017938	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.316823	153634	1452
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.029051	7979	1483
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.120514	53259	3009
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.057522	13828	3306
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.331563	78	29	0.2.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.142681	63871	6112
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.053312	20665	3385
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.222773	103841	4738
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.025638	7	4	0.1.1.1	synth with cache (only 1: intros E; only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	5.974645	9695	617	4.2.2.41	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.072234	25705	4378
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.051162	24	5	7.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.145782	54343	2800
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.066842	25842	5617
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.042227	16883	1327
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.081532	33141	2808
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.267713	14	13	0.0.0.0.2.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.095528	39788	5268
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.081491	32059	6421
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.856237	371	123	14	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.125367	55341	5848
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.098002	21724	2647
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.027039	9266	2566
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.068726	26275	3375
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.isZ0_0	40	5.833887	2837	891	0.0.0.0.0.0.6.5	synth with cache (only 1: intros a; only 1: destruct a; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.026768	6397	3201
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_correct	40	40.082447	32939	4712
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.055969	21779	4282
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.076228	29622	3871
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.110681	45432	4349
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.650217	113	46	0.0.0.0.0.4	synth with cache (only 1: intros v; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.083039	11185	4282
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.020400	5325	606
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	2.566680	1615	233	1.0.17	synth with cache (only 1: intros l1 l2; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.093224	36600	4879
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.157388	71757	4244
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.114947	49398	3901
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.121470	40854	3869
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.276232	137062	4126
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.071864	29209	3851
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	40.141950	63383	4774
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.077016	25286	5609
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.055909	18546	3504
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.279684	127	29	1.7.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.318958	19	7	0.0.0.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	9.246333	5038	766	2.10.5.8	synth with cache (only 1: intros Eq1; only 1: unfold Rsqr; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.074536	27696	5608
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.061972	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.030104	5	4	0.0.0.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.154029	70215	5313
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.075753	28295	3221
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.117259	48993	3631
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.023068	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.040141	12354	2915
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.131752	28505	1963
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	40.046655	12802	6251
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.031093	7557	4847
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.094038	35768	4765
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.111466	45218	8361
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.132019	42	27	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.158713	75448	5575
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.076025	28123	4583
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.PI_ineq	40	40.035332	11877	2653
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_one	40	40.071481	26228	7005
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.054674	19698	3610
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.024837	15	5	2.1.2	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.082293	32451	4712
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.029849	7226	4021
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.058395	21927	3734
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.045665	14744	4381
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.067218	27288	3369
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	30.305391	32762	3644	8.0.2.4.2.0.0.0.17	synth with cache (only 1: intros a b; only 1: intros; only 1: apply fold_rec_bis; only 1: intros; only 1: auto; only 1: intuition; only 1: intros; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.016620	5563	675
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.345278	173998	4501
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.091768	36789	5853
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	6.845021	6169	1063	4.0.0.0.1.12	synth with cache (only 1: intros a b c Hc; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.123715	53156	3603
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.025645	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.335627	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.039169	10933	1745
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.139108	62910	5352
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.058671	16673	758
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	41.015609	22676	3570
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.013182	1	1	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.075658	31497	4332
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.037644	6161	1169
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.050639	17138	4841
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.107924	44194	5351
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	2.405690	351	132	4.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.225627	103593	5605
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.047857	15356	2216
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.817391	3864	622	22.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.113743	47118	3760
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.057186	22216	1507
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.051718	13555	5631
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.076471	27213	7328
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.497440	1726	275	1.9.6.2.4.2.1	synth with cache (only 1: split; only 1: firstorder; only 1: auto; only 1: red; only 1: intros s; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.157514	70570	6236
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.098665	33343	4463
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_trans	40	40.122306	53008	5720
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.045467	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.053879	20695	2117
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.099339	40526	2994
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.136932	59214	5651
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.023959	5675	3487
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.066365	22750	8402
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.045062	13519	4766
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.074689	25623	2647
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalChoice.choice	40	40.209303	97153	7065
coq-tactician-stdlib.8.13.dev	Coq.Logic.Epsilon.iota_statement	40	40.211409	98583	6667
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.267394	131309	7647
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.157766	71653	6538
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.047543	14066	4773
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.073192	30535	5249
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.068070	24157	1762
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.009541	3695	361
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.109998	48713	4417
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.092444	33340	5999
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.080999	31622	2267
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_trans	40	0.114153	15	7	2.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.209296	105	25	7.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.053622	20316	4941
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.137911	3915	1035
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.110230	47934	3909
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.197499	89591	2017
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.065399	14	6	0.0.2	synth with cache (only 1: intros E; only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.036144	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.036716	8451	1575
coq-tactician-stdlib.8.13.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.306255	150864	6678
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.pr_nu	40	8.671768	5699	1115	0.0.1.0.3.3.3.0.1.2	synth with cache (only 1: intros r1 r2; only 1: intros l1 H; only 1: elim H; only 1: simpl; only 1: unfold derivable_pt_abs; only 1: elim H; only 1: intros; only 1: destruct H as [l H]; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.064490	22699	3675
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.153619	50236	1998
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.212243	99056	2986
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.070467	23510	5645
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.097481	40455	4722
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.126533	58554	5708
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.029357	6	4	1.0.1.0	synth with cache (only 1: unfold singleton; only 1: intros n m H; only 1: rewrite add_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.053073	19404	4268
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_lb	40	40.117394	52224	7913
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.213955	105918	1651
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.082800	34514	3510
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.026188	3	2	0.1	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.098824	39910	4486
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.052693	18329	2815
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.069516	23936	6500
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.073050	28245	2721
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	12.002258	6536	1321	0.2.0.0.4.3.3.5.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: apply MP.remove_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.807743	544	89	13.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.161076	105	14	13	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.071683	27224	7370
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.186936	94100	2464
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.120753	54380	5557
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.073454	27945	5854
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.099612	41173	5575
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.015978	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.081389	34135	2916
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003406	721	281
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	29.584025	21145	2786	0.3.0.1.46.0	synth with cache (only 1: intros; only 1: pattern s; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_alt	40	40.083789	33850	4733
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.048797	16444	2319
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.187645	36808	4052
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.033913	13309	1289
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.236165	75133	6149
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.119580	55569	3437
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.244289	153	40	0.0.1.4.0.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.103696	40821	4841
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.104163	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.285622	73	36	1.1.0.0.3	synth with cache (only 1: intros m; only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilZero.sis	40	32.471359	15531	4949	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.212376	96105	5533
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.297908	132	46	0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.119922	54355	6041
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.048208	15539	6503
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.038756	13360	3263
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.099340	39193	2498
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.089389	34556	5338
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.710971	289	97	1.0.0.2.1.1	synth with cache (only 1: destruct s; only 1: intros s x y; only 1: trivial; only 1: intros; only 1: apply <- union_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.080947	34152	5399
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_ub	40	40.088366	33939	7970
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.055268	21133	2925
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.064280	26429	3975
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.097672	42660	4130
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.075614	29324	5598
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.038350	12193	2904
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.068202	25254	3763
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.065771	22239	5125
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.165500	74386	3074
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.181423	90	19	8.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.070935	24718	6388
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.083887	22594	2559
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	12.029456	5831	1092	1.4.1.10.6	synth with cache (only 1: intros m Hm x y e; only 1: simpl; only 1: unfold IfEq; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.075804	27919	4028
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	40.098653	40456	4848
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.038407	9440	4665
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.056163	19626	5025
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.004903	1775	191
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.061982	22670	3712
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.094255	37510	5538
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.321316	17445	3115
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.062855	22814	4343
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.089455	6	4	0.2.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.011650	2981	928
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.108411	46355	3955
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.087430	37434	3259
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.117097	50535	4513
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.016001	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.031677	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.195053	92386	10426
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.059687	16874	4046
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.062899	9	7	2.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	43.434109	12480	1868
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.085287	32452	4723
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	40.045242	15692	4816
coq-tactician-stdlib.8.13.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.095174	37782	3647
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.079727	33655	5137
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.039825	19	6	2.0.1	synth with cache (only 1: intros a b q **; only 1: rewrite inter_spec; only 1: PeanoNat.Nat.auto').
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.086841	34447	5063
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.108125	46391	4954
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.062909	24765	2343
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.067170	28160	3455
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.091744	33652	5410
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.036744	11171	3115
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.069826	23952	2824
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.046488	16257	3532
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.062845	22363	4620
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	40.081627	29858	6208
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.022982	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	36.596102	725	148	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.075000	29161	3868
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.019496	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.027872	9	5	2.0.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.117781	51374	5117
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.140965	58739	5209
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.108166	41997	3997
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_trans	40	40.119339	48562	6764
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	4.159240	3062	494	0.1.0.12.3.1.6	synth with cache (only 1: induction m; only 1: intros; only 1: inversion H; only 1: inversion_clear 1; only 1: auto; only 1: intuition; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.119098	32657	3801
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.067255	23543	6549
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.031252	9256	1006
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.086699	37044	3517
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.102286	41462	3980
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.006966	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.145496	61490	4543
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.308416	38	4	10	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.007873	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.069855	30826	4189
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.049715	20015	2669
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.250804	118591	2382
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	1.525410	228	175	0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.268321	129610	9565
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.058465	19775	5082
coq-tactician-stdlib.8.13.dev	Coq.micromega.Ztac.elim_concl_eq	40	1.137711	862	191	3.4.7	synth with cache (only 1: intro H; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.066738	25323	3443
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.080207	32048	2445
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.077909	32659	3215
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.090576	36998	5488
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.129464	55859	3210
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.057277	13	8	6.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.155345	73747	2650
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.065035	8	3	0.5.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: now try Z.order').
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.073047	28143	4188
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.980824	584	150	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_lt	40	40.119664	47323	3624
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.070541	25317	4033
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.010035	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.056976	18874	4194
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.073327	29012	4751
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	3.325366	4505	428	33.0	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_refl	40	40.079218	31628	3381
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.117030	46170	6649
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.008412	3291	148
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.258081	127221	4727
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.078667	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.096240	43402	3394
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.089551	35219	5462
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.039167	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.721346	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.141204	63780	4309
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.055952	20250	2648
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.065992	24665	3805
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.135608	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.083377	34869	2686
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcpower_0	40	0.306171	164	42	0.1.0.6	synth with cache (only 1: induction n as [| n IHn]; only 1: intros; only 1: tauto; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	2.612807	2389	316	1.1.1.0.1.0.0.0.8.1	synth with cache (only 1: rewrite !Nleb_Nle; only 1: destruct a, b; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: simpl; only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.039896	8199	2578
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.019064	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.113132	28947	4079
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.104743	42553	686
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.102719	43490	4635
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.108674	46665	1776
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.008989	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.033410	6518	4925
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.061802	20524	6478
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_minus	40	0.791145	249	80	0.1.4.2	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.083104	16264	1984
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.140946	60945	1689
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.044590	17478	754
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.143919	64488	4863
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.092558	35982	4352
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.185985	38309	3628
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.083500	31075	2718
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	5.358816	1590	380	1.4.2.3.1.0	synth with cache (only 1: repeat red; only 1: intro l; only 1: simpl; only 1: intros n H; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.112914	45548	5652
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	4.782408	13452	601	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.023344	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.092656	38242	4006
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.367324	7441	1258
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.024441	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.082486	32255	4776
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	1.577894	1259	89	11.26	synth with cache (only 1: intros f g H l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.052714	16633	3666
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	11.671073	16921	1511	0.0.0.37.0.0.2.0.0.0.0.2.0.0.1.2.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.008323	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	1.821639	2148	181	23.20	synth with cache (only 1: intros X; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.565192	217	62	0.8.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.129267	56605	4702
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.070223	22673	3765
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_spec	40	40.180083	72001	1257
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_sym	40	40.107324	43601	4037
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.125252	51245	6422
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.432639	206099	2955
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.033827	9993	3948
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.118859	113	20	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.093658	31972	3852
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003184	811	165
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.811624	182	41	0.10	synth with cache (only 1: intros L R n; only 1: now apply Zis_gcd_sym).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.080473	32651	4640
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.121781	54369	2014
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.142378	62166	4365
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.049920	18548	2856
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.138300	8549	1225
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.087003	35598	4308
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.231123	67	15	8	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.099398	43333	3655
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.117858	51455	4067
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.029262	5872	4377
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.061419	21054	6270
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.173609	79810	7535
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.not_prime_1	40	13.448103	16661	1555	63.22	synth with cache (only 1: Z.nzsimpl'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	2.182563	671	55	13.12	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.155457	30140	2535
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	5.580617	3571	730	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.089159	35925	4891
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.060072	23606	2931
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.137572	59244	5229
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.053867	18098	3869
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.032223	12	4	2	synth with cache (only 1: now intro n; induction n).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.157788	71228	4525
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.033493	1270	262	5.3.2.3.1	synth with cache (only 1: intros; only 1: destruct n; only 1: discriminate H; only 1: vm_compute in H; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.092207	37543	3942
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.138660	19	6	0.0.0.2	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.065349	14237	2131
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_refl	40	35.804097	58776	3035	4.38.7.14.35	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: easy; only 1: destruct x; only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_eq	40	0.179484	24	13	0.0.0.3	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_neq	40	0.014215	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_compat	40	0.025055	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.071400	27306	1637
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.093285	35362	2137
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nless_def_2	40	5.831325	2933	1173	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.141740	60556	3043
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.151977	66508	5044
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.068340	23872	4411
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.016811	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_eq	40	40.067381	22706	7272
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.find_left_path	40	40.150988	29404	3963
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.063756	24889	2870
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.166954	26053	3599
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002878	1024	107
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.743540	1881	246	2.2.20	synth with cache (only 1: intros a Ha; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.096353	23175	2706
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.136060	57056	2575
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.062545	21386	6375
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.036607	12243	1362
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.083919	34061	5023
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.160856	81156	538
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.055956	23739	2186
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.016159	7	2	5.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.010883	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.071822	28605	2973
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.026837	5701	4363
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.093707	36462	3989
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_0_1	40	0.051473	6	4	0.1.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.052417	15196	752
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.046306	16582	3174
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_plus_1	40	0.912477	280	103	3.5	synth with cache (only 1: intro q; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	28.000191	26102	1642	105.3	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.249564	35950	1766
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.072828	27094	4486
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.393387	198081	8131
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.834702	1001	151	6.1.2.15	synth with cache (only 1: intros n'; only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0.149366	50	15	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.S_INR	40	6.740521	3957	612	0.10.1.16.0	synth with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.054929	20427	3075
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.067008	21483	3059
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.493722	21	8	0.0.2.0	synth with cache (only 1: intro n; only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.109590	24610	4339
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.150697	61866	4758
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	5.641579	5837	773	0.22.3	synth with cache (only 1: intros; only 1: red; only 1: eauto with set).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	40.046321	17870	2256
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.751654	12859	265	0.0.138	synth with cache (only 1: red; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.086169	10	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.180414	39460	3125
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N0_less_2	40	40.116233	49970	5127
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.095247	33013	3986
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.148830	63534	4719
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.068096	5433	518
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.082721	31931	1647
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct1	40	40.099954	38198	6912
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.161766	54489	2928
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	26.808270	8501	1645	0.6.0.0.0.0.5.0.0.1.0.0.1.13	synth with cache (only 1: nzinduct n; only 1: Nat.nzsimpl; only 1: destruct m; only 1: auto; only 1: simpl; only 1: f_equal; only 1: intro; only 1: split; only 1: intro l; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.075191	27284	4479
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001205	235	76
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.100702	37949	4969
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.053172	279	119	0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.083533	30621	3532
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.107026	44677	5862
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.066666	25074	3868
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.041324	8655	5645
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.076775	27789	7990
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.140508	63370	4477
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.066462	27603	3433
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.062413	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	24.847252	36438	3451	8.1.0.13.20	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite diff_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.028758	6794	5074
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.082704	33476	1817
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.060165	18568	6065
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.059640	24249	2053
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.052766	12628	1362
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.157738	71253	5484
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	0.814694	326	36	15.0	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.plus_INR	40	40.039276	13276	2518
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.167124	72942	5437
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.044366	15065	3544
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.005407	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.143215	62109	5983
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.084204	25135	2235
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.064136	24029	2069
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.081782	31205	3035
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.111000	45840	7571
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.070291	24607	4416
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.060009	21684	3118
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.024800	5320	2154
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.037416	10451	4137
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct4	40	40.118065	51898	6908
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.174375	75287	4844
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zabs.Zabs_dec	40	1.025781	512	93	2.3.2.2.1	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.byte_dec_bl	40	40.151021	32194	1330
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.226299	101966	3818
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.072684	25908	3740
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	8.730262	18025	1308	41.6	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.011191	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.045904	13181	3387
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	19.235353	8696	2287	1.5.0.0.0.1.1.1.6.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.072847	27750	6425
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.083352	17	9	1.1.0.1	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	1.048450	265	111	0.0.0.4.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.026641	6589	3519
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.088352	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.007851	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000739	78	30
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.088069	33700	5077
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.166159	76768	3662
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.084106	33133	6455
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.033056	9832	3769
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.153643	25794	2095
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.026985	5348	3913
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.092255	39498	3156
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.028023	7859	3096
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.092767	27366	1425
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.087970	36494	3878
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.minus_INR	40	40.064910	25824	3258
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.342965	44357	5205
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.056796	20622	5557
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.092680	40012	3495
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.139722	33158	3691
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	23.166694	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.228407	105728	3952
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.076662	28067	5126
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.111098	44728	4520
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.031587	11363	1319
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	20.372097	32159	640	144	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.120211	53608	2222
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.139019	59019	4832
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.091596	28628	5278
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.059673	15457	2077
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.121463	49085	4707
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.117062	48819	2199
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.058367	19172	6028
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.060078	21861	3581
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.104389	41026	4400
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.051634	8514	932
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	3.137025	642	355	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.051862	18392	3008
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.050636	18920	530
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.099126	39573	5526
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.012042	4	1	3	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	0.027119	2	2	0.0	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.062958	21088	4837
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.096278	38366	5201
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.056867	21076	4293
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.083751	32635	3695
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.045634	10705	5800
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	0.067638	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.636518	2289	446	0.0.1.0.13.4	synth with cache (only 1: intros; only 1: intros H1; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.073787	29070	3493
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.037056	6	4	2.0.0.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.099946	21121	1073
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_INR	40	40.034342	12115	2647
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.107520	40552	7024
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.049813	18451	3036
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.067934	27024	4113
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.939881	34773	3505
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.085652	25931	2627
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001084	164	45
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.054382	16777	4183
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.120309	49665	6331
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.087638	33213	3565
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013480	3556	980
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.032711	7064	1071
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.362753	179627	2770
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.071944	30000	1394
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.015333	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.088679	31982	6853
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.050407	17998	2223
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.109517	42969	3804
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	10.220509	10536	836	39.0.5	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.086157	32101	4081
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.054137	16343	4958
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.518957	22822	2775
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.035230	10379	2503
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.072993	25513	5630
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.097974	37068	3736
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.131875	56077	5969
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.089876	36794	5163
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.089280	36832	3470
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	0.007765	1	1	0	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.088703	33490	4856
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N	40	40.060608	24559	1691
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.090300	40305	4116
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.202013	98216	4271
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.074874	4456	2034
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.lt_0_INR	40	40.076059	29800	4744
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.126165	53853	4129
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.903093	203	34	4.0.0.12	synth with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.057659	18854	5350
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.045087	13235	1109
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.094994	36233	5876
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	1.595851	771	209	0.3.1.1.3.2	synth with cache (only 1: intro l; only 1: unfold singleton; only 1: intros n; only 1: rewrite InA_cons; only 1: intuition; only 1: inv).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.086719	34424	2935
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.089137	34018	6561
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.084064	24750	4861
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000862	67	35
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.061767	23136	1538
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	2.939906	1330	355	0.0.0.0.0.0.0.0.0.0.9.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: now Nat.nzsimpl; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.031482	5082	1013
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.278672	133797	1688
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.186379	87184	9012
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left	40	40.120446	39667	3562
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.009672	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.116242	43694	4441
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.124901	48555	4825
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.054214	17594	2175
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_pos	40	0.138826	41	7	10	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.088256	35032	4149
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.304883	152	29	5.10	synth with cache (only 1: intro Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.791219	328	65	0.0.13	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.071110	25259	3605
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.045822	13127	3948
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.051891	6901	859
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.032900	12107	1132
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.082113	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.074938	26356	5666
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.073457	28878	3328
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.088039	37157	4066
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.131635	30	19	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.118436	52779	4490
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.074479	27258	3127
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.039274	8641	3892
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.015819	9	2	2	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.093805	38121	4769
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.030996	12	4	3.2	synth with cache (only 1: unfold Z.le, Z.max; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.140109	65220	3919
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.172063	11780	1189
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.343097	156	45	4.0.7	synth with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.030564	9662	2609
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.068493	21518	6041
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.407290	2804	466	7.6.0.7	synth with cache (only 1: destruct m; only 1: intros H; only 1: eauto; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	16.415322	13577	2609	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.5.0.9.1.0	synth with cache (only 1: induction a as [| l IHl o r IHr]; only 1: unfold compare, equal; only 1: intros EQ; only 1: destruct b as [| l' [| ] r']; only 1: simpl; only 1: trivial; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: destruct o; only 1: intro; only 1: discriminate; only 1: simpl is_empty; only 1: rewrite <- andb_lazy_alt, andb_true_iff; only 1: intros [Hl Hr]; only 1: destruct b as [| l' [| ] r']; only 1: simpl compare; only 1: rewrite Hl, Hr; only 1: trivial; only 1: simpl compare; only 1: trivial; only 1: simpl compare; only 1: rewrite (IHl Hl), (IHr Hr); only 1: simpl; only 1: case (is_empty l'); only 1: case (is_empty r'); only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.090807	34727	4305
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.036609	8940	2618
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_INR	40	5.786062	2584	738	6.2.0.0.6	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: auto with real; only 1: intros n0 H1 H2; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_not_0	40	0.103978	12	9	2.1.0.0.0	synth with cache (only 1: intro; only 1: Nat.cases ltac:(n); only 1: intros; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.073621	25587	6393
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.073689	30392	3850
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001344	261	43
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.126442	58417	2141
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.077366	24209	1247
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.145687	34230	3703
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.382624	193021	2774
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.115676	50592	3942
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.287535	7622	1517
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	40.122823	33066	4171
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	4.800232	6451	758	0.0.3.0.3.0.13.10	synth with cache (only 1: intros q; only 1: induction q as [q IHq| q IHq| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.049617	12508	5426
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.026467	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.063695	22271	4564
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.049732	15427	4382
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.021894	6534	1099
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.083871	31763	6739
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.025729	6	3	0.3.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N_nat_Z	40	0.705795	428	96	0.1.0.0.0.0.0.1.2.9	synth with cache (only 1: destruct n; only 1: split; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.034796	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_N_nat	40	0.015475	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z_nat_N	40	0.688252	171	48	0.4.0.0.8	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: auto; only 1: Nat2N.nat2N; only 1: Nat2N.nat2N).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.091014	38877	1009
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj	40	0.770515	297	98	1.0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.077398	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.243077	11	3	1.5	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	4.885419	436	146	5.0.2.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: intro n; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.067377	27107	3178
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.064499	12307	2082
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.053605	18903	2911
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.029576	7042	2771
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.130588	60197	3898
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_jump	40	0.650357	450	76	0.11.0.0.3.0	synth with cache (only 1: unfold tail; only 1: induction p as [p IHp| p IHp| ]; only 1: unfold hd, nth, tail, jump; only 1: trivial; only 1: trivial; only 1: now BinNat.N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_pred_double	40	0.022946	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.104581	42000	5352
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.065286	24009	3198
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.845194	612	88	0.15.0	synth with cache (only 1: intros H; only 1: rewrite H; only 1: apply negb_involutive).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.054884	24971	1886
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.143281	65984	3221
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.not_Zne	40	40.155014	46857	3928
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.026844	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.026741	7119	2924
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.076575	12785	1939
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.077884	30791	4480
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.073684	26995	4107
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_eq	40	40.080476	29192	4681
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.077345	27104	4058
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.058736	20177	5082
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.067338	18942	2265
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.036741	5	3	0.0.2	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.025041	3	3	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.not_1_INR	40	6.955212	1008	376	0.9.3.0	synth with cache (only 1: intros; only 1: intro abs; only 1: elim H; only 1: now apply not_INR in H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.029736	8973	1720
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.007017	432	55
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.075817	29459	4303
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.098893	35071	2501
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.064021	24406	3807
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zge_left	40	0.465589	225	29	0.14	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.041292	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.178045	88043	1533
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.354079	159730	5136
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.081324	27630	4199
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.062193	17590	6074
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.018847	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.067873	27010	3521
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.112771	47601	1800
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.243055	93815	2630
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.113840	52104	2328
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.073962	27635	6423
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.060132	22233	4210
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.083988	33910	4834
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.046668	9718	1834
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.073794	26213	2451
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.056992	20724	2909
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.053035	14609	4048
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.238970	62234	3651
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.110271	45899	4926
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.047371	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zge_trans	40	0.174483	33	12	0.3.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.093858	41041	2103
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006280	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007203	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	15.689334	21227	2693	0.0.0.0.0.0.0.0.0.0.0.0.0.0.44	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.075475	26139	5953
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.074733	32178	2081
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.028545	9484	1629
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.105937	44736	5338
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	20.200578	13133	3242	2.1.7.0.0.2.1.6.2	synth with cache (only 1: intro l; only 1: induction l as [| z l IHl]; only 1: intros P H H0 l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.149938	65870	3141
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.110500	48770	3091
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.066593	21550	2570
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.038920	12723	2720
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_IPR	40	40.072850	27888	3606
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.021412	5508	2115
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.045773	13507	3430
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.022682	5	3	0.2.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.033179	3	2	0.1	synth with cache (only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.010830	2	1	1	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.006375	612	83
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.076721	30578	4890
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.140233	55842	2401
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	10.032537	8214	1042	9.1.5.11.1.7	synth with cache (only 1: destr_bool; only 1: intro n; only 1: induction s; only 1: simpl in *; only 1: inversion 1; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.140449	60484	6183
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.034625	9933	2996
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.145537	64176	4694
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.090411	30552	3551
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.145016	38071	3012
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.068027	5678	2544
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_comp	40	40.056289	21780	2455
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.062504	22601	2092
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_assoc	40	0.840905	337	91	2.0.0.0.2.3	synth with cache (only 1: intros a b (Hb, Hab); only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: do 2 f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.565878	7525	2518
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	34.344186	34566	3017	0.0.0.4.1.3.2.0.27.0.1.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: destruct c; only 1: simpl; only 1: destruct f1; only 1: intros f1; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.059573	22167	4466
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.027741	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.136180	59038	4290
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.066163	24280	3550
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.015817	4409	938
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	1.169282	891	109	0.0.7.11.3	synth with cache (only 1: unfold Z.lt; only 1: intros; only 1: reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.053795	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.006165	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.005718	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.061375	23875	3814
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.080074	21708	3002
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	40.186196	71771	5510
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.046767	10822	3320
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	15.576484	23323	2136	4.0.1.1.9.36	synth with cache (only 1: induction 1; only 1: rewrite InA_cons; only 1: destruct H; only 1: auto; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_succ	40	7.156478	7955	469	0.0.23.13.17	synth with cache (only 1: unfold Z.leb, Z.le; only 1: intro H; only 1: contradict H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.023069	5	2	0.3	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.018076	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.041315	16096	1497
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.114228	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.102087	39536	4554
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.091728	35745	5342
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.073224	25641	7589
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.611287	69794	2801
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.098668	38688	4673
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.005179	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.008716	1	1	0	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.009308	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.012266	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.104227	7	3	0.4.0	synth with cache (only 1: intros x y; only 1: intro l; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.008658	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.008137	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.110741	33	12	0.5	synth with cache (only 1: intro m; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.011237	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.071470	4	3	0.1.0	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.107147	15	5	0.1.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.054201	14678	2608
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	6.719294	2110	975	0.0.1.1.0.0.0.1.1.1	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.885408	1156	237	11.3.2.2	synth with cache (only 1: intros x y z H0 H1; only 1: intro H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.631137	115	56	0.0.0.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	6.951128	2181	317	2.3.1.9.2.13	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	10.701355	19817	1525	18.0.0.0.0.3.1.18.3.0.0.0.0.0.18.16.32	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_IZR	40	40.034582	11977	2269
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.012147	2857	1831
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.049362	7698	2608
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.067567	25951	3684
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000751	67	36
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA8	40	31.237295	25922	2230	1.22.17.3.0.0	synth with cache (only 1: destruct x; only 1: intros c Hc IH; only 1: auto; only 1: intros m Hm; only 1: easy || now destruct y; only 1: now destruct 2).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.036155	8263	2138
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.133838	58243	5843
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.126041	49940	6656
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.032540	9092	1578
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.125549	41302	5067
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.063105	14073	2872
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.067597	25796	2716
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.098821	39402	3721
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.010600	3	2	1.0	synth with cache (only 1: intro q; only 1: now reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.124320	26194	4828
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.823947	12169	2173
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.061929	19427	4518
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.063256	23539	4957
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	5.217852	2744	664	1.2.0.1.0.0.4.0.0.0.7	synth with cache (only 1: intros m x; only 1: intros hyp; only 1: induction m; only 1: simpl; only 1: intros e' eqfind; only 1: intuition; only 1: destruct a as (x', e); only 1: simpl; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.719520	133	70	1.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.221556	95510	3597
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.093161	38876	4611
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.074310	29071	8753
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	40.135110	59743	5302
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.033556	12393	2089
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.119835	52126	6484
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.039831	16295	1809
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.078357	29006	7039
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.037024	9124	1703
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_dec	40	35.741520	69982	4096	1.3.0.4.0.2.13.3.0.4.0.0.0.10.117	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: left; only 1: simpl; only 1: auto; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto with relations; only 1: destruct p; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.055103	18453	5234
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.068664	25751	7190
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.031985	11385	1313
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.097716	39052	6965
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.succ_IZR	40	40.048217	16560	3869
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.804068	93	30	0.0.9	synth with cache (only 1: red; only 1: intros x x' Hxx' l l' Hll'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.065444	15797	4692
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.103511	37950	4127
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.047364	18167	1419
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.017315	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000711	63	36
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.133555	47331	4044
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.043283	11514	4363
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.119393	17439	3951
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA16	40	2.489691	6767	118	2.0.111	synth with cache (only 1: Z.bitwise; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.159981	72710	4780
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.064249	15572	1085
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.030861	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.498582	51	10	1.5	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010866	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.147628	53952	4898
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.067490	29778	2603
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.121100	54209	4502
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.139659	30151	4574
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.054975	15695	5768
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.055888	11136	1791
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.073784	18883	4484
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	9.709194	16775	869	6.2.6.2.0.3.93	synth with cache (only 1: N.induct ltac:(n); only 1: trivial; only 1: intros n IH; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.176309	82036	2504
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.261808	119891	5600
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.123866	50896	6909
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.149537	68990	6043
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	6.157391	4727	701	2.3.0.0.6.13	synth with cache (only 1: intros n m; only 1: intros a b c Ha Hc; only 1: case Z.compare_spec; only 1: intuition Z.order; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.096003	37657	5054
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.050435	15518	2619
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.012995	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.031072	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.011195	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.549849	270	55	9.6	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.038426	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Z_R_minus	40	30.286513	13339	2631	0.12.0.0.3.8	synth with cache (only 1: intro t; only 1: intro; only 1: unfold Z.sub, Rminus; only 1: rewrite <- opp_IZR; only 1: symmetry; only 1: apply plus_IZR).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.098188	41025	6108
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.084145	33636	4502
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.018207	4	3	0.1.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.020017	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.188573	68645	2892
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.095421	41426	5106
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.066122	23603	4131
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.050889	17308	4463
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.192214	89971	7917
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.064775	26235	1503
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	40.053676	17679	3022
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.575028	255	42	0.0.1.1.1.13	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_quot2	40	6.797471	1801	468	0.0.3.0.4.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros a Ha; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.131585	23044	3241
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.032060	11183	1365
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.063087	10500	2048
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000925	73	35
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	29.111800	13960	3911	0.0.1.0.0.1.0.8.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.043361	11961	4922
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.101964	42619	7686
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.073288	27231	2823
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.085282	32269	4585
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.005894	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.066766	25343	2950
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.122855	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.104995	36833	5141
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.104875	42709	4204
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	14.121639	19474	2622	24.8.6	synth with cache (only 1: intros; only 1: compute; only 1: firstorder using Sorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.096820	20787	5013
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.121275	37139	4458
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.id	40	0.042140	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.011975	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.011777	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.112910	29986	6056
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.073377	24947	5193
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.074922	28595	4677
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.367271	180330	7051
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zle_compare	40	40.174359	75460	6202
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	3.378541	1553	403	10.1.1.4	synth with cache (only 1: unfold Z.le, N.le; only 1: intros Hn Hm; only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.523165	289	63	1.0.7.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.040982	14078	2437
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.035976	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.118907	19178	2860
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.084521	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.026809	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.024266	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.097969	41210	5401
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.eq_IZR	40	40.064354	21740	5043
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.726489	143	61	0.0.2.0.3.0	synth with cache (only 1: unfold eqke; only 1: intros; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.200077	103	33	1.0.1.6	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.070820	27413	4630
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.220502	34235	4374
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.054698	18741	4041
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	2.891606	1538	577	0.0.1.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.767169	196	61	0.0.0.2.1.2	synth with cache (only 1: repeat red; only 1: intros l a; only 1: intros; only 1: subst; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.034710	287	134	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: split; only 1: intros Hr; only 1: inversion_clear Hr; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.136555	32299	4717
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.154483	69380	6144
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.053108	16054	5779
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.031488	11603	1858
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.062093	22032	3121
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.039503	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.062741	12935	1011
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.054886	7710	1790
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.025391	8404	1734
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.094421	36397	3534
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.184310	125	12	0.15	synth with cache (only 1: intro n'; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.089040	5	4	0.1.0.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.034579	11872	1543
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.083193	33533	3622
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	1.490025	2108	205	14.18	synth with cache (only 1: intros a; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.214575	95610	6752
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.068040	26024	4140
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.125985	56213	1894
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.056714	21993	3469
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.107995	44295	6879
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	22.774071	17118	4157	3.0.1.1.0.0.0.4.9.9	synth with cache (only 1: intro l1; only 1: intro l; only 1: induction 1; only 1: tauto; only 1: simpl; only 1: intro H2; only 1: intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.262866	65	18	1.0.0.5	synth with cache (only 1: repeat red; only 1: induction l; only 1: Bool.destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_2p	40	17.043449	6685	1520	1.1.0.3.16.5	synth with cache (only 1: change 2 with (1 + 1); only 1: destruct p as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: auto; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.011790	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.028342	9	3	5.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.062123	23747	4560
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.145693	62783	4436
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.008918	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006270	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.107570	45848	2597
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.042064	6768	1011
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.010069	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.008031	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.013035	2	2	0.0	synth with cache (only 1: red; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.007765	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.150625	40373	6441
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.007661	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.125364	53091	6247
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.120968	50366	6825
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	37.170298	26043	2442	2.0.0.2.0.2.4.0.0.0.3.0.0.0.2.0.16.2	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.swap_greater; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: discriminate; only 1: simpl in *; only 1: easy; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: destr_eq H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.109460	36783	4445
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.077237	31111	4444
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_0_IZR	40	40.069956	26026	4223
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.200069	729	195	0.1.7.5	synth with cache (only 1: intro; only 1: invlist InA; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.053077	19188	4265
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.103937	44228	3523
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.075119	28516	4455
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.045435	13556	2732
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.102503	32245	4974
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.144919	62263	4334
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.018950	5526	1692
coq-tactician-stdlib.8.13.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.261287	126624	1944
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	23.506223	20094	1081	0.0.2.0.13.0.0.1.66	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: split; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.070706	26273	4103
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.120971	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.051367	16890	3723
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	8.352935	3749	636	0.2.1.6.1.7.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.045104	15	7	0.0.2.1.0	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.020944	6621	1605
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.037539	10155	4105
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.068572	25004	4766
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.205969	39907	2848
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.190082	85461	6223
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.041855	14075	1435
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.image_empty	40	3.885465	2669	547	3.3.3.0.0.5.0.5	synth with cache (only 1: intro X; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	32.596176	43896	5257	2.4.29	synth with cache (only 1: intros EQ; only 1: intros A B f g <- H; only 1: eassumption).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	33.995238	57167	3638	2.0.5.12.11.4.26	synth with cache (only 1: split; only 1: unfold eval_cnf; only 1: intros pol; only 1: destruct pol; only 1: simpl; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.054687	19642	4390
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.098788	40326	6477
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.060183	21850	6403
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.063140	22643	4627
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	0.689868	457	82	11.0.1.0	synth with cache (only 1: intros; only 1: intros k e; only 1: apply H with k; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.561593	278830	1941
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	7.988970	10071	651	66	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	12.832567	6008	1779	8.1.0.0.2.1.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.252427	116005	6625
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.161041	50908	7012
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.047703	15362	1447
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.694967	962	308	3.0.0.4.1.0.3	synth with cache (only 1: destruct l; only 1: auto; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.160508	64775	5300
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.095794	22361	5707
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.010329	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.029115	8	4	1.1.2.0	synth with cache (only 1: destruct n as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.095197	41846	7708
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.IZR_ge	40	40.079570	32711	3570
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.577704	353	82	12.0	synth with cache (only 1: intro q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.111457	47565	6174
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.069879	27063	4001
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Rtauto.with_env.compose0	40	39.807184	55283	8785	4.4.4.12.21	synth with cache (only 1: intros Pdec l; only 1: induction l as [| ? l IHl]; only 1: firstorder; only 1: simpl; only 1: now auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_alt	40	40.211475	100216	7369
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.096865	25563	4770
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.145788	33437	5746
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.034788	12895	1843
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.038278	11677	3480
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.108950	9633	1959
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.041972	11555	1709
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.022072	8535	1056
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.721920	72	26	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.045222	11647	2585
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.opp_succ	40	21.443999	24760	4162	0.0.0.0.0.9.0.0.0.38	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: induction p as [p ?| p ?| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.012266	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.318261	71	30	4.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with relations; only 1: auto; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.064700	24492	4360
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.163073	28437	838
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.151124	62	23	0.1.0.0.1.1	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.009585	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.192016	87184	5395
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.093344	98	14	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.max_r	40	1.753530	789	302	4.2.0.0.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.033200	3	2	1.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.024930	6	4	1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.091318	33155	5057
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.699533	1247	206	36	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.474843	239	56	12	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.108648	11	5	4.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.203623	92252	7076
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	0.522718	86	19	9.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.012596	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.026857	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_impl	40	14.674473	7028	2879	1.0.1.0.1.3.0.0.0.5.0	synth with cache (only 1: intros A eval l; only 1: induction l as [| a l IHl]; only 1: intros HE; only 1: simpl; only 1: tauto; only 1: intro H; only 1: simpl; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.055782	21855	3540
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.137431	59920	5813
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	7.420779	13472	1363	3.13.27	synth with cache (only 1: intro k; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.131334	112	20	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.076950	27375	6097
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.344198	144	36	0.0.1.1.9	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.895356	694	73	19.3	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.512097	225	24	15	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.092129	39040	5070
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.666150	175	38	4.8	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.092876	40876	3506
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.062630	20755	2449
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.056847	17054	5990
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.066479	23818	1932
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.082396	33204	3563
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.078543	29475	7429
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.319904	185	40	1.9.1	synth with cache (only 1: intros x y H; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.104742	31645	5136
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.012545	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.007511	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.034235	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.710273	113	67	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.225088	105445	8995
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.039004	14526	1983
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.204161	42	21	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	26.939519	13644	3168	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.626142	1391	233	2.2.1.10.0	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: now N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.030421	3	2	1.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.018480	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.067335	22279	6010
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.205189	97959	5579
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.069103	25780	5015
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.112637	47577	6842
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.053393	12743	5244
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.197956	91327	4351
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.068762	26991	5644
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.029968	7502	3811
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.137265	36564	5749
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.027270	6	4	0.0.1.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.027915	10289	864
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.236479	108096	5926
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.168418	74220	6170
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.122255	56463	4407
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.026661	6826	1635
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.118541	46204	7894
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.041149	14784	1876
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	4.287263	3159	756	0.0.3.1.5.1.0.0.0.3.2	synth with cache (only 1: intros; only 1: case (M.is_empty s); only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder; only 1: intros; only 1: case (M.elements s); only 1: unfold elements; only 1: intros l' H; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_rapp	40	40.087010	34529	7629
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.044620	15494	3048
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	4.228838	1410	270	1.0.0.0.0.20	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_refl	40	0.765212	792	33	39	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.148647	35451	6844
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.not_make_conj_cons	40	2.742945	645	302	0.0.1.6.0	synth with cache (only 1: intros A eval a l; only 1: rewrite make_conj_cons; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	40.071322	27791	3778
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.161257	76352	3519
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.263233	127211	2929
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.071221	26711	5777
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.209560	456	221	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.879495	3348	212	53	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.094347	12507	2762
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.110948	43727	5765
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.099058	41178	4568
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.015194	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	0.357830	388	42	0.2.13.0	synth with cache (only 1: intros m; only 1: case m; only 1: induction m; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.164753	20555	3703
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.043641	12985	4168
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.184331	79322	8838
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.030712	8793	3374
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.105928	28519	6219
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.double	40	1.024411	342	72	4.7	synth with cache (only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.010105	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.018407	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.110199	43213	7516
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.072652	9	6	2.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.108655	29004	4605
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.117865	52494	5084
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.142990	58851	7438
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.298551	146057	6177
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.119230	48429	6394
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	10.546884	6629	1473	2.1.4.0.8.0.9	synth with cache (only 1: intro l; only 1: unfold eqk, eqke; only 1: induction l as [| a l' Hrec]; only 1: auto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.235815	106323	4388
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.098199	36928	7473
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.045396	10991	2362
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.016795	5085	1536
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.062069	22114	1940
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.080950	32114	5395
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.022911	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.080482	30643	5952
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.058940	16368	2637
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.031788	6	5	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || intros _; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.discr	40	14.641281	37268	3499	0.59.1.1.20.43	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: auto; only 1: left; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.054181	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.010403	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.037668	12588	2330
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.094544	18	12	0.1.1.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.elements s); only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.024200	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.destruct_list	40	40.495468	255361	2006
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.657941	189	60	1.0.2.1.3	synth with cache (only 1: intros X H'; only 1: intros a b Hb; only 1: apply Setminus_intro; only 1: assumption; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.155688	61505	6130
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_trans	40	40.096637	38966	4893
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.058403	20747	5879
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.073673	22249	5142
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.099093	40010	5094
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.675274	291	106	1.0.3.3	synth with cache (only 1: intros a n v; only 1: intro m; only 1: intros <-; only 1: exact v).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.id	40	0.849241	586	90	0.0.3.8.2.4	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n as [| n H]; only 1: auto; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.105788	29676	5391
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.074912	26275	3613
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.596446	179	57	7.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.023162	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.026478	2	1	1	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.141504	39060	493
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.112847	3492	1687
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.067553	15606	3298
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.168563	56	17	0.6.0	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	1.947263	942	261	1.0.1.0.1.0.0.13	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.433964	214149	6459
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.198766	81871	10136
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	6.696825	8686	1860	1.13.0.5	synth with cache (only 1: intros A P; only 1: intro all; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.052951	18704	5458
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.073618	28847	6516
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.154276	23021	6986
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.070084	28042	5421
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.047263	17	6	3.0.1	synth with cache (only 1: intros a b c **; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.144684	65730	5091
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.084375	30133	5562
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	4.078278	1485	341	0.0.0.0.13	synth with cache (only 1: intros b Hb a; only 1: rewrite Z.div_exact; only 1: zero_or_not b; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.137471	31272	3587
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	23.200691	16020	2931	0.4.8.4.1.5.2.1	synth with cache (only 1: intros X Y H'; only 1: elim H'; only 1: elim H'; only 1: intros x YX; only 1: elim H'; only 1: intuition; only 1: elim H'; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.065237	23255	4964
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.039632	10355	1896
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	1.925803	811	217	0.0.10	synth with cache (only 1: intros a b H; only 1: apply Z.mod_opp_l_z; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.216373	98150	3485
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.088239	34720	7390
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.107070	20194	2643
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.031312	10712	1324
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.158928	70939	6042
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.107640	30113	3742
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.230932	110637	2973
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.bi_induction	40	40.198616	96717	9248
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.039598	14964	2552
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	27.315058	12347	3572	2.0.1.4.2.1.1.0.0.0.0.0.0.0	synth with cache (only 1: induction l as [| x l IH]; only 1: intros; only 1: assumption; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: subst; only 1: intro H; only 1: apply in_eq; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.243220	111766	6683
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	21.568208	29131	3331	0.19.12.2.3.3	synth with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold get, push; only 1: unfold empty, get; only 1: intro H0; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	1.710089	1803	274	18.6	synth with cache (only 1: intro; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.009407	2	2	0.0	synth with cache (only 1: unfold hd_error, tl; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.186024	84	25	1.1.4.2	synth with cache (only 1: induction l; only 1: simpl; only 1: now split; only 1: now discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.073620	29737	4860
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.063510	21051	2118
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.054939	19943	6911
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	6.949948	4750	1100	0.0.3.1.3.3.1.1.0	synth with cache (only 1: intros s s' x; only 1: case (M.union s s'); only 1: unfold inter; only 1: case M.empty; only 1: intro y0; only 1: case (M.remove x s); only 1: intros n m p Hp H; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.120573	38014	6794
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.152384	49323	634
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.059815	18713	2903
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_length	40	7.679377	5777	1561	2.3.1.0.0.1.0.10.4	synth with cache (only 1: intros; only 1: induction l; only 1: destruct l' as [| y l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.104757	33263	2857
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_eq	40	0.092101	44	21	0.3.4	synth with cache (only 1: simpl; only 1: intros a b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_cons	40	0.018833	5	4	0.0.0.1	synth with cache (only 1: intro y0; only 1: intro l2; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.020910	5	3	0.2.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	32.008228	47548	4851	0.0.0.10.2.1.2.11.4.3.0.0.2.5.2	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: invrb; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: invrb; only 1: now auto; only 1: invrb).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.054407	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map_2	40	40.080026	32081	4731
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.NNPP	40	40.345629	168633	9520
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.013674	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.zerop	40	0.362895	156	40	6.0.0.2	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.156402	57982	8510
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.196509	20039	5918
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.290338	141589	12769
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.of_nat_ext	40	40.205758	98835	4888
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.079994	29501	6048
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	11.422829	36646	926	2.91.0.6	synth with cache (only 1: unfold elt in *; only 1: unfold singleton; only 1: red; only 1: ok).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.149679	20749	3020
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.049556	17233	4853
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.036276	11547	3050
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.925505	330	158	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1 as [| ? H0]; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.058610	21548	3291
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.202716	94113	6243
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.eucl_dev	40	40.157645	73029	6484
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.066629	24056	2450
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.018538	4795	1609
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.146502	71033	8950
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.210505	99099	5262
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	30.826185	15689	5282	1.0.0.0.0.0.0.0.2.17	synth with cache (only 1: intro l'; only 1: intro l; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	2.832193	1306	594	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.051770	16971	6307
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	11.388969	7415	2525	0.0.0.0.0.0.0.0.2.12.1.0.1.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: right; only 1: reflexivity; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.105019	42558	4616
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.091380	34484	3936
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.023714	5	5	0.0.0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	21.988080	25692	3219	0.1.2.0.0.0.4.0.18.1.1.42	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a; only 1: auto with arith; only 1: intro m; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.066763	23972	5092
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.104125	40756	5904
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	2.611000	1517	579	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.8	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	16.827238	5833	1025	0.10.1.0.13	synth with cache (only 1: compute; only 1: inversion_clear 1; only 1: invlist InA; only 1: intuition congruence; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.760575	570	78	0.1.13.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.151312	67495	4318
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.139288	59820	5781
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.057806	16639	3850
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.125055	31387	7137
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	7.951363	5686	1545	0.0.0.0.0.0.0.0.0.0.0.2.1.10	synth with cache (only 1: revert p; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.184143	26147	1822
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.052192	19379	2907
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.124031	33650	2891
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.112018	45500	9414
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	13.015887	8673	1830	0.0.0.5.4.5.5	synth with cache (only 1: intros x Hin; only 1: intro Ha; only 1: intros H; only 1: elim Ha; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.087689	15	9	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.100725	45195	6379
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_In	40	4.249503	4708	1117	4.0.0.0.0.1.1.1.3.0.0.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l as [| ? ? IHl]; only 1: destruct n; only 1: simpl; only 1: Nat.order; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_0_discr	40	6.037426	12328	1093	26.1.8.2.20	synth with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.114222	49008	10305
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.096618	39619	8352
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.156168	69612	6522
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.287978	144241	1971
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.018735	6	3	3.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.141641	60606	5580
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.130171	57231	3017
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.321675	89	35	0.1.1.0.2.0	synth with cache (only 1: destruct t; only 1: intros H; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.039464	10388	5045
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.029174	7920	3194
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.116205	50275	9037
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	1.546252	5417	197	1.0.6.0.43.31	synth with cache (only 1: split; only 1: now Nat.nzsimpl'; only 1: red; only 1: intros L R n; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.quotient	40	40.087010	38802	5111
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.L_R	40	7.499976	15888	730	21.6.18.12.0.0.0.79	synth with cache (only 1: destruct m as [| m]; only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: simpl; only 1: PeanoNat.Nat.nzsimpl; only 1: now PeanoNat.Nat.nzsimpl; only 1: PeanoNat.Nat.nzsimpl; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.080904	30840	2402
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012905	3431	1411
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.088601	34951	4156
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.074235	7606	1321
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.121216	50402	7766
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.006397	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.073891	27896	7124
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.121479	44442	4564
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.409967	93	47	0.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_dec	40	40.129159	57325	9031
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.gt_dec	40	0.007315	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.ge_dec	40	0.006715	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_eq	40	0.008681	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.639025	317323	2001
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_lt	40	0.009449	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.012476	2	2	0.0	synth with cache (only 1: intros n0 h v0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	0.902425	294	149	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	19.036522	5687	1636	9.0.0.6.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.get_map	40	40.066671	21168	5705
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.uniquify_map	40	40.076135	28039	6474
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.127782	54109	5113
coq-tactician-stdlib.8.13.dev	Coq.Arith.Div2.double_plus	40	40.043307	16075	3355
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.059916	13033	1975
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	3.844114	5386	562	16.8.10	synth with cache (only 1: unfold Qle; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.271554	207	92	4.1.5	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.034808	8751	1374
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.108771	39567	4811
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_is_one	40	40.099177	42691	4632
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_S	40	40.098190	41905	6550
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_not_le	40	0.014254	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_S	40	0.015047	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.exists_le_S	40	3.931167	4722	700	1.1.1.19	synth with cache (only 1: intros n H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.085170	27652	5302
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map2_2	40	40.061388	22157	5577
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.876984	97	51	0.0.1.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.In_nth	40	40.123346	56483	6778
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_trans	40	2.933974	1819	346	7.1.1.13	synth with cache (only 1: induction 1; only 1: intro; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.124637	54319	9166
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.015470	6	3	1.1.1	synth with cache (only 1: destruct n; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	16.710361	23766	2074	0.0.0.2.0.0.3.2.1.0.0.2.25	synth with cache (only 1: unfold leb, le; only 1: destruct a as [| a], n; only 1: easy'; only 1: easy'; only 1: trivial; only 1: case N.compare_spec; only 1: intuition; only 1: simpl; only 1: now destruct a; only 1: easy'; only 1: now intro m; destruct m; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	8.951285	8600	1118	13.6.4.0.2.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: intuition; only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.351114	84	51	0.0.0.0.0.1.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.008067	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.splitat_append	40	18.303941	15278	2524	1.1.0.0.0.12.11.2	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v as [| ? ? v IHv]; only 1: apply f_equal; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.090150	33862	5626
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.006484	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.086457	33317	5705
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.125300	31334	4828
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.037190	11772	2579
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.030540	7960	3950
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.929071	405	141	0.3.1.2.0.1.4	synth with cache (only 1: destruct s as [| c l y r]; only 1: simpl; only 1: tauto; only 1: descolor; only 1: invrb; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.162875	34	14	0.0.3.1.0	synth with cache (only 1: intros [| x acc]; only 1: intro; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.135859	61450	9329
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.071594	27875	3936
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat_l	40	17.825371	28479	2646	28.2.1.28	synth with cache (only 1: induction 1; only 1: Nat.order; only 1: Nat.nzsimpl; only 1: now rewrite <- Nat.le_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.091179	38435	8032
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.078416	32723	5022
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.026633	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	38.731268	27391	4436	1.0.0.0.0.3.9.0.1.2.0.35	synth with cache (only 1: intro; only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: intros; only 1: simpl; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015353	4584	1423
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.101522	17948	2636
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.051412	20625	3251
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.151160	68934	9203
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_r	40	6.352825	3918	683	7.0.21	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.004629	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.029201	9	2	1	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.052768	17046	8742
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.060192	21896	9719
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.012760	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.015447	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.064792	22112	6338
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_equiv	40	40.063050	25456	4349
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_split	40	0.474937	33	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.094103	16629	2193
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_0_neq	40	0.021536	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_n_S	40	0.009511	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.plus_minus	40	40.118263	53532	6626
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.124335	44272	6196
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.121205	47678	5979
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_in_int	40	40.144998	64791	8794
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_between	40	0.372070	180	40	0.1.8.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.097099	18655	5266
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_indep	40	40.093322	39072	8936
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.051173	19812	4749
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_le_trans	40	40.112494	48343	5014
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.leb_le	40	40.090767	28207	7625
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.170030	75438	3565
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.108374	21056	2761
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred	40	9.969051	12509	2065	0.11.21	synth with cache (only 1: destruct m; only 1: inversion 1; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_trans	40	3.042395	1858	321	17.3.0	synth with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: now transitivity m).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.007442	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.009648	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.632579	272	104	1.5.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.170712	43960	4304
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.089528	34748	4627
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.072561	29747	4811
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.169423	31482	4767
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.521227	959	566	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.050864	14164	4977
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.lt_O_minus_lt	40	16.517813	18147	2467	2.0.0.15.4.0.15.1.4	synth with cache (only 1: Nat.double_induct n m; only 1: intros; only 1: now Nat.nzsimpl'; only 1: intros n H; only 1: auto; only 1: simpl; only 1: intros n m IH H1; only 1: apply IH in H1; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.087635	35663	2382
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.154749	71973	4938
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.067093	24803	4836
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_eq	40	40.066972	25011	8403
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat	40	40.208754	107226	7665
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.068951	23969	4784
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.026152	8700	621
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.071718	19017	4147
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.085663	37354	3983
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_r	40	40.077094	33315	4228
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.130827	58104	8907
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.058660	16204	5494
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	12.737180	6573	1006	19.1.1.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.012977	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.003450	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_compare	40	40.060433	20909	10311
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.066443	22579	6037
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_even_plus	40	40.064061	24589	4948
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_l	40	0.067103	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_even_plus	40	0.069979	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_plus_aux	40	0.698974	73	15	0.0.10	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_mult_l	40	0.085480	14	3	6	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_mult	40	0.086592	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.078200	31499	6422
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.126196	51408	5139
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_exists	40	40.095439	40921	6102
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.190387	7222	3741
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_split	40	40.089442	35111	5536
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.071328	25635	8622
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.142781	64211	7223
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.045006	15455	2738
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.052486	18279	4753
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	3.498605	824	337	0.2.0.0.2.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.110795	47417	6425
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.099557	41546	5800
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	19.066171	10247	3055	1.1.0.1.1.2.0.0.0.1.4	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: auto; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.097459	38172	9330
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_refl	40	40.158038	71562	16366
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_true	40	1.791119	791	284	2.0.0.1.0.0.0.0.0.0.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: intro m; only 1: destruct m; only 1: easy; only 1: simpl; only 1: contradiction || auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.140891	30391	3591
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.083702	31719	5655
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	40.113037	44582	5610
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.231453	107929	5631
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.476649	134	72	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.074820	28564	8260
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.092167	40628	5498
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.073145	26196	7046
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.077482	28163	6123
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.086508	31444	4670
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	8.766164	3686	1549	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.018154	5319	873
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.122327	17204	6253
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.023183	5925	2863
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.093877	44097	4126
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.056568	18357	7112
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.075538	26854	11284
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.169725	75959	10029
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.060061	19916	6605
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.025206	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	7.927493	446	212	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	2.958544	1207	459	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.057587	19560	4585
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	4.036343	2208	612	0.5.1.1.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.092381	31805	5925
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.058179	18612	5750
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_or_exists	40	40.112745	43714	6590
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_None	40	40.067416	25019	8087
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.min_l	40	40.101328	38081	7816
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.089137	33615	6515
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_spec	40	0.163733	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.035801	10559	3784
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.070207	27099	5164
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.nth_le	40	3.616420	3560	738	13.0.4.4	synth with cache (only 1: intros n m p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: eauto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.098346	38683	5118
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.096191	34745	7266
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.210265	97690	12877
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.067606	27421	2392
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.072354	25121	4907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.129464	56695	2929
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.036549	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.135173	61295	3137
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.154275	67004	5588
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.129874	16137	3948
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.event_O	40	11.531862	71015	1674	3.13.0.1.8.96.0	synth with cache (only 1: inversion 1; only 1: intuition; only 1: revert H H0; only 1: intro m; only 1: inversion 1; only 1: destruct H; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.093103	38795	5698
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.225601	106377	3540
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.056899	18607	4464
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.043328	12161	4050
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_nth	40	17.038129	8467	3562	5.0.0.0.0.3.1.0.0.2.0.0.0.2	synth with cache (only 1: intro l; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl in *; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.086368	33515	6075
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.069623	25714	5113
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	16.317717	11873	2338	0.0.0.0.0.0.0.0.0.0.0.0.0.0.31	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.009630	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.007545	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.053794	15607	8269
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat	40	40.145678	68833	5649
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	6.749213	3532	1513	2.0.3.2.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.104394	29804	7733
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.095876	35735	12612
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.090750	37530	7300
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.107972	41542	10147
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.396849	97	56	1.2.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.le_plus_trans	40	3.728401	3410	583	12.0.0.0.0.3.9	synth with cache (only 1: Nat.induct p; only 1: intro H; only 1: Nat.nzsimpl; only 1: assumption; only 1: intros p IH H; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.009869	2408	1045
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.129364	48982	7711
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.068759	22135	6367
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.153252	49	25	0.2.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.141236	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.043466	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.022689	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.062497	22218	7201
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.093568	37987	4152
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	13.999564	6297	1923	3.5.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.496614	152	74	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c d ? ?; only 1: intro LE; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.072943	29437	6493
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_add	40	40.054962	15527	3306
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.056910	19738	3620
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.122502	22016	6525
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.067730	22265	6453
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.064075	22647	5015
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.115428	46546	13248
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.075596	24707	6664
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.lt_plus_trans	40	22.947437	11890	1278	14.3.0.0.5.5.11	synth with cache (only 1: Nat.induct p; only 1: intros; only 1: Nat.nzsimpl; only 1: auto; only 1: intros b Hb IH; only 1: Nat.nzsimpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.093017	37538	1644
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.178506	136	18	7.7	synth with cache (only 1: apply abs_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.078771	24210	6075
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.070902	25485	4993
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.014776	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.966618	318	126	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.075191	31682	4528
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	2.505984	8197	381	0.3.9.26.17	synth with cache (only 1: intros H; only 1: inversion H; only 1: inversion H; only 1: destruct H as (e, H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.018201	8	2	6.0	synth with cache (only 1: intro l'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.odd_even_lem	40	40.119595	54636	4019
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.046238	13933	5812
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.090529	34348	5409
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_double_add	40	14.367233	3116	724	5.1.1.3.0.4	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: auto; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_double	40	0.018002	7	3	0.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.047860	14250	5394
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.875506	138	74	3.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now nzsimpl; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.247180	46	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pow_neg_r	40	0.037762	16	4	0.1	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.110094	41170	5991
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.036666	10372	2964
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.115665	48871	7005
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	2.395578	759	179	0.0.4.1.0.1.2.2.5	synth with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.277888	80654	6333
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.057417	18819	8593
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.039724	12089	5090
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.112660	29035	7988
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.072163	26674	10249
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.012332	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.124714	49527	8681
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.036722	6184	901
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.055278	16705	6064
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	40.078471	29343	5574
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.224448	30	19	1.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.127021	54519	7187
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.136798	60788	2823
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.046625	15311	2606
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.111932	49479	5458
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.054883	18898	3757
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.056921	19669	7315
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_log2	40	25.744687	19352	3632	16.0.9.0.0.2.0.0.0.0	synth with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: cases n; only 1: intro H; only 1: reflexivity; only 1: intros n _; only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	20.379038	10178	4724	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.082715	27417	6744
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.070806	25438	4060
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.250197	118931	16426
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.078499	28488	5315
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.575537	1695	968	0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.004958	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.033907	5	3	0.1.1	synth with cache (only 1: induction n; only 1: now nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_is_one	40	40.092718	38102	5870
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.087518	34335	5685
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.569488	842	150	7.8.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.062750	20106	2881
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.090143	39383	5492
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.087153	34022	5843
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_acc_aux	40	40.051206	17344	4987
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.033054	8093	3484
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.124199	8093	3123
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.043520	13946	3816
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.remove_In	40	40.092018	34194	7251
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	5.944835	2227	795	3.1.0.0.1.3.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.104301	43561	6891
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.243301	40024	5412
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.025630	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.066055	24103	5033
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.079032	18660	7801
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	40.076606	26390	7681
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.643892	356	190	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.016958	5574	399
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.656773	255	102	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.119466	48492	9512
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.004185	303	116	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.054484	9737	1464
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.098974	32080	6643
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.057237	18030	4205
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.032983	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.048069	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.086266	35331	4239
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.048629	15042	5406
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.065011	2991	1025
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.053360	20706	3381
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.227541	38655	6734
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.096526	37535	6281
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_gt	40	40.057820	19297	4533
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.090712	33823	7361
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.068731	9603	1747
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.105382	35750	3920
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.015527	10	3	0.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.222674	101310	7798
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	13.734482	4382	2161	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.065067	21820	6057
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.022311	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.139789	8	4	1.0.3.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.succ_plus_discr	40	40.068189	28983	5228
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.083819	28073	6061
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.097726	39525	5873
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.085107	34411	5677
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.071155	16747	3942
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.051749	15945	6020
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.053353	18612	4831
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.065666	21904	5187
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	2.882429	854	331	1.0.0.0.3.5.3	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.068578	23260	4837
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.103162	42370	5905
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.056033	19075	4019
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	13.208780	4457	1869	0.0.0.0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.185761	21	12	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.070785	26628	5992
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.098628	30965	8824
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.475259	1856	693	3.1.0.0.0.3.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_neq	40	40.204521	45845	4937
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.062005	20482	8992
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.061490	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.059995	18181	6140
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.038025	10542	1902
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.072865	16801	944
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.081080	28230	6993
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.073207	29408	5110
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.042930	12237	4192
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.057672	18978	5184
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.058748	23077	3109
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.036544	12183	4057
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_spec	40	40.081150	29116	5494
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.256873	46541	5037
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.126491	50	15	7.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.828780	1253	123	0.0.0.0.0.0.0.0.20.0	synth with cache (only 1: unfold natural_isomorphism; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.112424	44683	8545
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.042932	13403	4064
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.800762	582	70	26	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.099423	35906	7755
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.010243	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.095851	34645	10093
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.053890	15891	5621
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.526539	39	6	9	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.012600	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.376054	200	36	4.11	synth with cache (only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.267879	30	28	1.3.0	synth with cache (only 1: revert q; only 1: intro q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.025211	9	3	1.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.059078	19198	6690
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.041237	10256	3541
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.081785	30976	4695
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.038555	12704	3395
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.142998	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.031291	3	3	0.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.067027	21951	4626
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.047452	14993	3714
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.073969	26328	6934
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	40.050054	15940	4616
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.169695	33	12	2.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.121392	48394	7358
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	34.869645	26276	5909	1.0.1.0.19.7.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: rewrite mul_comm; only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.071165	24663	4479
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	1.906845	602	237	0.1.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: destruct (mod_bound_pos a c); only 1: auto'; only 1: auto'; only 1: order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.112418	44380	4949
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.379000	561	200	1.4.1.1.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.045845	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.396418	80	49	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.066437	18455	7112
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_minus2	40	40.212865	26267	3173
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.068392	22019	2958
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.074180	22166	7268
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	40.135954	56720	7220
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.050062	15533	1566
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	40.083452	6770	771
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.115655	42312	8889
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.162642	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.087649	36463	5452
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.051521	8433	2394
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.051276	17658	3119
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.028845	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.061038	22403	3861
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.184429	85671	1427
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.170162	69974	5858
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.104667	38391	8329
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.068233	24775	7388
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.080184	25167	7077
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.085065	31142	6790
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.063573	17416	5658
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.012228	5	2	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.268429	2032	840	0.0.1.0.0.0.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.063334	19688	7316
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.010775	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.025079	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.015491	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.018091	5	2	3.0	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.013389	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.008009	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.009547	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.065553	19531	4329
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.063433	18775	6093
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.184476	77641	9556
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.051252	15394	3729
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.061478	20065	5421
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.075780	25425	6057
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.055593	14893	4415
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.183212	75546	5064
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_alt	40	40.115898	44966	7209
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.074032	23810	4845
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.078598	23917	6464
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.088694	19245	7658
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.782867	467	206	0.0.1.5	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.087540	33372	6008
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.075650	25385	3604
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.062047	23096	5289
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.101525	38273	6812
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.101326	28969	2497
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.078821	26036	6133
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	3.028793	1511	478	1.0.0.6.1.0.0.5.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.057516	19194	4318
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.456539	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.027263	6422	2828
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.136724	6	5	1.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.082239	29101	6472
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.064526	19636	3609
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	5.569984	1071	569	0.0.4.3.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.038980	11233	2777
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.383620	51	24	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.069959	27378	3647
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_lt	40	40.070304	22220	5292
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.070498	24052	5693
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.121218	47047	8832
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.076614	30072	4657
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.069160	25711	5017
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.079499	29507	5065
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.074040	21850	7878
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.214926	94	17	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.654380	262	83	0.0.0.0.7.0	synth with cache (only 1: induction n; only 1: split; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.111568	50010	2933
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.097672	34647	7681
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.017343	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.125105	48770	2885
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.684251	191	89	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.377710	927	258	0.0.0.8.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.049445	14333	5002
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.103881	39119	7306
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.082904	26073	8681
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.071383	24100	6731
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.055392	17174	5892
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.916336	288	135	0.1.0.1.0.0.1.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.150759	62795	6896
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.103183	22618	3586
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.119725	46785	4246
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	7.209499	2565	1176	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.062024	18904	5055
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	3.836379	2501	505	0.1.0.0.0.0.0.2.0.15	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros a n Hn; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.202932	75999	3909
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.005997	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.055869	15457	5669
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.464465	150	55	0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.501694	124	57	1.0.1.0.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.070393	23077	4039
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.068550	20576	6331
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.133819	53547	6760
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	7.383100	2868	1231	1.3.0.0.0.1.0.0.0.0.0.2.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.059019	22377	1557
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.026894	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.409817	1758	385	0.0.0.10.2	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.140343	16	9	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.796812	932	405	3.0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	21.168999	4691	1135	5.7.4.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.concat_app	40	9.204448	9446	1624	2.20.0.0.0.0.0.1	synth with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto using app_assoc).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_length	40	0.110958	35	20	1.0.0.0.0.2	synth with cache (only 1: intros; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_eq_nil	40	0.509721	255	82	0.0.0.5.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: intros; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.042587	13262	5219
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.924152	772	444	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.073480	26189	4350
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	9.440077	3833	993	0.0.0.0.0.0.0.4.2.1.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.034961	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	7.213853	4584	1201	1.8.0.7.0.3.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros m Hm IHm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.355242	291	70	9.0.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.563684	564	135	0.0.2.4.7	synth with cache (only 1: intros x y Hxy Hyz Hy; only 1: transitivity x; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.027653	7689	2281
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.103995	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.045944	13261	2547
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.086673	29991	7326
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.038334	9411	3945
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.358943	37	17	0.1.3.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.995588	647	275	1.1.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.052235	15584	2109
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.055315	16881	5688
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.037258	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.089407	29497	5785
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.118756	48485	6030
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.939277	553	107	2.1.3.0.3	synth with cache (only 1: intro H; only 1: apply divide_antisym; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.597819	144	84	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.055881	17221	5370
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.593233	2288	988	0.0.0.2.0.0.0.0.0.0.1.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.051115	13616	5241
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.076700	27581	7441
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.212919	95527	4944
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.009724	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.103422	37670	6605
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.110470	2524	804	1.0.0.0.2.1.0.1.0.1.2.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.010592	2	2	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.088471	30451	5595
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.087407	15944	3489
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.079710	26690	5722
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.174987	81457	3855
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	0.886574	487	112	0.9.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.658477	531	126	9.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.056199	18811	2750
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.072023	21437	6187
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.142080	55122	5617
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.061961	18029	6808
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.073064	25887	4738
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.052451	14159	4072
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.068263	24396	6536
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.063972	24124	3772
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.087847	31983	5854
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	2.782320	846	305	0.0.9.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.009222	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.count_occ_map	40	40.124547	51018	4355
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.044021	15775	2755
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.154932	66068	3629
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.058614	20543	3813
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.072929	23812	6207
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.219803	98036	10841
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.030734	8400	2403
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.map_ext_in_iff	40	10.802501	6568	2049	0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1.1.1	synth with cache (only 1: intros A B f; only 1: intro n; only 1: repeat split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.176946	72540	14080
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.065092	21746	4899
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	1.514085	799	116	3.24	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.087079	16943	1757
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.063743	21739	4252
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negbFE	40	0.007731	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	27.393335	14196	3689	1.7.2.7.1.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraT	40	0.600245	302	36	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraFT	40	0.735523	206	19	2.17	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.008248	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.009283	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.012496	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007489	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.012697	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.056042	18854	3103
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.051628	16288	3529
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.074767	25231	6304
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.050563	12797	4918
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	22.314533	7171	1102	0.3.2.1.21.1	synth with cache (only 1: intros x y z; only 1: intros X; only 1: red; only 1: intros H H'; only 1: apply H; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.080628	19588	9783
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.107864	41286	5841
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.465379	129	47	0.1.0.0.3.1.0.0	synth with cache (only 1: destruct x; only 1: intros; only 1: intuition Z.order; only 1: destruct p; only 1: easy; only 1: now destruct 1; only 1: easy || now destruct y; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.032133	9	4	1.2.2	synth with cache (only 1: intro n; only 1: intro q; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.101317	39176	8661
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z_eq_mult	40	1.312863	1083	101	0.5.17.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.346009	165736	7315
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.054740	15776	3172
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.567507	247	58	12	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.011213	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.152318	58445	4072
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.184004	77061	8564
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.067693	24193	4412
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.039052	11254	3844
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.051562	16658	4581
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.053338	16329	5728
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.054281	17073	4859
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.188731	81850	5881
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.050225	17039	3372
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.053156	18040	3916
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.045405	14575	2652
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.303039	138494	2984
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.097514	34875	8099
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.052738	15285	4856
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.072273	18485	1415
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.045286	6648	2154
coq-tactician-stdlib.8.13.dev	Coq.Setoids.Setoid.gen_st	40	0.316649	204	66	10.0	synth with cache (only 1: intro n; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.008480	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_length	40	40.093151	35168	5053
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.107454	37641	12499
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.057525	17057	3948
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.139329	22	11	0.4	synth with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.059055	18133	6702
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.188688	81231	4866
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	4.593895	4755	1373	0.0.1.0.0.0.0.0.13	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.306770	22991	766
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.895997	308	151	1.0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.062468	23095	3820
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	1.444408	430	53	0.21	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.832019	475	100	1.3.0.3.1.0.6	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.287698	174	25	0.16	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.760285	215	71	2.0.0.0.0.0.7	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.221449	94621	11038
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.088441	29635	8922
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.082995	30445	5811
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.110329	35738	11861
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003523	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.006253	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.781677	1144	235	1.14.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply lt_le_incl, lt_0_1; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.004183	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.154549	62573	6068
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.008343	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.120598	5	1	4	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.006783	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.598833	199	43	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.004690	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.395680	91	88	3.1.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.062907	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.062573	21214	4197
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.219261	94718	6615
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.073997	24495	6606
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.162715	71315	7401
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.024843	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.042661	13055	3472
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.061694	23244	3817
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.079349	27482	7468
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.068372	25168	4551
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.076500	26140	3241
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.074852	25393	7081
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.030123	6692	1788
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.048414	16619	3268
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.075250	25765	5720
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.070743	8006	2880
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.072854	23180	8072
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.044999	12020	5509
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.060486	21036	3998
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.056708	17481	3981
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.007542	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.012774	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.082659	30538	3530
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.060485	16333	12856
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.019251	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Program.Subset.match_eq_rewrite	40	1.106618	1316	197	0.1.8.2.5	synth with cache (only 1: intros n P IH0 IHS; only 1: intro m; only 1: destruct m; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_rev_right	40	40.091473	31286	6422
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.incl_right	40	0.031642	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.057158	17930	5377
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.lock	40	4.084792	39683	387
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.063272	20644	5001
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.134596	56833	4911
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.seq_trans	40	3.670161	4533	826	0.0.2.0.15.3	synth with cache (only 1: destruct x; only 1: intro H; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.011759	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.062875	22708	4300
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.336427	22663	1296
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	23.581276	19589	4524	1.1.20.0.2.0.0.1	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.080660	27341	7914
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.006901	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.UIP_refl_refl	40	0.055853	48	18	9	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.008823	17	2	8	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.338727	163836	10364
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.solution_left	40	0.218488	130	42	1.2.3.3	synth with cache (only 1: intro eq_rect_eq; only 1: simple destruct 1; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.046829	16500	3154
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.028550	4026	570
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.049170	10887	9673
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.067570	21510	5846
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.067946	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.103759	22570	2207
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.417367	180408	6519
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.072022	24511	5101
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_tag	40	0.570395	967	103	0.0.15.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct H; only 1: destruct (H z); only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig	40	0.007617	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig2	40	0.015769	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.068900	23845	2669
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.054385	16720	4310
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.120257	26021	4195
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.049754	16202	3365
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.066520	23492	3959
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	4.150338	6277	983	0.0.5.2.6.0.0.0.0.6.0.42	synth with cache (only 1: constructor; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.074768	24720	4515
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_false	40	0.022422	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.074804	23406	5255
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_or	40	0.961591	502	272	0.3.0.3.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.068799	24730	4630
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.041778	7823	2611
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004495	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.045887	12751	4131
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.095475	36390	5141
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.047233	13726	5509
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.060827	20646	4990
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	7.993045	5297	1288	0.0.0.10.0.0.2	synth with cache (only 1: intros a b c Ha Hb Hc; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.073469	25213	5935
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	16.632796	13654	2673	0.4.0.2.0.0.21	synth with cache (only 1: intros z n; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.239356	978	234	0.0.1.0.0.0.1.0.0.1.6	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	24.864223	4721	1142	0.1.0.1.0.0.1.5.6	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_symmetric	40	40.130436	52037	6862
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.010835	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009808	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.070618	3	2	1.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.009810	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.052617	17	7	6.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.014851	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.942821	328	143	5.4	synth with cache (only 1: unfold lt; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.046898	12622	3452
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.689091	149	55	3.1.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.015574	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.040532	12882	3253
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.064004	21740	4021
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.locked_withE	40	40.652517	310206	7982
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.067199	23299	7880
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	3.687635	39593	274
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	10.262094	4887	1969	0.6.0.3.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.048257	15021	4492
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.014354	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.312246	39588	1972
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.045233	13215	3239
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.616812	26332	789	5.0.3.1.32.56	synth with cache (only 1: intro x; only 1: exists x; only 1: red; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.539723	1148	41	47	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.123690	49483	8791
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.261189	118661	8115
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.052396	16278	4576
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.046250	7112	1377
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.051746	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.055892	9201	1001
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.005124	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.005562	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_proper	40	0.017332	4	3	1.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.022655	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	2.798223	2045	278	0.5.2.15	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	5.848273	1977	990	5.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.427511	193715	5337
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.088364	30150	6901
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.042842	22	10	4.0	synth with cache (only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.050452	15360	4706
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.894059	845	392	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.323284	152188	11943
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.007007	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.300552	546	66	3.5.16	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.024547	77	9	0.12	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.079863	28779	4502
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	4.353128	57125	496	0.0.3.3.252	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	13.698796	10015	1659	1.1.3.0.18.12	synth with cache (only 1: intros H1 n H2; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.082204	29751	6077
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.008928	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.008443	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.009714	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.008764	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.049500	15430	4260
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.115785	31376	5574
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.141627	45	25	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.155514	50	28	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.061208	20754	5821
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.407869	183545	12218
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.063483	21779	4412
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.443852	367	91	3.3.2.1	synth with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.015654	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.037667	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	2.524261	1261	450	2.6.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006551	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.137556	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.063688	22187	4948
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.042478	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.044295	10767	6296
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	5.522162	3072	1138	1.8.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.578468	1979	81	0.2.2.54	synth with cache (only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.103316	19	11	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.062071	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.262128	18	9	5.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.108725	42557	8248
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.062978	22494	6200
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.083024	31305	7449
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	5.501495	1415	350	0.0.2.0.9	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.012515	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.011598	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.173497	675	283	1.1.6.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.forallb_forall	40	40.034969	8352	2083
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.052340	15940	3796
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.066280	19676	4343
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.nary_congruence	40	40.116302	42286	10538
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.086713	29104	4851
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.011075	11	4	0.3.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_spec	40	0.012114	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.106159	36244	8524
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.014998	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	4.412584	1437	415	0.0.2.0.0.1.1.1.3.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.349882	41834	2113
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.432175	437	25	0.28	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.032882	8997	3385
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.071507	24787	7865
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.076658	29723	7928
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.054367	18871	3159
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.064639	17493	15213
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.205475	114	30	8.0	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.013022	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.038427	5827	1777
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.009461	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.020333	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.756666	1384	223	1.2.1.4.10.1	synth with cache (only 1: intro H; only 1: destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_is_true	40	0.007363	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.053625	16181	3575
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_iff_true	40	0.015063	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eqb_prop	40	0.006933	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_sym	40	0.008064	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.005525	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_true_iff	40	0.018690	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_false_intro	40	0.012926	5	3	0.2.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_r	40	0.006292	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.proper_proper	40	0.411144	131	61	1.0.0.4.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_l	40	0.007076	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_true_eq	40	0.080728	26	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_diag	40	0.004976	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_false_elim	40	0.029909	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.011651	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.011993	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_r	40	0.005459	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_l	40	0.007404	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_true_l	40	0.003893	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.011689	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_eq	40	0.007499	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.031997	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.021574	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.043138	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.010449	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.017291	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_true	40	0.014158	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.014738	3	2	0.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.011298	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.014959	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.010796	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.reflect_dec	40	0.016794	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.029046	10151	1322
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.abstract_context	40	10.499076	138299	1664	0.120.88	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.136751	60542	8953
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.068417	24769	4248
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.222031	675	32	0.35	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.321864	149444	9018
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.077779	27335	6087
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.062384	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.941094	654	107	0.0.1.2.9	synth with cache (only 1: intro p; only 1: intros; only 1: destruct r using Acc_inv_dep; only 1: apply F_ext; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.449484	69	27	0.2.0.2	synth with cache (only 1: intro H; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.093865	33402	7488
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.072559	24722	6915
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.095819	33138	4196
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	40.084736	29259	8508
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.031888	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.060960	22939	3475
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.052916	17631	4261
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.415267	122	44	0.3.1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.086818	35536	3761
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.071050	2	2	0.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.dec_True	40	0.008821	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.030832	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.022344	4859	2243
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.055457	15080	5584
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.112099	38522	10492
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	19.310362	348671	2981
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.044462	13059	6746
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	26.188306	7153	2584	0.3.0.0.0.0.0.0.0.10	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.192114	50	24	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.064581	22373	6663
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.528340	737	255	2.0.1.6	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.811863	330	125	0.0.0.0.3.0.1.0	synth with cache (only 1: intros B C x H'; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.050656	22111	2301
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.214914	64016	7531
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	23.093372	14949	4772	0.0.0.0.4.0.0.0.2.0.0.1.4.4	synth with cache (only 1: apply min_unicity; only 1: destruct (min_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: destruct (lt_total n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.068391	25145	4175
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.123411	52109	3504
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.compose_assoc	40	0.009905	4	3	0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.flip_flip	40	0.007685	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.223659	2294	370	1.1.5.10.12	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.013227	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.055666	23	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.027418	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.043279	10	5	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.110335	22	9	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.083801	29092	5024
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.138660	56506	12305
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.314962	106338	4198
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.059810	21378	6040
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.457885	226630	9406
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	15.598487	5123	2009	0.0.0.8.1.1.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.807446	326	135	0.3.1.0.0.0.0	synth with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.081128	26304	10518
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind	40	40.432053	213476	12727
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.337153	161429	12370
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.005039	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.008698	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.013473	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.021557	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.006438	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.020122	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.059175	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.217529	100786	14664
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.081492	132	35	2.2.2.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.062551	20191	6493
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.241238	113155	3400
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.478708	216263	7582
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.256193	119447	4051
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.068056	24283	5884
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.042541	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.227294	433	43	4.4.17	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.225249	444	41	0.0.13.9	synth with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.353145	5517	1171	3.2.0.7.0.0.2.2.4.11	synth with cache (only 1: intro p; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.008961	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.092320	33476	9319
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	3.197907	8328	1026	1.9.17.1	synth with cache (only 1: intro m; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.016791	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.004582	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	10.140859	33559	3790	1.11.1.11.0.9.3	synth with cache (only 1: induction 1; only 1: red; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.095804	188	26	0.13	synth with cache (only 1: intros [? [? ?]]; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.045244	10925	3644
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.053367	17176	7361
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.051660	17599	3902
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.067752	24293	3634
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.010258	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	21.868615	10041	3611	0.0.1.13.3	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.545335	129	44	0.0.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.and_hprop	40	40.282057	128164	12889
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.true_hprop	40	0.008758	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.not_hprop	40	0.237096	216	55	0.0.1.0.6	synth with cache (only 1: intros h1 h2; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.937193	645	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.052797	16278	5066
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	12.937940	55110	3085	0.73.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.051366	16051	5024
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.050231	2715	272	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.089409	32219	8917
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.151659	69421	4276
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.103506	39109	6684
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.567307	14466	1205	3.41.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.264978	216	41	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.029789	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.100602	42197	10432
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.011943	6	2	4.0	synth with cache (only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	10.758110	8648	1834	0.0.7.6.0.12	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.146081	66863	4478
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	28.238524	19200	3683	1.0.0.0.1.0.4.0.0.0.0.0.0.0.2.2.15	synth with cache (only 1: intros a Ha; only 1: symmetry; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: case compare_spec; only 1: order; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: rewrite H; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	3.438807	6122	657	0.0.0.15.5.7.5.3.0.3.3.4.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: destruct H; only 1: apply eq_existT_uncurried; only 1: subst; only 1: simpl in *; only 1: exists eq_refl; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.057684	19	11	0.0.2	synth with cache (only 1: rewrite sqrt_up_eqn0; only 1: now rewrite ?Hx; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.find_none	40	40.051260	16946	4022
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	15.263390	11716	1826	1.0.1.0.0.0.1.1.18.0.0.2.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: split; only 1: apply pow_lt_mono_r_iff; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.Bool.DecBool.ifdec_left	40	6.036060	10922	1942	1.1.0.5.14	synth with cache (only 1: intro n; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.087637	32837	6603
coq-tactician-stdlib.8.13.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.217169	98688	12286
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.087926	30923	6143
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.pred_Sn	40	0.028585	12	9	3.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.plus_n_Sm	40	0.288583	222	91	1.0.0.0.0.8	synth with cache (only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.187882	82377	11398
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.395511	97172	3776
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	27.414009	75599	9206	0.23.4.7.0.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.573480	564	132	0.2.4.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.026590	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.017691	4	3	0.1.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.008358	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.408015	516	97	2.5.5	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.076558	26990	5695
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.070883	25732	3371
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.459311	219016	12576
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.122527	52242	8864
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.042026	13461	4576
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.207137	95649	11248
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	3.176743	57625	491
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT_eta	40	0.009124	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.060485	20111	4360
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.425846	197920	11014
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.018215	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.245262	78	19	3.2.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.068951	14	5	3.0.1	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.022665	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.014055	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	11.315197	12388	3651	11.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.8	synth with cache (only 1: constructor; only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: left; only 1: auto; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.343136	38338	837	0.0.0.73.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.016286	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.rew_sig	40	0.017032	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.361351	174586	11356
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.098382	36232	10055
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.012248	8	3	5.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.115248	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.039596	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.008359	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.012205	13	4	0.0.3	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.009080	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.070244	23221	4349
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.053976	17163	8189
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.971337	499465	8103
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.003414	6	5	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002643	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_iff_compat_l	40	0.134252	1101	131
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.hset_hOneType	40	40.226008	103676	11435
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.685342	2866	600	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.068304	23758	6551
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_left	40	20.649921	64532	5705	3.17.0.1.14.0.9.2	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: intro; only 1: destruct H; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_right	40	0.011211	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.303989	147516	11157
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.090781	32388	9265
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.278297	133046	5842
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.100310	41910	9969
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.012423	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.112508	39653	7497
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.081377	32817	4187
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.074951	27870	4516
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.717382	411	135	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.390859	178246	8397
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.195154	62	36	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.filter_map	40	40.075927	28282	6518
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.443840	526	80	1.13.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.039515	9236	2580
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	9.436654	19083	2526	1.38	synth with cache (only 1: intros [HypL HypR]; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.195741	570	205	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.land_spec	40	40.093914	37654	4891
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.of_bits_to_bits	40	41.032880	546087	4256
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.100090	37148	8776
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.mult_n_Sm	40	40.146764	63927	11750
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classicP	40	40.414732	197327	8334
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.047185	16071	6372
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.074413	28306	3838
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.094849	37004	12392
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.011976	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.pair_andP	40	0.023331	19	4	7	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.045227	15486	4309
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.195610	91533	10089
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.069373	25797	6918
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	11.743275	11022	2437	0.1.2.1.0.0.1.2.0.1.0.1.2.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.349786	167034	7470
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.432461	377	50	0.15	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.132094	38	16	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.753759	490	116	1.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.020902	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.094295	37632	11638
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.875888	455574	4012
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.362003	178513	13342
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.065571	22478	4662
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.andb_true_intro	40	41.019173	515515	15846
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	14.826628	98618	4069	0.39.10.0.38.11.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.026360	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.511734	3907	207	0.13.29.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.075119	29313	8449
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.399350	924	110	0.4.10.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.019001	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andFb	40	0.004139	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andbAC	40	0.015663	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orTb	40	0.007546	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbb	40	0.044541	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbC	40	0.044893	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbAC	40	0.012843	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.073103	30249	4968
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_cancel_l	40	40.544927	269677	22947
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_id2r	40	0.022742	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_idl	40	0.010252	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_id2l	40	0.058158	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classic_pick	40	40.067488	21044	3871
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_and	40	0.007743	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andKb	40	0.009592	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbK	40	0.009640	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orKb	40	0.009041	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybT	40	0.010266	5	1	4	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyFb	40	0.006253	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyTb	40	0.007818	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_imply	40	0.011965	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybE	40	0.011318	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybN	40	0.012250	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbF	40	0.005660	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbACA	40	0.025652	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addl	40	0.029053	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addr	40	0.013947	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addKb	40	0.009839	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addIb	40	0.018738	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbT	40	0.011745	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_refl	40	0.066553	143	13	0.16	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.009197	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_split_r	40	22.685274	13859	3831	0.0.0.1.0.0.0.0.6.1.0.0.0.0.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros p H; only 1: auto; only 1: simpl; only 1: intros p H; only 1: destruct p as [a0 b]; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H as [H| H]; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.062910	20326	4887
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.166065	75551	10246
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.121351	44926	5807
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_comm	40	0.180350	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.133601	56951	5208
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.039303	11278	3956
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.074410	16581	3726
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.154474	72052	10588
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.009933	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.071732	23891	6612
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.304077	151491	12380
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	1.119354	11448	144
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.082501	30898	7699
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.096222	39432	5623
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.027496	5	3	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.to_bits_of_bits	40	40.092427	39207	4508
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.le_S_n	40	40.205614	89660	15368
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.gt_lt	40	0.986096	285	111	2.2.2.1.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: destruct (le_gt_cases n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.lt_gt	40	0.008801	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_trans	40	0.410503	140	33	0.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: elim H0; only 1: auto; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_tail	40	0.017879	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.006288	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.subrelUr	40	20.594982	49924	4502	15.12.4.41	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.047002	14643	5983
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.057569	20032	3684
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.335021	8931	952
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.205511	97694	14786
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.007807	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.005332	4	1	3	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.047782	12722	2677
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_double_ind	40	11.339397	28994	4338	1.3.14.0.0.1.3.9.4	synth with cache (only 1: intro; only 1: intro p; only 1: intros H x0; only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.638934	332781	7146
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ge_le	40	11.873218	7106	1465	0.0.1.19.0.1	synth with cache (only 1: intro H; only 1: rewrite le_lteq; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: now left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.068600	15878	2737
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.223437	100772	11225
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.145833	65419	3577
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.029647	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.033829	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.072339	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.min_l	40	4.445065	2709	1537	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.441498	351	89	1.2.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.026344	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.141092	14	5	2.0	synth with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.064447	19846	7210
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.263290	13449	565
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.115154	24940	3926
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.066953	24666	6675
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.816425	427851	14736
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.rew_pair	40	0.011081	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.020539	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.universal_quantification.gen	40	0.009064	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007121	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.005027	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.007601	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.384783	1625	50
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_opp_l	40	0.007424	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal4	40	0.017785	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal5	40	0.022657	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.006463	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_sym_involutive	40	0.008799	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.map_subst_map	40	0.010884	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_swap	40	0.010086	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_id_comm_l	40	0.301949	1863	54
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.006903	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all	40	0.465463	213	45	0.0.3.0.12	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.054605	17805	4703
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_assoc	40	40.374050	176799	16131
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.083828	31883	7795
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.645587	295452	3922
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_O	40	0.009614	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	13.293742	16045	3707	0.0.1.0.0.12.0.0.0.1.1.0.1.0.0.0.0.0.0.0.10.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: apply clos_rt1n_step; only 1: auto; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.113466	32765	4797
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_assoc	40	40.530803	252793	16318
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.040525	12459	2485
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all2	40	10.637453	4070	1678	0.3.1.3.1.0.0.0.1.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: now simpl; only 1: now simpl; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl in *; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_O	40	0.026634	5	5	0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.254458	238	42	0.0.0.11	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_all	40	0.032709	7	5	0.0.0.1.1	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.076857	29442	4873
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.094225	35018	6653
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_prod	40	40.060824	20436	7182
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.038144	3919	1406
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.073550	26118	7047
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_skipn	40	5.191704	2784	791	4.0.0.0.0.2.3.0.1	synth with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.095035	24751	3801
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_app	40	36.615238	16177	4327	7.0.0.4.9	synth with cache (only 1: intros l n x d H; only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.074052	25828	7934
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.700101	322327	2119
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.004725	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.076439	38	6	0.9	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.047196	14576	4617
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.009765	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.010034	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.014713	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.015719	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_in12	40	0.469352	140	18	0.15	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_length_le	40	23.565732	10092	4086	1.0.0.2.2.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: intro l; only 1: simpl; only 1: inversion 1 as [H1| ?]; only 1: simpl; only 1: now subst; only 1: destruct n; only 1: simpl; only 1: intro H; only 1: easy; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.152703	68116	14347
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.132382	47091	4883
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	5.834775	2823	805	4.0.3.9	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.726412	355224	2809
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.695070	906	116	2.0.12.7.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros H; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.007697	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.072738	25124	5067
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.063807	16827	3593
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.050492	15297	4057
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.111458	42595	6862
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.072765	25733	4018
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.053047	17323	4467
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.487827	220370	4345
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.059221	19722	4818
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.769857	545	63	0.12.4.0	synth with cache (only 1: apply eq_opp_r; only 1: unfold lnot; only 1: nzsimpl; only 1: now rewrite one_succ, opp_pred, opp_0).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.091065	34879	8226
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	26.192691	30621	3726	0.0.11.25	synth with cache (only 1: compute; only 1: intros m H1 H2; only 1: intro n; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.267314	673695	8549
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.064529	22804	3649
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.018918	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.404203	180845	6794
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.157970	67606	11790
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.074590	25292	4376
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.047667	16201	3383
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.046343	13635	4231
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	2.557542	1173	331	0.0.0.1.0.0.0.0.0.0.1.0.2	synth with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.092106	35145	7986
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.006776	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.082650	31644	6461
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.065300	20970	7382
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.053892	16808	5841
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.085484	31692	6772
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.062245	21177	4175
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_app	40	40.179613	78888	7395
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_split	40	40.079831	29206	7371
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	19.602084	37305	1840	0.0.15.15.10.4.39	synth with cache (only 1: Bool.destr_bool; only 1: move  =>mf mg x y; only 1: intros; only 1: rewrite -> H; only 1: trivial; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.029756	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.250478	112734	3771
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_inv	40	40.188589	81406	7355
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.130493	54359	12533
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.077201	26967	4065
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.075788	28243	4257
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.077354	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.027108	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.063872	19806	5419
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.284794	125697	4615
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.055117	18364	4575
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.083010	28691	3954
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.061401	19790	8117
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.087696	31637	5878
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.056111	20800	3022
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.244975	109368	3584
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.110899	41904	4401
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.053133	20457	3384
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.073665	23702	7425
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_r	40	0.239616	68	32	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.043190	16	9	0.1	synth with cache (only 1: apply max_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.111050	24	16	0.0.0.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.048286	14013	5653
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.088170	30296	7298
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.111124	42358	4561
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.137836	56438	12078
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.100948	38069	3643
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.089395	33788	4000
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.069171	16347	3870
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	40.091510	33536	7516
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.056842	17238	6011
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.062866	19871	6035
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.127512	53670	8583
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.085526	30657	6304
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.086977	32416	6095
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.102813	30808	6111
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.082867	31050	5159
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.085805	29687	4709
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.074227	25398	5031
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.063226	23253	5545
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.067917	22800	4373
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.076797	27925	6636
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.112016	43826	5397
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.088744	27222	6975
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Repeat.repeat_length	40	0.708123	465	65	2.0.0.22	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.064493	21141	4266
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.055963	18877	4049
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.087926	32393	7846
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.145902	56577	8496
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.104508	37262	7199
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.052876	17924	4195
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.039557	6	5	0.0.0.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.071856	24813	4663
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.071310	22925	3853
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.150175	31951	5200
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.083910	29601	4762
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.184244	59861	4590
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.064674	21155	6055
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.044344	12717	4331
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.086856	29751	6236
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_app	40	40.068883	25727	5985
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.072592	23236	6138
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.059007	14188	3088
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.057164	18815	4653
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.103425	40553	5792
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.098172	39621	7938
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.084480	32297	9645
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.078184	27587	6738
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.100815	42000	4238
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.082381	35089	6145
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.089242	35450	6527
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.063206	24275	6009
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.128718	48359	5686
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.079915	28780	5480
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.084913	35850	5765
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.085920	30484	3792
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.100096	43531	5813
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.054696	17367	3741
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.064780	26452	5730
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.124395	53265	7742
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.105388	49900	6374
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.149153	68547	9930
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pplus_minus	40	40.105118	55464	8933
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.074196	31964	2955
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.039315	14797	4453
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.081416	36153	6845
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.108082	56200	7125
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.059632	24962	7520
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.070542	34257	7652
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.043391	20273	4639
