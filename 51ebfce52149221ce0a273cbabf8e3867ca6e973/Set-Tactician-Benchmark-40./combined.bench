coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.032735	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	2.972440	351	140	2.4.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: setoid_rewrite H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.060231	2	2	0.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.045925	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	2.963223	653	244	0.0.7.3.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	6.617660	1096	642	1.0.0.1.0.3	synth with cache (only 1: intros a; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.046489	16348	5761
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.029416	9919	3130
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.039540	14879	4210
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.035517	12756	3510
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.033743	11510	3464
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.050905	6	3	0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: apply lt_O_fact).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.044668	15985	4691
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.027559	9493	3484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.109358	49834	5548
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.088367	35413	4149
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.034657	12003	4575
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.055078	7	2	5.0	synth with cache (only 1: intros ?; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	0.955219	269	112	1.7.0	synth with cache (only 1: intros; only 1: intros ?; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.309020	865	115	2.17	synth with cache (only 1: intros Hm; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40	40.027394	5608	1115
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.052204	20354	5033
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.051488	19182	4504
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.057247	24615	4389
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.051812	21809	3847
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	10.871404	3891	415	4.13.2.34	synth with cache (only 1: intros H5; only 1: intros y; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.039966	13221	4627
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.052678	21198	3793
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.030669	10100	3120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.046885	18346	3233
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.040410	14715	3443
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.035603	11763	2903
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.024124	8106	2769
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.072547	29747	4271
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.017879	5612	2061
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.024078	7617	2784
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.021355	6071	3099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.031206	10730	2925
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	40.021747	6579	2791
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.076860	33623	2966
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.055352	19191	5253
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	40.050349	20053	4860
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.030130	10345	2858
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.051050	20280	4949
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.027708	9119	3594
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.042336	15100	3990
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.063710	26691	5001
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.083743	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	40	40.014474	3805	1416
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.050791	20027	4906
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.041939	14713	4284
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.045202	16395	3437
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.073900	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.023914	7100	3796
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	41.233225	16045	2291
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.063298	27048	3552
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	19.945165	4443	1491	0.0.2.10	synth with cache (only 1: intros _tmp_tactician0; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	5.660535	1769	731	0.0.3.0.4.0.7	synth with cache (only 1: intros H12; only 1: intros H2; only 1: intros g; only 1: intros r2; only 1: unfold opp_fct; only 1: intros H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.034911	10994	3959
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.058244	23377	3606
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.040768	14749	4058
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.033277	10830	3113
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.042482	6288	2256
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.036625	13369	3054
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	15.444553	26025	2241	0.1.6.27.5.0.3	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: apply (Rlt_irrefl 0); only 1: destruct _tmp_tactician0 as (a, H); only 1: exfalso; only 1: inversion_clear H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.029115	9301	3580
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.053901	21683	2873
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.023577	7068	3048
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.030421	10965	2949
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	40.034489	10787	2798
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.029343	10434	2181
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.045633	15868	5974
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.036867	12923	3824
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.044012	15139	3724
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.022262	5	3	2.0.0	synth with cache (only 1: simpl; only 1: intros m; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.051034	19251	4843
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.027614	8904	3902
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.018901	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.028539	8682	3754
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.039370	14705	3358
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.055422	22910	4899
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.023667	7944	1068
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.046676	17505	4812
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.061177	25038	3402
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.055599	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.031667	10404	3739
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.040394	15929	3012
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.044412	16193	4833
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	6.844864	2923	481	0.5.0.12	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.034688	11477	3581
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.028406	10313	2770
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.058529	20688	4212
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.062193	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.036021	12289	3408
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.070107	29705	5008
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.034271	12615	2885
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	11.381984	1809	821	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Rgt; only 1: intros until x; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x); only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: field; only 1: replace (x ^ 2) with (- x * - x); only 1: apply Rmult_le_pos; only 1: lra; only 1: lra; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.041205	12829	4239
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.027393	9772	3031
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.019928	5663	2529
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	17.684221	4221	1710	0.2.0.0.0.1.0.1.2	synth with cache (only 1: intros a; only 1: intros x; only 1: intros ?; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros n1; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.430609	102	38	1.6.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	38.895063	10068	2818	0.1.0.1.0.0.6.1.6	synth with cache (only 1: intros a; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: elim H1; only 1: intros Hb; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.019188	5043	2430
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.065970	26342	5728
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	7.033712	1532	531	0.0.0.4.0.1.0.1.1	synth with cache (only 1: intros n; only 1: induction n; only 1: intros g; only 1: reflexivity; only 1: intros p; only 1: intros H1; only 1: simpl; only 1: intros H; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	3.928682	1649	441	4.4.5.6	synth with cache (only 1: intros ?; only 1: intros n; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.032869	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.342896	96	42	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.084573	35359	6582
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.070859	28575	4812
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.041679	14856	4958
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.055886	21401	5702
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.075613	29475	3876
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.014986	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.034312	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.058466	23910	5007
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.042582	14671	4208
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.016553	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.089639	27011	3292
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	1.471907	369	190	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.031069	10162	3828
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.038673	13655	5108
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.053752	20669	1590
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.044734	9757	3871
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.127760	45338	5445
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.041502	15434	3828
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.034244	11409	4484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.046754	17480	4513
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.038322	13629	3593
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.050012	19201	2751
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.106954	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.052733	19136	3764
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.031041	10600	3048
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.069102	27035	5485
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.095437	17	10	0.1.2.0	synth with cache (only 1: unfold open_set; only 1: intros A; only 1: intros ?; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.028121	10039	2410
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.027124	8673	2968
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.024286	7168	3027
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.059706	22762	4507
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.103742	10	7	1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	0.099448	4	4	0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: apply Nat.mul_le_mono_pos_l; only 1: Nat.order').
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	0.101336	23	6	1.2.1	synth with cache (only 1: intros n; only 1: intros IH; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.043368	16068	4161
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.025619	8139	3147
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.106485	31498	5073
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.028472	10165	2597
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.046768	15157	6471
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.015811	4395	2690
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.380733	59797	6313
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.037405	12948	4356
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.054797	21051	3210
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.040402	11	4	0.2.0	synth with cache (only 1: intros H; only 1: apply not_0_IZR; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.174125	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.120251	55459	6477
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	40.065130	27159	4280
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.035202	11507	3811
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.021243	7258	2254
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.043513	15357	4899
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.033877	11027	4375
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.062398	24105	5336
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	3.347499	604	371	0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.051487	18960	4429
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.042429	14927	4096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.029353	10141	3417
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	41.309725	41262	2132
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.054012	19984	3144
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.482235	52	32	0.0.0.3.0	synth with cache (only 1: intros x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.041081	16798	3155
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.296615	30	20	2.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.051483	19161	5681
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	1.668158	2325	256	2.0.24	synth with cache (only 1: intros _tmp_tactician0; only 1: right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.059380	25	9	0.3.0	synth with cache (only 1: red; only 1: intros n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	6.031967	1100	416	0.0.0.0.0.5.2	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_neg; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.017977	5409	2573
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.012611	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.030439	10216	2903
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.030538	8242	4109
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.658526	101	47	0.1.3	synth with cache (only 1: intros r1; only 1: intros z; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.064188	23210	5844
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.038613	9014	2070
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.444813	138291	3933
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	32.086012	15231	4174	9.1.7.1.4	synth with cache (only 1: intros i'; only 1: intros _tmp_tactician0; only 1: intros H1; only 1: apply limit_Ropp; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.083770	35658	4725
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	10.735417	7180	1608	5.0.14.0.0	synth with cache (only 1: intros; only 1: red; only 1: inversion_clear H; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.006393	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.030967	10946	3564
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.049217	17152	6541
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.072318	29854	5662
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.049493	17414	3900
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.054013	19732	5572
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	40.031127	11548	1504
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	40.037657	13006	4032
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.056983	22132	5054
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.059148	22242	4980
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.031597	9152	4453
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.050217	17889	4542
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.027852	8134	4218
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.036801	11168	4854
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.031982	10565	4235
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.115126	50954	5120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.041766	11930	3708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.048361	17774	4249
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.037568	12590	2651
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.147638	10	10	0.1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.029621	10919	2104
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.038002	13487	3248
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.034958	12055	3778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.129655	58364	3103
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.038911	13433	3804
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	40.049658	15070	7682
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.041198	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.097534	33004	4179
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.061633	20377	6070
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.033990	11577	4130
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.080009	31592	5899
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.059812	5	5	0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.027174	8778	2964
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.725419	93	61	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.041888	12734	4814
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.050623	15756	6401
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.022188	7589	913
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.077318	30650	4498
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.104850	32564	4335
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.010043	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.079347	13842	2799
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	40.029724	10494	1238
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	40.049427	17367	4802
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.054288	20650	5541
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.088713	36907	6021
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	12.391126	5575	1839	4.1.3.1.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros b; only 1: intros H2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.070768	28270	4985
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.028491	8037	4004
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.034212	10859	4137
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.109862	42593	5490
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.064734	25378	3127
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	28.404698	12742	2799	0.7.0.1.9	synth with cache (only 1: intros LS'; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.049545	16998	3127
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.221281	24	12	1.0.1.3	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.448940	150	27	3.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	40.065172	26189	5462
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	3.276849	1380	525	4.1.0.1.2	synth with cache (only 1: intros y; only 1: unfold open_set; only 1: intros r2; only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.045040	15237	3589
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	40.052223	21860	2733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.043646	16684	2824
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.100401	46510	2385
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.056482	18169	5867
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.069335	26071	6917
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.257446	67	41	0.0.0.1.1	synth with cache (only 1: intuition; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.075945	29710	5368
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.093014	38964	4637
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.024226	8073	3104
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.077562	36007	3098
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.034034	11016	4561
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.059141	19472	6009
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.025978	4627	947
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.033864	10551	4126
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	41.086419	102933	3408
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.197615	32809	4192
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.040445	14946	4731
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40	40.042199	14813	3855
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.070527	28609	5281
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.081299	31135	6955
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.272393	62	31	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.033183	5	4	0.1.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: intros p; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.710767	168	75	0.0.1.5	synth with cache (only 1: red; only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.014681	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.037271	5	4	0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	3.256594	902	407	0.1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: rewrite tech5; only 1: rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.071732	30489	4082
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	3.066048	1071	404	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.067470	26922	4183
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	25.585962	8264	2401	1.2.11.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.158987	74732	3844
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.033288	10475	3608
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.038498	13007	3359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.094238	34996	4408
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.128131	54023	2672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	0.917454	225	84	6.0.2	synth with cache (only 1: intros x; only 1: intros H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.071074	30269	5186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.028480	9437	2665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.054847	19799	4566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.012881	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.085551	3923	858
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.045713	17401	2904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	19.484535	6806	1780	5.3.5.1.1.0.0.0.1	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros m; only 1: intros H; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.006893	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.074476	27071	4856
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.067592	20811	6008
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.048192	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.035222	10190	2490
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	40.278589	16607	1069
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.048216	20353	1942
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.056162	21763	3004
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.035136	11713	4695
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	7.970806	3429	1022	0.1.1.2.1.3.2.2	synth with cache (only 1: intros n; only 1: intros IH; only 1: induction n; only 1: auto; only 1: simpl; only 1: f_equal; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.179768	55634	3687
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.050346	16567	6158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.739518	72	20	0.0.4.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.037504	4	4	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.049957	18237	4594
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.008280	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	40.523618	24222	6790
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	40.049241	15971	5300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.028319	2553	781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	40.075580	28568	5851
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.024902	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.164495	31	15	1.2.1	synth with cache (only 1: intros IH; only 1: intros m; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.055358	19318	4955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.069032	7484	1464
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.055868	19790	4407
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.042332	15723	3864
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.052858	19872	3988
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	2.161484	596	340	4.0.3	synth with cache (only 1: intros IH; only 1: intros b; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.044128	13106	4900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	2.094277	866	270	2.0.0.5.0.1	synth with cache (only 1: intros A; only 1: intros R; only 1: intros x; only 1: intros z; only 1: intros B; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.058376	20226	5589
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.033823	12603	3094
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.080327	34596	3220
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.371366	13382	3451
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.021067	5760	3123
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.062555	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.237664	22138	2156
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.028021	9499	2834
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.040783	14724	4112
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.030637	7052	3748
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.065829	23019	6165
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.032283	9573	4299
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.068744	9482	3007
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.072163	29286	5527
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.029685	9321	3998
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.047243	14399	6665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.096108	36472	6566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	41.353764	31498	2348
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.101701	39982	4853
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	40.120873	17977	5258
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.042483	13582	5662
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.047419	17962	5286
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.019820	3011	846
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.036048	11575	1621
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.058952	23732	4913
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	40.043205	13766	4639
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.030432	9301	3384
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	40.081218	29992	7254
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.050544	18755	5513
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.038119	13357	3378
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.037385	6	5	0.1.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.481851	116	50	0.0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.098160	22	11	0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: intros Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.914319	618	200	3.7	synth with cache (only 1: intros Ha; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	2.205061	470	288	2.0.5	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	42.071829	12791	2033
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.067331	26057	5343
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.032525	10994	3280
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	40.231825	18813	4620
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.027696	8693	3126
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.326542	30720	5739
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.042645	9771	2709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.028335	8512	4045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	13.180711	23258	536	4.0.0.2.0.2.0.2.0.46.127	synth with cache (only 1: compute; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: intros _tmp_tactician0; only 1: intros a'; only 1: auto; only 1: red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.040598	10782	4459
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.051207	15706	5926
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.026768	8392	3583
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.033676	11540	4255
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.028556	8928	3696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.153919	30276	2684
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.036484	12379	4409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.135603	22470	4185
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.061641	22995	4204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	4.632465	1866	514	1.2.11.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	40.066216	22655	5999
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.038075	11923	3723
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.031810	5	4	0.0.0.1	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.042642	16174	3374
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.075951	3689	736
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.046235	14191	4034
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.047523	17922	3376
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.098182	6	5	0.0.0.0.1	synth with cache (only 1: intros ?; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	0.200243	9	6	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.059943	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.036978	12494	4130
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.146453	27502	5916
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.066536	25499	4239
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.112869	18349	5731
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.026108	7690	2246
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.054740	18995	4935
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.023296	6883	2753
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.324419	18976	4098
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	40.043702	16306	2620
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.024988	8766	2696
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.047929	17537	3429
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.100492	43597	2125
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	1.738628	596	208	1.0.8	synth with cache (only 1: intros x0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.087602	32008	5096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.027608	7721	2760
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	36.304732	15522	5058	0.0.16.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: intropattern subst -> H; only 1: rewrite <- Rsqr_abs; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	5.958836	908	564	1.0.3.0.0.0.0	synth with cache (only 1: intros f; only 1: intros D; only 1: intros X; only 1: intros cvp; only 1: intros H0; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.083200	27333	2583
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.037619	13403	3567
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.053035	18666	3518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.112213	12772	3652
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.041820	14793	3652
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.031500	10367	2884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.028828	7528	2411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	12.913296	3856	541	0.2.0.19	synth with cache (only 1: intros Ha; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	40.033775	9162	4600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.101781	45258	4369
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.076280	28277	3591
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.065880	24944	5077
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.151856	68101	6677
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.058815	22321	4855
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.071168	26821	4111
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	2.773152	1267	345	1.1.1.0.0.1.8	synth with cache (only 1: intros n; only 1: induction n; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	1.794500	460	174	7.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intros ?; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.032169	10491	2831
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.072169	27489	4979
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.199282	55	28	1.3.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.049791	17396	5945
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.040521	12611	4298
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.056073	19118	5010
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.206634	28071	5064
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.035805	8553	3531
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	15.113444	14611	1803	0.0.18.0.5.10.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: easy; only 1: simpl; only 1: rewrite H; only 1: elim H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.084293	34869	5807
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.048361	16101	3843
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.027586	8857	2710
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.028613	7633	3074
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.063565	22027	4802
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.079498	35637	4686
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	7.453639	753	432	1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.059612	18963	5950
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	40.026195	7267	3463
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.077423	18172	3104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.017964	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.099481	44058	5699
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	30.790565	24727	2463	0.0.0.4.11.2.20.7	synth with cache (only 1: intros _tmp_tactician2; only 1: split; only 1: auto with *; only 1: intros f; only 1: compute; only 1: rewrite singleton_spec; only 1: intros Hf; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.028597	5288	258	1.0.55	synth with cache (only 1: case_eq (Fin.eqb x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.115049	13891	3351
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.669602	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.141694	16	7	5.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.029398	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.051238	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.038559	11258	4471
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.015528	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.693411	178	47	0.0.0.0.0.0.6	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: apply Z.pow_pos_nonneg; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.035295	2	2	0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.012319	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.025631	7541	3227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.086548	6077	821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.117035	47109	3573
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	40.061618	10149	4021
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.096100	10962	2611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.082249	36950	2451
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.084576	35556	3847
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.017026	3610	1158
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	13.085188	4705	1640	1.4.1.0.0.0.0.2	synth with cache (only 1: intros r; only 1: intros H; only 1: unfold Rabs; only 1: destruct (Rcase_abs r) as [Hlt| Hge]; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 Hlt); only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.075586	17698	2630
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	40.387891	201914	4696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.082100	33350	2913
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	14.254723	2679	592	5.5.0.5	synth with cache (only 1: intros n; only 1: intros z; only 1: destruct z; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	22.655284	4592	649	1.0.0.2.17	synth with cache (only 1: intros H; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.027777	7040	3271
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.059629	18954	6302
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.025182	2	2	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.114091	17	15	2.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.027128	4	4	0.0.0.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.117724	52023	2475
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	5.443054	8350	862	30.11	synth with cache (only 1: intros _tmp_tactician0; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.074853	25463	4184
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.073197	27930	5960
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	4.481294	4406	582	0.1.24	synth with cache (only 1: intros LS; only 1: intros H; only 1: exact 0%Z).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	20.769884	134329	996	352	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.052940	17593	4534
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.024442	7664	2493
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	5.054986	3717	1020	0.0.0.1.11.3.0	synth with cache (only 1: intros _tmp_tactician2; only 1: intros y; only 1: intros l; only 1: induction 1; only 1: auto; only 1: auto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.053081	18285	5331
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	40.052538	19433	3657
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.048640	16530	3965
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.054509	21270	2322
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.093258	38590	5350
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.098147	38305	4961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.049779	16322	3780
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.066554	23685	3149
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.022400	7104	2932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.053500	19422	3600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.208407	96876	2733
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.061265	23355	4223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.058113	22307	3861
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.097243	43367	3150
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.040398	14842	2329
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.114189	11588	2805
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.313841	679	176	0.0.4.0.5	synth with cache (only 1: intros a; only 1: intros m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.053097	18827	5359
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.065813	28098	3126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	5.926457	2886	591	10.5.3	synth with cache (only 1: intros x; only 1: intros Hlpe; only 1: apply N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.040139	10805	3326
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.095307	41417	3093
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.148379	63188	954
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.022593	6306	3049
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.045549	14100	4585
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.019207	6	2	4.0	synth with cache (only 1: intros r2; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.019382	4	3	1.0.0	synth with cache (only 1: red; only 1: intros y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.061090	19962	3698
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.045242	15683	4110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.741765	58	25	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.035576	15	6	4.0.1	synth with cache (only 1: red; only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.030328	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.025856	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.032716	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.066864	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.048482	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.371172	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.426299	28	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.877998	241	65	0.0.0.10	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.105206	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.067421	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.051275	21528	2090
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	40.804676	15817	3314
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.412170	10	3	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.489978	52	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.085863	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.076222	29495	4908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.054966	5	5	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.423977	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.109662	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.216396	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.339583	18	10	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.083175	4	3	0.0.1	synth with cache (only 1: intros H; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.101453	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.181889	16	8	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.073372	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.110212	3	2	1.0	synth with cache (only 1: intros H0; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.549646	43	19	4.3	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.655632	30	7	0.4	synth with cache (only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.024383	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.023505	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.070872	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.093871	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.066913	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	12.477969	11874	2525	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.490794	33	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.630861	160	70	0.1.1.5	synth with cache (only 1: red; only 1: intros a; only 1: intros H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.512622	100	41	0.0.0.0.0.0.2.3	synth with cache (only 1: split; only 1: intros H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	7.309768	472	101	3.3.3.3.3	synth with cache (only 1: intros H0; only 1: generalize (mem_iff s x); only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.039399	13841	3309
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.056989	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.053135	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.075340	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.091720	35156	7877
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.529348	24	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.044096	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.070693	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.077379	28142	6669
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.034582	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.752336	303	85	4.6.0	synth with cache (only 1: intros m; only 1: intros p; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.027067	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.110596	163	15	18	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.595998	42	17	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.049596	17042	2863
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.048671	18242	4016
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.076108	26768	5615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.037220	11614	3977
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.033271	7844	1137
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.162219	29144	2575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.072017	26962	4449
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.031013	8389	4557
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.038493	10591	3464
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.231612	28	13	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.142916	20	10	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.060653	21423	4249
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.022801	6865	2704
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.072541	27297	4148
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.085296	35385	3637
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.058879	20103	4485
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.043413	14909	3238
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.218384	15632	2603
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.083008	33651	5489
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	23.677377	2095	526	0.0.5.1.4.3.0	synth with cache (only 1: expAdd; only 1: red; only 1: intros; only 1: rewrite F.inter_iff; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	40.052030	18380	6647
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.335030	171823	1594
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.027101	7226	3317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	4.414122	12633	436	9.0.13.7.0.92	synth with cache (only 1: rewrite eq_iff_eq_true; only 1: split; only 1: intros H; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.703877	334	59	8.3.0	synth with cache (only 1: rewrite <- mem_iff; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.012882	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.109715	26	6	6.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.698795	68	53	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.051974	16794	5440
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.100059	31243	4529
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.008389	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40	40.355228	47274	6488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.069210	26222	3989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.064434	23150	4826
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.038120	11634	3935
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.234242	77820	5040
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.148459	54789	5577
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	40.419944	36204	3973
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.082984	30236	5725
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.052860	19127	4804
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	40.122173	54856	5168
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	22.326080	2680	2022	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.126002	53051	7645
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.029660	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.017849	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.043031	6	3	1.2.0	synth with cache (only 1: intros; only 1: rewrite <- equal_iff; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.016655	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.040020	8424	3800
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.011290	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.011179	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.011281	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.012159	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.014043	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.010648	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	8.154632	1172	526	1.0.0.1.0.0.3	synth with cache (only 1: intros H16; only 1: unfold Ratan_seq; only 1: unfold PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.116084	24	8	3.3	synth with cache (only 1: unfold to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.152094	29	10	0.3.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.415034	985	343	1.2.1.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.135072	7913	1948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.041544	14495	2877
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.058999	21056	4351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.067529	23855	5238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.837717	1045	192	0.4.0.12	synth with cache (only 1: intros p; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.055377	20699	4224
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.045981	15586	3934
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.019592	5683	2704
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.075043	26258	7799
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.076938	31110	4772
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.185700	87842	4934
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.067835	24716	3193
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.128568	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.023592	5799	3012
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.053970	19406	5460
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.073457	25545	5128
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.060984	19735	5032
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.083180	33856	4032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.089541	35410	4056
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.056880	26441	876
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.064451	24404	4375
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.041311	11066	5112
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.025794	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.064341	4	2	2.0	synth with cache (only 1: intros a; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.086750	21316	2735
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.422313	27	5	0.8	synth with cache (only 1: intros b; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.063653	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.599674	83	34	0.1.0	synth with cache (only 1: red; only 1: intros b; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.076010	26657	6895
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.083077	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.558300	644	247	0.2.0.3.0.3	synth with cache (only 1: intros a; only 1: split; only 1: intros ?; only 1: apply (MapsTo_1 H H0); only 1: firstorder; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.272583	132585	3660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.107511	29959	4827
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.063727	23423	5171
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	42.957765	31573	539
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.040008	12564	3925
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	40.348277	15291	5302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.065457	26663	3575
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.018466	5226	2256
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.054239	18609	3729
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	14.756755	12895	1729	0.0.0.0.3.2.2.0.0.1.6.2.8	synth with cache (only 1: intros b; only 1: intros p; only 1: induction p; only 1: auto; only 1: auto; only 1: simpl in *; only 1: trivial; only 1: split; only 1: trivial; only 1: auto with bool; only 1: destruct n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.038353	5	5	0.0.0.0.0	synth with cache (only 1: intros r; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.164734	40	16	1	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.016443	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.080850	5	4	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.043025	12729	4670
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.009934	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.032502	9188	2902
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.018825	6	2	2.2	synth with cache (only 1: intros l; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.083581	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.600951	45	19	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.800773	588	212	0.0.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.065791	25812	3418
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.070149	25089	4922
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.393857	91	34	0.1.0.5	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.069338	26041	4896
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.787308	175	73	1.3.3	synth with cache (only 1: intros H; only 1: intros Hf; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.668529	235	56	0.5.2.3	synth with cache (only 1: intros y; only 1: unfold Subset; only 1: intros m; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.047712	16377	3793
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.076999	11114	2901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.046554	11057	5263
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	40.184793	84117	4359
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.216978	104227	3219
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.076039	28801	4017
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.035327	3	3	0.0.0	synth with cache (only 1: intros x; only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.019483	4010	2905
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.028566	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.023643	2	2	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.023799	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.042369	11816	5003
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	33.087843	20934	3473	1.0.18.10	synth with cache (only 1: intros m; only 1: destruct m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.061887	21547	5297
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.185256	90471	3125
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.406354	214206	3905
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	6.006650	3581	247	39.1	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.079813	12273	4390
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.082999	30917	5529
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.084630	20199	2185
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.032964	10852	2851
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.049191	16972	3505
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.053591	20081	4236
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	40.916271	8515	1652
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.033716	9067	3655
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	40.241618	15329	5384
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.127153	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.022231	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.010634	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.014105	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.011602	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.011613	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.029208	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.033044	10904	2770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.080935	30950	3933
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.147927	36250	5515
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	41.004387	17997	2563
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.044966	15362	3309
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.065234	22424	6427
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.113095	49922	3321
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.083017	28747	4749
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.060103	23303	3999
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	3.819086	2079	594	20	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.274645	80	20	7	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.245111	162	29	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.015419	4344	2300
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.083964	32954	5531
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.061080	21759	5599
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40	40.060283	22871	5590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.024968	6101	3092
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.060955	21414	5036
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.089200	33423	6340
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.038362	194	79	1.0.0.4	synth with cache (only 1: intros m; only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.150309	20	7	3.0.1	synth with cache (only 1: intros r1; only 1: intros ?; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.047169	17	7	3.0.2	synth with cache (only 1: intros r1; only 1: intros ?; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.534523	61	31	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	20.566323	4666	1379	0.0.0.0.1.1.8	synth with cache (only 1: destruct 1; only 1: destruct (CRltLinear R); only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.047842	15875	3672
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	3.374774	690	358	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intros ?; only 1: left; only 1: auto with zarith real; only 1: intros ?; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.094442	36788	5409
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.016870	10	2	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.080417	30621	4717
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.071302	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros until i; only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	40.357736	22886	4847
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.032083	8	6	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intros abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.297000	146958	3703
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.083167	28216	5577
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	5.155539	3889	724	1.2.4.0.13.0.0.1.0.0.1.2.6.23	synth with cache (only 1: constructor; only 1: easy; only 1: split; only 1: destruct H; only 1: intros abs; only 1: contradiction; only 1: destruct H; only 1: intros abs; only 1: contradiction; only 1: red; only 1: intros; only 1: transitivity y; only 1: auto; only 1: exact H0).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.564059	32535	369
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.549304	92	8	14	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.132275	56578	6349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.034595	2	2	0.0	synth with cache (only 1: intros until m; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.275927	16566	2163
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.060450	21241	4148
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.057831	21342	5318
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	15.081135	17685	2311	0.2.0.1.0.2.4.24	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.037748	11810	3533
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	3.030035	1089	447	3.1.0.3.3	synth with cache (only 1: intros q2; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.018029	4359	1832
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.009805	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.025669	8510	2649
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.089682	36645	5208
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	5.225886	1380	463	1.2.3.5	synth with cache (only 1: intros q; only 1: intros H1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.215800	13	10	1.2.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.036426	7440	2305
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.044520	14855	4560
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.066986	22469	4640
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.618435	27125	5535
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.025912	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	38.359415	10667	3285	0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.3.0	synth with cache (only 1: unfold Add; only 1: red; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a); only 1: apply Comp; only 1: auto; only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.143260	61410	5449
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.076737	30097	4455
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.029340	4265	925
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.585216	168	31	5.0.9	synth with cache (only 1: intros m; only 1: intuition_in; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.050839	16342	4217
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.028917	7785	3457
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.146350	63543	6023
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.062244	20106	5357
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.046210	12050	4669
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	40.463598	24073	3519
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.105316	46229	2739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.075156	29296	3529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.172540	20587	5056
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.205280	100204	3146
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.083549	19965	5248
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.145854	12056	4703
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.602572	5964	515
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.099577	37735	6380
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.234939	12698	2219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	19.510842	31265	3561	7.2.19.8.1.1.6	synth with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: intuition; only 1: red; only 1: intros H'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.033369	8379	3790
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.056066	18942	4998
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.013720	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.026104	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.170748	33890	5069
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.012676	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	23.227367	12540	3980	3.0.1.0.1.6.2	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros; only 1: apply fold_rec; only 1: auto with set; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.061441	14376	3771
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.013663	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.014545	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.037946	12844	1962
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.024089	7395	2677
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.046445	16366	4144
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.073730	28107	5020
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.048821	16117	5205
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.039838	13168	4120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.685823	254	50	8.0.2	synth with cache (only 1: intros; only 1: destruct x; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.054421	16800	5338
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.070081	7270	1775
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.038755	9736	2449
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.320174	160611	904
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.092273	39522	3779
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	33.556676	15040	4853	3.4.0.2.2.2.1	synth with cache (only 1: intros r1; only 1: unfold Rle; only 1: intros m; only 1: intros p; only 1: intuition; only 1: subst; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.026597	6447	3409
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	15.056321	3171	1748	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.059823	22596	3960
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	2.509633	1127	430	0.0.1.2.9	synth with cache (only 1: red; only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.026717	8	3	4.1.0	synth with cache (only 1: intros ?; only 1: induction x; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	40.095082	38148	4620
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.105749	44715	2706
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.068462	10	6	0.1.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	40.456238	17562	4268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.158480	69321	3858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	2.335894	1793	259	1.0.0.5.0.0.2.0.0.2.0.0.2.13	synth with cache (only 1: induction d; only 1: N.bitwise; only 1: trivial; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: simpl; only 1: N.order'; only 1: easy; only 1: easy; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.107269	41592	5030
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.081454	33056	5276
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.007778	2302	772
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	40.240817	12868	5317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.079389	27896	5849
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	20.543790	13171	2204	1.0.1.0.0.0.1.1.20	synth with cache (only 1: intros m; only 1: split; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: intros EQ; only 1: rewrite EQ; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.131510	58036	6212
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.044457	12930	3694
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.061009	22144	6129
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.062462	19916	5524
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.054929	9495	3102
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.072633	23573	4459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	33.892840	3540	380	0.0.16.2.15	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: destruct n; only 1: compute; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.053643	17999	4474
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.044772	15732	4076
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.075500	29746	4965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.056211	20714	4115
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.014664	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.065208	23673	5722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.122364	51845	5467
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.030753	8449	1519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1.508953	732	215	0.0.1.5.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: unfold unorm; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.068587	15	6	0.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.183304	85270	4864
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.061585	22608	3980
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.149430	170	108	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros H; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.056033	2029	633	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.023966	5522	3378
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.039182	10529	4333
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.060402	19833	6074
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.023326	5267	1114
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.064293	22292	6598
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	36.681789	34815	3465	14.1.1.8.18	synth with cache (only 1: Z.nzsimpl'; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as (q', hq'); only 1: qc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.662296	176	88	3.0.0.2	synth with cache (only 1: intros n; only 1: intros y; only 1: intros y0; only 1: apply CReal_mult_proper_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.023263	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.226011	25073	5477
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	14.257715	14131	1427	0.1.0.3.1.26	synth with cache (only 1: destruct a; only 1: intros Hb; only 1: trivial; only 1: intros Hn; only 1: easy; only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.150780	5747	1752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.097182	38507	2203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.026425	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	31.855024	17223	4697	2.2.0.1.4.4.2	synth with cache (only 1: intros n; only 1: intros y; only 1: intros m; only 1: intros H; only 1: intros abs; only 1: rewrite <- H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	40.185121	81923	4757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.083859	33479	4401
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	40.008148	2662	356
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.035429	8530	4504
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.092189	38535	4188
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.060419	21886	4408
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	4.905429	180	29	3.0.12	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	40.058224	20124	5691
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.043375	13684	4016
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.077639	29390	5732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.087632	34156	6198
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.061426	22541	3957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.029135	5318	1427
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.031909	10063	3911
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.066498	24162	6106
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.059776	22439	4779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.191244	19173	1970
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	29.263029	17983	4754	0.0.11.6.1	synth with cache (only 1: intros x; only 1: intros b; only 1: intros H1; only 1: apply CRealLe_morph; only 1: apply CRealEq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.135167	36510	4528
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.032367	7057	4833
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	8.265212	7896	1475	1.2.0.2.1.0.0.12.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: auto; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.045813	15627	4097
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.114867	47327	5838
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.032618	10656	2714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.048565	13946	4316
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.058560	18840	5167
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.103744	45868	4792
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.055499	19522	4588
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	2.422271	1020	275	1.1.6.3	synth with cache (only 1: intros a; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.090421	10396	2041
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.367608	281	32	7.14	synth with cache (only 1: intros IH; only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.121988	34	12	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.066213	23483	4650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.080071	32841	4520
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	2.968041	1111	390	0.0.3.0.4.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.055422	17579	3813
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.571265	32488	6358
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	41.485995	26997	4028
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	3.720727	1609	425	1.0.7.1.3.0	synth with cache (only 1: intros; only 1: rewrite <- Qeq_bool_iff; only 1: revert q; only 1: intros _tmp_tactician2; only 1: apply Qeq_bool_iff; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.080597	38	14	1.1	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.116868	45586	4453
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.019403	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.172307	50539	2798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.057523	18035	5014
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.122907	53675	6656
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.034127	9451	3925
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.001738	302	175
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.110433	44507	5569
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.057792	14370	4136
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.112846	47930	6454
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.074187	14717	4063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.031487	10176	3297
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.125806	31061	3467
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	40.039208	13427	4232
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.051439	18422	4972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.152078	69177	4280
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.085250	31418	7971
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.120080	22463	4961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.094378	34658	7235
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.045694	14315	5518
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.033843	8361	5078
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.091257	35164	5180
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.475578	138	73	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.028209	8938	2620
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.683078	1959	188	1.1.1.2.14.7.9.2	synth with cache (only 1: split; only 1: easy; only 1: intuition; only 1: red; only 1: intros x; only 1: intros y; only 1: intros p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.068595	23716	6861
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.178900	78917	11953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.177880	78858	4838
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.139749	68	19	5.4	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.559023	414	172	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	40.200427	88009	5879
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.062774	25535	4275
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.077808	29013	5856
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	22.429448	10515	3622	1.1.0.0.1.3.0.2.3	synth with cache (only 1: intros b; only 1: intros a; only 1: intros Pempty; only 1: intros Ha; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pstep; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.029490	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.068557	25904	2938
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.079176	28314	7432
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.101000	13680	5030
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.734041	22790	3726
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.103394	39130	4917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.070635	25573	6414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.040129	4	3	0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	6.505652	5033	945	0.0.1.0.14.11	synth with cache (only 1: revert q; only 1: intros b; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: rewrite Qlt_alt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	32.279539	12102	5042	10.7.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.048390	15497	3205
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.075666	10	7	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.807114	596	95	19	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.045928	20	5	7	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.212370	22	15	1.2.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.088094	32439	5017
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.002476	780	119
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.080160	30184	5200
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.095580	38641	6343
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.353224	5978	1662
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.092452	39730	3030
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.020223	2	2	0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	2.556347	2000	344	0.0.0.14.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: revert n; only 1: intros a; only 1: rewrite <- N.eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.051724	17920	3926
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.425377	218171	6375
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.045316	15453	5542
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.100284	23212	5598
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.063031	22295	6239
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.030024	9632	3029
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.046061	14801	5739
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.077675	25561	4792
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.062860	21178	3346
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.032122	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.195933	54	28	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.097944	41638	5372
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.060256	19649	5116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.018290	3	2	1.0	synth with cache (only 1: intros p; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.146510	53873	1558
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.390919	61	30	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.075791	30907	4615
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.080638	35517	3733
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.028547	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.056302	21132	3687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.460179	88	22	1.6.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.659084	48675	4522
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.021308	4598	2940
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.631333	8707	3926
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.119276	50781	3394
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.031803	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.037499	11516	3187
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.629039	1431	193	0.0.0.0.15	synth with cache (only 1: unfold Proper in *; only 1: intros P; only 1: rewrite filter_spec; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.061387	20370	5739
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.075328	28983	8205
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	2.188753	551	290	0.0.0.0.0.0.2.1	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.025657	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.076850	27654	6431
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.067485	23380	4688
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	14.053094	10062	1776	15.10	synth with cache (only 1: intros P; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.046724	16438	3763
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	40.002232	618	116
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.068226	23940	4492
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.220624	63	19	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.052403	15449	4655
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.013044	2622	1062
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.030764	10016	3103
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.181122	84411	4844
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.148579	63626	7470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.040047	13274	3475
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.068207	27260	4088
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.082248	30566	6505
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.066510	25355	5222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.056217	8	6	0.0.1.0.0.1	synth with cache (only 1: red; only 1: unfold singleton; only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.089237	34792	5826
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.050973	16523	4019
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.055002	16449	5415
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.039154	13878	1980
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.084682	19143	7197
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.243429	120445	2767
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	5.390992	2106	983	4.1.0.8	synth with cache (only 1: intros l; only 1: intros x4; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.058920	21160	6403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.059732	21245	6084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.145332	63244	3425
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.152538	20369	5028
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.394571	1725	648	3.2.2.1.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.441958	112	57	0.3.1.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros n; only 1: intros m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.077269	22218	2624
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.207269	93364	5047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.485488	169	43	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.214102	99233	9559
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.621737	32231	5265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.069153	29224	3591
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.064590	23521	2188
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.073611	14591	4346
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.651720	16724	3562
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.165064	36642	8581
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.002592	862	86
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.120109	49934	5976
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.060358	19735	5767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.047606	17615	2468
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	37.708733	177282	588
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.118565	11447	2750
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.107309	44646	5694
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.045362	14931	4481
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	40.076175	29395	6387
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.882245	849	124	0.0.11.6	synth with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.132336	53142	9961
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	14.838052	4303	1998	0.1.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros l; only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: generalize (H a); only 1: clear H; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.073149	25787	6107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.078731	28352	6866
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.829626	244	107	7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.031689	8258	2802
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.022529	4511	2255
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.097998	41883	3966
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.053293	12	5	0.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.046217	13162	5370
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.045437	13187	4118
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.166282	75919	5721
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.074410	25228	7233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.850615	204	131	0.0.1.0.0.1.0	synth with cache (only 1: intros a; only 1: induction 1; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.070169	27476	3826
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.027390	7341	2787
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.136970	23738	5402
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	12.680979	12366	1755	2.26.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_tmp_tactician0| NEQ]; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	7.308030	3895	1000	6.2.7	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.050756	17324	4122
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.189699	86959	3201
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	10.434965	9569	1154	0.8.3.20.0.11.0	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite FM.elements_iff; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	40.259448	99482	8977
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.906297	999	100	0.0.0.0.0.0.27	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	40.137290	40555	8194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.179800	84186	3928
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.083677	27481	5896
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.045557	14382	4653
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.048706	20573	4022
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	40.000979	110	89
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.181817	81699	4764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.067754	19611	2874
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.123531	29709	5174
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.592461	10829	2723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.019347	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.061829	22520	3722
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.123075	53900	4770
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	40.082497	28737	7494
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.121748	22	11	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.048896	21751	1363
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.087631	33435	6126
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	15.039089	160	42	0.3.3.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite rpow_pow; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.073386	26202	6461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.594638	140	74	0.0.0.0.4	synth with cache (only 1: intros b; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.044208	13516	3212
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.080066	16598	6632
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.078969	31779	5109
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.107989	44343	5930
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.127431	55540	3766
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.048836	15263	6653
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.060568	17641	5955
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.061077	20106	5050
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.106035	41429	4971
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.451971	35171	4125
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.045674	11450	4604
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	3.478514	1739	556	0.0.0.0.0.6.1	synth with cache (only 1: intros a; only 1: intros y; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.073174	23393	6591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.062319	20680	5147
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	0.609737	300	36	6.10	synth with cache (only 1: Z.nzsimpl'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.126585	56493	4438
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.131740	57724	4509
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.065825	26917	2941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.092998	35494	4917
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.049750	16573	3377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.031206	8	2	6.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.083423	28234	5287
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.133027	57350	13458
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.117920	31819	3233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.092234	34915	5304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.040130	7054	403
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.059282	19193	5767
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.053938	20295	2684
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.096670	36832	5678
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	40.078966	30544	5028
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.057106	19739	5845
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	29.128316	28771	4023	0.0.4.3.2.30.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.091581	33713	6163
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.001777	443	90
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.091790	33888	6632
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.059370	20371	4540
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.604236	30301	4541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.049124	15102	6173
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.073917	27419	5713
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.090851	21808	5739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.478380	24446	4013
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.058037	20039	5027
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	18.723959	50938	1321	0.0.0.0.0.0.0.0.0.0.0.0.1.55.0.8.187	synth with cache (only 1: constructor 1; only 1: easy; only 1: firstorder; only 1: intros EQ; only 1: intros y; only 1: intros z; only 1: unfold Qeq; only 1: intros XY; only 1: intros YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: rewrite Z.mul_shuffle0; only 1: rewrite XY; only 1: rewrite Z.mul_shuffle0; only 1: rewrite YZ; only 1: rewrite Z.mul_shuffle0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.048299	14624	4901
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.112475	25228	4903
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.057942	18103	6700
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.080601	29328	4934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.126645	56419	4197
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.130005	55857	5675
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.084127	31482	4773
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.084520	17950	5633
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.074087	27516	5111
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.046379	14382	4929
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.037866	12149	3879
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.109646	42547	12616
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.067500	22331	5970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.299752	15495	1620
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.060943	19679	4958
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.052062	16791	5445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.503580	38623	4743
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	40.095931	37521	5153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	37.205631	20882	4753	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0	synth with cache (only 1: destruct s; only 1: intros _tmp_tactician0; only 1: discriminate _tmp_tactician0; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros _tmp_tactician0; only 1: injection _tmp_tactician0 as _tmp_tactician2; only 1: intropattern subst <- _tmp_tactician2; only 1: simpl; only 1: f_equal; only 1: apply NilEmpty.sus; only 1: easy; only 1: simpl; only 1: intros _tmp_tactician0; only 1: discriminate _tmp_tactician0; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: destruct uint_of_char; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	40.332514	29747	6291
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.510960	24479	5711
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.001597	441	75
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.057321	21509	4018
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.689296	25766	4075
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.056241	15893	6629
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.047728	15915	4104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.076284	28	12	1.1.1.1	synth with cache (only 1: intros x; only 1: intros m; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.258079	126478	4483
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	40.106677	22234	5227
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.110749	26280	1797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.039245	12333	3325
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.061254	18922	6018
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.059149	19276	3921
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	0.349397	63	30	0.2.1.1.0	synth with cache (only 1: intros; only 1: induction n; only 1: easy; only 1: qc; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.070843	24417	6011
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.032225	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.077049	28773	5564
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.106029	44798	3784
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.175121	80280	5754
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	7.009090	5417	1366	16.0.3	synth with cache (only 1: intros x; only 1: intros x'; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.087242	31812	4542
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.049437	15956	5640
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.036542	8075	4327
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	2.710510	1145	511	2.0.0.0.0.0.0.4.0	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H0; only 1: intros s''; only 1: intros y; only 1: intros H; only 1: intros a; only 1: rewrite inter_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.066280	23972	4557
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.051509	18016	4499
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	40.063517	8757	2306
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.617543	37	12	0.6	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.060297	19662	6335
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.118902	51304	4189
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.309062	11493	4509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.116610	6282	2298
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.179273	81581	3900
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.085508	35465	3889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.143086	47393	5288
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.085065	31668	6059
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.300348	19328	5242
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.088185	9833	5326
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.000725	72	49
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.070769	26814	4291
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.071726	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.052937	20674	3034
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.732921	27614	5812
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.760451	25	6	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.047902	14270	4516
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.616198	72138	5008
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.075166	29013	4509
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	2.206718	988	191	0.11.2	synth with cache (only 1: intros n; only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.086938	33614	4075
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.048818	14884	5218
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.053666	17530	6203
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.592681	17279	960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.011359	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.177298	80114	4227
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.061400	22849	3746
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.024437	4	4	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.063495	21611	5487
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.433236	171	55	0.0.1.1.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: intros H; only 1: easy; only 1: intros b; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.044760	13817	4820
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.079504	30241	5031
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.090867	6051	601
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.011810	5	2	2.1	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.067553	24044	5803
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	1.830969	995	78	0.0.3.22	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.006222	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.131153	8627	2320
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	26.793924	78323	5558	5.5.0.9.6.0.42.3	synth with cache (only 1: apply BinNat.N.eqb_eq; only 1: induction x; only 1: constructor; only 1: simpl; only 1: destruct a as [_tmp_tactician0 _tmp_tactician2 _tmp_tactician4 _tmp_tactician6 _tmp_tactician8 _tmp_tactician10 _tmp_tactician12 _tmp_tactician14]; only 1: destruct _tmp_tactician6 as [| ]; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.570798	14346	4253
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.060461	20258	6281
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.676255	266	97	6.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.909896	162275	3674
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.102460	42119	12371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.352520	16926	2220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.109630	45574	4323
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.090263	22369	4402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.108275	46064	5059
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.005817	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	5.220897	6069	740	25.1	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	40.058669	19888	7191
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.085372	18596	6100
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.065257	24840	4125
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.137199	38055	7765
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.060015	19868	4708
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.157668	50381	6760
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.083880	32307	5177
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.029595	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000581	52	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.048103	15042	5400
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.052965	14292	6364
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	1.109650	499	136	0.0.0.0.0.0.0.2.0.0.0.8	synth with cache (only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: rewrite orb_false_r; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.073557	27362	5862
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.073070	27547	5200
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.074602	27695	3731
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.133678	50773	8354
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.055278	14438	4164
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.078684	30257	4875
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.126284	57324	4117
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.064571	21169	4914
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.269102	19558	4595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	35.346243	31526	5575	1.2.0.8.3.10	synth with cache (only 1: intros x1; only 1: intros y; only 1: compute; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	40.160422	71250	4795
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.461152	77693	7982
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.522743	24548	5902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.007565	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.050983	18150	4450
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	40.263999	25908	8955
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.584940	45296	6561
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.175860	6886	1324
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.066384	22965	4993
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.061019	21811	4253
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.132954	39531	5374
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	8.305430	23561	1000	89	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.018823	2	2	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	20.225039	12028	2227	3.2.1.17	synth with cache (only 1: intros l1; only 1: intros s'; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.259887	79681	6895
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.058787	14366	3737
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.078782	28648	6814
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.083552	32171	3491
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	33.139197	43	27	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	13.926272	9346	1305	14.3.3.13	synth with cache (only 1: intros IH; only 1: intros Ey; only 1: intros z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.079348	30019	5263
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.532058	67845	7403
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.593006	31646	2294
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.090821	28875	6508
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.084205	31855	5522
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	40.038843	11478	4012
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.368340	345	164	0.0.0.0.2.2	synth with cache (only 1: intros b; only 1: intros m; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	7.938283	4645	897	7.3.3.13	synth with cache (only 1: intros y'; only 1: intros Ey; only 1: intros Hyy'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.056936	17961	5511
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.061940	20605	4607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.058782	15570	4835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	24.859046	8616	1822	1.15.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.062952	8928	3226
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.030198	5708	4317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.042959	12872	4525
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.311532	1154	460	0.2.0.0.2.3	synth with cache (only 1: intros s'; only 1: intros; only 1: intros x; only 1: rewrite filter_iff; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.047231	13574	6637
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.376399	24033	4407
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.008030	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	40.049660	15271	8108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.606311	14318	5842
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	40.472899	149863	1917
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.010553	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.613737	39818	3171
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.067831	24626	6055
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.288209	88293	11001
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.055155	17977	4954
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.766409	11787	2947
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.006910	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.102335	14682	2773
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.085724	119	17	15	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.116686	50567	3748
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.070107	27264	3251
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.347252	96742	6142
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	0.555606	209	73	0.0.0.0.0.5	synth with cache (only 1: destruct m; only 1: destruct b; only 1: destruct b4; only 1: t_eqb; only 1: t_eqb; only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.021559	3	3	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite Nat.eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.086910	17	15	2.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: intros y; only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.634437	407	22	28	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.024494	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.005212	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.623551	21040	5149
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.130876	57029	5969
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.081126	29693	3811
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001063	214	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.139989	59133	4611
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.154692	41558	3934
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.065104	20873	6610
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.054280	17911	6691
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.077484	29301	5898
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.415774	21609	3081
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.096792	39203	6029
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	1.452544	1911	199	0.3.20.0	synth with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.078471	27397	6868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.061849	23153	3432
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.026477	4666	3547
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	5.697770	2085	696	1.0.0.2.0.1.0.0.0.1.0.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: intros Ha; only 1: easy; only 1: destruct p; only 1: intros H; only 1: reflexivity; only 1: intros; only 1: vm_compute in H; only 1: simpl; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.080928	29530	5928
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.477597	26731	3838
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	40.066144	23013	7372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.165774	18323	7166
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	40.590533	25650	745
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.460834	47407	1597
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	3.786067	1682	591	0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: intros until a'; only 1: destruct a'; only 1: easy; only 1: trivial; only 1: intros until a'; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.056458	20331	4436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.630127	102	32	0.0.0.0.1.0	synth with cache (only 1: unfold Z.pred; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl in *; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.456676	38699	4738
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	11.865426	9289	586	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.022960	6726	197	5.0.0.103	synth with cache (only 1: hnf; only 1: simpl; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.017051	13	3	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.233515	68402	8642
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	5.014149	1409	444	3.7.2.1.1	synth with cache (only 1: Nat.induct n; only 1: easy; only 1: intros r; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.078692	29187	4674
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	0.430102	209	35	10.3	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, _tmp_tactician0); only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.033506	12100	2929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.079048	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.391792	30656	6650
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.064903	22328	5048
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.066247	11782	2360
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.578579	28085	4195
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	35.835909	8432	859	36.2	synth with cache (only 1: intros Heq1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.082167	29930	6001
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.110995	45998	6098
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.044947	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.056332	17369	6592
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.118942	48811	10213
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000847	53	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.030514	7104	3882
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	31.518756	51694	3871	5.0.8.43.4	synth with cache (only 1: intros n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.620154	34562	6166
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.085371	31378	4905
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.053567	17425	7387
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.035056	5	4	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.056888	14622	5033
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.097637	38141	5688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.025209	6340	3258
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	8.544347	11900	992	0.0.0.0.45	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.021115	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.063565	23190	5283
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.490972	13915	2548
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40	40.073518	29598	5597
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.068001	24803	2297
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.100308	39152	4888
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.155624	23821	2022
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	2.247547	976	387	2.3.3.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros b'; only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.420404	19077	2179
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.949589	67610	6308
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.101766	39865	7952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.039819	8896	1927
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.086832	33975	4265
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.147166	41298	4260
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	14.035733	5235	2168	3.0.2.3.1.4	synth with cache (only 1: red; only 1: intros Hx; only 1: intros x'; only 1: unfold Equal; only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.288607	29275	8645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.096061	41317	2345
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.113879	47687	5955
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.063599	25435	375
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.046432	15420	3034
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.110076	15115	5704
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.112329	29567	1203
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.040584	10810	4948
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.034625	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.086116	30645	5989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.044377	12174	5688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	18.819046	5798	608	0.0.3.2.0.1.4.19	synth with cache (only 1: destruct a; only 1: destruct b; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct b; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.080120	28766	8288
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.083935	32555	5939
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.000952	143	25
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.091679	24349	3506
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.071196	26066	3465
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.017649	3	2	0.1	synth with cache (only 1: rewrite <- Z.sub_move_0_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.015142	9	2	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008366	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.010599	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.076614	26799	4844
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.484167	72	43	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.222412	72241	5886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.060245	17328	4710
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.385547	19793	7069
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.047488	9538	3584
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.090346	36588	5408
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.337528	168233	7665
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.050746	15618	1738
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.390610	20297	2429
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.093447	32022	3302
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	15.577778	5958	600	0.1.0.29.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.423663	54276	5181
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.048520	14598	5712
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.053595	15475	5118
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.568997	31948	4878
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.537855	12973	2706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.660497	12837	2016
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.565686	17882	2440
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.057596	16321	3719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.075118	9933	3444
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.584547	19065	4373
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.102940	14	12	0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: rewrite Rlt_le_neq in H; only 1: destruct H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.036661	7873	4557
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.273628	49480	7732
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.080104	28338	4751
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	4.072283	5612	650	28.5	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.009813	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.074798	28678	3301
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	6.468630	1625	761	0.0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: rewrite <- Rplus_le_mono_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	11.406161	10311	2067	6.4.0.17	synth with cache (only 1: intros c; only 1: intros Hs; only 1: rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.087614	31421	9272
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.077037	27930	5861
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.055246	19762	5605
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.534851	66323	6040
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.001048	86	53
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.783634	25472	3556
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	39.289899	46043	4413	89	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.077769	27219	4756
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.162995	18292	6427
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.052837	16751	3412
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	40.094440	27496	2244
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.055638	17497	5654
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.109873	29832	6294
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	40.075744	24589	3833
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.502287	36800	1156
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	10.685274	7434	1487	7.0.1.0.1.16.0	synth with cache (only 1: unfold Z.min; only 1: induction p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.057715	18217	4866
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.082057	30568	3772
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.912953	61600	5205
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.006961	3	1	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.036004	8837	4209
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.615667	53299	4784
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.790997	7556	1667
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.077739	28224	8406
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	1.132193	56	13	0.3	synth with cache (only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.391680	204963	1451
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.254148	13512	2997
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.068383	22885	5714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.040110	12920	3602
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.289304	12905	4640
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.125248	53343	6991
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.122695	39812	1611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.063868	22151	4072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.853235	261	82	3.0.0.3.0	synth with cache (only 1: apply bit_ext; only 1: intros Hn; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: apply orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.043673	12001	4369
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	2.682065	435	270	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until w; only 1: induction w; only 1: intros until n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.374339	10417	3299
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.041799	10732	4775
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.031306	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.547024	7785	2928
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.073384	28851	6557
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.865204	103582	4910
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.001140	136	94
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	40.386827	19331	4391
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.025679	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.534930	25222	2832
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.019774	3	2	0.1	synth with cache (only 1: intros LT; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.031607	5	3	0.0.2	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.027708	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.685503	18282	6504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.078802	26514	5093
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.021395	4833	3435
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	4.418004	4431	390	1.0.35.6	synth with cache (only 1: intros H; only 1: destruct (Z.eq_decidable n m); only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.059982	19502	5793
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.311076	154633	4670
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.058983	20555	4629
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.533684	6355	2638
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013605	3747	1013
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	40.812072	34559	3475
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.075290	7	6	0.0.0.0.0.1	synth with cache (only 1: unfold Z.leb; only 1: unfold Z.le; only 1: destruct Z.compare; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.049084	14163	5845
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.585095	22070	1951
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.244646	36294	6667
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.073510	22396	8034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.140637	61822	5642
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.227625	12441	2900
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.503429	31838	5073
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.017502	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.038574	12635	2519
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.014355	4	2	2.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.006726	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.350968	18024	2558
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	10.317404	7012	1404	0.0.0.0.3.1.6.14	synth with cache (only 1: revert m; only 1: intros p; only 1: unfold Z.gt; only 1: unfold Z.gtb; only 1: destruct Z.compare; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.292600	13893	4389
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.058577	21608	6112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.028978	685	219	0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros l; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.519185	72380	2798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.086840	33099	4657
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.124868	21165	5031
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.100377	38105	2227
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.359263	21906	6429
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.113525	48277	1151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.090894	29	9	3.2.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.023365	5	3	2.0.0	synth with cache (only 1: intros s; only 1: rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.065823	25442	4666
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	1.171339	684	156	3.1.0.7	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.613786	77361	4142
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.039544	9	4	1.0	synth with cache (only 1: intros x; only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000754	121	20
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.080736	29972	5083
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.064946	21499	5507
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.084210	28677	5339
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.099162	24046	4329
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.471907	15235	2161
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.070115	23971	5559
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.450791	42890	4229
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.315653	782	215	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	1.905904	992	230	9.4.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.044087	13229	4458
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.547363	6797	2609
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	3.984079	3551	494	2.0.0.2.0.0.1.17.1.1.19	synth with cache (only 1: destruct a; only 1: simpl in *; only 1: f_equal; only 1: induction p; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	2.023865	1106	210	5.1.1.0.6.2	synth with cache (only 1: unfold jump; only 1: destruct p; only 1: unfold tail; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.039225	13730	2066
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.294453	18438	5693
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.018641	5521	1307
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.621182	7413	2319
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	9.615036	20717	2193	0.0.0.0.0.0.18.0.7.0.0.0.0.1.5.27	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.126247	52700	5154
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.089815	35755	3152
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.091154	20333	5243
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.254576	16700	4632
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	40.389016	37246	4400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.044149	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.007421	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	3.357086	4824	535	2.0.0.2.0.2.0.0.2.4.2.0.24	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	1.389366	615	71	0.4.0.24	synth with cache (only 1: destruct n; only 1: easy; only 1: Nat2N.nat2N; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	40.364493	17313	4508
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	2.195688	1069	272	1.0.3.0.6.0.0.0.2	synth with cache (only 1: destruct n; only 1: destruct m; only 1: N.order'; only 1: intros Hn; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.008478	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.056901	12233	4602
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.107935	43050	7139
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.426776	503	192	0.2.8	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.090619	34211	5594
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.864965	117796	3015
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.077002	27332	3284
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	15.651280	14500	2718	0.3.4.0.4.0.3.3.0.0.0.0	synth with cache (only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: induction p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.055468	17929	3174
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.038020	10870	3132
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.067825	23693	6053
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.444995	15605	2965
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.126738	61217	2314
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.901033	80473	3967
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	3.815406	3015	717	0.1.0.0.0.0.4.9	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| x l]; only 1: intros Eq; only 1: intros x; only 1: intros H; only 1: inv; only 1: simpl; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000637	52	23
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.323140	857	85	2.4.25	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.124381	32	17	0.0.0.3	synth with cache (only 1: intros ?; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	14.357592	46406	1182	5.2.0.114.21	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: easy; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	36.604759	30330	4479	0.0.0.0.0.0.0.8.0.0.12.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: intuition; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: easy; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	0.318673	74	37	1.0.4	synth with cache (only 1: intros Hiff; only 1: intros m2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	40.055151	11431	5059
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.392750	18450	2102
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	40.060771	20209	4487
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.447151	34176	5427
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.138321	59198	5061
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.028170	8088	3104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.547657	126799	4403
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.514331	70537	4326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.071885	18459	2471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.093295	34006	8382
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	40.083561	26809	4721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.176437	81889	4875
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.056082	17148	3367
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.051738	16278	6469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.317200	13885	5550
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.672422	473	54	11.0.1.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.559039	717	101	0.0.0.15	synth with cache (only 1: unfold def_add; only 1: intros n; only 1: rewrite recursion_0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	40.851683	89999	9281
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.961689	50476	7459
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.054832	10385	4625
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.059835	17472	8561
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.145856	61534	8368
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	41.019690	56061	4515
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.029941	23	6	5.2	synth with cache (only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006649	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.004699	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.005825	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.006426	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.007242	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.098316	37917	1259
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	21.195761	29171	2031	0.0.0.2.58	synth with cache (only 1: unfold Z.lt; only 1: destruct 1; only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.069916	25178	5808
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.163103	23220	8448
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.676698	2864	457	1.1.0.1.0.0.1.1.0.10	synth with cache (only 1: induction 1; only 1: compute in H; only 1: induction l; only 1: left; only 1: easy; only 1: left; only 1: inversion H; only 1: inversion H; only 1: auto with arith; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.019410	4930	1599
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.539004	53765	5912
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	2.653963	1426	348	4.1.1.8	synth with cache (only 1: intros H2; only 1: firstorder; only 1: rewrite <- H2; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.032865	9988	3064
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000624	48	24
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	36.447908	28205	6933	6.0.3.3.1.1.1.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: induction n; only 1: intros s; only 1: destruct m; only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.120309	45677	4549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.839613	62936	6930
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.032815	9627	3986
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	40.170610	28949	8504
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.040688	11277	1752
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.096223	38297	5539
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.081721	33010	4391
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.010490	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.186663	30150	7757
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.097177	7	3	0.3.1	synth with cache (only 1: intros x; only 1: intros H1; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.019864	7	2	5.0	synth with cache (only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.010380	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.060028	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.060160	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.456187	50638	6532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.086815	31965	5674
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.960177	859	199	10.1.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.065049	22722	5218
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.395115	7744	3860
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	40.096257	21763	5813
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.103919	23732	4344
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.305765	16289	3126
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.033199	11709	2049
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.165032	53420	6027
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.136449	12	8	3.0.0.0.0	synth with cache (only 1: intros Ha; only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.150235	20288	9255
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.569935	114518	4922
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.048461	5699	2388
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.092722	9629	4246
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.039650	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.078467	30156	1685
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.593489	46	23	0.1.5	synth with cache (only 1: compute; only 1: intros Hf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010187	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	21.414938	8004	2845	6.1.4.2	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.456981	41667	3545
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.021729	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.009735	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	1.302017	307	130	4.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.047227	15917	4757
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.462090	18658	8190
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006239	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007877	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.523465	11818	4700
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.419243	69	53	1.1.0.1.0	synth with cache (only 1: intros ?; only 1: intros x'; only 1: intros E1; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.508826	22909	4514
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.292687	29416	6055
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	3.857925	1405	495	0.12.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.086360	15614	4629
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.047544	12716	5612
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.010694	6	2	2.2	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.721268	26525	8250
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	1.399104	426	109	1.0.0.1.4.0.0.2.6	synth with cache (only 1: induction l; only 1: apply permA_skip; only 1: reflexivity; only 1: intuition; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.867064	49489	7586
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.030396	8121	4672
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.376414	41328	8811
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.162831	28151	8009
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.018245	5407	2079
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	9.264202	5195	963	0.0.0.0.2.1.9.5	synth with cache (only 1: etransitivity; only 1: constructor; only 1: easy; only 1: eassumption; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.089238	31829	7429
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.067833	29553	1545
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	13.939727	10282	2606	1.1.8.0.0.0.6	synth with cache (only 1: intros s; only 1: intros; only 1: intros k; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, _tmp_tactician4); only 1: apply H with k; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.492229	65808	5715
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.102769	41033	4555
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	40.297247	18015	10320
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.067212	15911	3317
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.072915	25145	5288
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.031286	7	5	0.0.2.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros y'; only 1: intros Hxy; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.042658	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.204479	12587	2830
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.331733	37652	6528
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.036740	13717	1668
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.152937	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	1.788826	464	55	2.1.1.16	synth with cache (only 1: induction M; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.813492	38356	6959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.290431	603	272	3.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.439828	78579	7259
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.270771	68	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.310947	115976	9092
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.095096	5764	2096
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.076603	27166	6369
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	15.794720	6698	2144	14.0.1.0.4.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: easy; only 1: easy; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.389398	39711	4317
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.020080	4	2	0.2	synth with cache (only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.015328	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.937568	208	109	0.0.1.5	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	8.697946	5205	958	0.0.0.0.0.0.0.0.0.0.0.0.2.0.1.1.11	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.059632	19705	5186
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.074658	30405	5904
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.383535	47021	7588
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.449830	87193	5911
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.184022	16626	7984
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.077918	25999	7612
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.010351	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.377236	7526	3381
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.062987	15	7	4.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros l'; only 1: intropattern subst <- _tmp_tactician0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.055036	15758	7680
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.071911	28719	2315
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.361823	20112	7622
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.459614	46923	7229
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.198764	48977	8808
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	1.618511	1439	147	0.0.0.21.3.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.108507	42050	7517
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	6.257828	2794	610	8.4.1.1.0.0	synth with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: inversion 1; only 1: setoid_rewrite Exists_exists; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	26.989683	10518	3610	0.0.4.0.0.0.0.0.2.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: order; only 1: order; only 1: order; only 1: specialize (IHl x y); only 1: destruct (split x l); only 1: simpl in *; only 1: rewrite join_spec; only 1: intuition_in; only 1: order; only 1: order; only 1: specialize (IHr x y); only 1: destruct (split x r); only 1: simpl in *; only 1: intuition_in; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	4.121753	1828	401	1.4.8.1.0	synth with cache (only 1: firstorder; only 1: rewrite InA_cons in H; only 1: inversion H; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.011404	2783	1590
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.136211	57725	5339
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.304979	208	62	3.1.3.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	23.790063	29696	1775	1.3.8.1.0.11.7.7.3.9.31	synth with cache (only 1: Z.nzsimpl; only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.773776	73	34	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: rewrite Z.odd_add; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.056402	17930	5790
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	3.530816	1578	687	0.0.1.8.1	synth with cache (only 1: intros until l; only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.156369	27939	5879
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.090837	20968	2731
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.315995	23411	5123
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.072955	23277	4949
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.072618	25755	6029
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.144442	35	12	1.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.393319	66970	9860
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	21.444642	9704	2671	5.0.0.1.1.7.1	synth with cache (only 1: intros ?; only 1: intros b; only 1: red; only 1: simpl; only 1: intros H; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.025000	6	3	2.0.1	synth with cache (only 1: intros H'3; only 1: intros y; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.093565	35	16	4.0.0	synth with cache (only 1: red; only 1: intros x; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.010740	2	2	0.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	4.633006	2188	686	3.0.4.2.1.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros a'; only 1: inversion 1; only 1: intros Heq; only 1: intros l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.032564	10890	1297
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	2.161046	8358	128	0.0.126	synth with cache (only 1: compute; only 1: rewrite recursion_0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.318832	61319	6807
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.213238	12852	6876
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.062854	20140	5932
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.105398	40225	7118
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.069018	10948	2111
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	40.072404	7589	2317
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.500674	5388	1889
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.283091	50308	8714
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.088610	35988	6055
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.052741	10	6	0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.402121	45120	9675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.582284	113	67	0.2.0.2.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.195443	37524	5410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.080846	28455	9116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.074715	22276	8045
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	15.600064	7742	2361	0.0.4.4.1.0.3	synth with cache (only 1: red; only 1: intros m; only 1: simpl; only 1: intros a; only 1: intros Hb; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	5.494604	1125	408	1.0.1.0.0.1.4	synth with cache (only 1: intros l; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.089283	31	14	1.1.0.1.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros H; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.057694	18991	5847
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	40.112132	25745	8418
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.542982	154	73	0.1.0.0.0.0.1	synth with cache (only 1: intros EQ; only 1: intros n; only 1: intros H3; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.043726	12	6	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.076864	25362	8844
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	20.558274	12184	4818	1.0.2.2.0.0.0.2.0.1.0	synth with cache (only 1: intros m; only 1: intros until l'; only 1: intros N; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.876972	34297	6141
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.348850	32086	2446
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.033742	7	6	0.1.0.0.0.0	synth with cache (only 1: intros Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct Hn; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.012495	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.013905	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.039329	13404	3152
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	10.181621	9063	2055	0.0.0.0.0.4.2.0.0.0.27	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.034600	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold succ; only 1: unfold pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: rewrite add_0_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.008105	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.015870	4	3	1.0.0	synth with cache (only 1: red; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.827000	38	14	0.0.5.0	synth with cache (only 1: intros ?; only 1: red; only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.071303	26458	5384
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.026481	9608	1113
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.058649	18493	5630
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.269663	73598	6235
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.099836	40133	3815
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.013909	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.411129	13982	4665
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	12.758884	6149	2544	0.1.0.2.2.2.2.0.0	synth with cache (only 1: unfold le; only 1: unfold max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intros c; only 1: intuition; only 1: intros y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.079119	28301	8333
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.794039	372	103	0.0.0.6.2	synth with cache (only 1: intros H; only 1: destruct n; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.212572	44	21	0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: induction p; only 1: easy; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.105540	38	18	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: easy; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.053638	15476	5010
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.226836	12623	4233
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.454731	68323	7882
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.168063	30267	8753
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.012157	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.046660	18427	1620
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	3.173262	4315	290	1.5.1.31.1	synth with cache (only 1: intros Hp; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.033099	4	4	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.088129	33342	6880
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.004871	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.075403	24637	6793
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.489116	25843	7128
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.008452	3	1	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.120963	78	9	13	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.774890	1558	90	1.0.1.1.47	synth with cache (only 1: constructor; only 1: red; only 1: easy; only 1: red; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.440482	186	29	0.0.0.15	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.952283	669	270	5.2.1.2	synth with cache (only 1: intros n; only 1: intros x; only 1: intros z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.006266	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.379665	12640	2379
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.010256	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.091429	35502	3983
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.039097	6	2	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.730315	211	113	0.0.0.0.1.1.2	synth with cache (only 1: constructor; only 1: solve_proper; only 1: exact (SRmul_ext SReqe); only 1: intros x; only 1: intros y; only 1: intros H; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.020114	2	1	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.011985	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.126381	48395	9113
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.561203	13740	6545
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.447665	20416	8488
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.186162	31239	6181
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.393139	22303	6545
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	4.163266	6846	185	86	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.075889	28634	5236
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.505024	340	71	4.11	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.486521	11370	2816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.043325	10918	5073
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006337	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.003709	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	1.239545	156	48	0.3.0.1.0	synth with cache (only 1: rewrite InA_alt; only 1: simpl; only 1: rewrite InA_alt; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.173051	21830	8762
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.362751	16516	4386
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.513378	22906	5059
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.183154	23726	7599
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.183100	15565	1997
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.063275	18730	8146
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.024991	8627	1261
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.248167	34546	5553
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.050499	12969	5834
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.075649	8782	828
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.379716	89931	5661
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.321751	53086	5515
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.054458	13057	4934
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.380078	78218	6012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.110506	43480	7145
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	40.432371	42090	8046
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.159616	73	22	5.0.1	synth with cache (only 1: red; only 1: intros h1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.028939	8259	2313
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.446621	210	55	10	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.065528	19977	7099
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.377271	34653	5265
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.482080	84742	6611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.184264	82161	8372
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	1.405494	737	205	1.5.2.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: destruct 1; only 1: unfold In in *; only 1: firstorder; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.052900	16806	3641
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.462965	29176	6096
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.054098	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.022274	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.023059	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.543524	22247	5340
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.127093	52677	6021
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.319428	71960	5262
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.246483	24362	6186
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.065193	22297	5055
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.477085	20321	666
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.061041	20212	5249
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.165291	18984	8968
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.170635	31469	6194
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.211536	31	21	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.563514	356	54	1.8.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef; only 1: inversion 1; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.316009	41427	6636
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.444227	37291	4634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.455151	37325	5557
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	7.573057	5342	542	32.13	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.087375	26527	9477
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	4.855251	2731	448	0.1.5.5.0.7.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.109219	21389	4711
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.075131	26900	6587
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.023645	6916	2028
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.288652	43978	6846
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.237661	37300	5449
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.060439	16337	1231
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.233745	47921	4969
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.077840	28770	5031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.159839	5425	1771
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.483158	91117	4526
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.019154	6157	1586
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.191341	88816	9099
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.071601	25903	6360
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.357484	30274	3905
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.030097	4	4	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	34.496042	51698	8769	4.0.2.9.0.1.1.9.0	synth with cache (only 1: intros S; only 1: intros n; only 1: induction n; only 1: intros l'; only 1: intros a; only 1: auto; only 1: unfold push; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.089244	36096	3488
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.265697	64153	8545
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.050785	16124	4291
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.113823	26569	3862
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.487688	86920	7439
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.045383	14524	6406
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	1.437241	2026	301	0.0.0.4.17.0	synth with cache (only 1: intros ?; only 1: compute; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.049211	15617	5554
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.417547	48299	6280
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.190524	27095	6507
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	37.531157	8915	2638	5.3.4.3.6.0	synth with cache (only 1: intros _tmp_tactician0; only 1: constructor; only 1: rewrite InA_cons; only 1: firstorder; only 1: rewrite InA_cons; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	16.196161	11393	3684	0.7.0.13	synth with cache (only 1: intros y0; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.111168	45598	7116
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.470186	46913	6046
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	8.193190	9810	1284	24.8.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.414224	30242	7964
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.408801	19687	2584
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.070017	23034	7004
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.277494	21100	5634
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	2.105905	2238	101	43.5	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	2.388505	1618	555	0.0.0.13.2.0.0.0.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.192320	59835	10006
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	40.167174	21956	4551
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.017619	5235	1607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.119743	27767	4257
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.494338	44904	7693
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.048191	20	8	0.1.0.4	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.485180	148	64	0.3.1.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n); only 1: rewrite <- (id n'); only 1: f_equal; only 1: easy; only 1: intros Hn; only 1: rewrite Hn; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.043787	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	25.080191	23224	4013	0.0.3.2.1.5.0.2.2.0.4.0	synth with cache (only 1: intros n; only 1: induction n; only 1: intros H; only 1: left; only 1: easy; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.489624	100338	6159
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.065428	20921	4415
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.087666	30344	6099
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.045004	14252	3001
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.314153	63142	5832
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.029563	10740	1532
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.075831	27741	5649
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.406056	59405	3314
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	9.277312	8227	1329	1.0.0.0.12.1.17	synth with cache (only 1: intros n; only 1: unfold equal; only 1: intros m; only 1: case M.equal; only 1: auto; only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.070115	17919	4626
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.161228	65107	9353
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.164667	28038	9277
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.060947	13	10	2.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.009684	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.059288	19509	4774
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.110921	27122	6774
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.009292	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.148302	16624	5579
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.214059	35656	8672
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.064277	19067	5194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.179980	21813	6815
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.403253	15391	2275
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	2.528617	5647	358	5.12.31	synth with cache (only 1: induction x; only 1: red; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.386185	27461	6872
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.017278	5	2	2.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.012271	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.088203	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.179194	23848	7684
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.377835	27379	5116
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.288938	46446	1735
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.441843	28803	8090
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.055758	18045	1744
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.371377	26962	6896
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.019420	4	4	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.120478	50162	13009
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.138887	15482	6457
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.127489	48315	3176
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	2.441110	948	448	0.2.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	3.191691	1069	533	0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros ?; only 1: intros l'; only 1: intros Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: transitivity (length l'); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.022331	8252	1124
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.103225	19706	4169
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	40.267109	44766	5100
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	2.214153	763	120	10.0.5.3	synth with cache (only 1: induction l as [| y l]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.036714	5362	1389
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.414139	101903	5074
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.050786	7683	2386
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	40.352493	25222	9942
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.353432	52129	7579
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.202303	93453	6148
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	15.304057	10924	2634	0.0.0.0.0.0.1.2.0.0.3.2.0.1.0.0	synth with cache (only 1: unfold Z.pred; only 1: destruct n; only 1: intros Hb'; only 1: rewrite N.pred_sub; only 1: rewrite abs_N_nonneg; only 1: easy; only 1: Z.nzsimpl; only 1: Z.order'; only 1: destruct 1; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.458109	25994	5976
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.314552	85388	9173
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.110719	44195	6889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.009707	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.146682	19918	8118
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	24.811500	55883	4611	13.2.19.4.16	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (l, F); only 1: induction l as [| a l IH]; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.286589	24331	9794
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.083906	8376	431	0.4.47.1	synth with cache (only 1: intuition; only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.068038	20448	5563
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.206027	46534	8188
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.037386	4	4	0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.066854	24630	6742
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.107010	42645	10324
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.228694	43314	8758
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.294664	52198	7494
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.073821	25566	7859
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.084901	33182	5241
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.197639	49532	8033
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.302544	31346	7908
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.479732	10836	1565
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	18.823941	134119	2895	0.0.0.130	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.083066	30774	5945
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.271940	29727	7532
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.287410	43206	6764
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.620901	10102	2285
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	4.005377	1563	834	2.0.0.1.0.0.1.1	synth with cache (only 1: intros X; only 1: intros C; only 1: intros Y; only 1: intros H'; only 1: intros H'0; only 1: apply Setminus_intro; only 1: trivial with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.022468	8195	696
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	13.840449	10511	2481	1.16.3.2	synth with cache (only 1: intros _tmp_tactician2; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.129634	58260	2893
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.182521	38012	6427
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.061261	20933	6467
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.380019	101232	4443
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.062577	21487	4848
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	40.142547	18354	9435
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.351337	34122	8549
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.311215	64601	7130
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	2.545030	696	334	1.1.0.2.2.1	synth with cache (only 1: intros a; only 1: intros c; only 1: intros Ha; only 1: intros Eq; only 1: rewrite make_conj_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.072220	26930	6215
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.376477	33069	6188
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.066253	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.313106	39954	5747
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.076931	26041	9862
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.179296	18719	8324
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.043677	28	8	0.0.7	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.475718	221181	5849
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	40.080726	30787	4700
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.352509	1032	355	2.0.0.6	synth with cache (only 1: destruct 1; only 1: intros all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.588716	134267	5963
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.059140	18964	5906
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.260754	35	22	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.076955	25513	8787
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	0.608118	83	53	0.0.2.0.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.div_exact; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.065818	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	2.572288	1976	713	2.0.4.1.0.1	synth with cache (only 1: unfold not; only 1: intros P; only 1: intros notall; only 1: intros exnot; only 1: elim exnot; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.289446	23211	4967
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	6.793879	3238	1482	0.0.0.0.0.0.0.0.0.0.0.2.1.0.0.1.0.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.579928	255	114	9	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.699084	288	127	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: easy; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.023911	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.210904	37210	7808
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.293432	58254	7691
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.157650	73099	4615
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.110949	39527	4912
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.435987	977	260	4.0.0.0.0.0.0.3.2.0.2	synth with cache (only 1: intros until s1; only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	14.175854	10275	2325	0.1.3.4.0.2.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: clear _tmp_tactician2; only 1: exists bb; only 1: rewrite H; only 1: rewrite mul_comm; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.105329	41834	7940
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.296541	48843	9233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.224771	71	36	0.0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.048654	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.054375	14009	2590
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.106682	41577	10775
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.303513	41145	6176
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.103734	41371	6596
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.159195	39912	9153
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.011805	3135	1253
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.534139	7658	1239
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.240916	30946	4754
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.047886	14263	5068
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.093911	31396	6043
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.109277	42170	5175
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.250578	23343	7702
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.595091	145060	2837
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.199238	91765	8210
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.403603	32667	8342
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.009677	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.024430	5	3	0.2.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.883236	162	106	1.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n); only 1: rewrite <- (id m); only 1: rewrite H; only 1: easy; only 1: intros H; only 1: subst; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.485237	50302	5622
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	35.658812	57544	7708	1.0.5.11.0.8.9	synth with cache (only 1: intros Eq; only 1: unfold not; only 1: intros; only 1: destr_eq H; only 1: contradict H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.370537	39729	4496
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.094423	32063	9569
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.058053	19856	5165
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.332816	26267	6712
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	1.916350	1062	359	0.1.3.0.0.5	synth with cache (only 1: intros p; only 1: intros r; only 1: inversion 1; only 1: destruct p; only 1: firstorder  discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.011362	5	2	1.2	synth with cache (only 1: intros Hfst; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.013634	8	2	6.0	synth with cache (only 1: intros a; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.246603	24	12	0.0.2.1	synth with cache (only 1: intros y; only 1: intros R3; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.180880	818	231	2.0.0.0.0.6.1	synth with cache (only 1: intros until l; only 1: intros a'; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: auto; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.067451	24417	5230
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.465351	78641	7590
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.016969	5	3	0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.436466	38353	6504
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.341234	32298	8609
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.349420	171658	2302
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	2.138769	1475	400	0.1.0.2.0.3.3.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros _tmp_tactician0; only 1: split; only 1: simpl; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.445534	152595	9608
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.011553	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.036682	8	6	0.0.0.0.1.1	synth with cache (only 1: intros n; only 1: simpl; only 1: intros l; only 1: intros m; only 1: revert n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.546243	119054	3938
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.391375	100	37	5.0.0.0.1	synth with cache (only 1: destruct n; only 1: left; only 1: easy; only 1: right; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	40.122981	45585	7808
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.070587	24169	4158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.069171	14	12	0.1	synth with cache (only 1: rewrite <- even_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.107765	43513	9213
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.030377	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	24.707685	48131	3890	1.3.3.3.0.0.1.8.4.0.4.14.2	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| _tmp_tactician0 ll lx lr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: destruct r as [| _tmp_tactician0 rl rx rr]; only 1: ok; only 1: assert (IH : Ok (append lr rl)); only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: auto_tc; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.231666	104303	16585
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	2.102034	1857	337	0.3.1.3.0.2.9	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.063424	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	40.228000	56295	5762
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	8.498553	4161	1706	0.1.1.0.1.2.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: intros Ha; only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: intros _tmp_tactician2; only 1: destruct a; only 1: trivial; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.942522	322	133	0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: intros Hn; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.013817	3	1	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.143893	31189	6695
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.343272	26586	5086
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.266596	56984	7537
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.020588	5802	1811
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.347826	8846	2383
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.351075	18826	4096
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.223735	63149	5781
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.058339	20884	4050
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.058182	16963	7904
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.052264	14754	4683
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.184914	16048	6074
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	21.770251	23637	3381	0.3.1.0.2.0.3.8.0.20.14	synth with cache (only 1: induction n in m |- *; only 1: constructor; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: apply Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.333597	53180	7383
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	15.349753	78570	2264	0.0.108	synth with cache (only 1: exists 1; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	11.993549	7289	1256	0.3.4.7.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.129454	34921	8867
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.537315	21572	2979
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.261937	30368	4236
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.090378	31719	9531
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	2.120846	865	237	1.0.3.2.0.4	synth with cache (only 1: intros l'; only 1: inversion 1; only 1: intros _tmp_tactician4; only 1: intuition; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.459828	82485	6353
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.086846	34381	4313
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.435341	79	50	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	8.954088	7527	1602	2.0.0.2.0.0.0.0.0.2.0.5.0.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: left; only 1: auto with arith; only 1: intros until m; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.004243	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	1.874805	1019	351	0.0.2.1.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: elim (le_lt_dec n m); only 1: intros H; only 1: apply le_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.008850	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.007290	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	18.158853	7175	3242	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: intros until n; only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: intros Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b; only 1: intros Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.068619	22922	6259
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.254527	24428	9599
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	40.219786	39052	8617
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.077072	27305	7540
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.243206	51807	9094
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.442977	101583	3237
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.289187	36922	5690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	33.568654	11664	5329	0.0.1.1.0.0.0.5.0.1	synth with cache (only 1: intros; only 1: rewrite <- testbit_spec'; only 1: rewrite <- not_true_iff_false; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: easy; only 1: order'; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.318108	44577	5863
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.540753	117957	5175
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.098285	43301	6335
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.061642	19535	5924
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.334400	21549	5102
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.284203	31766	6487
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.310383	6178	3094
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.017568	4539	1622
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.025130	8	4	0.1.3.0	synth with cache (only 1: unfold meq; only 1: intros until y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.308272	61292	2619
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.043630	13896	4589
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.218279	27538	7784
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.051995	13731	3169
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	23.809317	18984	3702	0.30.0	synth with cache (only 1: intros H; only 1: apply Z.ge_le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.658774	244672	4404
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.009000	2	1	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	1.378773	1668	99	53	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	7.207538	4524	1391	7.4.0.0.1.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.490848	15565	9166
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.161479	67127	7298
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	3.226575	1868	588	5.10.0	synth with cache (only 1: intros _tmp_tactician2; only 1: intros b; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.479330	441	212	0.2.4.1.0	synth with cache (only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.450778	29386	6855
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.314608	49762	5189
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.076396	26574	8938
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.324097	29202	5904
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.090369	34505	8047
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.045537	13505	5300
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.084179	17	8	5.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.263905	46	21	1.2.2.0	synth with cache (only 1: intros H; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	32.896861	40353	4126	29.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.29.1.7.2.1.55	synth with cache (only 1: destruct m as [| m]; only 1: PeanoNat.Nat.nzsimpl; only 1: destruct (to_nat (L n p)); only 1: simpl in *; only 1: easy; only 1: assert (succ_r : forall x y, x + S y = S (x + y)); only 1: intros until x; only 1: induction x; only 1: easy; only 1: easy; only 1: assert (comm : forall x y, x + y = y + x); only 1: intros until x; only 1: induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite succ_r; only 1: f_equal; only 1: easy; only 1: rewrite comm; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.293907	27238	8663
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.191586	18921	9992
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.008366	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.283458	25948	8314
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	0.400636	12	7	1.1.0.0.1	synth with cache (only 1: nzinduct p; only 1: Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.005095	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	2.094103	1500	342	0.0.5.2.0.0.1.9	synth with cache (only 1: destruct m; only 1: rewrite Nat.leb_nle; only 1: intros H; only 1: apply Nat.neq_0_lt_0; only 1: apply Nat.neq_sym; only 1: Nat.order; only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.158994	27065	9317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.049384	13736	5497
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.203772	28870	8709
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.149163	30816	8912
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.109645	43684	7386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.149107	42386	8616
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.076681	30255	5340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.260948	25923	5231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	3.806673	1527	620	0.0.0.2.4.3	synth with cache (only 1: intros n; only 1: rewrite testbit_spec'; only 1: f_equiv; only 1: nzsimpl; only 1: easy; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.083164	30837	5706
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.112515	49314	5756
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.308510	31626	8305
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012725	3027	1113
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	40.222078	43902	5834
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.007844	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.005050	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.334651	56207	7852
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.081383	29896	4895
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.477630	24	5	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.086566	33025	7673
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.122301	56331	3232
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.262493	23253	6962
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.328147	96434	5800
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.185230	86309	2474
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.206535	19081	8188
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.019242	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: intros H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.008529	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.047378	16191	3027
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	16.429268	14052	2878	0.0.1.5.14	synth with cache (only 1: intros m; only 1: intros y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.487937	66544	5579
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.213188	25702	8155
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.389249	29975	6366
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.071748	26620	5797
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	5.094714	11797	725	0.3.0.47	synth with cache (only 1: destruct m; only 1: intros H; only 1: easy; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	1.014113	451	159	2.1.1.0.3	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m; only 1: intros Ha; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.211871	25468	7221
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	5.776550	5309	1388	3.2.1.2.2.14.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction s; only 1: intuition_in; only 1: descolor; only 1: simpl; only 1: invrb; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.145300	59501	9615
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.451176	33708	4886
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.277344	48155	6788
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.534995	13792	3740
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.008663	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	40.112518	13074	6893
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.180287	37591	8476
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.039213	10031	4641
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	0.491416	424	43	2.0.5.17	synth with cache (only 1: induction n; only 1: simpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.239400	18646	9078
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	1.146423	215	45	13	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.233477	81871	6917
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	0.506718	95	50	0.0.0.2.0.0.0.1	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: unfold add; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	2.262165	1358	379	1.0.0.0.0.0.2.1.0.6	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	19.170164	35124	3006	1.1.0.3.0.43	synth with cache (only 1: induction n; only 1: intros _tmp_tactician0; only 1: destruct m; only 1: constructor; only 1: trivial; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.070014	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.064384	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	0.485402	31	7	0.0.6	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.042418	11775	3907
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.074596	16	3	3	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.066764	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.044953	15888	4406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.072951	23686	7518
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.170752	24309	7090
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.179986	49105	7053
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	11.402582	5735	1397	0.0.1.9.4.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.019372	5	4	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.721279	176	88	0.0.1.1.0.0.1	synth with cache (only 1: intros a; only 1: intros b; only 1: intros x; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.084726	27271	8444
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	28.019457	18989	3422	1.0.20.1.15	synth with cache (only 1: induction 1; only 1: easy; only 1: apply Nat.add_le_mono_l; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	38.308142	33822	5760	0.0.1.11.0.0.7.11.0.2	synth with cache (only 1: intros H1; only 1: intros H2; only 1: Nat.le_elim H1; only 1: apply Nat.lt_le_trans with m; only 1: auto; only 1: Nat.order'; only 1: rewrite <- H1; only 1: generalize (Nat.lt_trans n m p); only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	2.060731	1064	201	1.0.1.16	synth with cache (only 1: induction 1; only 1: easy; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.012058	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	3.988295	1512	366	0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: destruct n; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H2; only 1: destruct m as [| q]; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.011802	3179	1207
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	6.299948	5492	806	2.1.9.22	synth with cache (only 1: induction 1; only 1: auto; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.046813	13844	5421
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.077932	30072	6201
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.354128	24111	6835
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.073651	27119	6471
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.196509	10716	4668
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	33.328320	32332	4071	0.4.3.0.1.0.0.24.1.5	synth with cache (only 1: intros acc; only 1: simpl; only 1: destruct acc; only 1: intros _tmp_tactician0; only 1: simpl in *; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.196654	43545	10809
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.040993	13	5	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.486641	33679	7201
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.007828	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.421642	44178	7350
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.177772	37619	7135
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.121994	51719	8666
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.105685	40399	7335
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	8.135019	3356	1309	0.1.0.1.0.0.0.0.0.0.2.2	synth with cache (only 1: unfold meq; only 1: intros until x; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.246509	21116	6323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.518818	42136	5822
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.377806	66315	4793
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.375095	20670	6540
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	40.275252	16598	4010
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.065964	22989	5476
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.011905	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.005274	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.197088	18910	6072
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	40.156588	27110	8502
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	40.038319	7351	2386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.075410	14763	6234
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.100602	18433	7812
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.124227	49294	9468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.153437	17563	5764
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.296074	24516	2990
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.190851	38626	6587
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.415734	77	37	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.385747	23641	8149
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.313147	34153	6164
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	40.366941	36970	6045
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.026913	8751	574
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.283577	76950	4573
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.038332	9551	4882
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.042310	10035	4451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.153769	59225	8037
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	11.576341	9997	2039	12.16.0	synth with cache (only 1: intros ?; only 1: rewrite <- (mul_0_r n)  at 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.060900	18768	6065
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.067405	17428	9044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.036348	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.420773	33865	8723
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.600215	11281	3491
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.238438	68204	6043
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.384739	55248	5719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.091483	32673	9746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.149554	21835	10437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.118326	36415	7346
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.096955	18267	4709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.235467	17141	5151
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.095453	32390	13409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.064793	20216	7803
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.180695	24379	7884
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	40.089991	31573	8811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.224076	51511	5771
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.212507	43458	6195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	1.794338	1250	453	2.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold sgn; only 1: intros n; only 1: destruct (compare_spec 0 n); only 1: intros H2; only 1: order; only 1: intros Hn; only 1: rewrite <- le_succ_l in Hn; only 1: rewrite <- one_succ in Hn; only 1: order; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	31.403573	32326	5912	0.0.0.10.0.0.3.0.15	synth with cache (only 1: revert n m; only 1: intros n; only 1: intros b; only 1: intros m; only 1: intros LT; only 1: revert n m; only 1: intros m; only 1: apply Nat.mul_lt_mono_pos_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.136770	16299	5427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.088090	30151	8554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.181628	9688	5061
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.667041	152	97	1.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b); only 1: apply Private_NZPow.pow_lt_mono_l; only 1: easy; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.126006	50650	13383
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.069323	22588	7831
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.293419	22271	6192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.062869	17990	8137
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.292558	29872	5793
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.007930	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.009564	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	26.497961	23580	5143	0.3.0.1.2.6.2.0.2.0.4.13	synth with cache (only 1: rewrite <- Nat.sub_1_r; only 1: induction n; only 1: Nat.nzsimpl'; only 1: simpl; only 1: easy; only 1: simpl; only 1: Nat.nzsimpl'; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: apply Nat2Pos.id; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.030548	9935	978
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	40.250526	60172	4701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.050770	11738	7244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.105670	35360	8068
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.036155	10243	3109
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.349127	41518	7418
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.104387	39354	7133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	40.062023	19224	9774
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.144298	447	246	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.174845	39755	7689
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.080635	26407	6906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.069579	20250	8088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.100015	36999	8553
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.085428	30049	8403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.101481	36179	8413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.531430	9181	3385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.090418	24566	8255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.942981	242	159	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.123715	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.807278	237	139	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.039270	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.101793	36660	14613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.081326	25677	7764
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.196977	91191	6651
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.128285	21881	9046
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.161172	26422	7435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	2.236397	786	381	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.298944	32	19	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.186510	36688	8583
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.183620	48191	8406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.241478	558	280	12.0.0	synth with cache (only 1: rewrite abs_eq; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.124432	41585	6273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.052917	13504	7193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	40.051508	14645	7114
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.138863	57708	13190
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.407772	127	63	0.0.0.1.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	0.687575	300	105	0.1.4.0.1	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_abs_r; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	17.754618	9045	3643	0.1.0.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy; only 1: rewrite max_l; only 1: rewrite max_l; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.082021	17035	7191
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.335844	5925	2938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.424201	43848	7582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	25.369753	10719	5760	0.0.0.1.0.0.0.1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.066930	18181	8410
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.324779	62430	7490
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	40.011607	2684	1181
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	40.178496	49906	5321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.064347	19176	9111
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.051573	14124	4351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.121927	37642	8143
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	37.249031	18660	6619	0.0.0.0.10.2.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite Zabs2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.504613	37026	7426
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.227282	38572	7974
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.252455	118300	3775
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	4.386800	3448	578	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.22	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.012668	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.009094	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	22.095870	10218	3519	0.0.0.0.2.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: order; only 1: rewrite <- sub_le_mono_l; only 1: trivial; only 1: trivial; only 1: rewrite max_l; only 1: rewrite min_l; only 1: order; only 1: rewrite <- sub_le_mono_l; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	2.677508	8201	528	3.1.4.15.14	synth with cache (only 1: destruct 1; only 1: PeanoNat.Nat.le_elim H; only 1: easy; only 1: destruct H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.090642	34172	7149
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.083931	28106	8035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.177292	33335	5941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.057545	15696	6596
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	4.598562	3176	605	0.1.2.1.2.4.4.1.0.1	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: easy; only 1: intros Hm; only 1: simpl Z.succ; only 1: rewrite Pos.add_1_r; only 1: simpl; only 1: apply Pos2Nat.inj_succ; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	3.161624	1249	696	0.1.0.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.084162	25908	10028
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.014110	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.130640	23377	6517
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.120718	20186	7856
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.254777	30126	7804
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.017327	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	3.543415	1923	306	0.0.0.1.0.0.1.0.1.2.0.0.0.3.10.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: destruct m; only 1: Z.nzsimpl; only 1: easy; only 1: destruct n; only 1: easy; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.067485	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite Z2Nat.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.405718	25121	8582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.120763	16401	5439
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.580890	3818	215	3.6.32	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e, abs); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.061206	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.223152	100	21	10	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.980378	157	122	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.301717	66967	6260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.159394	37262	7115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.253050	10501	3629
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	6.109725	2679	926	0.0.0.1.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.052784	17155	5567
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.214019	101259	19800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.118857	21517	9605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	5.205214	3937	875	13.0.5.0.1	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: left; only 1: reflexivity; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.140707	19623	6046
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.153751	21024	6683
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.126547	46993	7731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.081883	25199	7508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.057186	15710	7931
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.226675	32607	6075
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.010564	2723	1037
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.446685	23085	1550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.113644	44274	8696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	10.273766	4018	2116	0.0.0.0.0.0.2.3.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.423673	147	64	3.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.054174	17554	5675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.077264	26187	5399
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.378054	36832	6390
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.033891	8	5	0.2.1.0.0	synth with cache (only 1: intros H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	32.790304	18908	8997	0.0.0.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: discriminate; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	40.082935	13789	6936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.226392	6884	2150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.040972	7513	2507
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.071457	15915	6726
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.185361	27388	6844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.302654	28785	5995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.063197	15431	7631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.120336	23284	6781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.023243	10	5	0.1.1.0	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.068407	18827	8782
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.204735	45418	7911
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	9.913652	6524	2728	0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.286367	22142	8351
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.010469	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.051849	50	5	11	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	40.077843	16563	9621
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.237119	19169	6351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.090044	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.047491	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.090612	22381	6417
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	40.131785	46875	4669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.061257	18050	6795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.116719	23676	9682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.144310	34053	7922
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.171320	22365	7598
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.682603	88735	6316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.062527	16720	8218
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.077973	27720	5158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.068568	19720	10066
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.196738	38281	6976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	16.674408	4468	2451	0.0.4.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.006587	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.109411	2	1	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.010987	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.019623	713	160	0.1.0.0.0.0.7	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: intros H; only 1: trivial; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.262452	46132	5920
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.011013	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.014107	2	2	0.0	synth with cache (only 1: unfold Pos.ltb; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.093541	32416	8615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.098270	21585	7052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.075235	21378	6857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.069724	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.090775	32628	7001
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.121982	26748	7486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	23.739127	15490	4245	0.0.0.0.0.0.0.1.0.3.3.0.1.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros H; only 1: apply testbit_false; only 1: rewrite div_small; only 1: apply Private_NZDiv.mod_0_l; only 1: order'; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: generalize (log2_nonneg a); only 1: order; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.715411	76058	4204
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	35.584210	11903	4641	0.1.0.0.0.1.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy; only 1: rewrite max_l; only 1: rewrite max_l; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.122109	15093	7686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	12.918380	3815	2018	0.0.0.1.2.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite Private_NZDiv.mul_mod_distr_l; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	0.053547	18	8	1.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: apply mod_always_pos; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.212551	5513	1799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.203979	36085	7245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.277401	36831	7540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.146309	22035	7268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.081253	26500	7897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.107343	40383	7939
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.149268	26013	9262
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.334103	49005	6623
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.084063	28148	9231
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.106716	22028	6146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	8.734045	4403	2230	0.0.2.1.0.0.0.1.0.1.1.1	synth with cache (only 1: intros Hn; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: exists 0; only 1: nzsimpl; only 1: easy; only 1: apply divide_abs_l; only 1: easy; only 1: intros; only 1: apply divide_abs_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	16.951441	12167	2908	4.1.0.2.0.1.0.6	synth with cache (only 1: intros AS; only 1: induct ltac:(m); only 1: nzsimpl; only 1: apply eq_le_incl; only 1: easy; only 1: intros m; only 1: nzsimpl; only 1: apply le_le_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.074232	20355	7882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.225788	28	20	2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	16.821672	8763	2523	0.0.1.0.1.0.0.0.0.4.0.3.0.1	synth with cache (only 1: intros IH; only 1: intros a; only 1: rewrite testbit_eqb; only 1: apply eq_true_iff_eq; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: f_equiv; only 1: rewrite pow_succ_r'; only 1: rewrite <- div_div; only 1: f_equiv; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.693009	147	101	0.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: apply le_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	23.616955	15865	3846	1.1.4.3.5.11	synth with cache (only 1: Nat.induct n; only 1: easy; only 1: intros IH; only 1: Nat.nzsimpl; only 1: intros _tmp_tactician2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	40.588395	24357	5354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.070520	19984	6152
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.078069	23635	8392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.117814	11080	4907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	3.585789	3830	750	4.8.4	synth with cache (only 1: intros H1; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.188340	55074	7332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.072888	21721	9133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.109831	22511	6366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	9.169564	2718	1059	0.0.8.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: nzsimpl'; only 1: rewrite add_simpl_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	2.278499	4494	604	0.0.0.0.0.1.0.0.0.0.0.15.0.39	synth with cache (only 1: simpl_relation; only 1: unfold natural_isomorphism; only 1: intuition; only 1: rewrite N1.recursion_0; only 1: easy; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.103205	17487	9637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.037818	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.174169	24974	7635
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.112505	39902	7825
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.008424	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.036844	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.013737	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.046046	11	5	4.0	synth with cache (only 1: unfold Pos.le; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.006966	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.010232	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.008497	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.058944	11592	4154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.080661	21016	8461
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.059017	19588	5580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.068917	19073	7056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	2.482481	705	575	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros A_wd; only 1: intros A0; only 1: intros AS; only 1: intros n; only 1: apply right_induction with 0; only 1: easy; only 1: easy; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.071026	9170	2549
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.377331	36042	6536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	40.071030	13698	7269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	23.023797	8768	3994	4.0.0.6.4.0.2	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: rewrite opp_involutive; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.083562	20477	7278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	29.922620	15739	6950	0.0.0.0.1.0.0.4.3.1.2.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: rewrite gcd_comm; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: easy; only 1: easy; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.113198	18555	2021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.171755	27666	6818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	24.415626	16626	5556	0.5.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: apply H; only 1: easy; only 1: rewrite testbit_neg_r; only 1: rewrite testbit_neg_r; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: intros Hn; only 1: intros m; only 1: rewrite <- H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.082928	19091	4052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.063513	19814	7263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.073204	20271	8781
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.206129	17611	8205
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.317932	36156	6107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.058290	18023	6755
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.138006	43347	9731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.073482	21589	7747
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	10.086905	896	211	0.0.0.0.1.0.0.0.8.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	0.614179	221	64	0.1.1.4.1	synth with cache (only 1: intros m; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.100771	19190	5436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	38.494084	18559	4997	0.3.3.1.5.0.6	synth with cache (only 1: intros n1; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite add_succ_l; only 1: f_equiv; only 1: rewrite <- add_opp_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.047885	10	8	2.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: apply add_pred_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.190525	28042	6884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.082076	28036	8577
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.106227	40285	9087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	2.736508	1991	367	0.0.0.0.5.10.1	synth with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite gcd_0_l; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: easy; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.093897	20513	6825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.072562	21043	5279
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.217245	96430	7962
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.072727	23523	6949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.082523	25714	9352
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.124829	52413	4566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	33.505333	7036	4872	0.1.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.086210	20937	8438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.068598	20645	6447
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.058198	19364	5025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.151965	61722	7303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.057277	10902	3775
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.368020	22027	6253
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.157419	26653	6842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.015239	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.097208	36699	6375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.082368	16154	8513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.142803	54656	6522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.094078	37046	6370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.116107	48339	7746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.079048	25362	7944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.089109	15171	9224
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.078713	21149	8037
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.289441	33344	7282
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.159738	21654	6760
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.014288	5	2	3.0	synth with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	5.502247	1814	917	0.0.0.3.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: rewrite shiftl_spec; only 1: easy; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.124064	53523	5231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.074468	25513	6290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.075334	23742	8557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	1.852798	510	174	0.1.0.4.0.1	synth with cache (only 1: intros Ha; only 1: nzsimpl'; only 1: easy; only 1: easy; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.087653	14760	5246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	1.322221	326	151	0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m; only 1: intros Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.057580	16127	5432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.099990	37490	7478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.118023	47768	7586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.104821	19546	10101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.129019	43809	8177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.181083	29	23	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.050527	13902	5988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.077162	22031	9641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.095224	34974	9316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.165292	68983	8725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.343604	701	356	0.1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.183548	77519	2950
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.015171	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	2.862683	1228	473	0.0.0.0.0.1.6.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: symmetry; only 1: apply div_unique_exact; only 1: easy; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.062196	15921	7114
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	40.065532	18331	7729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.081721	19356	6273
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.061023	19751	5598
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.475381	104	62	0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.110574	41377	8021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	2.135037	642	344	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: easy; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.245526	14380	4504
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.223650	26090	5060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.164026	33788	7794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	7.823982	2349	1555	0.1.0.0.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.059568	16285	8332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.040445	12157	6191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.032485	3	3	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.067980	20260	8412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.085643	27851	7860
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.062466	20010	7926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.083116	24733	9314
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.305891	97841	5326
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.004718	6	1	5	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.766913	377	121	1.0.0.4.0.1.0.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	3.248029	2396	571	5.0.0.0.0.1.1.2.0.3	synth with cache (only 1: intros _tmp_tactician0; only 1: apply divide_antisym; only 1: apply lcm_least; only 1: exists 0; only 1: nzsimpl; only 1: easy; only 1: exists 0; only 1: nzsimpl; only 1: easy; only 1: apply divide_lcm_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.226336	54884	6291
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.087797	26504	9015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.146618	15487	7047
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.211111	151	23	15	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	1.736288	654	331	0.0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: nzsimpl; only 1: easy; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.187968	367	140	1.0.2.0.0.1.1.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.073162	21442	10729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.082776	29380	7981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.096860	17172	3970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	15.757315	8200	2873	0.0.0.0.1.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: trivial; only 1: apply sub_le_mono_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.012179	8	3	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	9.737366	6683	2428	0.1.0.9.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.084562	28630	9101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.062095	17837	8452
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.060108	518	290	0.0.1.1.1.0.2	synth with cache (only 1: intros ?; only 1: intros y; only 1: intros z; only 1: intros Hxy; only 1: intros H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.586922	551	295	0.0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	38.226630	17874	7425	0.1.1.0.0.12.0	synth with cache (only 1: intros; only 1: destruct_max m; only 1: easy; only 1: rewrite lcm_comm; only 1: rewrite lcm_opp_l; only 1: rewrite lcm_comm; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.095129	33205	7532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.107769	39212	7873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	20.232705	24834	2769	0.0.3.35.8	synth with cache (only 1: intros L; only 1: unfold divide; only 1: exists 0; only 1: rewrite mul_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.107564	11294	4344
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.973598	142	101	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: rewrite mul_comm; only 1: trivial; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	9.560639	3802	1699	0.0.3.0.0.2.0.0.1.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.071988	22781	8722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	40.067993	13283	6501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.067285	10047	3600
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.103237	37424	4189
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.083339	29083	9185
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.066200	20583	6850
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.084622	11575	5422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.047026	14791	4435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	11.758979	3124	1670	0.0.2.3.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.257776	277	131	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.134329	53949	11125
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.365658	31366	6096
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.819013	1016	619	0.2.0.1.3	synth with cache (only 1: intros a; only 1: intros m; only 1: intros H1; only 1: apply NZQuot.div_pos; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	2.257956	4068	569	6.17.4.5	synth with cache (only 1: intros m; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	0.031381	9	6	1.0.0.1.0	synth with cache (only 1: intros n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.116567	41683	9494
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.103375	17921	7986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	40.054804	16390	6548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.038535	3	3	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	16.602653	4266	3260	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec; only 1: rewrite <- odd_spec; only 1: destruct (odd n); only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.051988	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.095593	32984	7340
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.046667	13199	5724
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	10.060940	2794	1570	0.0.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros p; only 1: intros Hn; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	2.505909	1016	474	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: split; only 1: easy; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.153068	22645	8079
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.791235	1153	470	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.011577	4	2	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.232492	44238	7490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.126139	11895	6249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	0.122857	35	13	0.0.1.2.0	synth with cache (only 1: intros n; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl'; only 1: easy; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	0.256453	31	15	0.0.0.0.0.2	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: nzsimpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	14.342058	5937	2116	1.0.2.0.1.2.1.0.1.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.175192	16869	5055
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.144774	17440	6806
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.080476	24531	11390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.066537	22685	5131
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.006938	2	2	0.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.096510	20295	6717
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	23.278205	44034	2692	0.1.0.0.0.3.4.9.2.0.0.18.19.1	synth with cache (only 1: destruct 1; only 1: apply Pos.eqb_eq; only 1: unfold Z.pred; only 1: destruct x; only 1: apply Pos.eqb_eq; only 1: simpl; only 1: tauto; only 1: rewrite Pos.eqb_eq; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.022255	3	3	0.0.0	synth with cache (only 1: intros n; only 1: intros x'; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.051270	13945	7609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.206924	92606	11599
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	1.040696	273	66	0.5.1.4	synth with cache (only 1: intros H; only 1: rewrite H; only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.082009	27024	8955
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.006879	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	39.698951	16792	7790	2.0.1.2.0.3.1.1.2	synth with cache (only 1: intros Hm; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_abs_r; only 1: apply divide_refl; only 1: intros p; only 1: intros H; only 1: apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	0.199363	28	20	1.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	0.619690	223	34	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.094549	33024	7531
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	0.795244	221	24	5.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.114582	47222	5532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.049918	14910	6905
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	6.250121	2481	108	0.55	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.017043	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.083138	24845	6776
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.007500	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.005452	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.014735	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.068805	20640	8266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	14.875799	6160	2704	0.0.2.3.3.5	synth with cache (only 1: intros H; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.043680	12658	6122
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	3.162933	1853	515	0.9.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	17.211547	4338	2140	0.0.1.0.0.0.0.0.4.0.1	synth with cache (only 1: intros p; only 1: intros m; only 1: intros n; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	5.848951	1952	864	0.0.0.0.5.0.3	synth with cache (only 1: intros a0; only 1: rewrite <- shiftl_opp_r; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.078415	24456	7403
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.189799	85486	10361
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.448566	78575	5212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.069472	18932	8490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.108470	39503	9217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.261936	21767	5085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.106363	23292	7500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.182201	81988	5224
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.055282	15073	6762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.076374	22579	8356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.077305	13047	6049
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.311511	16358	5711
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.403621	195445	6251
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.211788	46659	7789
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.067195	13	10	2.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	1.115970	470	207	0.0.0.0.0.0.5.0	synth with cache (only 1: intros until l; only 1: induction l as [| x l]; only 1: simpl; only 1: intros H; only 1: auto; only 1: intros; only 1: simpl in H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.148167	17617	6422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.071178	22070	9703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.064407	15225	6926
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.074844	6045	2000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.114224	19342	5920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	0.725824	152	62	0.0.1.1.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.049261	12819	6850
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	8.651154	2898	1530	0.0.0.3.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: apply add_mod_idemp_l; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	0.714020	141	58	0.0.2.0.0.2	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftl_spec_high'; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.153450	65245	10740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.036964	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.042572	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	5.908793	6855	1319	0.4.16	synth with cache (only 1: unfold not; only 1: red; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.012133	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.032428	26	7	3.4	synth with cache (only 1: intros A; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.008681	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.217772	14754	6065
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.177739	71612	9203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.075104	21426	6838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.087802	21834	6282
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.715831	300	70	0.0.0.7.4	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	1.917421	792	260	0.1.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: easy; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	4.938224	2084	1367	0.0.0.6.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.009639	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.077292	26076	9638
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003642	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.008596	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.006097	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.906618	620	180	2.1.6.0	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.717755	199	44	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.007966	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	39.533207	24509	10452	0.0.0.0.0.0.0.1.4.2.1	synth with cache (only 1: intros m; only 1: intros x; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: apply lt_le_trans with (m + p); only 1: apply add_lt_mono_l; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.264452	57381	3903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.063037	20261	5869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	5.003748	3646	804	1.1.2.1.3.0.0.0.5.5	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: apply lt_le_incl; only 1: apply lt_1_2; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.095563	30063	7365
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.673735	272	99	0.0.0.4.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	0.725276	280	126	0.0.0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_r; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.650478	211	95	0.3.2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite <- add_sub_assoc; only 1: apply add_move_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.032467	8	6	0.0.2.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite <- add_opp_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.114395	22	15	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	7.156630	7451	1641	0.0.0.2.1.2.0.0.7.0	synth with cache (only 1: intros n; only 1: intros y; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: apply gcd_greatest; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.066029	19938	6484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.078159	19026	7116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.094367	28701	7564
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.130069	48489	13948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	17.889217	11628	4055	0.4.0.0.0.0.0.1.0.1.2	synth with cache (only 1: intros H2; only 1: cases ltac:(m); only 1: intros H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m; only 1: intros H; only 1: rewrite pred_succ; only 1: apply lt_succ_r; only 1: apply le_succ_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.015923	4	4	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: intros y; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.012809	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.022954	6	3	1.1.1	synth with cache (only 1: hnf; only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.687310	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.539461	136	80	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.119365	9538	4699
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.385084	31629	7005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.071133	26410	6650
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	1.833932	1136	574	5.5.0	synth with cache (only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.159842	25477	6292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.662647	110	54	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.023427	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.027452	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.160236	64705	6725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.141036	53076	5560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.078201	17865	8392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.104963	27014	7474
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.136463	21957	7745
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.305696	93613	2548
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.180643	54406	7359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.059772	15546	6087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.059611	16590	6848
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.141379	52855	11293
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.075276	23681	9158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.172985	20128	7004
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.194410	84433	7725
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.023105	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.120288	44215	8083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	5.032449	1631	785	0.0.1.0.3.3	synth with cache (only 1: intros p; only 1: intros; only 1: rewrite (sub_lt_mono_r _ _ p); only 1: rewrite add_comm; only 1: rewrite add_simpl_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.153996	15768	6431
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.401532	177025	11260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	12.551515	3338	2021	0.3.3.2.0	synth with cache (only 1: intros n; only 1: intros; only 1: rewrite (add_le_mono_r _ _ p); only 1: rewrite H; only 1: auto using sub_add_le).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.006118	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.034679	7	7	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	3.596752	3587	949	0.0.0.4.0.4.1.5	synth with cache (only 1: intros x; only 1: intros P; only 1: intros y; only 1: intros f; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	4.730136	1655	890	0.1.0.0.1.4.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite (add_le_mono_r _ _ p); only 1: rewrite sub_simpl_r; only 1: rewrite (add_comm m p); only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	31.911113	19552	7532	0.3.0.3.0.2.0.1.1.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: generalize (gcd_divide_l n m); only 1: rewrite H; only 1: generalize (gcd_divide_l n m); only 1: rewrite H; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: easy; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.078570	6989	423
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.067255	18627	8220
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.446054	17754	1407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.116742	24402	7108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.048605	14333	5690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.076154	14620	7682
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.074347	20048	8778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.121680	46021	6952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	9.682383	5305	2371	0.1.1.1.0.2.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: easy; only 1: trivial using divide_refl; only 1: apply divide_mul_l; only 1: trivial using divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.071138	18776	7832
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.017326	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.147827	58309	19593
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	2.504134	1933	595	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n); only 1: rewrite le_lteq; only 1: intuition; only 1: split; only 1: easy; only 1: apply max_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.105866	14816	5634
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.366323	35759	7084
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.011022	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.085109	30922	10294
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.021648	7192	1570
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.039482	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.006338	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.069664	17	15	3.1.0.0	synth with cache (only 1: intros B; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.087366	30353	8297
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.051434	15729	5911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.054293	14426	7352
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	4.748419	4423	1294	0.0.0.1.0.0.6.3.5.0.0.19	synth with cache (only 1: split; only 1: intros n; only 1: intros m; only 1: apply (lt_irrefl n); only 1: easy; only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	3.373957	2298	863	0.0.0.0.0.0.0.0.2.2.0.2	synth with cache (only 1: intros B; only 1: intros C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.067152	22333	6019
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	28.723178	24297	6800	1.0.0.1.12.0.2.2	synth with cache (only 1: intros until x; only 1: intros s1; only 1: intros s2; only 1: intros H1; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.022717	4	4	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.151702	22009	6050
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	40.070877	24131	8768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.041620	11883	5956
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.295620	138479	9554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.087499	29600	6303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.167809	22157	6339
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.117909	44536	5266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.542744	235	61	8.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.024153	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.053994	21063	2137
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.058874	16603	10433
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.095747	19220	5330
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005356	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.051236	143	11	17	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.021768	38	4	10	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.022913	6	5	1.0.0.0.0	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	20.052809	8142	6074	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros R; only 1: intros Sym; only 1: intros f; only 1: intros Hf; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: red in Hf; only 1: red in Hf; only 1: red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.083200	27410	10752
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.889244	449881	13389
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.048809	8062	1617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.089696	29739	7926
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.608617	412	92	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.447466	44312	3438
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.817881	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.016666	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.016969	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.007917	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.012176	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.334915	107	51	3.2.0.0	synth with cache (only 1: reduce; only 1: unfold relation_equivalence in *; only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.101482	21554	5951
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.146738	63447	6761
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.005270	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.050444	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.021922	13	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	40.065530	15857	7964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.065927	18611	7823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.076877	24266	10989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.079304	25595	7446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.027491	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.149924	64476	2872
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.052804	6	6	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	6.618742	65986	1766	3.0.4.0.2.74.13	synth with cache (only 1: intros x; only 1: exists x; only 1: split; only 1: red; only 1: intros y; only 1: intros H'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.288321	111	18	0.0.0.12	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.124150	50914	7518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	40.083506	17425	9098
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.393471	43724	5508
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.142088	58647	9211
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.050696	24	12	4.0	synth with cache (only 1: apply eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.067705	18273	7092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.086242	31598	9450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.026149	4	4	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.050060	11	8	2.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.029558	5	4	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.134070	48	20	4.0	synth with cache (only 1: intros x; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.071123	20828	8351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	1.859151	537	250	0.0.1.2.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.099242	30041	8836
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.289434	141083	8024
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.387792	39605	6456
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.131376	42	25	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	33.498957	10108	3123	1.0.0.0.1.1.0.3.3	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.009274	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.008787	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.020985	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.006572	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.005311	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.014992	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.796236	229	139	0.2.1.1.0	synth with cache (only 1: split; only 1: rewrite (mul_comm r); only 1: rewrite (mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.345100	45136	7606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.068960	22599	10025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.067763	19857	7975
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	41.013412	527537	5804
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.008829	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	0.016517	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	5.632963	3948	1086	0.0.0.0.0.2.0.1.0.0.2.0.3	synth with cache (only 1: destruct p; only 1: intros H; only 1: exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.910167	188	133	0.0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_neg_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.590865	197	101	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.128108	35528	7077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.155752	15987	6002
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	41.467009	770202	7160
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.090018	6004	2086
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.170133	72796	11347
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.056135	16208	7297
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.586303	296232	9863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.086749	26177	9865
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.472507	48924	1665
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.316307	147424	16564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	20.397690	14080	4818	0.5.3.9.2	synth with cache (only 1: intros n; only 1: intros n'; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.033379	18	9	1.3.1	synth with cache (only 1: hnf; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.024448	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.057026	13	7	0.0.0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.040487	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.005044	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.058296	20832	7118
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.053043	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl in *; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.429156	204994	8622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	15.120873	4373	2528	0.0.6.1.1	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	3.175185	2624	874	0.4.1.2.1.0.0.1	synth with cache (only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: apply le_le_succ_r; only 1: apply sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.069984	19437	9147
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.066514	22217	5832
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.188544	79790	16068
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.328923	152329	10692
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.021104	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.435026	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.062105	20083	11975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	10.073653	10101	2405	0.0.0.6.4.6	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (lt_eq_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.079954	21	14	0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.061797	20882	5710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.067261	20139	8768
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.072291	22836	8655
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.227826	103346	14575
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	8.949392	23357	1849	0.32.2.2.4	synth with cache (only 1: intros z; only 1: intros H1; only 1: intros H2; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.090243	22137	8207
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.076477	25542	10530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.080953	25340	7247
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.135531	57036	6861
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.078054	25932	13343
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	1.763446	962	450	0.2.1.0.0.0.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.301739	23077	8519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.059722	17562	9957
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.269529	130646	9958
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.010007	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	10.030587	5068	2255	4.2.4.0.1	synth with cache (only 1: intros x; only 1: intros B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	1.003522	932	184	4.6.3.3	synth with cache (only 1: intros H1; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.150359	18658	6470
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.091375	72	22	1.0.2.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: intros H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.099404	22927	6703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.113408	10950	4972
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.263252	124190	5086
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	10.740979	118043	718
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.964763	1300	313	4.2.2.4.1.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intros z; only 1: discriminate; only 1: intros z; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.010733	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.083992	30901	8723
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.020692	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.009341	10	3	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.261756	120484	16094
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.005274	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	0.881814	604	213	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: split; only 1: split; only 1: split; only 1: intuition; only 1: split; only 1: split; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.011890	9	4	3.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.019992	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.009316	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.033524	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.007047	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.031393	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.005929	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.009308	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.016145	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.014662	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.007376	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.005479	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.009600	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.065408	21402	7636
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.108695	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.131709	47	26	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.010505	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.028708	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.012569	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.012163	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.005411	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.008286	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.006120	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.012221	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.008445	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.012628	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.015135	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.056396	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.013198	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.019445	14	3	4.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.121402	47780	9088
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.014184	17	4	3.1	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.204173	198	39	8.2	synth with cache (only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.216415	111	25	9.1	synth with cache (only 1: destr_bool; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.012064	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.022629	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.013812	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.057212	33	13	0.4.1.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.080179	26504	10287
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.012391	10	3	0.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.007960	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	2.311633	18050	607	1.49.27	synth with cache (only 1: intros H0; only 1: apply H0; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.598923	28787	2043
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.067252	111	19	8.1	synth with cache (only 1: intros R; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.096510	42150	6756
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.216254	9	7	1.0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: red in poe; only 1: red in poe; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	3.114870	4272	1253	1.0.1.0.1.0.1.0.0.0.1.1.1	synth with cache (only 1: intros A; only 1: intros y; only 1: destruct 1; only 1: red; only 1: split; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.458523	221947	13472
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	14.107036	5690	3509	0.1.0.0.0.0.1.0.0.1.0	synth with cache (only 1: intros b; only 1: intros C; only 1: intros x; only 1: intros H'0; only 1: red; only 1: intros x2; only 1: intros H'; only 1: induction H'; only 1: auto using Add_intro2 with sets; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.065709	19118	7575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.119530	39862	7696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.018661	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.079279	29106	8607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.073029	20127	9768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.028803	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.184432	77603	13105
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	40.027693	8478	4210
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.031233	7	6	0.0.0.0.0.1	synth with cache (only 1: intros y; only 1: intros X; only 1: intros z; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	40.052948	11736	3383
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.049769	17974	4553
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.014897	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.085696	10705	7148
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.094795	36496	10191
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	3.683475	2280	680	0.0.0.5.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.176757	76540	14005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	21.668400	10942	4466	0.2.0.0.1.1.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite (add_le_mono_r _ _ m); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.183222	81429	5896
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.210186	1121	540	0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: apply min_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.006275	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.097480	27628	9620
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.060046	45	13	0.7	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.007129	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.774571	2425	190	0.2.31	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	5.076667	77350	675
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.104444	37377	10453
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.014064	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.123079	36091	7628
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.240899	33829	7725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	2.141633	899	333	1.0.1.0.0.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl'; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.175290	81230	17789
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.240844	110236	9857
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.265937	20245	6825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.150708	32440	5890
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.332780	162901	6235
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.079493	24227	7953
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.025370	4	4	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.112205	41806	11751
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.187825	85769	16653
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.196409	260	54	0.5.3.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p; only 1: destruct q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.154484	100	50	1.0.1.0.0.1	synth with cache (only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.376320	417	109	2.0.3.8	synth with cache (only 1: intros x; only 1: intros H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.028158	6	6	0.0.0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intros until b; only 1: destruct b as (a1, a2, _tmp_tactician0); only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.073186	23210	10472
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.403148	95543	4585
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	40.153694	67457	17736
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.012443	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.699180	637	62	0.16.9	synth with cache (only 1: intros H0; only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.053143	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.130020	54215	13982
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.134159	56386	14433
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.063564	18226	9380
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.052248	17	11	2.0.0.0	synth with cache (only 1: intros ?; only 1: intros A; only 1: intros a; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	40.189910	86075	12605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.076519	27756	7225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.071935	25866	8232
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	3.386847	2689	1053	1.2.3.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: red; only 1: intros H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.044057	28	10	1.3.1	synth with cache (only 1: intros B; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.131145	78	36	1.4.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: destruct 1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	4.213209	3271	1346	3.1.0.1.4.1	synth with cache (only 1: intros ?; only 1: intros z; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.017091	4	4	0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.055483	15770	7678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.080680	29331	7749
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.149387	62512	13523
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.999202	1206	303	0.0.0.7.0.0.1	synth with cache (only 1: intros ?; only 1: red; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros C; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.077448	26678	9666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.133805	15865	3736
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.014102	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.011948	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.003234	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.355937	773	120	0.0.0.0.2.14.2	synth with cache (only 1: intros until n; only 1: intros H; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.287438	419	225	0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	40.058346	10130	6711
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.430835	42598	8604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	36.889909	21197	7270	0.0.0.12.0.5.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: f_equiv; only 1: apply even_add_mul_even; only 1: apply even_spec; only 1: apply even_2).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	8.279737	12088	2805	0.0.0.0.0.0.7.0.0.0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intros y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.010474	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.188003	83660	11418
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.111392	42027	9249
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	14.642710	28957	4852	2.31.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.107506	41469	10471
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.023151	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.864741	298	157	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x xs]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.005940	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.226656	236	105	1.2.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.022722	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.278577	116990	15118
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	18.227005	38886	7732	1.4.0.0.1.3.0.11.1	synth with cache (only 1: intros z; only 1: intros H2; only 1: intros B; only 1: intros _tmp_tactician0; only 1: intros C; only 1: destruct H2; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.013709	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.978061	508200	9853
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	6.963027	6398	1652	2.0.0.0.0.0.0.2.0.1.2.0.0.0	synth with cache (only 1: intros A; only 1: intros eq_dec; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.010423	59	19	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.032747	196	95	0.0.1.0.0.0.1	synth with cache (only 1: intros C; only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.321769	18921	4177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.060626	17818	7433
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.087287	30385	11360
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.308323	142674	11135
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.133373	36798	6287
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.434224	34931	7461
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.338863	581	51	4.4.21	synth with cache (only 1: exists f; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	13.850003	41828	4125	4.53	synth with cache (only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.071094	56	10	3.5	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	10.915383	34383	4522	0.1.2.12.30	synth with cache (only 1: intros H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.153827	67321	11025
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.733540	1216	297	0.1.2.7	synth with cache (only 1: intros x; only 1: intros z; only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.461870	235261	5573
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	11.326742	7584	2980	12.0.2.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros A; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.076335	48	18	0.0.0.0.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.137716	56874	12784
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	4.927722	6044	1060	0.0.6.8.1.6.4.2.1.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intros ?; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.068693	22219	11260
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.175391	78047	13089
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.325558	138539	5658
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	27.169905	17136	3973	1.0.1.0.0.2.7.7.2	synth with cache (only 1: rewrite <- le_succ_l; only 1: unfold le; only 1: case compare_spec; only 1: easy; only 1: intros; only 1: easy; only 1: rewrite lt_succ_r; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.008448	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	0.204505	48	21	1.0.0.0.1	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	40.104181	39590	18269
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.076894	26742	9505
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.014895	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.093950	37745	6959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.064833	19997	7866
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	2.313424	1367	488	0.0.1.0.1.3.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.057516	17075	8549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.093490	34402	6643
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.449779	109	57	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	41.620127	853060	8315
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	3.846077	1629	691	0.0.0.2.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	2.866352	22771	952	0.0.3.67.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 ?]; only 1: destruct _tmp_tactician2 as (x, Hx); only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.023893	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.027859	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.290470	139313	15919
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.094477	27255	6695
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.049305	17787	3753
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.187252	83702	13154
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.370575	178944	11792
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	5.242656	9483	4336	1.2.0.0.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.074513	25387	9103
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.717648	3148	856	2.2.1.8.9	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.013956	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.541825	257	76	0.0.0.5.2	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: apply min_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.036071	14	3	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.035379	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.078069	15	8	0.4.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.200173	91157	15090
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	40.518007	244303	43848
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.359042	83182	3903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.117013	23491	7636
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.444373	540	95	0.0.2.0.0.2.6.2	synth with cache (only 1: split; only 1: split; only 1: intros z; only 1: destruct (H z); only 1: auto; only 1: intros z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.013510	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	0.016274	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	0.053192	5	3	0.0.2	synth with cache (only 1: destruct b3; only 1: by case b1; case b2; constructor => //; case; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.280492	58845	6808
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	0.192508	11	4	0.0.5	synth with cache (only 1: destruct b5; only 1: by case b1; case b2; case b3; case b4; constructor; try by case; only 1: by case b1; case b2; case b3; case b4; constructor; try by case).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.095115	35023	14063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.095815	13468	6165
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.245750	27004	8291
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.013958	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.003570	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.032248	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.003060	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.003301	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.010685	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.011134	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.025157	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.013450	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.023711	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.010278	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.010053	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.008975	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.010294	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.019033	17	2	8	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.005443	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.006123	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.008810	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.009426	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.008906	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.012293	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.027995	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.012999	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.015920	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.010355	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.016489	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.008603	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.207140	96953	13833
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.011876	6	3	0.2.1	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.072507	20610	9711
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.094545	23	14	0.0.0.0.3	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: rewrite ltb_lt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.017406	5	4	0.0.0.1	synth with cache (only 1: rewrite ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	3.920246	8172	726	12.19.14.15	synth with cache (only 1: intros Hx''; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	1.676740	893	342	0.1.0.0.7.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.117548	254	21	3.18	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.015018	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.066801	22239	7442
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.232305	105593	9592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.073179	25238	5633
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.128164	52142	12905
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.491794	552	83	2.14.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.422006	203046	10523
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.184774	24698	6633
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.239516	104400	6986
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	40.394687	18100	5376
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.009843	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.005586	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	27.890695	42618	8619	3.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: intros H; only 1: apply clos_rt1n_rt; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.115408	48866	5590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.055679	18083	5950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.087428	33428	10145
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	2.797572	1188	430	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.101993	38063	6058
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.057185	13	10	0.0.2.0	synth with cache (only 1: unfold lt; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.026400	5	4	0.0.0.1	synth with cache (only 1: apply not_iff_compat; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.194797	24505	6761
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	10.203899	4979	1730	1.4.1.7	synth with cache (only 1: intros x0; only 1: intros until l; only 1: rewrite filter_map; only 1: apply ext_in_map).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.320638	147135	25229
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.979047	509129	4865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.066801	24070	5468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.052578	15791	6255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.099450	9817	6836
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	0.791923	1450	269	1.1.4.3.2.3.2	synth with cache (only 1: intros until n; only 1: induction n; only 1: auto; only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.434694	217789	11909
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.174308	75195	23676
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	1.429254	1922	861	0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	0.957851	255	149	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite land_spec; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.087570	30689	7142
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.136110	53676	13722
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	40.235854	101064	23798
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.005858	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.005971	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.007828	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.248494	199	87	0.2.1.0.1.0.0	synth with cache (only 1: intros A; only 1: intros ?; only 1: intros B; only 1: intros C; only 1: intros h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.043213	99	19	0.6.2	synth with cache (only 1: intros h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.008602	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.011878	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.017530	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.009652	3	3	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.008274	3	3	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.014687	3	3	0.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.036244	33	9	0.0.5	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.098407	13686	5956
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	13.748208	10636	5708	0.0.0.0.1.0.1.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.526987	5379	1127
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.076740	27114	8189
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.619973	505	106	0.11.1.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.046974	12707	5923
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.083685	29764	7401
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.045576	6	5	0.0.0.1.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	0.103497	30	18	0.0.0.0.1.2	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_succ_succ; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.021060	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.035756	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: intros x; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.117872	40939	6913
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.186858	78728	10903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.077648	24793	8424
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.167959	75070	16538
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.212773	98552	11600
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.059057	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.459894	219501	11273
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.168224	20685	8730
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.004014	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.020245	8	2	0.6	synth with cache (only 1: intros x0; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.007726	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011188	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.284346	172	21	17	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.014265	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	0.375547	149	17	0.16	synth with cache (only 1: intros _tmp_tactician0; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.730000	366278	3298
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.159689	66269	12263
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.009802	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.045987	12068	5175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.068710	19794	9404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.092721	33532	9487
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.063508	20752	6703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	1.046111	1131	104	1.0.0.5.0.32	synth with cache (only 1: apply add_move_0_r; only 1: nzsimpl'; only 1: unfold lnot; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.008927	3	1	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.069052	23177	7236
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.567884	163	75	0.3.0.0.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	0.170881	51	23	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_true_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	0.035679	8	5	0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	1.946618	1084	337	0.0.5.1.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite lnot_spec; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	0.483650	116	63	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite lnot_spec; only 1: rewrite orb_negb_r; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.227621	12676	5777
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.933792	361	72	1.0.0.0.10.0	synth with cache (only 1: split; only 1: intros H; only 1: apply lt_eq_cases; only 1: right; only 1: easy; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.206149	37562	7534
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.179336	29245	7677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.048600	15400	5460
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.103780	42180	5812
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.034677	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.012164	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.061783	11500	6713
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.048127	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.065275	21010	7452
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	1.190294	310	152	0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.210416	94659	19564
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.084470	26272	9261
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.211370	14232	7853
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.159651	68226	12423
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	40.286338	138212	17998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.052953	14069	5698
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	40.199654	32766	7415
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.450946	214833	5958
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.040073	6	6	0.0.0.0.0.0	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as []; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	1.055588	934	113	0.0.0.0.15.5	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.535702	219	76	1.0.0.0.1.4	synth with cache (only 1: intros until l; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.067147	21513	6982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.026600	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.323911	29813	8186
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	40.062601	19955	8123
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.017817	3	3	0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.410891	194910	8642
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.070969	22076	7335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.875272	422	127	0.0.4.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.434667	767686	5495
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.202362	41955	7506
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.017095	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.199513	88951	3135
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.026550	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.102746	37013	11319
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.244558	104889	4988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.063763	20861	6962
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.166199	19278	6823
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.032310	4	4	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.046389	8	6	0.2.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (r, Hr); only 1: exists r; only 1: apply sub_mask_pos_iff; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.053946	14391	7734
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.094231	26781	9094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.106061	39123	6939
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.061443	18135	6850
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	17.482723	15221	3064	1.0.1.0.4.2.6.0.4.3	synth with cache (only 1: intros ?; only 1: induction n; only 1: intros _tmp_tactician0; only 1: easy; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as []; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.087402	30484	7052
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	28.392739	18638	6057	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Lef; only 1: intros x; only 1: intros y; only 1: destruct (max_spec x y) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f x <= f y); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f y <= f x); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.073942	20467	6439
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.020809	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.182584	28456	8414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.071451	26566	4769
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.114863	31748	7693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.081197	11993	7611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.101172	34922	7376
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.558625	1094	375	0.3.0.0.6	synth with cache (only 1: intros until n; only 1: intros Hl; only 1: intros Compat; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.018626	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.078869	24950	9460
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.229987	668930	7056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.082803	27838	7450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.060751	18865	7416
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.230709	99160	3786
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.198835	34674	7862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.074984	24559	8501
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.042995	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.193644	32	17	0.0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.334008	20112	7141
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.085784	28869	7460
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.057484	16716	6560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	1.382277	644	252	0.0.8.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.177224	74509	4069
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.066746	19074	7180
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.188783	30582	7842
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	16.276365	8883	3125	0.2.4.0.0.0.0.1.0.1	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H'; only 1: unfold max; only 1: case compare_spec; only 1: easy; only 1: auto; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.071225	23155	4666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	7.389400	4002	1536	0.0.0.2.1.1.3.0.0.0	synth with cache (only 1: intros a; only 1: unfold lnot; only 1: rewrite <- opp_succ; only 1: rewrite lt_nge; only 1: rewrite opp_nonneg_nonpos; only 1: rewrite le_succ_l; only 1: split; only 1: order; only 1: intros Ha; only 1: order_pos).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.368599	27208	6131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.083277	13561	6454
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.405654	43792	7263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.057510	15428	5728
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	40.172786	55103	6250
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.116497	47236	6953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.058315	17325	6311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.060341	16502	7194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.061586	17193	7994
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.266559	28981	7902
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.113940	43811	8312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.063453	17351	9016
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.041018	12266	4949
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.096817	32218	9429
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.100674	38809	6881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.057865	15402	7724
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.243984	39042	7012
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.149124	37960	7887
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	7.787891	4477	1351	0.0.3.0.3.1.5.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: inversion_clear 1; only 1: intuition; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.009637	3	2	1.0	synth with cache (only 1: unfold Pos.gt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.072929	22497	8720
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	0.336285	389	40	1.0.0.0.22	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	24.720030	12095	4159	5.1.0.0.5.1.1	synth with cache (only 1: intros a; only 1: intros m; only 1: rewrite lt_nge; only 1: rewrite ldiff_land; only 1: rewrite land_nonneg; only 1: rewrite lnot_nonneg; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.056530	15317	6016
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	16.260040	12872	2622	0.0.0.0.0.1.0.0.2.8.1.0.3.2.0.0.10	synth with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: simpl; only 1: intros; only 1: firstorder; only 1: simpl; only 1: intros Ha; only 1: firstorder; only 1: left; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.062288	17520	7465
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.216095	26641	7543
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.205811	36347	4836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.064533	20217	7049
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	29.296231	25567	5094	2.0.0.2.0.0.1.12.6	synth with cache (only 1: intros l; only 1: induction l; only 1: intros; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.145530	41052	5683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.070051	21475	7134
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.187554	27010	4941
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.262631	39323	9218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.093942	33777	6601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.066279	20303	6181
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.151486	68609	7642
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.081577	28751	7777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.060094	14639	6301
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.354604	32486	6821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.071868	26867	7920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.117828	53942	6877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.049133	18370	6784
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.103225	41470	6759
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.072476	25977	8597
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.311984	27782	3500
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.381088	66282	8821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.118027	53054	8152
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.118919	53782	9864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.048847	17600	7104
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.107939	51626	9520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.053061	23448	7452
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.069538	28362	10535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.050054	20456	8419
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.060683	24508	9970
