coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.017629	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.043006	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.726225	427	177	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	0.469546	177	48	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.079687	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.072828	27679	7303
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.075037	30269	2579
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.057446	25065	6339
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.065455	26361	4292
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.053369	19314	4118
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	8.682749	4416	394	5.14.6.35	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.051756	20040	3999
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.049255	18565	2968
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.031385	8416	3866
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.536885	120	52	0.0.1.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.166889	76825	6928
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.052908	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	0.173057	99	27	0.8.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.047492	17565	5557
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.202411	37705	4448
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.625362	1651	149	11.3.11	synth with cache (only 1: intro H; only 1: unfold Rdiv; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.057316	19601	5927
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.111270	47406	6782
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.089865	36129	5725
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.067226	26268	4642
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.109041	52339	4972
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.085994	35653	4843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.039372	12729	3955
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.053142	21442	4419
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.066638	26031	4135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.048222	15906	3616
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.038933	14049	3365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.031862	9760	3579
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.182600	90938	5007
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.118621	7447	2563
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.044748	16505	3433
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	14.330597	2035	870	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.035773	10649	4341
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.057722	23634	2855
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.030520	9517	2866
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.034171	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.066047	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.040186	15471	1548
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.063919	24676	6208
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.069460	26303	5324
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.073328	30127	5987
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.039042	15379	2591
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.085216	33544	6263
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.029127	8550	4129
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.066248	24825	5192
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.054159	18069	4468
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.064065	21993	4775
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.056175	18846	4967
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.058081	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.028430	10052	5451
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.067851	26162	5144
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.083435	34942	5210
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.044851	15144	4354
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.049564	16088	5202
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.066377	25815	4284
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.049426	17801	3762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.067790	27092	3287
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.038668	12047	3453
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.038915	12647	3411
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.070169	29611	3054
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.073697	25777	5378
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.053972	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.052482	21321	2288
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.034926	11739	2963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.036560	12048	3520
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.024313	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.074512	29979	6012
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.098803	42250	5634
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.015870	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.233555	118737	3218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.069080	14844	3552
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	6.113724	3295	396	0.9.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intros x; only 1: intros (?, ?); only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	40.119466	53025	6641
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	37.598595	11751	900	1.0.1.0.27.0.11	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: repeat red; only 1: symmetry; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.088068	36392	5752
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.062025	25293	4619
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.060872	23083	4957
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.104952	46241	5314
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.040089	11584	4756
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.057488	24567	4633
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.079800	31934	3846
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.048319	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	11.770201	8305	1462	1.0.2.0.1.1.0.1.2.0.1.2.6.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: exists (x - IZR k0 * y); only 1: elim H; only 1: elim H; only 1: simpl; only 1: intros; only 1: exists a; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.067211	25886	4836
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	2.630832	702	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.053758	21443	5022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.059617	22623	3156
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.044095	14297	3847
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.047705	15762	3912
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.078494	28339	3974
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.057233	22675	2926
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.037470	11905	3338
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.041386	15394	3133
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.103405	43164	4878
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.064286	22471	4262
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.048841	17806	2306
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.045110	16909	3203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.093860	36801	6238
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.089474	35330	4429
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.015865	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.034258	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	0.061547	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.070256	28500	5758
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.062323	20117	5321
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.033577	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.579811	30098	2606
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.110044	46626	5553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.046673	16153	3563
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	2.332033	188	101	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.048935	14286	2808
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.149246	69260	6432
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.064577	22655	5701
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.087098	37691	6768
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.050945	11026	2545
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.086049	33684	6225
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.077372	29709	3372
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.042092	12074	4257
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.064592	26849	5742
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.041022	11428	4334
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.078210	32443	4418
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.066221	25212	4276
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.048421	19198	3039
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.048080	7	3	0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.069239	25379	3068
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.082942	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.068169	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.052657	17567	3889
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.043733	14077	3636
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	4.319083	2904	404	3.0.14.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.031537	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.200843	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.007147	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.042021	14575	3106
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.072232	30193	3349
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.120680	47776	4354
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.014656	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.042043	7	2	5.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.096749	42689	3063
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.046177	10796	2140
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.071344	26988	3400
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.032035	9244	3443
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.068243	26414	4362
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.054090	10352	1687
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.074719	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	4.458236	8934	829	0.0.22.0.0.0.12.10.53	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.104486	44988	4342
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.096158	38629	5977
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.261409	205	37	4.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.047498	21	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.074043	27804	5168
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.140581	61111	5062
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	2.653753	1690	393	8.4.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005160	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.066063	23512	5732
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.048008	20473	3108
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.078269	30289	7537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.059935	21	7	0.5.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.046854	15284	4786
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.047410	16108	5360
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	12.646338	5182	1732	4.0.0.0.0.1.6	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	8.617690	9257	1281	1.0.8.0.9.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.034249	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.055972	19915	5706
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.071636	25377	5041
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	1.168649	276	135	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.036236	12706	3940
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	2.326499	707	245	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.049137	20404	4209
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.090692	29652	6410
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	41.077092	39057	2052
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.395192	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.046842	16595	4035
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.875151	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.054544	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H'; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.383620	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.038888	12318	3550
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.072547	21131	7987
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.688757	101468	2632
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.089928	37379	4038
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.014299	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.101825	48265	3695
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.035139	11556	3179
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.033628	9025	3651
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.064607	25407	3702
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.070383	25165	5139
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.115120	49930	4557
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.046739	18628	2724
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.075754	27756	5777
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.077786	30955	3705
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.046837	14323	5744
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.100919	46032	4239
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.075736	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.070080	26798	5440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.051486	18664	5028
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.091056	37476	4221
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.123396	25973	4207
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.102222	40928	5025
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.041724	11842	5076
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.142053	15765	1747
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.068355	26944	4527
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.103056	43082	5945
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.149162	39	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.198897	54	22	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.013197	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.025556	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.013919	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.168305	85	30	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.040968	11625	3529
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.081887	29917	7657
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.034431	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.067190	26716	3653
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.086633	23094	6543
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.070736	21993	6872
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.032296	12485	1360
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.105731	47126	4405
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.045631	16816	3868
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.181558	84927	4583
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.050430	17651	3604
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.078364	30902	5924
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.058985	21040	3409
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.189160	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.241185	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.045892	11355	2704
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.052128	16641	6335
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.106751	41875	6284
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.021743	6866	924
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.097364	40417	4781
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.048552	15052	4823
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.053242	17633	5147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.055057	10834	1843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.310832	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.949320	690	121	2.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.053289	15158	4601
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.079511	34682	5840
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.068644	24632	4498
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.047073	13858	5773
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.048892	13938	5285
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.041938	12103	4607
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.058769	16727	1550
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.121453	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.076529	29608	3846
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.076148	29636	3742
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.026040	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.146511	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.065552	25876	4646
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.024233	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.006821	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.136348	63134	4400
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.443562	1182	187	7.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.027054	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.449784	134	42	4.4.0	synth with cache (only 1: intros H1; only 1: intro; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.061448	21846	3329
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	6.572165	3540	815	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.066125	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.068386	20876	8553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.120414	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.051112	18452	3174
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.062705	18094	7069
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	8.874023	10665	1330	10.1.1.4.9.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.092320	39667	3883
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.083167	29121	6715
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	19.370080	23454	2877	7.10.9.12	synth with cache (only 1: intros x y H; only 1: intro abs; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.934604	656	85	5.12	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.022362	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.083282	31552	4051
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.044625	16660	3859
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.159216	72843	3412
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.102572	21123	3055
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.196588	41725	4613
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.046662	14436	3825
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.046021	14891	3894
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.047199	22584	1703
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.089440	33879	5764
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	0.306209	51	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.019880	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.048600	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.031508	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.092210	37773	4578
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.609354	124	70	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.068230	24454	4771
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.063599	24570	4294
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.060909	25923	6700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	43.950436	8627	1498
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	23.655152	29574	3831	21.18.1	synth with cache (only 1: intros; only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.066205	24985	6022
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.061025	18967	5236
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.059896	20973	4381
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.075542	28432	5652
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.512099	20588	2310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.097219	41943	3698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.007378	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.108772	45088	4872
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.056241	18077	4005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.136170	55075	6465
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.037916	11073	3098
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.062875	20363	5476
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.055024	19523	2273
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.097987	5	4	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.187491	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.048067	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.072028	28365	2448
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.060948	12772	3359
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.062104	21809	2498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.280647	138585	4484
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.053650	21079	3392
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.039224	12316	2794
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.053757	19080	3517
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.093407	20495	1623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.109147	44401	3952
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.065891	25720	3220
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.089304	37840	2793
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.066484	24878	4402
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.053181	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.023633	15	3	7	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.083449	30181	5314
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.148694	68029	5229
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	19.318218	8421	2223	1.2.12.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.079279	29692	5389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.096417	41787	4922
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.066488	21563	5206
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.060676	22913	4020
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.247117	120232	5942
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.053504	19150	5134
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.559280	56554	3110
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.047649	15313	1783
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.181882	87253	2753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.061229	18810	6109
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.035142	10458	3398
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.111779	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.066372	22236	7579
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	25.776034	12738	3348	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.048557	18531	3004
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.083399	48	14	1.4.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.906192	366	106	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.072081	23560	4478
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.048960	12437	4984
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.079523	30983	3124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.041062	17198	1794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.768684	293	91	0.10.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.096539	40818	3206
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.051021	16863	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.043517	16536	3825
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.276701	132512	11186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.112573	52334	2841
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.047086	15909	4678
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.092189	40584	4323
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.043446	14610	3389
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.115784	49784	5302
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.485410	2717	248	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.111821	53254	2818
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.112926	44602	6459
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.074785	31713	3506
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.397644	28402	4428
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.060156	16803	6366
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	2.497023	3579	392	3.14.4.6	synth with cache (only 1: intro H; only 1: inversion 1; only 1: generalize dependent n; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.049504	19007	5238
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.058393	19980	5259
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.068972	26604	5115
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.045990	15691	4004
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.043574	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.442143	12789	2420
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.067047	25064	5129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.046403	14708	2754
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.102182	46998	2658
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.589426	408	74	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.051759	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.032078	8080	2738
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.030598	8492	3953
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.074805	22975	8557
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.079734	26862	8347
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.040599	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.117573	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.015647	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.055949	17274	2796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.059220	20621	4051
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.063678	5516	1207
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.062028	23400	3015
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.047776	15159	3045
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.033525	10270	2676
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.032784	10079	3257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	43.092356	37456	1751
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.019127	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.077580	30100	4908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.093353	41078	2748
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	18.814513	13655	1016	14.0.0.18.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.064324	22658	3971
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.113594	44700	3619
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.064022	28234	2291
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.041405	13473	5827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.041468	12021	5146
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.055862	20986	3836
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.086090	35697	5679
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.054143	11	6	0.0.1.0.0	synth with cache (only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.077901	31307	3869
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.045522	14408	5440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	42.448800	11082	1376
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.085332	32694	5019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.046422	17753	2037
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.082606	28351	5561
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	36.868347	37612	4349	2.1.1.0.14.2.4.1.0.21	synth with cache (only 1: induction l; only 1: intros; only 1: split; only 1: simpl; only 1: intros b s2'; only 1: rewrite IHl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.069970	24712	3892
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.066258	21859	6037
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.030929	8790	3437
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.070563	27975	2885
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.100939	23687	3403
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.020620	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.063576	21407	6155
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.066257	21348	7103
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.109685	41521	3961
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	8.924241	9878	924	0.0.0.3.1.1.0.0.2.22.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: intros; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.017463	3954	371
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.270119	29896	3610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.050461	15213	3753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.038578	14627	3352
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.087591	33669	3989
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.092540	41103	4908
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.067297	23791	5380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.073329	26731	4301
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.183219	92442	2532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.052151	16925	3942
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.073762	30900	3991
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.147509	66647	6116
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.014217	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	20.326631	13724	3503	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.077115	30419	4512
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.046795	16679	4517
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.110992	43313	5281
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.115581	11799	2159
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.107396	48787	5170
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.134904	62200	7060
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.118334	46401	3572
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.040260	10110	2543
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.078109	29277	4943
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.083500	22712	4359
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	40.033798	10028	3785
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.092021	38066	435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	23.214441	40799	1919	14.5.56.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.017700	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.287545	144764	1421
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.110203	48312	2585
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	1.712206	3203	169	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.069289	25543	5094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	9.904904	10536	1609	4.0.7.2.10.1	synth with cache (only 1: intros; only 1: intro H15; only 1: intros z0 H7; only 1: unfold intersection_domain; only 1: intro Hyp_F_NE; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.649321	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.074332	14	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.020382	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.015496	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.017696	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.084880	32934	3106
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.102653	42022	4522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.070887	25490	4909
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.010160	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.068981	25028	4016
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.879860	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.037204	10597	4334
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	11.077394	3627	1085	0.6.0.0.3.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: generalize H, H0; only 1: clear H0; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.072410	26042	4345
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.036485	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.068851	26124	3548
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.038566	13080	2879
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.034177	8851	3110
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.060036	25766	4962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.147511	62138	6153
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.181718	83887	3588
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.043085	15577	3555
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.082331	25517	8086
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.055609	22080	3548
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.086977	30668	5329
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.155725	68300	5038
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.112547	43912	5732
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	35.867360	45004	3136	0.0.0.0.1.0.10.2.10.26.2	synth with cache (only 1: intros; only 1: destruct x; only 1: auto with zarith; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	30.526942	10432	4343	0.0.0.0.1.0.0.3.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: assert ([|b|] > 0) by lia; only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.225711	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.073760	26759	1584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.053295	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.686142	58	25	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.033449	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.662712	116	44	0.1.2.0.6	synth with cache (only 1: intuition; only 1: generalize (F.equal_iff s1 s2); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.161839	75699	2805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.503494	39	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.469782	18	5	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.047562	9809	3168
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.088939	35927	5675
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.122088	26	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.045588	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.018905	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.479152	16	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.075130	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.030006	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.093898	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.056670	19163	2770
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.196942	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.070657	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.409070	19	11	0.6	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.408089	46	8	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.216114	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.103764	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.401764	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.296925	5	3	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.101693	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.132302	7	5	1.0.1.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: fsetdec; only 1: do 2 rewrite F.union_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.071770	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.109370	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.108608	40419	4742
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.072499	26871	3895
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.489144	30	9	3.2	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.238571	17	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.531319	20	8	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.066366	25314	2608
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.023549	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.028068	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.096092	39239	5478
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.074983	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.080757	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.074606	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.099319	42390	4541
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.367115	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.088556	39777	2336
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.584016	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.348518	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.760927	18716	1138
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.140930	27573	4343
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.062330	22243	3779
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.090800	14394	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.041529	15582	2662
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.074226	25756	5413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.039096	14241	1848
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.037556	12016	2975
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.074551	31290	2439
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.630117	17079	3103
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.948584	344	95	3.0.0.0.2.0.4	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.028042	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.008887	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	10.435809	1060	231	7.0.7.0	synth with cache (only 1: expAdd; only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.124103	49242	5093
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.041560	10977	4346
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.105614	43180	6658
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.063170	22548	3046
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.037002	9695	5289
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.024296	4050	977
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	6.662301	13124	578	6.0.13.18.0.80	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.484689	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.010113	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.385091	69	12	8.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.698323	68	53	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.107123	47418	5513
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.620479	1285	245	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	11.226977	53981	481	281	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.096783	42326	1962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.079175	30925	5288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.184004	85081	4799
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.103641	41297	4343
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.126216	53504	4103
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.083230	34683	5791
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.049962	4262	815
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.052072	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.066585	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.093365	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.540256	22	6	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.043122	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.071843	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.060253	19552	2141
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.038292	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.169958	24	7	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.062081	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.022130	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.034913	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.053434	7729	1094
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.515420	53	16	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.116105	47982	5477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.129379	57668	2398
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.268220	131434	4309
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	20.592924	2694	2033	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.018498	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.009114	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.134651	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.068511	23950	4011
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.060463	4557	1053
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.091004	33618	4668
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.080290	31947	2859
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.073058	20952	3353
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.046375	16068	3041
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.076248	28191	3997
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.120382	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.045248	15097	2906
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.059534	17362	3880
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.131111	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.134917	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.255708	115597	4132
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.130770	31207	2338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.025410	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.033769	9239	3941
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.080883	31365	5273
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.011345	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.088054	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.091085	36640	5138
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.578077	44	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.081224	29137	4034
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.029273	2193	492
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	3.405980	3081	422	0.26	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.488789	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.114947	47746	3113
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.081519	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.204129	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	2.329359	1780	234	3.17	synth with cache (only 1: intros n A f x; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.110419	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.076244	29903	2240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.110513	44072	5491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.060975	24868	3308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.065445	21219	5630
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.068359	9128	1627
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.098917	42073	3143
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.054789	17095	3623
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	5.590285	6298	539	1.1.0.30	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.154791	65222	7302
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.010304	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.011072	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.007994	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.011810	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.012188	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.019523	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.110854	43328	5837
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.011937	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.261475	129865	5251
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.048373	15691	4028
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	1.962866	556	209	1.2.0.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.060263	23482	700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.052903	8228	2248
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.766657	846	91	1.6.18	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.018006	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.346833	166441	3138
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.016780	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	25.203428	13932	1672	1.44	synth with cache (only 1: intros x y Hin; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	7.673063	3607	331	1.5.11.15	synth with cache (only 1: intro; only 1: intuition eauto  4 with real; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.688647	525	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.783968	181	63	3.0.0.3	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.933826	894	318	2.8.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.064487	20	8	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.031783	8781	3239
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.125714	53845	3828
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.203746	329	155	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.165351	73430	5804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.026894	8443	2337
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.117115	37541	4857
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.906949	1491	189	19.15	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.231044	105667	1607
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.080763	26558	7219
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.085167	24568	2092
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.101080	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.067935	96	13	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.049374	16196	2553
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.043472	12464	4378
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.101209	42498	4238
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.020531	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	7.207066	1508	557	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.083076	32841	5052
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.100955	46565	2854
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.043368	16832	971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.116389	39313	3434
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.113211	51284	8020
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	7.170815	4806	805	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.118271	48315	3643
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	8.628162	10762	1408	1.1.1.1.0.0.26	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.148484	1719	188	23	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.083221	28250	5276
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.060374	16830	3298
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.092117	34720	5472
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.129520	14030	1444
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.064784	9792	4090
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.006975	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.252339	15	8	1.3.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: generalize (mem_iff s x), (mem_iff s' y); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.009508	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.012637	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.011172	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.008971	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.043030	15239	5347
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.110363	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.010524	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.125508	311	118	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.077338	25291	3017
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.081462	33478	2841
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.146996	66829	5048
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.022943	2677	781
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	14.483099	14999	1962	1.0.0.27.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.091027	33962	3051
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.052838	17305	4279
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.083901	34819	4185
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.083532	31419	2203
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.025269	6532	3176
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.157256	67369	4338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.151681	63599	4019
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.050981	16059	3513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.201427	87230	6846
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.032705	8645	3790
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.244041	118825	1684
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.023559	6077	2414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.069306	23587	3941
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.113167	48327	3504
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.092710	32762	4700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.161123	70151	3438
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.103553	44478	3915
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.051785	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.046809	17808	2053
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.007614	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.006229	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.020380	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.059716	19434	3160
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.101050	36577	5477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.103585	36052	6344
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.060327	9821	2793
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.077180	29354	2506
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.341367	13234	748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.020008	4254	1798
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.012446	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.195001	90180	6113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.012407	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.040555	14	4	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.076910	26670	3563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.046983	14199	1878
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.456474	53032	4186
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.184382	84226	6172
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	3.131625	5240	795	6.1.3.17.1.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.123652	55171	4861
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.028172	3573	397
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.069786	24001	1960
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.064273	22437	4206
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.054001	16504	3344
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.372567	29224	3188
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.102264	33375	2983
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.129283	26124	2093
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.080854	32284	3022
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.156552	70087	724
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.027983	4921	3124
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.052913	20103	2805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.202275	97685	3563
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	3.513486	5623	430	2.1.1.3.32	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.043641	13567	2994
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.072153	27009	4677
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.075412	22909	2312
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.124912	46444	6206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.337438	153090	4850
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.091984	40273	1663
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.149768	59272	4092
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.011222	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.013144	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.076676	24650	2222
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	20.683401	11866	2550	1.0.0.0.13.15.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.170175	75987	4994
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.040205	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.088994	28272	5633
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.045391	12206	2785
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.124901	51715	4972
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.081612	15076	4484
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.136582	14389	1052
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.138481	62308	4269
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.082178	28202	976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.069536	20460	3271
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.602780	348	200	0.0.1.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.082325	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.669559	660	186	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.195994	92546	4794
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.068140	24315	2985
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.093549	37109	3926
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	7.174085	2005	482	0.0.0.0.0.0.0.3.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	9.526871	4187	1455	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.133609	35195	4082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.144935	66475	6380
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.104764	45368	4591
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.111795	37466	1702
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.030694	7154	3143
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.021187	5683	2455
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.157086	70547	5360
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.921200	153	91	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.188049	80974	4672
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.035019	12268	3052
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.063174	21586	4303
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.081615	28257	5746
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.180145	92	31	2.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.103393	45636	1422
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	42.668370	53582	4553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.108611	47381	3880
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.017201	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.029615	8	1	7	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.093453	38945	1881
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	15.551521	9204	1492	1.1.0.0.10.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.086202	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.149387	60053	4309
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.183890	77026	3140
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	12.471011	36240	1714	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	25.497260	2394	180	0.1.0.33	synth with cache (only 1: induction x; only 1: simpl in *; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.040709	4887	940
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.013632	2696	1155
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.059873	19771	6182
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.196902	91602	7729
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.007948	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.013615	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.039873	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.073118	24239	6553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.133643	9889	1009
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.112930	48250	7569
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	22.840893	16981	1565	2.7.1.0.0.5.18.6	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.169377	80071	4324
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.005746	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.016566	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.016980	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.068742	26132	4514
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.043380	11749	2378
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.060299	17621	5981
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.074371	29776	3786
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.081197	33674	4396
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.149097	64478	6220
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.035507	8931	4119
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.075102	29367	3781
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	2.416163	2043	316	8.0.1.11	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.034126	7228	4958
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.826816	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.045421	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.048584	16977	3552
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.054844	18301	5385
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.142079	57740	7686
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.231964	114138	2968
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.428929	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.132855	17767	1950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.110312	48651	3763
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	5.268520	1773	666	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.072395	10	7	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	42.231280	20518	3038
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.054143	17665	3585
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.067481	27550	2678
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.068132	23156	5471
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.082396	29438	3400
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.097507	37093	4443
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.017828	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.044917	6970	1356
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.079175	26987	7088
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.156753	67521	5355
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.096878	36179	5157
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.067381	2798	545	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.075384	25847	3525
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	21.722606	28039	4166	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.325339	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.068889	24757	3369
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.101105	31551	2731
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.092518	38142	3533
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.269083	126759	4877
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.053370	17485	5335
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.039150	7565	1295
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.134808	58444	5266
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.066066	22901	3761
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.043905	11581	4441
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.066585	22695	3581
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.036659	9559	5421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.061229	23987	4104
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.104541	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.924519	1687	166	4.2.18.2.8.2	synth with cache (only 1: split; only 1: auto with arith; only 1: auto with relations; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.126906	54353	5320
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.852718	2661	865	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	11.612025	5753	298	32.15.0	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.204358	95777	4503
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.143137	60915	4947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.127376	58185	3205
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.065004	23745	4717
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.127313	53853	2909
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.081901	24775	3184
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.108960	41860	4732
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.107272	484	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.125790	50580	4714
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.155573	63990	3796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	3.046501	1420	563	3.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.033039	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.070489	29041	2967
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.149689	68444	3965
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	2.245879	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	10.472609	2962	220	8.8.6.11.3.18	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intros; only 1: constructor; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.081043	31694	4779
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.066752	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.249464	246	111	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.045411	9957	5066
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.045067	8338	1262
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	23.983978	42295	3638	0.0.19.17.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.136433	57303	5610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.085474	29963	4358
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.164895	57630	5585
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.056741	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.123966	50293	4113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.065214	21788	6168
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.067683	18957	7205
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.090090	35241	3928
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.098936	41665	3621
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.102683	42340	5986
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.033594	7747	4425
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.074726	24080	6275
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.059833	23877	3683
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.081091	33680	3318
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.104259	43363	5596
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.116326	46947	5748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.061343	24193	2170
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.142131	62502	5562
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.088795	35264	3714
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.111801	46392	5698
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.018479	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.157478	11	3	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.050090	14265	5448
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.072670	27954	3945
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.101566	38425	3491
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.033056	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.229473	24329	3719
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.038972	11893	2416
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.165992	71071	3071
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.076195	30316	3244
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.527525	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	5.956484	4159	784	0.4.3.2.2.7	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.030854	5560	644
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.059519	19417	3170
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.026039	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.062468	17721	6035
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.116334	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.076928	21889	1718
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.212431	98225	6402
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.224947	104582	6477
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.160386	72662	3410
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.045515	11608	4671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.104169	43644	5271
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.094721	34357	4722
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.030452	10976	686
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.062641	21568	4058
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	6.801358	3100	1096	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.023471	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.117805	53232	4817
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.070539	23126	5710
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.046346	14392	3332
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.162708	10848	2134
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.012916	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.098561	41608	5920
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.062227	22308	4756
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.131333	55636	4532
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.083698	32940	5112
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.115112	34409	4581
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	1.931410	1182	281	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.141698	26858	1973
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.159596	65	21	7.1	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	6.392915	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.059034	16558	2797
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.058565	18644	4020
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.139102	59485	5698
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.429237	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.099061	40993	3923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.087889	23283	3418
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.077900	4863	1075
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.056017	7061	1381
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.044034	12779	3316
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.276086	132122	2782
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.069792	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.432811	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.025908	5367	532
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.035377	11897	2000
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.050283	15680	5232
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.092057	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.227605	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.104187	39763	5734
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.144604	1285	91	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.148045	37400	4943
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.146369	61629	4536
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.129462	54041	4457
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.130991	57121	5645
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.368005	2093	371	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.027777	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.106622	40303	7071
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.151537	68377	4119
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.016919	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.057177	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.067960	21916	2659
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.271054	128796	5193
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.082931	32211	3513
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.061282	23762	3240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	8.011642	5419	1242	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.044721	14814	3332
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.065020	15468	2194
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	0.767004	277	79	2.2.5.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.111452	38081	5928
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.082695	31264	2565
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.089184	26086	3108
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.086649	29082	5290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.088671	28710	2400
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.131687	57586	8721
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.099734	38976	5724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.077323	14997	3130
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.061564	21516	2038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.361889	4823	1020	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.153665	69042	3681
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.486789	2823	799	0.0.1.2.2.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.039090	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.059243	23987	2369
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.515395	689	89	0.0.0.0.0.0.20	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	41.693559	18147	2875
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.274055	124355	7132
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.053785	4259	1390
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.095500	35053	4972
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.524882	1654	288	11.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.097320	34349	5437
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.163534	72373	6410
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.012328	4726	462
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.082037	31244	4670
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.155420	67072	5753
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.076398	26742	3563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.108261	44372	6106
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	33.787494	141750	525
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.090931	38518	3564
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.338044	170702	6196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.076972	33205	3930
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.182539	83825	4444
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.094949	40613	3433
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.101710	21	5	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.608339	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.054414	19954	3262
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	15.089874	5249	927	3.11.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.037872	10540	3557
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.085624	26159	5715
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.075735	18472	2256
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.098749	40487	3471
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.105236	38869	1992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.061853	24681	4032
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.510473	56	11	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.229398	102473	7483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.082550	30707	4519
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.117564	47009	5240
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.092717	30585	4275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.064451	17114	2558
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.135838	54420	2174
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.007892	5	1	4	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.097272	39644	4208
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.093743	42372	4364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.021867	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.085375	31554	3605
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.054238	11594	528
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.056121	17966	3831
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.094773	29656	3106
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.004458	891	340
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.073245	24640	5936
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	20.940458	21871	2009	4.0.84	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.060116	14471	2727
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.067784	12457	1619
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.084220	30459	3356
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.155636	57902	5342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.230976	31617	2687
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.050495	20667	2892
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.127848	54038	3671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.049396	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.074530	26632	3566
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.026778	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.095849	35893	4366
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.115415	44430	4568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.072101	22241	5018
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.103315	27667	3327
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.014698	3	2	0.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.638548	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.006423	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.066477	24833	3446
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.110069	37904	4828
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.018676	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.026439	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.185653	84135	4276
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.156015	73200	4815
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.111297	42525	4198
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.166989	72838	4482
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.152613	25531	2935
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.064454	24406	2982
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.037621	7699	3598
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.094685	39762	2843
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.093934	4652	255
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.078043	28944	2791
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	2.260559	2758	365	9.0.1.1.13	synth with cache (only 1: intros n m; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.071233	18086	3225
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.066358	22016	9667
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.338268	27459	4887
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.104245	42899	5390
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.082726	30847	4725
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.132697	46947	5384
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.006584	2281	235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.033694	7703	866
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.200344	85919	4678
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.040785	10948	4028
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.167996	81214	5930
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.104453	45890	4401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.119259	47961	3927
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.008015	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.010189	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.083124	30968	4643
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.215904	35778	4603
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	1.750764	1017	183	1.0.0.6.4	synth with cache (only 1: induction 1; only 1: split; only 1: intuition; only 1: intuition; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	3.129174	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.112279	46557	1349
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.082211	32606	3686
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.077694	33067	4460
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.964085	958	159	1.2.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.541800	3389	392	18.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.102303	36508	4159
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.082887	30146	3598
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	18.066598	12199	1795	0.0.0.6.19	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.396613	921	39	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.024354	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.010074	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.142337	59033	6210
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	29.650605	790	156	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.175467	74723	5509
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.105784	23674	1035
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.134848	53278	4215
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.057486	18316	3977
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.072508	28008	3216
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.041827	8604	4503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.038947	15104	1412
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.240974	870	295	4.6.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.088516	23935	3115
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.032038	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.064205	15810	3292
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.051898	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.246815	51461	4663
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.218153	99818	7622
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.076060	29482	2312
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.262295	17869	2507
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.108479	43512	6626
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.648048	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	12.244083	17398	1483	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.075869	749	120	0.13.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.110105	44429	4870
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.025396	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.117603	52083	2988
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.142524	60088	4619
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.281672	139643	8181
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	3.823448	2173	805	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.116410	51950	1738
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	22.852442	32892	2595	28.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.118354	23956	1531
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.089369	35157	3171
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	2.349388	7202	277	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.031628	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.106946	42358	3024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	9.271488	5402	661	0.15.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.164249	76248	4850
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	3.893443	3595	206	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.057705	22187	2475
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.111612	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	6.978844	5677	553	12.10.2.7.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.093924	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.278322	128538	4373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.209597	94216	1637
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.064754	28235	3294
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.117939	48692	6432
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.064832	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.138641	60350	4917
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.009026	3545	166
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.961249	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.101816	35133	3175
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.059289	17781	3648
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.090587	31905	5313
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.748963	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.035493	7140	2828
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.238320	9396	2151
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.075812	31790	3052
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.070062	24231	3814
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.058163	17303	4913
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	12.266683	12581	512	87	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.077518	26753	6260
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.073636	22890	1569
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.051139	18179	2764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.043810	11029	1735
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.093956	34692	4148
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.083339	25982	8363
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.131958	53946	4446
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.444174	2301	234	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.185983	78289	4610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.091400	37443	3057
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.165283	77168	5211
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.423441	20238	2134
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.080417	30831	3245
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.126216	55424	2878
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.092733	36172	3283
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.009049	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	20.908197	21011	1727	0.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.083199	32029	4065
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.059360	19628	7921
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.068308	22680	3870
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.134250	55671	4914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.084945	28046	4433
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.131265	54538	6449
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.100338	41168	5492
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.144698	62920	6118
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.133378	57419	4546
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	36.095403	75330	4089	0.0.3.121	synth with cache (only 1: revert a; only 1: intros m; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003488	756	150
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.153340	67531	4658
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.177576	80873	521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.077848	27830	3282
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.132308	54245	4045
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.046098	14468	4553
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.128310	27425	3455
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.052296	17691	2365
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.052194	14440	1286
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	3.754845	1085	372	0.1.6.4.0	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.251945	126203	1073
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.118443	48177	8593
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.070579	25952	2442
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.186962	50456	5008
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.109066	48871	4915
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.061209	20266	3544
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	8.701023	5570	454	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.103635	48681	3956
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.328889	84344	6386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.120337	45619	4402
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.065079	23045	2980
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.075426	27448	3009
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.175832	73440	5769
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.128550	51678	4141
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	5.920823	3557	733	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.063431	24016	3129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.081552	31514	3720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.692124	109	41	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.407586	33795	2301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	2.088386	6414	111	0.0.110	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.938082	3888	81	87	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.011990	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.097176	28448	4472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.100486	38320	2863
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	17.886442	4149	1569	0.9.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.074124	12338	997
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.009163	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008428	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.094235	37408	4915
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.182444	80239	3385
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.083818	31137	13385
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.167423	69741	4114
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.206345	91941	4114
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003822	1382	130
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.035078	6534	4875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.345131	5010	799
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	25.392614	20265	2138	1.15.2.18	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.069324	24452	3810
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.144136	58416	5517
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.051821	17832	2398
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.071979	26846	8857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.166109	71655	6553
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	2.653147	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.527915	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.058425	23981	1409
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.083079	31223	4139
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.104373	41635	5381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.071031	21449	4746
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	42.061452	28200	2641
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.195264	92207	4815
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.017035	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	4.179807	4294	881	0.19.0.0.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite ?H; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.047454	15363	2964
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.665034	2161	378	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.080092	29903	3504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.011556	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.009440	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008948	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.005849	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.412487	112054	6862
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.353199	184931	1670
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.076562	30259	3731
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	8.070534	3174	510	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	1.004950	273	123	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.009905	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.261948	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.041444	13457	1677
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.115587	38562	4203
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.165701	152	26	16	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.139100	23325	1463
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.058291	19710	4265
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.106144	39093	6693
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.070669	24490	3519
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.102920	45489	5165
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.740357	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.054072	92	8	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.126133	54666	2459
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.075337	22638	6655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.099573	36885	6289
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.030102	5221	3907
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001286	247	79
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.080581	29009	2865
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.086635	35989	2975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.082037	29567	2869
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.084282	27809	5391
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.107352	39201	4046
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.180914	30226	790
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.070384	22940	7879
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.044745	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.165932	76437	3940
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.062278	21872	2483
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.119061	46943	5671
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.295752	140449	4001
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	41.378111	46500	3729
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.050724	15392	3054
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.042209	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.747959	131	51	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	40.084545	17183	3630
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.012700	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.024600	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.054819	20317	2297
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.386125	57142	4224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.090106	34604	3976
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.139758	60298	1674
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.082275	24704	5278
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.047319	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.075822	23632	3248
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.075575	23401	1206
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.079380	30101	1434
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.086229	33370	3585
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.064056	24079	2696
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.053915	16425	2767
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.971334	177	59	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.018107	6782	1336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.073267	29405	2313
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.563222	47	10	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.115036	44866	4347
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.062376	19126	6483
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.063237	11058	5464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.044922	16772	2147
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.114699	17648	1560
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.143785	58400	4212
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.066049	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.162118	73454	3102
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	2.717626	2607	494	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.023691	5777	2413
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.117475	44337	5593
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	23.091138	15079	2006	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.028836	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.133395	50522	1471
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.078196	26256	5129
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	31.334321	24389	2945	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	0.565607	82	18	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000770	85	31
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.086460	29054	4928
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.379361	36	15	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.014487	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.390972	35631	4969
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.023470	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.120238	46224	5013
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	4.144047	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.056232	19117	2993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.005909	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.099744	41531	3237
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.370715	63885	5444
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.215100	103742	4168
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.579934	18493	2929
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.150053	62163	5464
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.046119	162	12	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.052418	14554	2357
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.048511	15255	3600
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.859477	669	287	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	24.504087	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	1.444009	181	84	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	2.204163	1665	74	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.099649	43060	3680
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	1.258555	1868	167	6.19.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.086266	34456	3651
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.118312	52259	3297
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.044523	14073	2544
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.110524	45513	5979
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	4.583623	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.047933	13525	3006
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.079783	31397	2752
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.115019	47034	5764
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.127622	2229	280	0.0.0.28	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.059048	15103	6361
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.030260	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.072577	25521	1964
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.150998	69602	3121
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.091303	38400	5219
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.035048	10271	2842
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.082843	27580	6293
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.108363	45668	3635
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.057319	19709	5629
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.282428	133929	5150
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.092455	31069	5124
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.045298	9160	203
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	16.390694	51888	2489	0.1.1.0.38.21	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.093796	28908	2811
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.040208	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.147173	69345	637
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.013816	3	2	0.1	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.083943	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	1.350435	957	76	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	0.148769	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.013448	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.104420	338	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.113618	45360	3319
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	19.964656	41594	2368	2.2.2.4.2.2.2.2.4.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.092602	31381	4022
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	24.933563	32956	2752	0.0.0.0.2.4.8.9.1.17	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply (find_2 (elt:=elt)); only 1: simpl; only 1: rewrite ?(add_find (elt:=elt)), ?(bal_find (elt:=elt)); only 1: destruct X.compare; only 1: order; only 1: auto using (find_1 (elt:=elt)), (add_1 (elt:=elt)) with ordered_type; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	3.277879	1824	385	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.034845	4737	1045
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	7.336715	11203	984	0.0.2.0.2.2.3.0.0.0.4.5.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.218388	107848	2738
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.067163	20261	2203
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.294620	22125	4203
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001052	143	37
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.077694	29408	3663
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.027300	7680	1131
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.146471	62367	4883
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.158153	73012	6075
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.150171	58839	336
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.093432	33632	5725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	21.418383	71188	1485	5.1.6.3.138.25	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.077822	29058	2406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.054808	20638	2568
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.111536	37049	7222
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.027133	9454	1459
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.155773	71563	4332
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.107487	50369	3318
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.034692	8446	3256
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.048697	13182	3982
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.056160	850	93	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.088245	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.078357	30197	4163
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.042415	6883	3803
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.124010	52839	3683
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.101699	41254	4407
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.157158	30867	5248
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.197741	90877	2297
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.061025	22371	2453
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.279353	19916	5656
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.099521	38372	5129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.112020	44925	3613
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.141550	38053	2518
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	23.813646	15303	1621	1.16.2.1.10.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	38.183055	40524	5828	3.1.3.0.0.6.4.5.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intro H1; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: easy || now destruct Hb; only 1: intros H; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.084150	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.058996	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.154030	20099	2918
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.098831	36738	4237
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	10.361781	6219	889	0.9.0.5.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.421815	36424	4766
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.086976	33070	4229
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	7.705273	2193	751	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	4.967044	4239	771	1.0.2.4.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.041406	10271	1452
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.066147	24552	1137
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000921	65	36
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.123856	47919	4952
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.080534	32186	4860
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	22.144860	27799	3646	0.0.0.0.1.2.3.0.1.2.2.6.0.0.0.1.2.3.0.1.2.2.6.0.9	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.104484	46093	2081
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.044976	13076	2132
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.086509	31760	6480
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.084312	29676	2815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.038102	8353	4144
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.085768	28995	2984
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.153539	33265	5015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.045594	13255	3436
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.053971	15515	4986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	2.778874	651	106	19	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.085995	34179	1483
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.120465	49006	4477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.069588	21514	6758
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.294983	24256	5132
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.361454	105863	5921
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.125442	60489	2758
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.070421	27172	2526
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	43.686310	40435	995
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.008891	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.010375	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.009142	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.009688	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004864	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.004537	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.527159	9918	1067
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.482211	20416	5096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.415611	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.538645	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.046811	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013546	2952	535
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.162555	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.458272	19190	1307
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.406034	11425	1071
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.331529	16575	4914
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.056061	14872	2079
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.281175	13294	2956
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.105616	39438	6532
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.065295	25057	2082
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.043232	14322	855
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001067	207	35
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.059008	20647	3939
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.102787	20105	2351
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.379006	25537	5971
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.104494	38578	5087
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.091120	34270	4669
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.065886	24216	3406
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.665351	90086	4029
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	13.345656	14337	1779	0.2.1.3.0.2.20.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.059673	22553	2369
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.080366	26092	2622
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.012493	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.298787	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.109471	42948	5698
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.622018	14349	2538
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.025306	5	3	0.2.0	synth with cache (only 1: intro; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.081144	28803	4101
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.040105	15021	1769
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.136064	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006449	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006502	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.148470	46988	4115
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.054863	15330	6329
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	3.243738	3096	496	6.9.8	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.409805	211	53	2.1.4.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.086511	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.053670	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	8.394043	2582	384	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.522898	3069	883
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.194173	32329	5425
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.077721	31838	3160
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.077034	17931	2564
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.010062	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.006474	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.737872	419	93	1.4.0.7	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.051768	17143	393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.327188	11439	1645
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.254771	31233	8826
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.015671	3999	706
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.081887	27428	5714
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	9.181327	15907	988	0.0.12.12.20.2.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.063137	26503	3530
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.247793	117889	3788
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.289286	12611	2906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.021376	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.016800	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.009553	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.302905	38533	6574
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	24.643838	33516	4236	1.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.050552	17136	2795
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.035207	9869	1760
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.095278	44115	4076
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.078065	26882	2167
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.336047	66945	6919
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.009374	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.110572	45953	6227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.112980	45555	5533
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.888196	834	102	0.0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003405	481	55
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.094572	35979	6104
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.025011	7473	2347
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.112875	44341	5373
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.137437	61720	5969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.187534	38670	5995
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.035284	5	4	1.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.059762	14443	5675
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.026645	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.414991	30119	4178
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.035022	11673	1491
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	14.277756	14175	1520	0.0.35	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.033336	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.085029	29287	6678
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.226900	101681	5416
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.153696	64392	4796
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.127279	52840	5422
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.094239	37139	3182
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.019070	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.012967	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.744702	370	138	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.417615	3845	152	0.0.1.0.8.65	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.120371	38782	5770
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.101946	46143	3186
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	7.039307	6181	1044	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.282901	30867	4816
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.492998	10405	4804
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.067908	30463	2936
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.062718	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.122079	45986	6443
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.068114	12682	2712
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.253549	11147	3733
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.199639	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.049277	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.013000	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.061965	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.075364	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.268225	29240	7005
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.575805	249	58	10	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.250118	74	32	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.089588	37599	1178
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.429209	123907	5637
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.064859	24468	3429
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.029320	8438	2484
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.100706	40947	4453
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.023379	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.022535	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.056471	17975	2379
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.150293	45605	7449
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.094240	37691	4973
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	1.898007	1922	212	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.021681	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.127240	58952	5684
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.030980	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.009110	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.008712	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.006999	537	91
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.068065	26342	3257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	2.514607	1000	395	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.078985	22674	3504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.128029	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.066837	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.120942	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.053642	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.019390	6	3	3.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	40.066673	24282	5162
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	0.265006	69	24	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.070859	27705	6096
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.367240	93852	5888
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.239541	31284	8102
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.030493	9771	1670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.211833	22361	5174
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.050199	6031	2713
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.057019	20778	1538
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	31.456415	10481	4666	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction remove x m; only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.329230	33868	3788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.157835	52726	3289
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.119310	7584	1371
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	27.681012	24587	3443	0.0.1.0.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.094274	33241	4486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.056233	21163	3682
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	4.160013	1991	392	20.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.367613	15849	2487
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	4.354933	16443	176	0.179	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.022386	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.484188	48	18	5.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.086946	30837	5507
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.048610	14328	5205
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.036737	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.077253	27136	7972
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.360146	20	6	1.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.107759	48140	8202
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.008506	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.250011	16615	3280
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.381193	92540	5166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.044109	13607	2468
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	4.446240	2272	390	1.2.2.14.0	synth with cache (only 1: firstorder; only 1: inversion H; only 1: subst; only 1: now compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.375485	75270	7319
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	32.974554	29255	2236	1.1.2.3.3.66	synth with cache (only 1: destruct (lt_ge_cases n 0); only 1: order'; only 1: intuition; only 1: rewrite one_succ; only 1: unfold succ, pred; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.013957	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.073342	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.335143	36825	3870
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.039886	7809	984
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.016602	4081	2330
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.104078	53	11	5.2	synth with cache (only 1: intros i j Hi Hj E; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.037356	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.184661	145	31	5.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.064855	20166	5610
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	5.848978	4781	986	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.092963	541	200	1.0.0.8	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.048669	13	8	0.0.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros x y l1 l2 Hin; only 1: subst; only 1: intros HE; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.005476	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.006396	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000684	61	33
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.100618	39697	6539
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.044878	13834	2788
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.133174	1061	129	13.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.097476	38643	6057
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.412436	203782	7486
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.368990	76264	7688
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.037053	13300	2227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.013674	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.033204	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.052920	20371	2344
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.326331	48341	7242
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.006668	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.332162	61390	5540
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.040568	13795	2788
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.064406	24681	6760
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.577484	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.630665	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.988445	202	96	0.1.1.6	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.106124	42547	3808
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.069692	22663	4499
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	28.362692	14903	3840	0.0.0.2.1.0.0.7.14	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: discriminate || auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.396908	28573	2679
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.050167	18096	3075
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.072543	22845	6394
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.065487	22188	4265
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.052111	20943	5383
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.254170	26077	3007
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.375216	105380	11400
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.035615	7409	3716
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.354446	83420	6634
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.083409	29816	5019
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.093381	34328	9226
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.214673	24271	3130
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.081537	25	8	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.046117	17844	1350
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.070597	25147	4456
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.355731	102308	7314
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.428309	100994	4739
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.334031	69619	8289
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000762	61	35
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.059441	18652	2893
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.050428	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.028095	7093	2306
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.030265	9973	2427
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.267045	25429	4105
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.256037	24103	7552
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.022365	6657	1942
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.072093	25319	4561
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.044966	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.030095	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.033977	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.437833	85863	4812
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.069010	20754	3561
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.062801	19163	5549
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.314422	11420	2167
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.055899	16099	4805
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.083307	26944	5921
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.081691	27241	6477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.688741	382	60	13.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.134928	61421	1856
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.071125	392	113	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.464602	143	35	0.3.4.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	3.472417	3585	471	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.083671	28248	3169
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.062057	21283	2575
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.039738	9588	1767
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.143463	60569	3443
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.414980	95668	6038
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.037655	11688	2428
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.067949	25530	3894
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.121357	25645	4391
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.051179	18734	2771
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.035772	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.112598	811	408	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.038849	12498	1587
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.095285	35444	3230
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.134082	53399	7806
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.148939	61589	4174
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.123877	22001	927
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.019424	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.156244	62633	8283
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.065846	25981	2177
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000690	81	35
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	1.725294	4848	215	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.887315	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.097028	46225	4202
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.594576	185	21	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.928785	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.021992	15	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.085005	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.046752	10540	4340
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.078995	28601	4739
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	2.713097	2393	354	17.3.0.3.0.0.0.28	synth with cache (only 1: constructor 1; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.830268	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.057180	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.014007	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.375399	21399	3629
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.010083	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010265	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.030582	15	6	2.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.494609	412	58	2.13.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.500536	39294	5188
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.506501	113	29	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.033669	11442	1638
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.096667	39630	3478
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.179173	45038	5712
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.080158	27800	3859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.072636	24215	5447
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.084697	32561	4162
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.091217	33090	5671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.012062	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.452794	77	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.316734	13065	2037
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.655431	65	24	5.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.025644	2562	1040
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.066532	26123	3087
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.085223	33085	2933
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.010457	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	4.628212	2074	417	0.1.10.5.0.1	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.072349	24798	4713
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.111956	45475	3844
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.295639	79627	3843
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.082924	34739	1882
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.160488	72834	3200
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.233563	22982	3518
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.415277	71827	5866
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.075752	24055	4928
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.035921	10859	2317
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.179443	71927	5056
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.132309	41786	7508
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.313856	41772	5287
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.236124	24770	5495
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.071930	17496	2400
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.135611	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.149560	67810	7136
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	3.002124	1439	375	6.2.3.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.048775	11337	5083
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.085055	32091	3593
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	22.077715	10109	2549	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.093810	17998	518
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.613421	1650	139	24.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.132084	58752	2054
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.271413	136790	5196
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	21.683934	17276	2819	0.0.3.1.0.3.0.4.0.0.4.4.7	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.107808	41838	7960
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.012862	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.174882	56342	6500
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.077516	27694	5586
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.010725	5	1	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.232908	1845	523	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.129982	55313	7435
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	10.308267	11055	1883	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.264992	44338	2230
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.138601	59432	6335
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.086067	32011	5812
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.408341	137	30	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.087303	33046	6255
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.060786	8370	1821
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.334067	28315	4885
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.099310	37184	5904
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.042208	12433	3987
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.292588	81825	4497
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.327807	63695	5859
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.172681	26522	3988
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.067180	21634	6890
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.057563	21357	7311
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.082779	26798	7038
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.096894	34628	5207
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.024234	7026	2107
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.176809	77584	4643
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.083476	35703	3024
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.152704	64900	7508
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.137859	30267	3810
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.188327	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.171318	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.038487	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.334394	58022	6853
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.077268	24615	4273
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.059936	18531	4447
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.099650	40727	5449
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.017931	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.099109	31258	1627
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	10.034926	14458	1077	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	8.744266	4993	827	6.3.4.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	30.959479	7351	1737	3.5.3.2.3.0.0.0.7	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.255322	122852	7730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.077790	28924	5495
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.061663	10880	3176
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.057493	18609	6452
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.270885	42447	6049
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.099788	38237	6241
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.132673	35	8	4.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.015459	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.051458	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.171643	20748	6392
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.169791	76061	5011
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.131890	55767	9704
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.043379	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.009153	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.076145	28690	3408
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.092640	32655	3112
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.080752	29253	5601
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.033771	8046	4809
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.180357	82662	2548
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.176356	72243	5512
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.309309	25958	4316
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.057368	19753	4844
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.062994	20181	5401
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.145217	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.071712	28829	4210
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.588156	219	85	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.307141	30826	8149
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.503441	176	64	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.064057	502	238	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	2.886468	1020	297	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.052251	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.038820	13997	1247
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	4.429603	6569	669	6.3.0.6.18	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	2.138966	1161	411	0.0.0.0.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.062505	22644	3796
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.110083	48066	5424
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	2.533150	1662	359	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.011262	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.089920	31502	7195
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.044226	10284	5143
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.341220	39494	4831
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	5.661853	6617	793	1.0.17.1.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.063155	22479	4394
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.091936	34382	6553
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.008967	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	2.691245	3328	174	51.4	synth with cache (only 1: intros; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.498395	2057	159	3.0.2.24.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.038625	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.085163	22516	1320
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	22.948998	21615	2508	0.0.0.0.0.0.0.28.21	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.322161	41992	5807
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.127650	46481	5711
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.026768	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.344302	24616	3513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.182715	83573	6759
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.088297	31933	6435
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.127311	43477	7422
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.322711	55136	6104
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.211150	39323	8558
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.130413	53873	4814
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	28.801982	39736	5563	0.14.7.3.0.10	synth with cache (only 1: apply NNPP; only 1: unfold not; only 1: intros; only 1: apply H; only 1: intros h hn; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.497919	193135	2588
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.008537	6	2	0.4	synth with cache (only 1: intros m w le; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.071865	17613	2501
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	3.291780	1984	415	7.1.1.2.8	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.235457	113106	13478
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.058203	19150	4558
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.193856	89452	4369
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.111493	44344	4809
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.183512	75596	5906
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	13.348330	70146	1549	0.0.0.108	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.044352	15787	1727
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.082724	28216	4217
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.028570	10143	799
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.044835	13601	3151
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.411024	118736	4803
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.359497	88043	2566
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.063537	20130	4249
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.098052	41875	7754
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.261687	16	9	0.0.2	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.042247	12470	2340
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.355338	46854	5550
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.117662	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.049700	11088	6060
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	22.721471	23948	3109	1.3.3.1.0.7.17	synth with cache (only 1: intros n1 le_mn1; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: intuition; only 1: rewrite IHv; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.085679	28795	7347
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.118809	53485	3195
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.159911	29172	1745
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.135623	12784	2423
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.251103	36855	6138
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.381756	4444	963	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.406660	95432	8270
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.078889	17785	1296
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.012112	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.137503	59248	6325
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.061737	22528	4553
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.407186	25926	6212
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.240234	45897	8923
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.068569	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.378622	180420	12717
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.105685	43238	4164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.011838	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.372457	9353	1176
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.352478	56150	4848
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.010334	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.790913	5281	283	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	7.800992	7276	1035	0.1.0.1.0.2.1.0.30	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.047930	6005	1728
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.055060	18163	3129
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.150638	61314	4651
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	4.676051	1766	805	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.307666	141543	4375
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.653547	181	89	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.080628	34205	3642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.073424	22	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.034796	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.496848	405	73	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.073841	26879	4253
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.352952	27374	2906
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.064020	22498	4845
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.020504	6119	1795
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.257693	32810	5228
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	19.362433	24050	3319	7.4.13.0.1.3	synth with cache (only 1: unfold get, push, index; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.066670	24737	7076
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.542147	80684	2740
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	4.694621	4659	657	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.010912	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.352310	47778	6072
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.092760	33233	6098
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.395283	619	170	0.3.0.1.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.260737	29035	3686
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.113689	49180	4079
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	1.174731	462	139	1.3.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.024334	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.214689	59	19	0.0.0.1.3	synth with cache (only 1: intros; only 1: generalize H; only 1: simpl; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.098723	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	9.720858	31558	1186	113	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	9.221332	14515	1096	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.503658	92861	5002
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.074188	27730	3148
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.306364	68069	8468
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.664975	209116	5582
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.287420	47922	4303
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.073566	28080	3374
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	33.759865	27313	3223	3.1.3.0.3.0.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: destruct m; only 1: auto with arith; only 1: left; only 1: now apply Peano.le_n_S; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.412457	1601	671	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.114051	42372	4133
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.056306	20005	6137
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	3.805585	2496	554	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.005569	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.669708	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	0.233215	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.006915	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.011448	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.159060	70680	7580
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.096735	39359	5058
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.242787	11988	2717
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.160384	71149	5172
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.166666	21353	6114
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	39.539958	18273	3583	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.050916	13032	1363
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.057786	20780	2847
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.176580	75862	9921
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.052200	17976	3885
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.025054	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.248616	61063	8953
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.095649	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.040280	14087	1416
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	20.400997	18749	4345	4.0.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	28.516182	30023	3449	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.008349	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.007671	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.032267	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.305734	37240	4561
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.026377	6993	1951
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.232193	108100	5609
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.090745	30948	6832
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.093815	34441	4658
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.067027	19366	2174
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.107025	42239	9361
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.122311	50278	3786
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.270413	28282	9043
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.113982	45917	5803
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.269209	57043	4968
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.101710	43595	3385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.259582	76	35	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.284161	66555	2514
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.128192	51104	7018
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.009128	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.328577	94890	7982
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.004526	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.056614	20771	6287
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.471693	350	56	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.216434	20805	7525
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.009787	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.020640	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.061375	23176	4660
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.100688	38631	6325
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.121145	55775	5866
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.053230	16565	3013
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.996909	342	63	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.085858	31304	8072
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.247351	38603	5484
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.031679	8718	3368
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.035062	11487	3536
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.128608	52247	5902
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.219558	567	27	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.294265	8379	1646
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.211704	100610	4473
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.192309	24560	6695
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.166528	27537	6814
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	40.205893	39140	5298
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.331464	14506	3368
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.287064	54402	4595
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	6.743529	10940	862	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.019123	5207	1750
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.986163	844	151	9.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.040932	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.069821	23486	6918
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.082104	30404	7507
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.099657	40657	4229
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.124376	37	18	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.151934	30985	5337
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	3.541674	5892	655	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.163705	69505	6830
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.159332	65625	3589
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	8.981067	31476	1293	65.16.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.420173	79908	11589
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.259543	36039	7411
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.021801	7136	3366
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.078625	31440	3670
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.105887	40990	9335
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.006769	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.020250	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.006240	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.266390	77437	4718
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.026877	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.713207	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.011696	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.053238	15826	5897
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.238308	55314	6310
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.162673	21311	8735
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.102812	47522	6375
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.084019	31933	5126
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.290873	105378	6878
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.118705	52397	6098
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.080167	28756	5889
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.097415	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	9.934172	6902	1007	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.228864	21217	2678
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.087832	28634	3221
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.121813	51572	2517
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.059953	19999	2332
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.197157	31540	7666
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.100701	29790	4640
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.208215	18719	8121
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.032777	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.201996	45784	5969
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	1.284741	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.275665	26130	6203
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.244348	58711	6224
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.238704	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.015922	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.006843	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.013095	3034	1211
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.064483	20628	7500
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	9.719971	2354	429	6.1.0.2.0.1.9	synth with cache (only 1: intros x y l1 l2 Hin; only 1: intro EQ; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.058271	21987	7116
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.047927	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.167276	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.207424	33234	6904
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.273351	82619	7436
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.042425	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.144614	59650	6709
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.103015	42379	4900
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.161409	69107	6223
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.887489	217	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.469925	57795	6413
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.189892	36290	6091
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.108023	41229	6275
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.176381	48880	6132
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.566967	41666	7159
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.279594	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	2.338490	1608	401	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.040669	10975	4921
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.301054	85191	5429
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.089863	38276	7222
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.186024	79906	10948
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.215351	35560	5419
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	0.570041	44	11	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.219623	52047	5693
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.067664	22585	6320
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.196639	34096	5608
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.490972	86	36	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.186468	45723	4267
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	23.131621	27971	4796	0.0.0.2.1.7.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.086701	32031	6627
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.048771	14201	4186
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.314691	76901	7088
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.053741	15474	5295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.181801	36009	5002
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.095521	38229	4296
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.007537	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.010145	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	2.771684	430	83	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.220850	26708	6289
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.120241	53228	5257
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.155841	27572	10637
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015427	4813	1306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.568111	749	390	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	2.040181	283	131	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.115203	42641	5606
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	2.456393	244	84	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.023035	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.562500	70	39	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.290367	4363	1471
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.087025	31049	6994
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.221749	43803	4344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.219693	20991	4666
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.119043	48915	4249
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.048686	15871	2188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.383621	21356	7686
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	10.739365	4600	1358	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	6.820626	7285	1107	6.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.230105	78613	9745
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.083115	27507	5330
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	2.456635	1760	441	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.070829	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.012101	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.063196	20076	3701
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.026532	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.079523	28921	6170
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	7.599511	5167	861	25	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.115760	19240	4094
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.045255	12235	3151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.104934	19173	5222
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	13.031155	10245	2511	0.0.1.3.0.4.1.25	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: simpl; only 1: clear IHl IHr; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	1.016659	627	131	4.0.9.0	synth with cache (only 1: intros m x y e; only 1: intros H; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	4.352791	1417	625	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.232460	103797	13958
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	40.162189	28121	4413
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.085955	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.078132	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.224142	51738	5390
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.636152	31	9	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.056477	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.079202	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	36.196416	27720	4673	0.1.0.6.0.1.7.2.0.1.0.2.4	synth with cache (only 1: red; only 1: intros; only 1: red; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: generalize (elements_3 m); only 1: intros; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: invlist InA; only 1: destruct p; only 1: intros H4; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.913574	1995	458	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.062465	21171	4982
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.065663	20005	6725
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.063499	25652	3131
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	7.512025	1752	278	0.0.3.1.0.1.2.2.9	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.224636	46887	6847
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.163666	10822	1682
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.053089	14734	5243
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.067097	21441	5651
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.126494	54952	2425
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.318074	35988	11587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.138233	17042	4173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.202358	34798	6143
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.108171	39537	8339
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.030532	9004	635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.727378	492	222	2.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.258247	43894	5452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.301409	11063	3702
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.320541	60520	5003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.324104	11443	3712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.253922	10528	3180
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.075882	26794	4581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.175781	46070	11664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	5.165599	3142	511	0.0.0.0.6.0.4.1.0.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.086263	34591	4856
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.307664	44434	4964
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.204453	46383	7552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.158065	21695	5516
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.149475	63199	5351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.523975	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.148475	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.054004	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.023600	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.123365	50150	3952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.820723	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.154403	63197	13693
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.333744	156	100	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.298791	66787	3738
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.082427	26913	7874
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.104629	41939	3312
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.127901	57974	5425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.095774	37419	5571
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.372447	5163	2209
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.399623	39743	2782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.408639	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.297722	27609	5992
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.503984	551	182	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.295529	31547	6398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.132433	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.276151	20480	4188
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.384740	28263	7719
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.179629	31872	8430
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.016657	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.079475	24400	7242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.190495	15441	7869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.206596	15763	5985
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.024695	6203	873
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	9.492489	6141	1516	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	7.128979	2518	848	2.2.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.055620	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.159067	31045	5947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	3.426211	954	426	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.071142	28902	4331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.297163	22943	3486
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.271711	26228	6298
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	5.846352	364	178	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.011824	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.110220	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.020707	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.364392	185	50	0.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.013523	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.316124	51986	5986
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.018684	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.336166	11439	4581
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	10.605489	4569	1958	0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.220753	1567	726	0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.010731	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.013289	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	7.235616	28228	842	1.12.34.16.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.153356	68483	1671
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.190392	47571	8340
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.231938	36729	3483
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.083635	31803	4010
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.027550	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.994091	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.201627	1802	588	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.280137	34021	3484
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.628669	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.228194	24452	5747
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.071846	21708	5361
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.017415	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.080332	29869	3779
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.137402	2871	142	5.40	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.018217	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.259598	123970	16422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.141713	13230	3818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.094570	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.059184	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.059725	18833	5519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.123112	12640	5095
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.060687	16956	6219
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.227053	22566	1369
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.152867	61921	5178
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.294089	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.362855	36290	1350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.587152	496	168	14.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.215400	9707	4804
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.316366	17704	3433
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.439154	15349	4138
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.171375	31443	3648
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.124444	15752	6592
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.088915	33475	5533
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.263381	14770	2633
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	14.743200	3655	2065	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.114750	44490	5336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.243750	14367	2325
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.147927	66496	6456
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013614	2822	1229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.170344	5836	1638
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.081253	26287	6090
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.012566	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.033445	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.016051	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.014606	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.018552	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.011910	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.013067	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.219494	32152	5016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	6.071406	1815	717	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.203454	20469	5497
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.067487	21051	5522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.287021	63175	5884
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.443929	3612	1677	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.306076	53555	5449
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.264759	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	4.277625	1132	449	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.127834	52550	4963
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.407561	29248	4825
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.166887	19492	8251
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.133962	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.269067	21141	5936
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.634895	416	153	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.103973	38449	6996
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.095990	35372	5734
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.796642	191	102	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.355760	88259	6684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.073928	21833	5372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.077628	17229	2257
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.279905	68340	5008
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.105929	40484	5280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.105422	9968	3250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.388345	29268	5196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.103346	8722	3964
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.270625	18049	2814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	16.979527	2807	1014	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.188786	20230	7454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.050803	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.213326	1224	202	9.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.034980	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.409060	707	290	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.176439	28562	3439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.013482	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.246558	36865	4861
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.297449	40570	6918
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.355057	3233	1352
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	11.961894	11109	1672	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.109291	37348	5246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	6.427402	1028	405	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.234240	39808	4380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.166371	20041	4516
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.104531	43393	2115
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.061124	17441	4053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.235441	16377	3376
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.283834	6052	630
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.095125	33429	8035
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	4.530817	1287	521	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.061522	21092	6513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.195440	31184	5037
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.102038	9931	1745
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.068619	25034	4293
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.184704	27626	6024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.195068	42049	5717
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.214253	97899	2852
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.118466	46217	6380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	10.158604	4116	856	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.514893	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.246822	113858	3071
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.296566	31662	7733
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.090544	33488	5046
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.305931	27706	4563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	3.556587	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.130134	14320	2989
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.394420	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.188682	10078	2778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.294526	31862	4119
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.208692	21248	6396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.115152	14606	5098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.275704	34817	5512
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.088416	31252	6306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	15.706511	8816	2766	0.0.3.0.0.1.0.0.1.5.0.0.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.211286	22140	5695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	9.093006	2605	776	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.038698	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.253373	19658	4859
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.300099	33601	5791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.198388	15930	3663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.187673	15067	5499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.533645	1991	294	0.0.0.0.0.0.0.0.0.0.7.31	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.049179	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.372398	10356	1338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	23.545284	14068	1916	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.372288	35986	5335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.177666	18136	3414
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	8.694701	3196	1433	0.0.0.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.108646	47008	1576
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.018351	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.194433	20309	5792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.356839	9745	1695
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.189204	20884	5108
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.019441	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.164873	29577	10074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.201958	23945	5126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.069952	306	153	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.049851	12287	3104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	38.688701	20923	4815	0.1.0.1.7.0.3.0.5	synth with cache (only 1: intro n; only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: rewrite mod_add; only 1: now f_equiv; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.778818	735	220	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.056406	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.800565	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.103845	36663	4954
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.098536	37689	6099
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.116309	43929	7164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.174767	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.217618	12976	3897
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.196920	11373	3442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.033643	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.154193	9282	2049
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.155729	33953	5999
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.136694	11933	2897
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	30.621214	33815	4934	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.250454	21063	5131
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.205581	16588	7077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.123637	17364	5087
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.142545	7665	2819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	0.832828	220	77	6.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.178981	21013	6857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.166269	9770	2158
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.110605	38832	6264
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.241170	19698	3563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.224109	17613	3632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.238032	78649	4665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.138822	33981	3394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.321089	16409	3947
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.272179	21118	6409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.173298	14747	4139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.217726	13965	6498
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.076153	26958	3606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.038878	11867	4380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.791040	1547	626	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.337176	15519	760
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	3.066546	1624	418	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.219004	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.259182	30923	5236
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.099027	115	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.115898	33	18	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.378557	20541	4576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	4.926707	500	100	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	9.765082	14658	489	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.010528	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.060486	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.057284	16660	3791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.092758	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.057419	20181	2186
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.083478	19194	4523
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.361851	98171	2509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.191390	16499	2703
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.111864	10385	3427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.047460	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.126079	50314	6651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.204190	16278	3181
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.216593	12634	4269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.209563	32329	4380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.197848	29709	4814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.226929	33144	5508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	4.997570	946	422	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.258051	20257	6417
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.218495	26431	4109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	30.964278	11535	3758	2.0.0.6.0.0.0.0.0.0.5.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.088742	21382	2106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.053569	87	48	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.185749	29254	3603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.020690	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.290241	20191	5053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.072133	22415	4927
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.068568	20350	3836
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.107038	37375	6653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	3.085565	588	208	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.164394	54810	3016
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.642983	156	68	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.169353	30018	4906
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.072580	21936	5729
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.152099	13284	3711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.033686	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.193272	16269	5953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.226395	18606	4440
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	2.904825	770	256	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.039913	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.418699	302	85	9.1.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.028949	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.197413	26440	4791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.526248	5698	523	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.070046	19470	7102
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.092728	32739	9402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.238338	19048	4674
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	2.969198	795	393	1.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.374970	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.045486	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.987579	471	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.257736	19847	3245
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.069383	24341	3053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.043013	14394	5630
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.755600	1468	659	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.084201	18475	5642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	5.452471	2258	665	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.093592	33876	4557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.089190	21471	3574
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.149418	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.045582	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	24.406189	4698	1193	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.159509	39178	4396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.158405	14514	2393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.201904	21065	7343
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.009099	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.074292	25012	4495
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.207089	20489	4603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.639421	527	314	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.198775	91840	5191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.111235	17754	5489
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.036296	9356	2311
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.006015	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.209075	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.094992	16761	1232
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.495236	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.161428	12289	3450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.105794	42395	7564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.109876	39536	6031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.309224	1469	238	20.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.271814	32591	5094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.750697	832	315	1.1.4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.371162	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	20.295205	8574	1366	4.2.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.006292	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.550330	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.636366	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.205128	88791	5746
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.512818	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.013669	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.006385	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007161	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.012996	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.106283	37954	3968
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	11.681628	3976	1805	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.149216	22174	3996
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.148643	38744	4288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	7.084094	8044	986	0.0.0.15.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.147999	16888	3084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.659255	171	73	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.145711	13125	5230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	25.053539	8983	3639	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.219962	93594	9655
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	9.562536	5820	1273	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.112791	41132	9003
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.215559	13174	4939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.148250	18615	3853
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.069798	25538	3156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.510581	864	328	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.098889	16045	3071
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.082134	28878	5553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.070325	21831	3970
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.131984	25879	4179
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.461018	226287	6384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	24.803931	16300	2900	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.155253	27085	3021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.160241	71548	4829
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.092344	15080	2596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.253069	22549	4887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.120382	29303	9196
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.218220	30005	6790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.027355	6901	2263
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.078794	25352	4339
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.069494	19968	7286
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	10.659833	12130	1926	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.202625	46526	8466
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.013970	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.171111	69057	7458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.120508	23222	4302
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	40.135748	51023	6652
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.097821	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.607211	27195	964
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.154703	16786	4510
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.186640	435	155	4.3.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.100791	24086	4161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.295641	22094	3045
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.249254	54530	4034
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.085731	31688	5931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.216725	9320	3999
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.083383	30142	1754
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.182955	85035	6113
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.011973	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	20.428855	9478	2322	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.009582	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.084832	25451	8550
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.150405	54490	4856
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.058770	20071	3221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	39.823477	12278	2506	0.0.0.0.0.1.0.0.0.0.4.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: revert n m; only 1: intros n m H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.058083	16392	3232
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.609173	592	117	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006535	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003486	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.009231	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.014037	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.774488	301	79	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.015672	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.132133	52830	3843
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.093855	25591	5789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.069527	18183	5504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.143712	19940	4562
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.090670	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.161269	18099	3179
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.120685	40653	11673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.134145	21373	4910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.153516	40980	8683
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.203336	267	50	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.162116	22646	7380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.037637	5987	1874
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.051247	11649	2124
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.231037	17545	4779
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.117562	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	3.735664	847	345	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.013639	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.007442	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.170529	71872	8164
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.035659	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.160620	15111	2888
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.920536	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.077168	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.786666	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.100277	18169	3419
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.140980	25177	6382
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	9.774617	5743	1542	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.006494	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.011697	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.591407	18512	689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.232967	12895	3428
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.182247	81591	3323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.100046	9377	1976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.040941	14149	3811
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.237328	104651	9674
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.192311	83509	6263
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.272773	10851	4204
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.013921	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.041513	10073	2875
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.286685	2149	448	0.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.014761	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.155657	12634	4926
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.094302	28648	11119
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.100384	37627	4116
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.716547	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	13.949723	9113	2264	0.0.0.0.0.0.0.0.3.1.0.0.0.0.6.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	3.303213	7114	719	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.077905	28556	2659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.142558	22452	6540
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.157567	6089	2082
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.103482	15922	388
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.090956	19412	4653
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.084701	20149	3808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.205989	9101	1981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.135248	17062	4685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.077804	15903	5549
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.464714	221250	6331
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.198524	23343	6517
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.096914	13226	2854
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.246682	21456	6697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.097348	16689	3272
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.115832	40128	5231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.177555	20255	4850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.069043	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.020111	6200	1000
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.006048	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.006942	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.036530	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.030410	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.094395	35178	5930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.099174	19190	3548
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.112240	44085	6932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.150695	19590	3226
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.731012	37736	1747
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	6.565989	1339	398	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.013271	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.008427	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.028388	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.010974	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.008973	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.029113	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.618039	1089	307	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.052595	13363	3987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	6.496580	4359	999	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.153350	20689	4611
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.402071	186992	14876
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.078955	22695	1792
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.031500	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.013841	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.057632	18695	2892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.239719	17048	4439
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.662103	340021	11690
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.071456	24862	3448
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.129655	49407	4733
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.037614	11475	1446
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.068293	20512	4226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.116593	38309	4119
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.180184	12840	4175
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.046082	13844	1672
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.626615	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.082381	27807	4486
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.897533	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.017559	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.021463	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.013408	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.009096	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.011259	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.858659	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	31.816589	359058	3463
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.008684	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.019840	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.090036	20296	4248
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	15.578324	19852	1399	0.29.12.4	synth with cache (only 1: intro x; only 1: intro H'; only 1: destruct H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.006272	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.610124	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.109090	11554	2618
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.006275	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.224639	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.158856	14118	2810
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.318918	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.024735	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.078230	11018	4255
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.170570	14159	3230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.107771	12165	4262
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.223336	23576	6524
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.114284	14895	4359
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.394172	180521	4681
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.030874	5278	1991
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.182328	38237	5174
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.059510	17928	2766
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.513445	34530	975
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004177	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.081492	23982	12314
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.092194	32668	7832
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.103920	23682	4848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	9.813453	6189	876	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.102441	37963	7758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.019200	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.015140	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.017141	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.025269	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	26.076250	18120	3823	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	26.412921	376971	2904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.066165	25010	4368
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.101947	32963	6808
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.051224	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	2.874888	1025	374	2.3.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	2.512324	1304	660	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.036179	13	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.038929	6006	1691
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.404572	22732	731	1.2.0.2.34.52	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.210001	41	13	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	9.369913	92842	608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.258912	12634	2842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	14.466276	6564	2650	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.545269	263655	10694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.251403	74	35	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.065651	23544	3988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	4.206289	3453	760	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.054281	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.108869	42912	7962
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.760418	582	263	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.088553	18989	4753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.034421	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.322027	148839	9563
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.123100	52865	3866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.118194	42937	9774
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.429886	206952	10222
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.008769	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.138954	64719	2908
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.151498	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.578174	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.096515	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.160191	65672	10169
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.079957	30236	3519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.168943	16118	3702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.065677	12567	6475
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	6.864711	2781	720	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.041705	9981	5611
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.245149	42816	5699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.144036	39416	4214
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.234390	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.226123	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.108438	3412	452	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.009879	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.013165	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.007578	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.014531	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007203	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.014645	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.055314	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.005701	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.004906	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.069968	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.005098	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.030377	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.012190	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.050388	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.006097	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.005983	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.008174	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.010824	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.009200	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.152164	58962	12726
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.030292	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.030338	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.041700	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.010333	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.017401	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.012260	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.025121	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.014416	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.017587	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.009911	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.019729	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.602686	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.091959	31329	10201
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.031449	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.377136	27402	1413
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.072638	23659	7027
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.739791	351210	15591
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.229962	179	50	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.061501	18550	5294
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.437138	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.147877	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.146625	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.076346	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.004916	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.051905	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.100265	14364	3287
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.162118	22149	6028
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	27.568592	13801	2989	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.009763	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.224214	106565	4452
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.018841	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.332618	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.075727	30163	5344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.035820	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.131599	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.066955	26538	4964
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.047114	9307	3699
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.087053	24465	8165
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.013795	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.239524	13294	3739
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.159235	62089	8899
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.089424	194	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.085997	24542	6396
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.061993	19741	5548
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.016588	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.135512	54869	7445
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	3.899520	20589	834	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.031474	3838	1829
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	4.653661	2173	764	0.0.0.6.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.126391	49211	8362
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.689921	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.012480	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	8.427524	111164	1432	1.110.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.102737	37492	4677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	17.825985	10852	1031	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.102388	35788	11015
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.568026	228793	12912
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.024949	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.370668	175378	7951
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.076398	10101	2259
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.091202	30840	8927
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	14.919847	3511	1337	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.104369	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.478412	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.513134	4330	447	3.15.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.059785	14986	5380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.049350	17330	3020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.080546	19121	5304
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.859075	372	138	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.250390	112405	13452
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.059759	17998	5583
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.130787	53459	8727
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.021890	15	4	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.068151	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.628256	293584	13912
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.580374	69788	2251
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.079687	22785	4018
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.350334	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.106340	36060	10112
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.026761	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.150468	68217	4344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.151225	27532	10204
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.303567	14	4	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.046133	11193	6092
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.336191	165677	6710
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.061125	22160	5403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.932583	537	304	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	4.911086	14530	1781	2.3.2.3.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.075792	29101	3839
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.114451	41069	4421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.212683	22057	3305
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.042520	10570	1860
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.192161	87262	4976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.050964	17262	5668
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.498947	256434	12439
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.012314	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.004839	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.087839	28993	7259
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.016837	27	9	1.1.1.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.101873	39294	4151
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.353037	167096	9138
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004493	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.009941	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.011868	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.034005	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005580	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.036854	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.071874	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.153557	70856	5070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.089268	24881	7625
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.493174	6170	1225	0.0.1.1.0.3.1.3.0.1.7.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.009420	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.549645	257597	7453
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.268946	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.505263	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.031567	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.117894	47177	7480
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.073925	26386	3342
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.301990	136528	16186
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.010612	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.027962	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.764715	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.039934	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.120948	46040	10580
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.012676	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	6.979039	24672	1448	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.009398	1898	186	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.048698	13500	4778
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	1.637927	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.077916	26728	4381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	8.737604	2339	668	1.0.1.9.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.012989	8	5	2.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.057343	36	14	1.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.094249	24374	3593
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.032735	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	6.018538	18373	1292	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.134900	52501	11206
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	25.555215	12669	3368	0.0.1.17.1	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.245400	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.210081	21812	5529
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.881317	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	29.134424	76036	9579	0.21.2.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.436315	242	87	0.1.2.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.013671	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.009987	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.891453	550	81	0.2.18	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.110039	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.549195	275721	12843
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.300487	138532	11135
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.008789	8	3	4.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.016677	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.636168	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.163561	15640	5513
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.094891	32814	8853
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.377177	174493	5478
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.025163	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.220526	11709	2831
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.701743	308	112	0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	4.548806	75074	760
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	5.176546	3606	808	1.2.5.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.294873	68	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.173285	82011	10710
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.062601	20484	4060
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	0.920933	4498	201	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.038449	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.027652	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.030679	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.511746	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.006848	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.014959	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.011392	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.225934	24783	4577
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	10.461811	14869	3189	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	4.011896	44275	929	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.019942	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.022180	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	2.928247	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.046989	14580	4358
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.711297	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.253172	114225	10281
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.008223	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002957	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	0.133701	1035	124
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	16.591466	24121	3043	0.1.5.27.1.5.4.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.694686	2842	579	10.10.0.9	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.149852	61190	5977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.076963	22229	5361
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.366296	185929	15094
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.291493	162	63	1.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	3.295998	1432	382	0.3.7.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.060762	19507	7388
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.675301	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.020120	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.113453	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.027838	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.039250	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.120171	48649	3876
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.125060	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.090343	27228	3605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.138671	24017	7501
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.108949	38338	9379
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.036484	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.046959	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.091267	33666	8815
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.414996	206724	11220
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.044115	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	28.395147	111927	8463	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.022153	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.340783	159958	9724
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.759176	382654	5997
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	41.057344	554733	5218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.045050	11164	3211
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	11.828022	5660	1009	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.012797	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.023037	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.218502	98627	11122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.093780	37353	4502
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.239389	33430	6550
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.234202	106108	8796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.128739	8034	3096
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.509292	76335	3447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.289036	17338	3216
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.023538	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.017493	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.112138	7	1	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.112262	39811	5471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.076120	25028	4626
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.349017	160224	7277
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.206373	91668	11574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.044188	8879	5218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.081538	8608	2395
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.742022	381342	3644
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.444508	216364	18133
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.009038	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.334062	146960	7788
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.634682	318113	23610
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.999126	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.104706	31350	5769
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.265384	122522	15965
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.083773	20616	4354
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.086145	22523	5029
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.181769	47994	5099
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.097288	17953	3540
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	17.489358	16417	4103	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	5.454578	1551	702	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.121923	41496	13509
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.326158	151906	11924
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.376835	174350	7803
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	0.356839	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.141791	56103	8966
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.054901	14511	3117
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.081245	25999	6925
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.028054	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.076488	30540	2592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.071573	19515	4962
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.333699	141844	19151
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.049088	11323	3679
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	1.760752	3110	455	1.1.17.1.1.1	synth with cache (only 1: induction n; only 1: intro p; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.306003	19527	3968
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	12.859297	6985	1733	0.0.5.3.6.0.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	1.637077	840	410	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.765655	649	157	2.3.1.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.208421	90607	4175
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.049383	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.004025	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.016737	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.004103	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.004311	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.006834	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.014182	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.021388	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.012417	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.036216	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.014247	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.009177	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.008527	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.009896	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.009900	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.007139	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.010639	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.013020	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.012642	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.011582	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.006520	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.031373	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.016568	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.017061	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.010550	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.023973	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.011945	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.042529	9063	2891
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.294266	13379	2797
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	41.008957	68231	808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.061841	18721	2540
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.192610	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.013066	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.085015	16956	3805
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.615043	314323	6736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.046633	8930	4406
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	4.758913	8649	662	15.13.9.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.260938	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.037346	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.022779	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.036691	4	3	0.1.0	synth with cache (only 1: destruct l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.145967	59299	3409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.082015	22351	3878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.066611	19386	3385
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.035847	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.040599	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.035652	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.135962	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.388988	184787	17357
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.008102	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.015453	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.007064	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.021805	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.233799	103872	10857
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.128711	52	29	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.235373	27213	6759
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.016289	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	1.717019	9662	278
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.007274	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.034814	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.036784	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.027068	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.490754	237	52	4.1.0.1.6	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.014556	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.023907	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.015793	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.175154	12815	3510
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.018577	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.154994	67089	14582
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.133283	17805	5368
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	5.173726	2029	895	0.5.0.0.0.2.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: simpl; only 1: now destruct l; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.011599	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	12.104749	4309	1283	2.2.3.1.0.7	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.076237	22757	3753
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.029198	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.562865	344	48	0.0.0.19	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.046693	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.157604	59519	9917
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.757432	49420	560
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	18.410128	16482	2336	0.0.2.9.2.0.2.0.4.0.0.9.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.010769	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.005475	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.691193	12025	490
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	12.097550	10771	1556	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.486892	232661	15867
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.303898	120736	10634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.134151	12378	2650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.064226	17257	3654
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.523955	27792	5444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.121237	3731	1619
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.226969	21078	4789
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.073529	19994	5622
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.442833	17503	6254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.074234	21120	3748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.066234	21868	4135
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.522165	253490	3621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.043267	10254	5460
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.386746	179761	3297
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.007144	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.026595	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.010565	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.014652	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.326727	139	20	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.017532	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.370623	12252	4365
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.589747	149	16	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.073317	21098	3488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.093878	31336	4922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.052364	13888	2775
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	16.626580	11249	2384	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.027529	2464	229	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.123934	38495	4855
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.881657	450409	9720
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.165363	13073	3210
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.209574	96562	14210
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.125901	27441	5250
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.139720	25783	8236
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.074690	22805	3868
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.271346	27283	3630
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	40.090375	29067	6746
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.108592	35845	10215
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.066099	18738	4352
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.631989	317316	3110
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.010687	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.065937	18436	7145
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.476343	221404	4799
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.808174	411048	5340
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.125973	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.221601	624797	5787
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	8.023368	7798	683	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.019423	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.058255	11691	5334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.048800	12429	2659
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.057516	16593	5879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.172318	22978	4640
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.083046	24185	5551
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.052841	12312	782
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.011320	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.037172	4	4	0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.072685	19402	4582
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.036976	7724	2737
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.360966	168150	4850
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.211657	85279	1989
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.032294	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.045813	12625	2650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.070339	19949	3803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.051671	8576	1710
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.065842	17103	5278
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.075999	21442	5935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.054311	8118	1858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.082822	10671	3897
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.104275	33644	5303
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.077074	27842	5819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.069075	18562	3063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.091156	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.053144	15055	2609
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.033492	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.116866	37530	5920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.056544	19823	2670
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.102910	37751	6758
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.230601	95347	3253
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.090108	17350	5870
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.065277	19479	5907
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.235656	97106	2123
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	0.930136	317	112	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: trivial; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.048583	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.139587	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.098093	15377	6506
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.025016	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.043036	13282	2638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.053165	17591	2122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.103138	35655	2786
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.057422	21040	5144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.056053	13245	4654
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.056696	14187	4476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.108768	39504	3027
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.059533	9910	3700
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.087157	27837	6676
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	27.032633	20415	3778	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.073258	22006	2997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.054931	16554	3671
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.178115	73552	3378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.071003	25138	3581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.086483	26553	4448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.033228	9935	2127
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.134914	53882	5279
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.089966	26857	6337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.074051	18858	4434
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.103046	42044	7037
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.082595	26910	4936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.044796	10805	2612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.075702	26341	5553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.051200	13148	2735
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.088213	31636	5231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.056392	14611	2955
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.044132	13483	3436
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.037945	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.090488	31122	4479
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.113385	45525	4643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.064913	16693	5289
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.009178	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	7.775394	4497	1161	0.0.0.0.0.0.0.3.0.1.0.0.13	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.048591	12607	4013
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.075134	24846	3844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.047659	16732	3792
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.060133	16310	3616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.062481	17604	4689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.076067	23943	4546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.062018	16377	4945
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.043042	11076	2153
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.088676	29400	7537
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.109600	42556	6351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.067861	22044	5642
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.178724	79066	4223
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.057989	12982	3197
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.060123	14254	3053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.079806	26948	5135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.061046	19468	4798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.074000	23898	4757
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.115716	49522	5817
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.116184	45149	4701
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.142022	55022	4910
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.085608	32898	3724
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.163714	79309	8712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.075793	30025	4505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.060813	21831	3620
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.179478	88009	7700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.063863	13198	3382
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.034977	11841	2336
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.116746	54788	7059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.045355	7841	2098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.068468	29579	5677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.059168	24093	4334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.090880	48208	6041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.073807	33610	5456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.055027	21423	4238
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.050975	21170	5946
