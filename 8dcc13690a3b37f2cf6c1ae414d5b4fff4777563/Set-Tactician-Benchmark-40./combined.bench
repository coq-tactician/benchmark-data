coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin2	40	0.042184	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.024200	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.P_Rmin	40	0.094105	20	8	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_R.Rcri	40	1.273871	445	45	0.14.8	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rsth	40	0.173700	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rcri	40	1.211542	524	78	0.16.4	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.095271	37537	5565
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.062330	25965	2628
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.034828	12834	2505
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.059829	24692	3845
coq-tactician-stdlib.8.13.dev	Coq.Reals.Binomial.pascal	40	40.040255	14152	2135
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.059932	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.038354	14997	3468
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C3	40	40.034257	11876	4617
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P1	40	40.132023	62629	7422
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.053149	20332	4791
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple	40	0.027109	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.096795	42327	4418
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.036672	10866	4350
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.included_trans	40	0.981298	876	145	10.5.1	synth with cache (only 1: intros x y z Hxlty Hyltz; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.000641	491	86	5.11	synth with cache (only 1: intros a0; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.071580	28589	5584
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.050399	18024	5089
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor1	40	40.115260	53739	4313
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	0.047117	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.061525	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.062689	26203	4660
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.090224	40178	5262
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.055182	19670	4458
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.035338	12197	4009
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.distance_refl	40	40.050656	20188	3050
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.057438	22285	3935
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.038272	13762	3602
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.506643	143	46	3.4.2	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.030152	10461	3028
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_ineq1	40	40.033686	11086	3319
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.172545	81345	4635
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.rotation_PI2	40	5.500864	1803	529	0.0.0.7.0.0.0.4.0.4.0	synth with cache (only 1: intros x y; only 1: split; only 1: pose proof PI_RGT_0 as H; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.023682	8699	2511
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.shift_value	40	0.033400	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.041218	15843	3039
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.032828	10181	3596
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.051573	20884	2915
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.tech	40	40.028638	9405	2564
coq-tactician-stdlib.8.13.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.619360	516	187	3.2.4	synth with cache (only 1: intros n0 H'; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.081126	35184	5805
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.C_maj	40	40.047338	17814	3131
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series	40	40.096926	40886	6014
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C5	40	40.024943	7586	3606
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.055085	22371	4811
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.053912	19759	4566
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P3	40	40.068088	28734	6290
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.complementary_P1	40	0.653361	550	86	17.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.044400	17052	4009
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.cos_plus	40	40.062346	19893	3040
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.046077	16999	4401
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.055824	21646	4039
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor3	40	40.047471	17778	4595
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	1.320882	345	137	0.0.0.0.5.1	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.093143	39147	4714
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.056569	21878	3368
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.068505	28338	4011
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.040751	15028	3470
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_Ropp	40	40.047809	15320	2688
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.044957	17528	3438
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.060515	25066	2817
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	14.157045	9125	1568	1.0.0.8.20	synth with cache (only 1: intros SF H8; only 1: intros H3; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.034097	12129	3167
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dx	40	40.079209	33888	5450
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.053162	22180	2838
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.frexp_spec	40	43.750460	53360	1327
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.028372	11342	1681
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.019933	7	3	1.0.3	synth with cache (only 1: simpl; only 1: intro x; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.044078	15625	3781
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech1	40	40.099631	43757	5127
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech5	40	0.010532	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.052766	22735	3167
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_2_3	40	40.033469	11731	2660
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.114054	30	9	1.0.3	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.growing_cv	40	40.086285	35369	7004
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Rsor	40	40.131972	60378	3834
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_plus	40	6.172235	3755	419	1.7.16.3	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro H; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.034382	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.262792	76	23	4.0.2	synth with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.072874	29496	5457
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	9.275902	2970	524	3.0.3.0.0.2.7.6	synth with cache (only 1: intros x y H; only 1: rewrite <- (Rplus_0_r x); only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.057434	22028	4140
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.068738	27499	4861
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.040240	14676	4370
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.036512	11500	4131
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P1	40	40.109526	47717	6417
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.038433	12164	4606
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.033818	10489	4348
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.057999	23467	3965
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.026781	7100	2237
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.042412	15743	3557
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.035337	11992	3850
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_exp	40	40.053386	19741	3358
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.057162	23550	3118
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.066192	24919	3388
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.AbsList_P2	40	40.061766	24497	4441
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.036939	10852	4479
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.028831	8468	3601
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dopp	40	40.048787	17986	4860
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.042768	17450	2465
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.124851	57199	5244
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.050136	18747	3108
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.894903	43311	2482
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.051265	18356	3305
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_O	40	0.008905	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.053100	21881	2724
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_1	40	0.119834	12	11	2.0.0.1.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech6	40	40.054983	19945	5195
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.040697	14534	2502
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_add	40	0.632161	83	51	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.035276	12776	2101
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech12	40	0.416645	150	51	5.5	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.121505	54225	5482
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Qle_true	40	40.087877	37883	4329
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	1.785622	166	82	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.071502	26327	6413
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.069852	26580	5161
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.061305	17540	2117
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.076209	31439	6078
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.087075	36660	5247
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	37.571940	12037	3614	0.0.0.2.0.0.8.8.0	synth with cache (only 1: intro; only 1: case n; only 1: red; only 1: auto with real; only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: discrR; only 1: fold pow; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.062797	24130	4830
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.093051	39429	6107
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P4	40	0.014697	2	2	0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.052876	18876	4524
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.059644	23999	4283
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	1.269655	580	123	0.1.4.0.0.1.1	synth with cache (only 1: unfold Rle; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros Eq0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.081903	34225	4239
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.050381	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.073057	27704	2833
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.079934	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.minus_neq_O	40	25.302060	19123	2845	36.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.029864	7982	4026
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	0.038626	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_inv	40	40.037074	13248	3641
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.IZR_nz	40	0.009442	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.le_double	40	3.135618	2306	389	0.5.0.0.0.0.1.0.1.0.16	synth with cache (only 1: intros a n; only 1: destruct a as [| a]; only 1: Nat.nzsimpl; only 1: intro H; only 1: destruct H as [H| H]; only 1: induction n; only 1: auto; only 1: constructor; only 1: assumption; only 1: intuition; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.MaxRlist_P2	40	40.064671	25228	2758
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.tech8	40	0.123008	11	4	5.0	synth with cache (only 1: intros n m; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.811801	855	340	3.0.8	synth with cache (only 1: intros pol; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.positive_derivative	40	40.037863	11917	4614
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.034973	12268	2999
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.063840	26849	3380
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	37.116029	37094	5018	4.6.15.10.0	synth with cache (only 1: unfold EUn; only 1: intros m'; only 1: red; only 1: intros H'1; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.DiscrR.IZR_eq	40	0.036919	6	2	4.0	synth with cache (only 1: intros z1 z2 H; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_refl	40	1.213639	1879	219	3.21.0	synth with cache (only 1: intros; only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.073504	30359	5319
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_le	40	0.295689	121	39	6.0.1	synth with cache (only 1: intros x y H; only 1: left; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_ge	40	0.511507	255	48	11.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_lt	40	0.008791	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.025947	7561	3216
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.039690	14404	2420
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.scal_sum	40	40.093510	41146	3972
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.021581	6309	2168
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.113008	50253	5763
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.082745	30787	3547
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.067917	24897	6238
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.067163	27054	4665
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.072918	28987	4382
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.056178	19460	3692
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.038432	13226	3755
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_P3	40	40.046428	15065	5008
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.050558	18378	3456
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	40.046335	15509	4842
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.052681	19730	4300
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.100417	42320	6223
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.060459	21886	3089
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_0	40	40.046638	15652	3949
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_pow	40	40.032778	10640	3106
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.fp_R0	40	40.111425	50183	3871
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.Qle_Rle	40	40.074838	31027	4340
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.015858	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P1	40	40.079325	31815	5001
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing	40	40.060459	22776	4158
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.093577	41611	3792
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.029380	10182	2898
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.028655	8904	3577
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.088613	37326	4595
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_minus	40	40.033002	10990	4541
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.115485	50474	4542
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.074818	5	5	0.0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_increasing	40	40.034763	12144	2940
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.poly	40	40.065854	23336	4843
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.plus_sum	40	40.074214	30943	3332
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.581826	774	210	0.3.5.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.Vn_growing	40	40.064232	23454	6914
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.not_Rlt	40	0.067394	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.065802	4969	683
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.548375	167	49	0.0.0.9	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.066971	25548	4980
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.078844	34086	5596
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.036995	13217	3795
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.039207	13885	4724
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Rsepare	40	40.058569	21783	5328
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.224442	102580	5750
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.105461	45265	3589
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.259053	132357	3659
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.044804	15094	5225
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.family_P1	40	2.779981	3028	416	7.2.1.5.9	synth with cache (only 1: intros x y H; only 1: red; only 1: intros; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	40.050773	14833	6968
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.053523	19	6	0.0.0.3	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.050956	17852	3086
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.039836	11677	3485
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P6	40	6.538625	8034	1298	16.0.6.7	synth with cache (only 1: intros n m p (q, Hq); only 1: intro; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.094740	40841	3691
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_lt	40	40.058820	20843	3607
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	3.040576	1370	218	0.1.0.0.0.8.8	synth with cache (only 1: intros n; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.base_fp	40	40.082249	20793	6538
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.041414	17035	1795
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P2	40	40.074123	27740	5176
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.null_derivative_1	40	40.042302	13418	4896
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.036995	14154	3070
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.081460	33738	4070
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.040141	14806	3614
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	29.582587	59535	4787	0.0.12.13.8.27	synth with cache (only 1: intros p1 p2; only 1: intros H1 n H2; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.093290	22	7	0.0.0.3	synth with cache (only 1: induction m; only 1: intros H'; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.022828	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.021017	6609	1353
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.031009	10685	2883
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.077783	30492	5813
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_eq	40	40.064898	26107	4147
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	2.780061	1922	295	1.6.13.0	synth with cache (only 1: red; only 1: intros l2; only 1: intro n; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.060899	22479	5159
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.164528	30	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.036828	5	4	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.015876	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_asym	40	0.041344	8	5	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.approx_min	40	40.042587	14270	4408
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.145210	40632	3671
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.052417	17493	6370
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.049247	18603	5253
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.358952	75	32	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.310947	43596	5498
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.IVT	40	40.058339	23120	4499
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.059785	25352	1914
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.071439	27696	2839
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.049914	18711	1361
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.043028	13708	4768
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.095049	39255	3631
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.062367	66	14	0.9	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.118739	48378	5948
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.023381	6572	3444
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalZ.of_iff	40	40.365994	38432	4487
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.073857	28461	3944
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	1.905580	883	269	1.0.1.0.0.3.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros n; only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.compact_EMP	40	40.233120	113379	6165
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	1.916549	929	228	2.0.0.0.1.7	synth with cache (only 1: unfold Rle; only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_period	40	40.037021	11721	3065
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.062899	17	7	0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.047965	16228	3671
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.073773	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.077379	30223	5573
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.012939	2	2	0.0	synth with cache (only 1: intros a n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P3	40	40.044981	15102	5134
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.058706	22316	4781
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.033408	11436	3032
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.129037	56645	5295
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.046640	18566	2487
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.014325	4409	471
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.040591	14348	3751
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.397054	196	56	4.0.0.3	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intro l'; only 1: intros N; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.116951	53183	5597
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_cte	40	40.051664	18140	3395
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.155565	69872	6429
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_antisym	40	40.279512	25086	3433
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_le	40	0.800062	174	76	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.023545	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.219866	314	156	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.481978	1057	173	14.3	synth with cache (only 1: intros n m s1 s2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.039924	12	6	0.1.1.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace y with y'; only 1: replace x with x'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.UL_sequence	40	40.059582	21523	3991
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_trans	40	0.301765	44	12	4.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.068176	25240	5445
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	6.276955	4025	690	2.1.0.8.3.10	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros def_n0; only 1: intros H0 ?; only 1: unfold Rge; only 1: intuition eauto  3).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.068971	23802	2091
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_dec	40	0.152432	9	4	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_dec	40	0.172174	9	4	1.1.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.051132	3	3	0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.066375	25410	4889
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.060941	24784	4163
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	3.704040	1485	595	1.1.2.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: apply Rsqr_incrst_1; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.031853	9166	1099
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.110925	46824	4238
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	13.050845	7658	669	19.8.0.9	synth with cache (only 1: destruct x; only 1: intros; only 1: destruct y; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.043739	14761	2998
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.099652	33639	3916
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.081149	32079	4385
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	31.405743	5499	1487	0.2.0.3.3.1.5.2	synth with cache (only 1: intros; only 1: Nat.induct ltac:(n); only 1: split; only 1: simpl in *; only 1: intro l; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.008651	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.236183	116829	3004
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.018520	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	2.667189	1041	364	4.1.2.0.2.2	synth with cache (only 1: intros n m; only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.070905	27302	3408
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.026470	5	2	1.2	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.743275	823	236	7.5	synth with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.044494	14993	2898
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.029879	9430	2991
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.075814	27045	6503
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.040596	12205	4548
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.760038	1982	342	1.27	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.105020	44807	4633
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.041373	11452	3163
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.172405	523	83	0.23	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P6	40	40.055197	19843	4691
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.715133	558	116	12.2	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.025993	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	4.039528	1486	654	2.4.3.2.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: edestruct Rle_lt_dec; only 1: eauto with rorders; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.063986	26064	3428
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.GP_infinite	40	40.063394	23737	5009
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.043889	15282	2893
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete	40	0.021776	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.044298	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.023415	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.312386	62	39	0.1.2.0	synth with cache (only 1: revert q; only 1: intro m; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.frame_tan	40	40.042728	15849	2892
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.111940	50396	3899
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.102764	45857	3838
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_mult	40	40.065675	25628	4068
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.076532	29354	5012
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_plus	40	40.092663	36481	5244
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	17.706112	6656	1489	0.0.0.6.0.5.0.0.2.2	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: intros; only 1: case (Rtotal_order 0 x); only 1: auto with real; only 1: intro; only 1: rewrite <- Ropp_0; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.106100	46524	5007
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.216100	59432	3459
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.123330	54183	4754
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.019084	3	2	1.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.101576	43094	4382
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.056202	21196	5162
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.R_uncountable	40	40.151935	63225	5029
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	1.058320	279	83	8.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.130402	58520	5352
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.413115	63713	3293
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.055096	20119	4331
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.077191	31169	3827
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.044480	15655	2689
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.limit1_ext	40	40.032066	10899	2803
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.065262	4	3	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.033823	3779	610
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.033696	10882	3846
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.039941	11458	4642
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.086754	33888	4040
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P7	40	40.050448	15825	5555
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.158383	76401	4770
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.034405	8759	3791
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.091636	42442	2660
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.CV_shift	40	40.081617	34786	5308
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.050067	18640	3046
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.088403	37840	2464
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.100907	41370	5971
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.043997	15961	3327
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.052529	7994	1617
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow1	40	40.075021	29504	4086
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.082630	11	4	0.3.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.063162	21125	5945
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.061738	22514	4702
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.073430	25790	5181
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.101796	42690	5352
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.073867	30031	4062
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.081572	34121	4636
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.068477	27863	2496
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.051951	16295	4844
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.027022	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.153924	12	12	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.018870	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.050893	17680	4391
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.044283	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.059418	21014	5560
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.108305	45099	4554
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.884018	25679	3161
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	4.208207	9844	514	1.1.0.4.50	synth with cache (only 1: intros H; only 1: destruct H; only 1: now auto with arith; only 1: now auto with arith; only 1: now auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.050982	17124	3637
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	22.168710	66776	505	3.13.3.0.0.13.324	synth with cache (only 1: constructor; only 1: easy; only 1: red; only 1: intros; only 1: intuition; only 1: compute; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.180762	83502	4239
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.041336	13837	2298
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Dln	40	40.024614	7025	3303
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.069715	24856	5234
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.041351	13572	3958
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P8	40	40.069966	12480	3295
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.189351	87883	4996
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.adherence_P4	40	2.649016	2260	425	0.2.10.2	synth with cache (only 1: do 2 intro; only 1: unfold included; only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.050788	15507	4762
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.022996	2357	528
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.056064	21853	2765
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.057995	20409	4554
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.066278	26158	3663
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.883882	123	55	0.0.0.1.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	18.018482	31304	2422	1.51.0.0	synth with cache (only 1: intros n bv; only 1: induction bv as [| h n bv]; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.in_int	40	40.028767	8560	3471
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.073824	28346	4589
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.759862	1276	85	24.2	synth with cache (only 1: intros m IH; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.037148	13119	2769
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.067889	25284	4232
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.229114	103568	10184
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_mult	40	40.036669	10571	4436
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.039359	13252	3987
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.080850	30074	6354
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	19.001438	10750	2340	0.0.1.6.0.2.0.0.4.0.1	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real; only 1: intros H1; only 1: apply Rminus_diag_uniq; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.111794	17397	3103
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.198122	38533	3631
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.042727	16482	4248
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.027622	3	3	0.0.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	23.292440	14731	2025	7.8.12.6	synth with cache (only 1: simpl; only 1: intros Hn; only 1: intros l; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.049148	18313	3740
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.109205	46382	4492
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.091501	36519	5399
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.406609	19738	1843
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	15.520930	4572	2145	0.2.1.6.0.1.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: intro; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.104152	47235	2307
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.400340	20	8	0.1.3.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	12.423653	4957	1493	0.3.1.0.4.1.0.0.0.2.1	synth with cache (only 1: intros l a; only 1: induction l as [| y l]; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl; only 1: tauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.121602	53258	3473
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.061915	21887	5536
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.011016	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.032848	10970	2825
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.055627	19523	4049
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.948839	569	86	17	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.052910	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.044852	14984	3172
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P9	40	40.067429	25219	4917
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P18	40	0.103080	23	11	0.0.0.0.1	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.domain_P1	40	40.054509	23907	1701
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_imp	40	4.857539	1506	429	5.2.7	synth with cache (only 1: intros x y z; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.039937	14134	1318
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.227828	19840	2773
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.069494	26533	3835
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	8.768103	6608	1174	14.14	synth with cache (only 1: rewrite <- Z.eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.118083	51673	4921
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.066196	26906	3082
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.025155	8541	2810
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.059203	23397	2823
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.158268	74404	1737
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.014389	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.039352	8248	1740
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech9	40	40.072145	26222	4683
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.051815	16057	4068
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.112160	33897	4064
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.055468	21970	2613
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.055046	21649	2168
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.105795	13	4	0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.022219	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.073382	7	2	0.5	synth with cache (only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.009031	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0	40	40.047495	20344	1162
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.071249	27739	4809
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.062105	10153	1979
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.067953	26155	2912
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.138483	62940	4896
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.090390	36275	2846
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.113471	50671	4960
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.062093	20982	4089
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.087870	37509	2143
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.059727	17391	3740
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	7.583310	15996	581	0.6.0.2.0.0.2.87.8	synth with cache (only 1: red; only 1: generalize 1%positive; only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: split; only 1: now Z.nzsimpl; only 1: apply gt_wB_1).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.019035	2705	967
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Heine	40	40.081081	31163	5489
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_ext	40	40.030123	8491	2983
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.048090	13344	4578
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.069810	5837	2325
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.136064	21884	2854
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.110714	45679	4762
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.038699	7380	1371
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.025398	7130	2744
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.102783	40335	4851
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.015041	4	2	0.2	synth with cache (only 1: intros n bv; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.076156	29407	4430
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.031416	7829	2085
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech13	40	40.094780	39221	4488
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.046336	15882	3826
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.032378	7896	1431
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.078136	31664	4033
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.132379	61607	4031
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	40.279998	137460	1271
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.100689	42913	3869
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.071008	27724	3263
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.078845	30880	4937
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.038152	2	2	0.0	synth with cache (only 1: Bool.destr_bool; only 1: field).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.261552	3801	357
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.064801	23914	4122
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.072222	43	8	6.2	synth with cache (only 1: intros; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	40.103044	39880	4438
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.115034	52206	2209
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.073120	27463	4757
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.128292	57125	5032
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.064521	23635	3280
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.070469	11	4	0.0.1	synth with cache (only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.073891	25920	4767
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.083820	32669	4900
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	8.296241	3951	948	6.0.10.0	synth with cache (only 1: unfold permutation, meq; only 1: intuition; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.859809	1265	228	16.3	synth with cache (only 1: intros x y; only 1: apply Z.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.148730	69691	4808
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.057797	21652	2759
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.018017	3304	1062
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.047939	17066	2945
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.042753	10	4	2.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.044803	11988	4401
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.040649	9987	4620
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.016304	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.068653	27255	3097
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.096981	39451	4513
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.965463	1416	57	51	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.656793	66	47	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	5.700156	5537	1134	18.0.3	synth with cache (only 1: intros a ?; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.086960	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.059288	15	5	1.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.041004	8	5	0.3.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.024569	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.046022	17245	2713
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.082708	32725	4387
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.079877	30179	4105
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_minus	40	40.039687	10349	4397
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.099679	38886	4287
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.051582	16995	3240
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	10.406208	3250	1249	0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.040304	7721	1345
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.065887	14	6	3.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.200780	51	14	0.3.0.2.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.066528	12862	2387
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.067301	27716	2816
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.073187	30709	2163
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.134571	56583	5386
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.078153	32892	3328
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.037413	6	3	2.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.064726	24452	2810
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.127643	53605	5899
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.080267	9	3	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.025713	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.023182	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.027255	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.058105	20724	4371
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.127070	57979	3126
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.130934	57503	2317
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.123647	55556	2637
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.151839	64491	5284
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.307252	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.035365	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	18.822650	11631	1085	1.7.25.2.1	synth with cache (unshelve (only 1: intros; only 1: apply subset_1; only 1: intros ? H1; only 1: eauto with set relations); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.121023	4	4	0.0.0.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.069440	26597	3618
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.082655	30837	4754
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	2.052273	368	220	3.3.0.1	synth with cache (only 1: generalize (F.mem_iff s x), (F.elements_iff s x), (existsb_exists (F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.136064	11	3	1.5	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.332190	378	21	27	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.029208	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.017799	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.085589	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.427194	19	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.006042	3	1	2	synth with cache (only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.103310	5	4	0.0.1.0	synth with cache (only 1: split; only 1: intros ->; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.087611	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.093167	3	2	1.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.108885	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.102416	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.044844	14483	2686
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.102034	4	1	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.161609	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	1.014237	67	58	1.0.4	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.558215	39	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.345362	15	6	0.3.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.055029	6	2	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.054762	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.066679	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.444171	14	8	0.0.1.2	synth with cache (only 1: intuition; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.076528	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.078506	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.064417	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.450477	16	4	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.105637	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.040947	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.067294	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.039610	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.497718	33	13	0.7	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.484747	22	7	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.486004	17	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.025804	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.026208	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.066662	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.039928	12093	2841
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.670663	1071	52	1.43	synth with cache (only 1: intro H1; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.066320	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.404501	179	37	8.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.091515	22765	2504
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.617067	28	17	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.268224	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.826820	366	74	1.19	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	7.624744	8920	766	2.2.10.23	synth with cache (only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_0	40	40.063154	22012	3047
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.087459	35647	5386
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.036285	11948	2773
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.095496	36181	4070
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.150900	36106	1752
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.031089	10121	2425
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.023910	5953	1663
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.060515	13504	3556
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qabs.Qabs_Qinv	40	0.507009	137	64	0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: simpl; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.032805	8783	3743
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.108655	44256	4160
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.021806	6930	1012
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.075337	24409	4113
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.203078	92025	4939
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.065835	23317	5214
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.092687	37366	4388
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	1.008157	2543	71	5.64	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.309403	52	33	3.3.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.023766	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.075429	30032	3470
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.109278	44418	3993
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.067579	26714	5105
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.038962	12270	3001
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.067266	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.929881	769	116	2.15	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.030009	8	4	0.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.122964	21984	2689
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.071251	27936	5194
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.076719	31348	3158
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.128864	57716	4337
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.094880	36569	5647
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.030514	9685	2554
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.075234	31020	2601
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	9.242648	2828	530	3.7.0.8.3	synth with cache (only 1: intuition; only 1: destruct H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	2.108987	517	254	0.1.0.1.3.0	synth with cache (only 1: unfold Rle; only 1: destruct 1; only 1: left; only 1: auto with real; only 1: elim H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.087406	34520	6500
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.025311	4987	3491
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.114129	44433	4360
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.152604	64298	5462
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.585621	663	53	33	synth with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?(EnvRing.Pmul_ok Rsth Reqe ARth CRmorph)).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.092009	18	4	0.3	synth with cache (only 1: intros P; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.471367	36	8	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.074429	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.063044	23248	6966
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.060415	22051	5472
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.063433	22221	2451
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	6.410660	5937	714	6.21	synth with cache (only 1: intros a b c0; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.086012	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.032640	11376	2995
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.029145	9754	2637
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.077697	27611	4771
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qsor	40	40.067312	26195	3636
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.115860	17103	3669
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.038532	11668	3824
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.060264	22780	2088
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.086616	30167	4547
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_le	40	40.127540	24221	3230
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.087810	32998	5468
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.124031	53979	3858
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	40.028425	4794	2809
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.510618	60	44	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.056114	19759	3952
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.135171	55472	4280
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.104767	45633	5525
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.390738	79	38	0.6	synth with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.104928	29	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.038832	10163	2906
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.097289	39444	3664
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.095500	135	20	4.6	synth with cache (only 1: intros a; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.498759	178	56	1.11	synth with cache (only 1: intros IH m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.482955	37	9	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.081366	15	3	5	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.064682	24215	3337
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.158171	68583	4996
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.025001	11	3	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.076117	25427	6490
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.010796	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.092314	3	2	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.132656	4	2	1.1	synth with cache (only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008663	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.013217	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.009070	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.046898	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.144709	46441	4442
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qred_iff	40	40.072649	26686	4332
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.011464	2	2	0.0	synth with cache (only 1: destr_bool; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcge_alt	40	0.062638	5	3	0.2.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	4.160145	864	428	1.1.1.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.036627	10134	2096
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	7.281253	9380	1072	7.20.9	synth with cache (only 1: intros n m p Hp Hn Hm H; only 1: apply H; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex2	40	0.005739	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex6	40	0.016842	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.099932	42324	7615
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex7	40	0.700697	433	57	0.13.0.3	synth with cache (only 1: red; only 1: simpl; only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	23.653326	18065	1416	0.2.1.7.1.8.0.0.0.3.5.12	synth with cache (only 1: intros m p; only 1: destruct p; only 1: intuition subst; auto with qarith; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl in *; only 1: reflexivity; only 1: split; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.QNpower	40	0.027898	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.091238	36824	5574
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.071430	28943	2466
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.374903	186742	1658
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.096703	33866	2057
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	24.530148	3801	2249	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.138250	50	5	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.011844	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.017957	4	2	0.2	synth with cache (only 1: intros Ha Hb; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.067959	24382	3340
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	9.870545	13649	1696	0.0.28.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.208477	93153	5607
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.064640	23801	4704
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.274513	205	35	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.065892	51	6	9	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.048030	16988	2792
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.120718	50254	3929
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.024716	6897	2937
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.043774	13671	3397
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.031825	9094	3577
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.058028	18775	3764
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qle_ceiling	40	40.089723	22521	3427
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.053759	16671	5180
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.191431	88461	2801
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.068340	26881	3405
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.103292	43697	4280
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.041435	6377	1772
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.055157	14415	2011
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.128519	53395	4565
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.109134	46589	4009
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.115030	49907	4848
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.009316	2	1	1	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.046675	12395	3619
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.044704	16	4	0.4	synth with cache (only 1: intros e1 e2 EQ; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.068553	23827	5007
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.150191	66447	5741
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.166576	23	14	0.0.2.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.368551	122	43	0.0.0.0.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.075976	28994	3749
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	3.340225	1586	445	0.0.0.9.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.197895	13694	1890
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.065593	22903	3111
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.364814	182501	1365
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.177696	82023	4358
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.092225	40739	3808
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.119238	46911	6121
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.073915	26121	5288
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.207012	18764	2248
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.198479	85008	9404
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.082033	31664	6884
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.019590	5181	2344
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.065106	19849	5856
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.117767	13705	2638
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.021564	4364	2974
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.042910	15009	2952
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.147522	60994	4079
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.106250	40268	4725
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.053647	15349	5444
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.080623	32241	2426
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.147003	66882	4776
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.077612	29959	4224
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.081630	32491	3398
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.317479	30671	2895
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.087000	29799	3172
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008884	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.013098	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.009446	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.020951	6602	1055
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.243012	112887	4225
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.122674	162	28	2.2.5	synth with cache (only 1: intro Hxz; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.083288	31390	5364
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.018392	7	3	0.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.096533	40292	1569
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	2.115331	705	189	0.0.7.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: rewrite Pos.mul_comm; only 1: f_equal; only 1: simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.166560	72851	5438
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.096993	36595	4894
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.078338	31119	3739
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.067918	26262	3444
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.127222	55705	4603
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	5.099697	3276	482	0.2.3.6.12	synth with cache (only 1: intros n; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	0.042238	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	3.282865	2448	487	2.2.0.0.12.1	synth with cache (only 1: intros HP HIS; only 1: intro x; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.061688	20241	3567
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.129727	56480	4573
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.179914	83006	4520
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.202764	22771	2977
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.080234	28045	4343
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.010361	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.105614	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008808	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.008162	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.011296	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.007928	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.010122	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.156313	20	4	1.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.017197	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.174663	81265	6427
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.422110	8153	2021
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.155761	67881	3621
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.362644	1011	204	10.7	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.114771	47575	5326
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.034194	10670	2672
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.020766	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.017463	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.027497	7089	3265
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.020220	4658	2072
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.198534	12261	1576
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.128273	55607	3137
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.121055	47041	4790
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.050346	15871	3775
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.098973	37416	325
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.089646	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.043993	16532	2355
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.302295	152765	1439
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.061900	22292	3606
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	5.873320	9695	617	4.2.2.41	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.027812	8229	1530
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.097783	35245	3314
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.043117	10204	6234
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.107685	30081	2394
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.137949	53969	5743
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.065151	24897	5388
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.006190	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	40.135632	52487	10883
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.043892	13904	3334
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.316393	78	29	0.2.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.069617	24112	4433
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	38.581443	17149	2601	30.0.1	synth with cache (only 1: intros n m p; only 1: qc; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.127022	24	5	7.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.017144	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.265065	446	117	0.0.1.0.5.1	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.110238	46414	4572
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.058971	20404	3334
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.080795	33903	3454
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.isZ0_0	40	5.819234	2837	891	0.0.0.0.0.0.6.5	synth with cache (only 1: intros a; only 1: destruct a; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.230534	103236	4692
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.025642	7	4	0.1.1.1	synth with cache (only 1: intros E; only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.191673	954	190	0.0.6.0.7	synth with cache (only 1: simpl_relation; only 1: apply fold_rec; only 1: intros HF; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.102841	40562	5348
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.041064	17165	1355
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.079872	32560	2652
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.285874	14	13	0.0.0.0.2.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.145508	61365	5757
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.085408	30532	6112
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.027062	9979	2732
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.928158	371	123	14	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.160703	70420	3574
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.027088	6749	3378
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.072412	26176	3367
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.058632	20500	4066
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.027728	5384	613
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.037203	11669	4444
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.076018	26103	5785
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_correct	40	40.084088	33352	4766
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.073344	30649	3981
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	2.528958	1615	233	1.0.17	synth with cache (only 1: intros l1 l2; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.057930	18622	3511
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.167754	80	20	1.6.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.316243	19	7	0.0.0.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.170794	73571	3023
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.095743	36479	4861
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.140159	62695	4713
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.113292	50129	3940
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.157040	72216	4270
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	9.101748	5038	766	2.10.5.8	synth with cache (only 1: intros Eq1; only 1: unfold Rsqr; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.274455	131382	3998
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.078105	26598	5467
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.025269	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.033146	5	4	0.0.0.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.038239	12783	2999
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	40.142143	65419	4862
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.073679	29005	3833
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.112450	47186	4522
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.663602	113	46	0.0.0.0.0.4	synth with cache (only 1: intros v; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.077461	27942	3196
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.124699	51727	3731
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.085159	30475	4473
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.021558	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.100379	42039	3977
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.094013	36573	4852
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_one	40	40.073592	25629	6543
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.029113	15	5	2.1.2	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	40.054620	14937	6232
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.032325	7660	4905
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.152050	67753	5191
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.PI_ineq	40	40.033875	12350	2830
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.113841	45369	8397
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.163435	42	27	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.151360	61719	3213
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.030990	7453	4106
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.059813	19742	3676
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.016858	5636	681
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.069155	16677	759
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.045340	14303	4257
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.025168	1	1	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.060565	22354	3833
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.053282	6089	1157
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.388177	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.086660	31159	4970
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.094035	37583	5867
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.120286	51419	3501
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	29.588796	32594	3603	8.0.2.4.2.0.0.0.17	synth with cache (only 1: intros a b; only 1: intros; only 1: apply fold_rec_bis; only 1: intros; only 1: auto; only 1: intuition; only 1: intros; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.051307	22773	1531
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.348859	171685	4339
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.079116	31023	4251
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.048255	14570	4422
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.046740	16428	2355
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.137717	60048	5166
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	2.390952	351	132	4.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.978513	23394	3673
coq-tactician-stdlib.8.13.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.042220	10823	1710
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.070011	25936	3216
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.153649	69614	5488
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.236309	110220	5709
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.792799	3864	622	22.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_trans	40	40.123982	53806	5820
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.110502	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.050762	13283	5946
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	6.622251	6169	1063	4.0.0.0.1.12	synth with cache (only 1: intros a b c Hc; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.026023	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.061028	20343	2096
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.093205	31268	4222
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.078226	26438	7147
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.109229	42111	5147
coq-tactician-stdlib.8.13.dev	Coq.Logic.Epsilon.iota_statement	40	40.209838	102027	6880
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.512718	1726	275	1.9.6.2.4.2.1	synth with cache (only 1: split; only 1: firstorder; only 1: auto; only 1: red; only 1: intros s; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.164644	72647	6408
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.114634	47465	3771
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.026151	5594	3433
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.106447	43888	3164
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.047274	13344	4661
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.075610	32083	2305
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.071227	22755	8405
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.095222	4920	1266
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.265797	124417	7261
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.010540	3647	357
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.048113	14417	4848
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.074122	29840	5144
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.075835	26503	2712
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.056393	19777	4837
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.169727	74285	6616
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.213904	98625	2983
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.032354	8542	1592
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.110439	44724	4084
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.117972	52079	3275
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.261699	153	40	0.0.1.4.0.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.096067	34108	6093
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_trans	40	0.081726	15	7	2.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.246683	105	25	7.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.pr_nu	40	8.686677	5699	1115	0.0.1.0.3.3.3.0.1.2	synth with cache (only 1: intros r1 r2; only 1: intros l1 H; only 1: elim H; only 1: simpl; only 1: unfold derivable_pt_abs; only 1: elim H; only 1: intros; only 1: destruct H as [l H]; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.110097	43321	4702
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.190145	92092	2231
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.064077	14	6	0.0.2	synth with cache (only 1: intros E; only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.029329	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.065339	23622	3803
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_lb	40	40.114864	50833	7728
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.068614	23448	5508
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.065950	23687	1729
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.219126	107699	1673
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.018642	3	2	0.1	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.053342	19721	4341
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.121803	44845	3658
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalChoice.choice	40	40.211686	97941	7198
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.100176	41577	4817
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.136212	55147	5455
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.025634	6	4	1.0.1.0	synth with cache (only 1: unfold singleton; only 1: intros n m H; only 1: rewrite add_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.210299	93962	2767
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.054653	19155	2926
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.089068	33063	3366
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.072551	29995	2907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.050852	16713	2352
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.075641	23820	6461
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.168013	76577	6328
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.055003	13311	1289
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.185379	92623	2450
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilZero.sis	40	31.384875	15502	4941	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	29.418557	21156	2793	0.3.0.1.46.0	synth with cache (only 1: intros; only 1: pattern s; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003209	714	279
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.073522	29795	6008
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	24.544506	14937	2601	0.1.15.11	synth with cache (only 1: intro n; only 1: intros H; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.097147	38354	5207
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.790566	544	89	13.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.027867	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.134506	105	14	13	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.078911	27799	7579
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.127577	56900	5779
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_alt	40	40.089624	35490	4911
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.074858	29885	4611
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.192795	36680	4046
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.079431	30358	5724
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.226472	103103	5887
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.358416	132	46	0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.050693	16460	6918
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_ub	40	40.089158	31834	7517
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.082052	34669	2961
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.061256	22376	3110
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.083832	33081	5257
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.106330	40605	4809
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.085166	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.308805	73	36	1.1.0.0.3	synth with cache (only 1: intros m; only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.097316	39782	2524
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.089702	35608	5473
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.764762	289	97	1.0.0.2.1.1	synth with cache (only 1: destruct s; only 1: intros s x y; only 1: trivial; only 1: intros; only 1: apply <- union_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.309102	151541	6920
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.043281	12581	2970
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.040408	12804	3125
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.073149	25831	3868
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.062241	22517	5185
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.069051	25597	3783
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.392856	17593	3136
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.091106	6	4	0.2.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.097670	41271	4010
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.122243	54504	5915
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.013400	3152	957
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.066484	23550	2648
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.060666	23437	3858
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.037814	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.004702	1754	190
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.055687	20186	5241
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	11.955412	5836	1094	1.4.1.10.6	synth with cache (only 1: intros m Hm x y e; only 1: simpl; only 1: unfold IfEq; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	40.097623	37808	4600
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.167332	76216	3154
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.073970	25771	6616
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.191537	90	19	8.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.075747	28954	4160
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.096571	38396	5632
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.077373	30629	5017
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.078961	23076	4375
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.085409	33472	4852
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.098986	35486	5230
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.127744	53965	4619
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.062023	17497	4200
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.016177	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.055880	9	7	2.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.115117	49286	5234
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.039110	9497	4719
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.068561	23954	2257
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.087866	35406	5200
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.091299	37197	3229
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	40.051318	14789	4514
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.086487	31796	4944
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.063843	19	6	2.0.1	synth with cache (only 1: intros a b q **; only 1: rewrite inter_spec; only 1: PeanoNat.Nat.auto').
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.039170	11653	3260
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	43.444241	12263	1836
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.045833	16327	3555
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.077514	24235	2809
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.073359	23542	6548
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.070404	28151	3455
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	36.299626	725	148	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.200819	84572	9529
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.031071	9155	998
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.110969	44065	4066
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.050813	19611	2625
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.006894	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.339995	38	4	10	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.004518	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.076987	29171	3875
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.112389	45131	4863
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	40.087754	29952	6240
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.067473	23077	4777
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.025207	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	4.394665	3063	495	0.1.0.12.3.1.6	synth with cache (only 1: induction m; only 1: intros; only 1: inversion H; only 1: inversion_clear 1; only 1: auto; only 1: intuition; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_trans	40	40.120605	48117	6723
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.021532	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.030837	9	5	2.0.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.085425	32608	3638
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.081159	34297	2605
coq-tactician-stdlib.8.13.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.098242	38903	3716
coq-tactician-stdlib.8.13.dev	Coq.micromega.Ztac.elim_concl_eq	40	1.112950	862	191	3.4.7	synth with cache (only 1: intro H; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.076500	27957	4164
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.060975	20075	5164
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.261450	128096	2586
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.070474	29619	4001
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	1.477656	228	175	0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.140830	61822	4556
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.136472	59486	5262
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.133379	57369	3302
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.065351	13	8	6.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.110182	44116	4257
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.080027	30956	3078
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_refl	40	40.084284	31806	3401
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.093991	35923	5327
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.116210	50021	7139
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.069258	24975	3385
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.262784	130261	4885
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.068522	27130	4289
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_lt	40	40.124625	46982	3605
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.085337	34669	2671
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.156966	71497	2570
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.034110	8	3	0.5.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: now try Z.order').
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.008535	3183	146
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.255176	121646	9033
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	1.044215	584	150	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.088232	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.042518	8164	2576
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.111553	47154	1840
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.010062	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.706014	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.020492	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.091417	36492	2918
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.060844	18471	4104
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.046369	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.077378	27646	4490
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.059143	20528	2610
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.119934	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.141668	61308	4176
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.068837	24220	3748
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcpower_0	40	0.366813	164	42	0.1.0.6	synth with cache (only 1: induction n as [| n IHn]; only 1: intros; only 1: tauto; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	3.071830	2389	316	1.1.1.0.1.0.0.0.8.1	synth with cache (only 1: rewrite !Nleb_Nle; only 1: destruct a, b; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: simpl; only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.258888	7132	1209
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.065252	20260	6382
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_minus	40	0.837106	249	80	0.1.4.2	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.103278	42631	4509
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.034262	7051	5197
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.103529	41843	676
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.330146	162297	4724
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_spec	40	40.186737	70902	1233
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.088862	33207	5205
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.114006	43792	5469
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.104233	37395	3515
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.142839	60969	1695
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.094498	26568	3785
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.092444	37674	4545
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_sym	40	40.110019	44991	4174
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.090381	31563	2767
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	4.544256	13304	591	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.007004	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.022496	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.128759	51942	6517
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	5.451409	1593	383	1.4.2.3.1.0	synth with cache (only 1: repeat red; only 1: intro l; only 1: simpl; only 1: intros n H; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	11.024811	16921	1511	0.0.0.37.0.0.2.0.0.0.0.2.0.0.1.2.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.008937	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	2.946535	4497	429	33.0	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.064530	18720	807
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.421989	197582	2777
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.083740	30769	4558
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.124803	55539	2052
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.093192	37588	3961
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.072197	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.118010	50481	4023
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.004067	802	163
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.089670	16137	1971
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.175238	8423	1219
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.byte_dec_bl	40	40.122420	31478	1297
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.056983	16649	3675
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.106702	113	20	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.135222	56712	4708
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.109903	30616	3656
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	1.514102	1259	89	11.26	synth with cache (only 1: intros f g H l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.625366	217	62	0.8.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.872076	182	41	0.10	synth with cache (only 1: intros L R n; only 1: now apply Zis_gcd_sym).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	1.798619	2148	181	23.20	synth with cache (only 1: intros X; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.085205	30992	4416
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.155147	65179	4507
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.054803	17830	2744
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.158951	14913	2165
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.063003	21315	6349
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.031622	6217	4629
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.107628	43638	3687
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_refl	40	40.154249	66820	3473
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.039348	9765	3745
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_eq	40	0.239133	24	13	0.0.0.3	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_neq	40	0.013680	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_compat	40	0.025441	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.not_prime_1	40	14.149455	16661	1555	63.22	synth with cache (only 1: Z.nzsimpl'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.060329	17746	3821
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.029971	12	4	2	synth with cache (only 1: now intro n; induction n).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	2.116145	671	55	13.12	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.003537	1270	262	5.3.2.3.1	synth with cache (only 1: intros; only 1: destruct n; only 1: discriminate H; only 1: vm_compute in H; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.085930	33850	4115
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.177278	67	15	8	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.093916	36495	4738
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_eq	40	40.074755	24098	7739
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.141832	58228	5127
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.find_left_path	40	40.101527	30644	4152
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.162928	71886	4877
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.061245	23999	2976
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.071879	28891	1726
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nless_def_2	40	5.817073	2933	1173	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.075470	25607	4233
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.138048	59155	2704
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.095057	38049	4439
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.120199	19	6	0.0.0.2	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.076093	28477	2960
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002900	1018	106
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.174713	76652	7315
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.043910	13044	1423
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.082779	30948	2592
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.128345	26691	3674
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.162172	70851	5356
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.148515	61918	3116
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	5.840838	3571	730	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.100651	35640	2162
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.051377	19235	536
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.239786	23904	2775
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.064049	20624	6201
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	40.047973	17675	2249
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.104207	37125	4059
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_0_1	40	0.050980	6	4	0.1.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.028369	5983	4610
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.057155	22639	2085
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_plus_1	40	0.885539	280	103	3.5	synth with cache (only 1: intro q; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.064396	24759	2859
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.046416	15914	3061
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.619484	1748	229	2.2.20	synth with cache (only 1: intros a Ha; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.089704	5259	506
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.075164	15640	777
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.S_INR	40	6.279991	3957	612	0.10.1.16.0	synth with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.089025	32569	4867
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.075788	27883	4571
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct1	40	40.111659	39329	7204
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.834715	1001	151	6.1.2.15	synth with cache (only 1: intros n'; only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0.143893	50	15	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	28.052570	8504	1645	0.6.0.0.0.0.5.0.0.1.0.0.1.13	synth with cache (only 1: nzinduct n; only 1: Nat.nzsimpl; only 1: destruct m; only 1: auto; only 1: simpl; only 1: f_equal; only 1: intro; only 1: split; only 1: intro l; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.063940	21775	3066
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.071357	24997	4441
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.124236	52165	2835
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.065239	20632	3046
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.492189	21	8	0.0.2.0	synth with cache (only 1: intro n; only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N0_less_2	40	40.117848	48467	5026
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.098761	42122	3311
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.072226	24839	4544
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.009652	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	5.638139	6643	850	0.23.3	synth with cache (only 1: intros; only 1: red; only 1: eauto with set).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	0.875022	307	69	0.0.1.3.0.11	synth with cache (only 1: intros; only 1: destruct x; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: rewrite (same_gen Rsth Reqe ARth); only 1: let rec rrefl := gen_reflexivity Rsth in rrefl).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	27.023851	26700	1675	106.3	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.923306	13329	271	0.0.140	synth with cache (only 1: red; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.086292	10	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.085519	31145	3594
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.154030	66446	5025
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.037990	7251	5552
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001376	234	75
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.096084	38550	1894
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.155484	65416	4863
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.081962	27281	4604
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.098392	33916	4566
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.371046	183071	7573
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.160593	280	121	0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.069325	23867	3694
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.108812	43056	5650
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.110282	24575	2187
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N	40	40.078430	23036	1601
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.032783	7108	5288
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.141437	62897	4444
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	25.430210	36397	3445	8.1.0.13.20	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite diff_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.062783	18215	5945
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.095536	38169	4997
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.023427	5239	2120
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.plus_INR	40	40.039937	13921	2629
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.083593	34932	1888
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.069458	26144	3269
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct4	40	40.126027	51946	6912
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.172642	74240	4766
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.155762	65862	4812
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.044494	16149	3802
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.114832	45565	7557
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	37.755429	9327	3775	0.11.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.063915	24693	3452
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.062444	23801	2020
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.062857	24551	2124
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zabs.Zabs_dec	40	1.053103	512	93	2.3.2.2.1	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.046582	12900	3329
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	4.954739	11170	859	38.4	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.012177	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.148201	63805	6047
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.010201	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.162361	82320	542
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.031664	6974	4041
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.019276	7	2	5.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.013596	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.041518	12536	1360
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.022496	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	0.822399	326	36	15.0	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.070542	24982	4487
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.081538	29185	2858
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.153494	68485	5252
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	19.494633	8696	2279	1.5.0.0.0.1.1.1.6.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.078862	17	9	1.1.0.1	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000743	78	30
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.075611	25587	3693
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.007440	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	1.080139	265	111	0.0.0.4.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.080453	27541	6226
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.173739	33637	3751
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.027771	5672	4159
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.167551	76864	3664
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.118543	11473	1162
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.034495	9527	3640
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.280697	24064	1963
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.092372	38403	3053
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.236823	109615	4052
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.minus_INR	40	40.068689	25866	3274
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.032641	8588	3430
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.096048	36308	5009
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.126586	54860	2268
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.142998	61081	5001
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.237461	44075	5131
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.078834	29212	5312
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	23.398361	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.034298	10838	1257
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.073099	27312	1397
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.101452	39888	2686
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.096395	38501	3322
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.053069	18567	3036
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	3.204508	640	358	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.085024	26771	7660
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.047720	8564	936
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.049779	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.227843	51389	4955
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	19.135111	32305	644	144	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.227341	39627	4283
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.115247	47364	4760
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.229961	105788	4003
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.086238	37078	3935
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.053760	15531	2086
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.066016	19559	5265
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.065675	21730	3563
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.064044	19098	6016
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.794929	35174	3531
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.045345	11356	6228
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.100425	40287	5640
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.056670	24543	1827
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.007961	4	1	3	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.058127	21378	4351
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	0.029782	2	2	0.0	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	0.105167	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.086661	34816	3836
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.677786	2289	446	0.0.1.0.13.4	synth with cache (only 1: intros; only 1: intros H1; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.078868	30382	3616
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.012405	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.078736	28591	5259
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_INR	40	40.036592	11860	2583
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.065575	22175	5059
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.039794	6	4	2.0.0.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.370288	185763	2883
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.072396	31189	1455
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.106496	41873	7245
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.128622	48290	6136
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001049	162	44
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.015839	3478	962
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.076329	20669	1053
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.069596	25444	3899
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.057438	16717	5148
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.035693	10804	2593
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.092203	32302	6158
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.434846	23564	2841
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.232777	46868	4110
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.033237	7891	1183
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.089953	35630	3779
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.058756	17721	4385
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.050860	16830	2099
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.076913	24463	5368
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.046872	18137	2974
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.087891	33833	4324
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	9.187243	10535	834	39.0.5	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.071748	23867	2469
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.099337	38792	3874
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.093211	36611	5371
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.089884	36141	3412
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.093801	41691	2141
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.093554	37859	3892
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left	40	40.312497	42480	3828
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008707	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.090366	33060	6658
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.lt_0_INR	40	40.082388	31524	5017
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.093159	36670	5035
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.239641	92006	3990
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.199470	89888	9261
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.286639	134214	1693
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.063592	18922	5379
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.130463	56616	4317
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.811531	203	34	4.0.0.12	synth with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.093275	35281	6800
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000817	68	36
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	2.747286	1330	355	0.0.0.0.0.0.0.0.0.0.9.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: now Nat.nzsimpl; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.020417	4720	2111
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.018081	5324	1044
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.098412	36171	5864
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.046544	13183	4011
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.033351	12107	1132
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.098244	38134	5166
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.119119	6897	858
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.056687	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.068443	24725	1656
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.272053	55011	5391
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_pos	40	0.166559	41	7	10	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.282122	152	29	5.10	synth with cache (only 1: intro Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.902416	328	65	0.0.13	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.093348	24664	4907
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.049412	17129	2119
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.076914	25975	5468
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.174761	13560	1152
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.074182	25492	3630
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	1.644213	771	209	0.3.1.1.3.2	synth with cache (only 1: intro l; only 1: unfold singleton; only 1: intros n; only 1: rewrite InA_cons; only 1: intuition; only 1: inv).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.090301	33106	2918
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.089288	34527	4100
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.013575	9	2	2	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.080021	12	4	3.2	synth with cache (only 1: unfold Z.le, Z.max; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.076809	31323	3562
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.040598	9644	4454
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.305521	156	45	4.0.7	synth with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.162064	68459	5703
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.019620	4504	928
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.095092	37414	4684
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	40.332032	31534	3856
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.117636	44771	4554
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.072848	21804	6150
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.121253	53824	4599
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.172567	63782	3801
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.118771	50160	3872
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.350542	170273	2542
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_INR	40	5.286480	2584	738	6.2.0.0.6	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: auto with real; only 1: intros n0 H1 H2; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_not_0	40	0.089607	12	9	2.1.0.0.0	synth with cache (only 1: intro; only 1: Nat.cases ltac:(n); only 1: intros; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.254790	2568	412	7.6.0.7	synth with cache (only 1: destruct m; only 1: intros H; only 1: eauto; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N_nat_Z	40	0.953155	428	95	0.1.0.0.0.0.0.1.2.9	synth with cache (only 1: destruct n; only 1: split; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.037589	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_N_nat	40	0.015222	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z_nat_N	40	1.298020	234	71	0.5.0.0.0.8	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: Nat2N.nat2N; only 1: Nat2N.nat2N).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj	40	0.993291	297	98	1.0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007409	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.121881	25693	6419
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.234584	11	3	1.5	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001225	243	42
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.034855	10107	2687
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.355599	7608	1516
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.092124	33855	3659
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.092892	33118	4155
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.100479	41410	1171
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.134513	60651	6384
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.125940	56393	2074
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.030957	7428	2922
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.068048	27308	3199
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.063418	23695	1270
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.086494	32340	6853
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.024226	6	3	0.3.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	5.032739	6451	758	0.0.3.0.3.0.13.10	synth with cache (only 1: intros q; only 1: induction q as [q IHq| q IHq| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.975241	612	88	0.15.0	synth with cache (only 1: intros H; only 1: rewrite H; only 1: apply negb_involutive).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.063612	21142	4379
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.265012	12200	2062
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.051456	8962	2605
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	16.345583	21227	2693	0.0.0.0.0.0.0.0.0.0.0.0.0.0.44	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.018755	6530	1099
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.126053	30799	3767
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.050376	15243	4259
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.066250	26253	3469
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.054648	19481	2960
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.not_Zne	40	40.116988	48360	4048
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	4.832932	436	146	5.0.2.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: intro n; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.074249	27646	3184
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.300525	33968	2420
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zge_left	40	0.465992	225	29	0.14	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.051812	12741	5340
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.029761	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.028828	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.131434	58946	3829
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.189301	65954	3218
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_eq	40	40.080557	29194	4683
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.194810	12914	1958
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.345386	168071	5402
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.059226	19048	4850
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.408747	89655	2535
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.029055	7353	3028
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.not_1_INR	40	6.429904	1008	376	0.9.3.0	synth with cache (only 1: intros; only 1: intro abs; only 1: elim H; only 1: now apply not_INR in H).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.065743	23704	3629
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003179	430	54
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.074253	27828	4204
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.198964	28024	4018
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.122643	55722	2075
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.097183	39403	4316
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.124139	30	19	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.032604	9494	1817
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.049768	9503	1788
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.196840	24652	3737
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.188063	92906	1644
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.053891	14926	4175
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.080576	29660	4475
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.102054	27091	6293
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_jump	40	0.576543	450	76	0.11.0.0.3.0	synth with cache (only 1: unfold tail; only 1: induction p as [p IHp| p IHp| ]; only 1: unfold hd, nth, tail, jump; only 1: trivial; only 1: trivial; only 1: now BinNat.N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_pred_double	40	0.016678	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.090664	28762	4169
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	40.158918	74288	5730
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.018248	5	3	0.0.2	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.023189	3	3	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.015009	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.060809	17568	6076
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.062989	18018	2176
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.022435	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	14.938964	13577	2609	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.5.0.9.1.0	synth with cache (only 1: induction a as [| l IHl o r IHr]; only 1: unfold compare, equal; only 1: intros EQ; only 1: destruct b as [| l' [| ] r']; only 1: simpl; only 1: trivial; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: destruct o; only 1: intro; only 1: discriminate; only 1: simpl is_empty; only 1: rewrite <- andb_lazy_alt, andb_true_iff; only 1: intros [Hl Hr]; only 1: destruct b as [| l' [| ] r']; only 1: simpl compare; only 1: rewrite Hl, Hr; only 1: trivial; only 1: simpl compare; only 1: trivial; only 1: simpl compare; only 1: rewrite (IHl Hl), (IHr Hr); only 1: simpl; only 1: case (is_empty l'); only 1: case (is_empty r'); only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.062601	22272	4218
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.115226	45760	4924
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.058582	22346	3086
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zge_trans	40	0.159273	33	12	0.3.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.115992	51583	2276
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.115099	44210	5464
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.008731	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.008575	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	9.199843	19817	1525	18.0.0.0.0.3.1.18.3.0.0.0.0.0.18.16.32	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.354301	55146	2380
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.086115	32792	4671
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.272235	63888	3756
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.086106	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.075244	25715	5853
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.191706	69502	3313
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.219727	65355	6639
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.192622	49096	3114
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.393148	31762	3665
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	12.883954	9124	2099	2.1.7.0.0.2.1.5.2	synth with cache (only 1: intro l; only 1: induction l as [| z l IHl]; only 1: intros P H H0 l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_IPR	40	40.075611	28302	3667
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.080512	30077	4291
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.110161	44520	5315
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.046926	13497	3428
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.023163	5	3	0.2.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.004377	608	82
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.019402	3	2	0.1	synth with cache (only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.010080	2	1	1	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.079950	32187	2081
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.022999	5919	2303
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.112111	46160	5544
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.518563	7477	2489
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.074837	21413	4324
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.035949	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.036030	9664	2908
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.034012	5713	2554
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	3.697366	6942	461	4.0.13.36	synth with cache (only 1: induction 1; only 1: eauto; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.039194	12596	2651
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	34.574820	34591	3019	0.0.0.4.1.3.2.0.27.0.1.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: destruct c; only 1: simpl; only 1: destruct f1; only 1: intros f1; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.171440	22398	3648
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.065231	21105	2518
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.079166	31270	4557
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_dec	40	35.125654	69982	4096	1.3.0.4.0.2.13.3.0.4.0.0.0.10.117	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: left; only 1: simpl; only 1: auto; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto with relations; only 1: destruct p; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_comp	40	40.058154	22863	2568
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.065156	24806	3623
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_assoc	40	0.881190	337	91	2.0.0.0.2.3	synth with cache (only 1: intros a b (Hb, Hab); only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: do 2 f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.089804	37175	2956
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	1.032805	891	109	0.0.7.11.3	synth with cache (only 1: unfold Z.lt; only 1: intros; only 1: reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.108274	27109	2530
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.033081	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.007105	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.006900	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	9.706692	8130	1029	9.1.5.11.1.7	synth with cache (only 1: destr_bool; only 1: intro n; only 1: induction s; only 1: simpl in *; only 1: inversion 1; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.184534	57610	4181
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_succ	40	6.956924	7955	469	0.0.23.13.17	synth with cache (only 1: unfold Z.leb, Z.le; only 1: intro H; only 1: contradict H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.063482	23170	2101
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.020850	5	2	0.3	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.015063	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.157808	52839	7036
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.151073	10165	3144
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.168264	26020	7702
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.137329	59359	5939
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.709349	66452	2697
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.007718	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006780	1	1	0	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.009669	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.010927	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004551	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005782	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.186073	38033	4601
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.083520	7	3	0.4.0	synth with cache (only 1: intros x y; only 1: intro l; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.149063	39572	4909
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.108069	33	12	0.5	synth with cache (only 1: intro m; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.017470	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.070456	4	3	0.1.0	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.093184	15	5	0.1.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	22.028635	40353	2966	0.0.7.3.23.0.18.11	synth with cache (only 1: destruct p as [a0 b]; only 1: intro H; only 1: compute in H; only 1: rewrite H; only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.135696	32418	6927
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_IZR	40	40.036611	11781	2239
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.827090	1156	237	11.3.2.2	synth with cache (only 1: intros x y z H0 H1; only 1: intro H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.068262	26702	3615
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.705604	115	56	0.0.0.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.094060	36124	5389
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	6.958352	2110	975	0.0.1.1.0.0.0.1.1.1	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.042817	7623	2571
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.001474	67	36
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.047747	15108	1413
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.117842	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.013452	3007	1920
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	6.844413	2181	317	2.3.1.9.2.13	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.063801	19423	4517
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.997915	11924	2138
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.033288	8844	1555
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA8	40	30.769588	25922	2230	1.22.17.3.0.0	synth with cache (only 1: destruct x; only 1: intros c Hc IH; only 1: auto; only 1: intros m Hm; only 1: easy || now destruct y; only 1: now destruct 2).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.104002	13467	2755
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.072531	26162	4827
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.328797	101081	3781
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.894609	93	30	0.0.9	synth with cache (only 1: red; only 1: intros x x' Hxx' l l' Hll'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.048933	14616	2574
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.028811	9587	1615
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.100195	39248	4847
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	5.346017	2744	664	1.2.0.1.0.0.4.0.0.0.7	synth with cache (only 1: intros m x; only 1: intros hyp; only 1: induction m; only 1: simpl; only 1: intros e' eqfind; only 1: intuition; only 1: destruct a as (x', e); only 1: simpl; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.576139	96	54	1.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.075117	25103	2617
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.013460	3	2	1.0	synth with cache (only 1: intro q; only 1: now reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_quot2	40	6.625996	1801	468	0.0.3.0.4.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros a Ha; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.030293	8573	2062
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.123027	22533	4797
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.076874	21087	3146
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.033484	11986	2031
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.102325	38360	3626
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.166610	76500	5005
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.145051	69051	6096
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.221063	17401	3945
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.167682	56514	5062
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.090655	35595	5179
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.129025	31061	7078
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.succ_IZR	40	40.050458	17148	4007
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.103820	38768	4219
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.145603	40143	7123
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.013603	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.069532	25120	7020
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.041462	16863	1875
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.059281	18987	5379
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.051300	16159	4840
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000695	63	36
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	9.982860	16775	869	6.2.6.2.0.3.93	synth with cache (only 1: N.induct ltac:(n); only 1: trivial; only 1: intros n IH; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.050936	18757	1462
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.036330	10943	1265
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.043234	14805	1043
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.104777	44140	3774
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA16	40	2.428613	6767	118	2.0.111	synth with cache (only 1: Z.bitwise; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.130664	50771	6881
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.171532	29364	4503
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	40.145264	18191	3062
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.075217	11080	1782
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.050055	9438	1722
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.590909	255	42	0.0.1.1.1.13	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.106609	42088	4774
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.058697	18693	4437
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.071821	28162	2489
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.042087	13306	1034
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.057986	15147	5567
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.045063	11288	4319
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.102092	41323	4921
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Z_R_minus	40	29.508778	13339	2631	0.12.0.0.3.8	synth with cache (only 1: intro t; only 1: intro; only 1: unfold Z.sub, Rminus; only 1: rewrite <- opp_IZR; only 1: symmetry; only 1: apply plus_IZR).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.043232	15646	2639
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.011342	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.065733	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.010460	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.121765	53354	4436
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.129184	27368	2623
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	5.869710	4727	701	2.3.0.0.6.13	synth with cache (only 1: intros n m; only 1: intros a b c Ha Hc; only 1: case Z.compare_spec; only 1: intuition Z.order; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.418689	182218	7124
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.114841	43705	7799
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.118214	14647	2512
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.201936	69261	2906
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.034357	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.066568	10637	2073
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.200994	89482	7851
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.080003	16822	4345
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.086354	34701	4659
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.022044	4	3	0.1.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.075223	23543	4117
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.022542	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.068261	23721	3317
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_2p	40	15.990453	6684	1517	1.1.0.3.16.5	synth with cache (only 1: change 2 with (1 + 1); only 1: destruct p as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: auto; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000796	71	34
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.332869	38369	4563
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.id	40	0.026785	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.018412	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.011197	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.034590	11990	1438
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.065690	25968	1500
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	3.249203	1553	403	10.1.1.4	synth with cache (only 1: unfold Z.le, N.le; only 1: intros Hn Hm; only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.088715	32568	4632
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.009750	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.131800	28819	4717
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.105827	43343	4248
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.203896	21597	5235
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.171877	23008	3059
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.037349	6	5	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.127493	52058	6469
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	29.240479	13960	3909	0.0.1.0.0.1.0.8.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.164778	36945	5141
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.072599	25048	2935
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.113218	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.076394	25604	5337
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.033736	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.285306	23	5	1.5	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.356254	153790	6140
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.008049	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	22.682526	20094	1081	0.0.2.0.13.0.0.1.66	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: split; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.072721	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.046666	12261	5021
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.458252	270	55	9.6	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.187710	88958	2641
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.039070	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.eq_IZR	40	40.067929	23536	5431
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.134096	75	27	1.0.0.6	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.051602	19941	2967
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.048592	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.025064	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.021795	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.264439	101718	7017
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	2.845155	1540	579	0.0.1.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zle_compare	40	40.172000	74012	6117
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.619400	205	62	0.0.0.2.1.2	synth with cache (only 1: repeat red; only 1: intros l a; only 1: intros; only 1: subst; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.472423	289	63	1.0.7.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	14.333921	19474	2622	24.8.6	synth with cache (only 1: intros; only 1: compute; only 1: firstorder using Sorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.134241	51540	7059
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.020180	287	133	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: split; only 1: intros Hr; only 1: inversion_clear Hr; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.123967	34225	3694
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.157360	125	12	0.15	synth with cache (only 1: intro n'; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.023743	5	4	0.1.0.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.056312	20121	4056
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	1.454871	2108	205	14.18	synth with cache (only 1: intros a; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.187024	34488	4672
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.105318	16634	5970
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.638902	578	137	0.1.7.5	synth with cache (only 1: intro; only 1: invlist InA; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.101123	38127	3698
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.162158	68751	6095
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.178334	33302	4303
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.091067	33820	4923
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.033291	7925	1837
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.266469	65	18	1.0.0.5	synth with cache (only 1: repeat red; only 1: induction l; only 1: Bool.destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.010772	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.019475	9	3	5.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.008439	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.007234	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.028184	8811	1793
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.033781	11816	1895
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.166947	37031	4475
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.071966	25503	4053
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.145948	68378	2263
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	22.926038	16947	4125	3.0.1.1.0.0.0.4.9.9	synth with cache (only 1: intro l1; only 1: intro l; only 1: induction 1; only 1: tauto; only 1: simpl; only 1: intro H2; only 1: intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.124972	41326	6569
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.008599	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.121936	46501	2631
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.104624	41976	6203
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.223027	65047	4591
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.145554	51266	6523
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.063512	23259	3636
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.147240	31094	6278
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.121098	51313	6292
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	36.683094	26048	2443	2.0.0.2.0.2.4.0.0.0.3.0.0.0.2.0.16.2	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.swap_greater; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: discriminate; only 1: simpl in *; only 1: easy; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: destr_eq H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.039419	11481	1516
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.164786	43303	5423
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_0_IZR	40	40.076113	27872	4440
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.648521	143	61	0.0.2.0.3.0	synth with cache (only 1: unfold eqke; only 1: intros; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.266526	90787	6468
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.068282	23439	4513
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.208420	13804	2771
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.074720	25554	4857
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.image_empty	40	3.843593	2625	551	3.3.3.0.0.5.0.5	synth with cache (only 1: intro X; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.13.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.269973	130753	1997
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.127155	29936	4320
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.147399	39424	2890
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	32.832934	42679	5075	2.4.29	synth with cache (only 1: intros EQ; only 1: intros A B f g <- H; only 1: eassumption).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.052781	18028	3930
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.145500	64050	4464
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.107630	47732	3805
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.070185	26647	4145
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.089546	32388	4996
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	8.167661	3610	614	0.2.1.6.1.7.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.049561	15	7	0.0.2.1.0	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.094614	37756	7033
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.020406	5625	1709
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.022702	6680	1614
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.071421	24516	6164
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.031863	8	4	1.1.2.0	synth with cache (only 1: destruct n as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.043797	14143	1454
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	34.713343	57166	3637	2.0.5.12.11.4.26	synth with cache (only 1: split; only 1: unfold eval_cnf; only 1: intros pol; only 1: destruct pol; only 1: simpl; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	12.383990	5979	1767	8.1.0.0.2.1.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.064868	21219	6188
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.125164	46929	6413
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.564915	280250	1952
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.073617	27995	4745
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.134626	57091	8553
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.158497	30238	5367
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.068810	20454	4479
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	8.324217	10071	651	66	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.173337	6801	1014
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.009408	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010094	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.012760	2	2	0.0	synth with cache (only 1: red; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.007930	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.077081	15243	1441
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.149887	65789	5421
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.008834	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.049262	10108	4072
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.IZR_ge	40	40.084574	33855	3664
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.235297	84762	5243
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.067140	22460	4574
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	0.702228	455	81	11.0.1.0	synth with cache (only 1: intros; only 1: intros k e; only 1: apply H with k; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.068275	23686	4257
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.209247	62	23	0.1.0.0.1.1	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.201028	94337	7305
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.opp_succ	40	20.752386	24760	4162	0.0.0.0.0.9.0.0.0.38	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: induction p as [p ?| p ?| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.011951	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.max_r	40	1.754196	789	302	4.2.0.0.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.014282	3	2	1.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.025685	6	4	1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.466591	239	56	12	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	0.416807	86	19	9.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.016156	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.030258	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.089722	35844	6108
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.044547	11735	1727
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.074313	30841	4525
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.066674	24501	4585
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_alt	40	40.219747	97821	7119
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.135087	58572	8230
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.039179	11859	3525
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.079824	9573	1847
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.077361	28623	851
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.009824	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.220120	102315	8713
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.091152	98	14	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.414786	32	12	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.648013	1247	205	36	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.142505	11	5	4.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.581014	353	82	12.0	synth with cache (only 1: intro q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.035741	13124	1886
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.024803	8628	1075
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.081613	30586	4993
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.009983	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.814213	113	66	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	7.099920	13468	1362	3.13.27	synth with cache (only 1: intro k; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.133792	112	20	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.472126	173	39	0.0.1.1.9	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.093710	34049	5021
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.758424	128	48	1.1.1.0.1.0.0.1	synth with cache (only 1: constructor; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.055775	16949	5968
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.647912	259	26	15	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.135505	27585	6115
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.749839	175	38	4.8	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.519735	1391	234	2.2.1.10.0	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: now N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.029310	3	2	1.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.021656	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.052494	21324	2501
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.055432	20193	4462
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.135144	55709	5482
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	4.381113	1598	302	1.0.0.0.0.21	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.058042	21905	3549
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.297197	121816	6749
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.081886	33141	3831
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.109339	39433	5114
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.759788	957	306	3.0.0.4.1.0.3	synth with cache (only 1: destruct l; only 1: auto; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.064000	24449	1977
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.037127	11461	2512
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	26.276442	13638	3163	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.333746	71	30	4.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with relations; only 1: auto; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.040035	14545	1992
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.170219	42	21	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.070525	28085	5867
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.242828	87875	5378
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.095384	41099	3513
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.265640	121478	6291
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.116033	48391	8315
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	4.099887	3163	757	0.0.3.1.5.1.0.0.0.3.2	synth with cache (only 1: intros; only 1: case (M.is_empty s); only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder; only 1: intros; only 1: case (M.elements s); only 1: unfold elements; only 1: intros l' H; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.082470	14913	1889
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.210657	94657	4497
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.071451	26687	5172
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.045396	12465	5123
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.153918	47943	6873
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.130689	53510	9943
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.030944	7561	3857
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.145508	37561	5740
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.028134	6	4	0.0.1.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_impl	40	14.964378	7021	2868	1.0.1.0.1.3.0.0.0.5.0	synth with cache (only 1: intros A eval l; only 1: induction l as [| a l IHl]; only 1: intros HE; only 1: simpl; only 1: tauto; only 1: intro H; only 1: simpl; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.163505	23374	6363
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.028244	10483	872
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.033658	6833	1635
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.109938	46776	6071
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	40.074355	28544	3901
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.270242	123011	2820
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.117237	29702	6457
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.009182	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.011780	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.116707	9	6	2.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.886011	3348	212	53	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.058698	12554	2774
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.118411	47558	5407
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.170928	36198	6961
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.155119	58560	5762
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.045269	15722	3078
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_refl	40	0.719561	713	31	37	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.082289	31296	4637
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.011839	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	0.324955	388	42	0.2.13.0	synth with cache (only 1: intros m; only 1: case m; only 1: induction m; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.185203	74128	3358
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.133349	29560	6190
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.359088	185	40	1.9.1	synth with cache (only 1: intros x y H; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.013624	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.034887	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.032229	9292	3525
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.044368	13426	4325
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.133777	52739	4131
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.double	40	0.934010	342	72	4.7	synth with cache (only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.103439	37785	7590
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.126852	22114	1940
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.213533	456	221	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.070840	25690	5612
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.083669	31020	6050
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.054076	12824	2400
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.145858	15896	2561
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.097890	18	12	0.1.1.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.elements s); only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.025645	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.039221	6	5	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || intros _; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.123180	52028	5038
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.246442	113715	4675
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.121356	49209	6551
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.130178	52127	8057
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.309012	145319	6171
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.275861	11065	2385
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_rapp	40	40.093868	33765	7542
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.086318	32829	5519
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.024809	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.111993	44963	7813
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.not_make_conj_cons	40	3.009782	645	301	0.0.1.6.0	synth with cache (only 1: intros A eval a l; only 1: rewrite make_conj_cons; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.017595	5444	1586
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.048389	15552	3285
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.166475	21199	5974
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.106587	24677	7374
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	2.174853	942	261	1.0.1.0.1.0.0.13	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.109846	39560	498
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.146463	61767	7760
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.016016	3715	1791
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.212493	97900	5577
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.077367	30774	5006
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_trans	40	40.100993	41576	5153
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.097450	22133	5105
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.681073	225	69	1.0.2.1.3	synth with cache (only 1: intros X H'; only 1: intros a b Hb; only 1: apply Setminus_intro; only 1: assumption; only 1: auto using (Noone_in_empty U) with sets).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.737711	291	106	1.0.3.3	synth with cache (only 1: intros a n v; only 1: intro m; only 1: intros <-; only 1: exact v).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.439260	218063	6581
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.discr	40	14.952683	37302	3502	0.59.1.1.20.43	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: auto; only 1: left; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.051900	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.007675	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.100962	40222	5113
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.237502	22322	3700
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.id	40	0.959206	586	90	0.0.3.8.2.4	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n as [| n H]; only 1: auto; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.076013	56	17	0.6.0	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.717129	179	57	7.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.022217	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.036523	2	1	1	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.153959	65996	5118
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.056408	19412	5674
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.090144	34209	7289
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.165243	73939	6238
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.077326	28784	6021
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	7.254701	8741	1892	1.13.0.5	synth with cache (only 1: intros A P; only 1: intro all; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	9.329300	6215	1310	2.1.4.0.8.0.9	synth with cache (only 1: intro l; only 1: unfold eqk, eqke; only 1: induction l as [| a l' Hrec]; only 1: auto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.075243	26326	3619
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.destruct_list	40	40.486734	251285	1979
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.043804	15053	2582
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.132920	31725	3905
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.075615	28581	5596
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.045075	17	6	3.0.1	synth with cache (only 1: intros a b c **; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.241233	112645	3873
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.084395	22289	4740
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.157512	31402	3593
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.115326	42233	9183
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	27.086101	12347	3572	2.0.1.4.2.1.1.0.0.0.0.0.0.0	synth with cache (only 1: induction l as [| x l IH]; only 1: intros; only 1: assumption; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: subst; only 1: intro H; only 1: apply in_eq; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.193100	20993	2720
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	3.915502	1485	341	0.0.0.0.13	synth with cache (only 1: intros b Hb a; only 1: rewrite Z.div_exact; only 1: zero_or_not b; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	23.824284	16073	2944	0.4.8.4.1.5.2.1	synth with cache (only 1: intros X Y H'; only 1: elim H'; only 1: elim H'; only 1: intros x YX; only 1: elim H'; only 1: intuition; only 1: elim H'; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	1.965116	811	217	0.0.10	synth with cache (only 1: intros a b H; only 1: apply Z.mod_opp_l_z; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	6.699379	4750	1100	0.0.3.1.3.3.1.1.0	synth with cache (only 1: intros s s' x; only 1: case (M.union s s'); only 1: unfold inter; only 1: case M.empty; only 1: intro y0; only 1: case (M.remove x s); only 1: intros n m p Hp H; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.079547	29408	6666
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.031933	10870	1339
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.225204	108444	2912
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.178188	19395	6726
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.078611	21966	6479
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.117677	50374	646
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.088099	29632	5411
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.082139	31061	4677
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	30.249841	47472	4842	0.0.0.10.2.1.2.11.4.3.0.0.2.5.2	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: invrb; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: invrb; only 1: now auto; only 1: invrb).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.049408	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.167530	73388	4631
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.059817	21739	2167
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.zerop	40	0.371214	156	40	6.0.0.2	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map_2	40	40.083907	31373	4641
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.bi_induction	40	40.200808	93407	8979
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	10.627775	36599	926	2.91.0.6	synth with cache (only 1: unfold elt in *; only 1: unfold singleton; only 1: red; only 1: ok).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	21.943860	29167	3335	0.19.12.2.3.3	synth with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold get, push; only 1: unfold empty, get; only 1: intro H0; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.223416	101097	5343
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.083299	32464	2793
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.NNPP	40	40.361675	171405	9488
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.012263	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.of_nat_ext	40	40.208724	91001	4566
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.092137	36630	7014
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.287043	135384	12436
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.222682	10666	1935
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.056899	20905	3193
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.239651	111790	6694
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.240966	16484	6127
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	1.659260	1803	274	18.6	synth with cache (only 1: intro; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.009323	2	2	0.0	synth with cache (only 1: unfold hd_error, tl; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.059968	21001	3194
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.170951	84	25	1.1.4.2	synth with cache (only 1: induction l; only 1: simpl; only 1: now split; only 1: now discriminate).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.079965	17118	4787
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.083787	31405	4576
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.070323	23584	4982
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.066944	25052	2516
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	21.489768	25692	3219	0.1.2.0.0.0.4.0.18.1.1.42	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a; only 1: auto with arith; only 1: intro m; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	30.184969	15644	5259	1.0.0.0.0.0.0.0.2.17	synth with cache (only 1: intro l'; only 1: intro l; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.211844	101929	6715
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.052418	16708	3876
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.eucl_dev	40	40.159875	68794	6209
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.162160	70982	8930
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_length	40	8.422135	5777	1561	2.3.1.0.0.1.0.10.4	synth with cache (only 1: intros; only 1: induction l; only 1: destruct l' as [| y l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_eq	40	0.097186	44	21	0.3.4	synth with cache (only 1: simpl; only 1: intros a b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_cons	40	0.026879	5	4	0.0.0.1	synth with cache (only 1: intro y0; only 1: intro l2; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.020354	5	3	0.2.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.019299	4883	1644
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.101442	43759	4772
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	2.888174	1306	594	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.142056	38802	8111
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	12.713791	8672	1827	0.0.0.5.4.5.5	synth with cache (only 1: intros x Hin; only 1: intro Ha; only 1: intros H; only 1: elim Ha; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.092732	15	9	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	10.875302	7415	2525	0.0.0.0.0.0.0.0.2.12.1.0.1.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: right; only 1: reflexivity; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.151898	26694	1847
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.085758	29617	6077
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.uniquify_map	40	40.075865	30121	6852
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.863147	330	158	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1 as [| ? H0]; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.110136	45396	7453
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.107112	44108	6075
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.026777	6	3	3.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.081464	34012	3888
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.025485	5	5	0.0.0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	2.710428	1517	579	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.8	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.153354	61943	5650
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.306176	89	35	0.1.1.0.2.0	synth with cache (only 1: destruct t; only 1: intros H; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.083838	34788	3025
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.106946	39832	5812
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.148180	33160	3965
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.289915	146220	2001
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.096663	31870	7255
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.154774	68247	6425
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.120026	50215	9026
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.202549	11101	2843
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	8.271980	5686	1545	0.0.0.0.0.0.0.0.0.0.0.2.1.10	synth with cache (only 1: revert p; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.053852	20179	3014
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.L_R	40	7.516358	15888	730	21.6.18.12.0.0.0.79	synth with cache (only 1: destruct m as [| m]; only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: simpl; only 1: PeanoNat.Nat.nzsimpl; only 1: now PeanoNat.Nat.nzsimpl; only 1: PeanoNat.Nat.nzsimpl; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.285940	42632	4400
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.037642	7541	3046
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.039989	10144	4945
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.655532	93	47	0.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.175126	59359	3106
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_0_discr	40	6.294061	12328	1093	26.1.8.2.20	synth with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	19.027148	5690	1637	9.0.0.6.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	0.912672	282	136	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	1.558772	5374	201	1.0.6.0.42.32	synth with cache (only 1: split; only 1: now Nat.nzsimpl'; only 1: red; only 1: intros L R n; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.081470	31311	2432
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_dec	40	40.137165	61158	9558
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.gt_dec	40	0.007353	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.ge_dec	40	0.008243	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_eq	40	0.010677	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_lt	40	0.008377	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.119419	7595	1327
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.101830	13064	1970
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.quotient	40	40.089849	37390	4947
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.116860	44978	9340
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.013883	3478	1424
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.122416	50791	7833
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.006427	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.634534	316971	2006
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.009580	2	2	0.0	synth with cache (only 1: intros n0 h v0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_In	40	4.568077	4798	1144	4.0.0.0.0.1.1.1.3.0.0.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l as [| ? ? IHl]; only 1: destruct n; only 1: simpl; only 1: Nat.order; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.116553	36399	6012
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.007942	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.082259	28075	5363
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.081271	28430	7268
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.782195	93	48	0.0.1.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	16.709802	23766	2074	0.0.0.2.0.0.3.2.1.0.0.2.25	synth with cache (only 1: unfold leb, le; only 1: destruct a as [| a], n; only 1: easy'; only 1: easy'; only 1: trivial; only 1: case N.compare_spec; only 1: intuition; only 1: simpl; only 1: now destruct a; only 1: easy'; only 1: now intro m; destruct m; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.326669	84	51	0.0.0.0.0.1.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.008214	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_is_one	40	40.103353	42834	4697
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.131612	53971	5104
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_S	40	40.098839	40453	6386
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_not_le	40	0.010350	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_S	40	0.008086	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map2_2	40	40.065647	22150	5602
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_trans	40	2.792302	1826	351	7.1.1.13	synth with cache (only 1: induction 1; only 1: intro; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	4.106712	5386	562	16.8.10	synth with cache (only 1: unfold Qle; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.038287	12041	2629
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.107878	39085	4731
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.get_map	40	40.069745	22192	5923
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.209746	17745	2598
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.splitat_append	40	18.514459	15273	2521	1.1.0.0.0.12.11.2	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v as [| ? ? v IHv]; only 1: apply f_equal; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.969673	426	144	0.3.1.2.0.1.5	synth with cache (only 1: destruct s as [| c l y r]; only 1: simpl; only 1: tauto; only 1: descolor; only 1: invrb; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.157838	34	14	0.0.3.1.0	synth with cache (only 1: intros [| x acc]; only 1: intro; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.156173	207	92	4.1.5	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.092476	33793	5746
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.144949	57927	8791
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	8.620431	8600	1118	13.6.4.0.2.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: intuition; only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.187062	16684	2598
coq-tactician-stdlib.8.13.dev	Coq.Arith.Div2.double_plus	40	40.046780	16306	3400
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.062657	650	83	0.1.14.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.036014	9009	1398
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat_l	40	17.153945	28479	2646	28.2.1.28	synth with cache (only 1: induction 1; only 1: Nat.order; only 1: Nat.nzsimpl; only 1: now rewrite <- Nat.le_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.exists_le_S	40	3.903668	4722	700	1.1.1.19	synth with cache (only 1: intros n H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.091522	37808	7893
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.098982	32377	5045
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.032982	8324	4090
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.130108	48462	8321
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.015631	6	3	1.1.1	synth with cache (only 1: destruct n; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	38.649070	27846	4464	1.0.0.0.0.3.9.0.1.2.0.35	synth with cache (only 1: intro; only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: intros; only 1: simpl; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.070961	21669	6239
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.074737	28435	4008
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.064294	21518	9583
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.010879	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.008265	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.053288	21020	3302
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.078823	34059	5223
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.025173	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.134809	16909	2216
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015592	4529	1410
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.163821	68491	9169
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.008966	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_0_neq	40	0.023886	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_n_S	40	0.008225	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.In_nth	40	40.127136	55330	6645
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.102075	45061	4439
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_r	40	6.300768	3918	683	7.0.21	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.029135	9	2	1	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.056150	16937	8680
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.062693	19957	5538
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.060152	22009	2879
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred	40	9.582763	12509	2065	0.11.21	synth with cache (only 1: destruct m; only 1: inversion 1; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.677170	272	104	1.5.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.054989	19395	4647
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_le_trans	40	40.115734	49795	5190
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_trans	40	2.874518	1858	321	17.3.0	synth with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: now transitivity m).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.009230	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.010293	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.115427	41898	5890
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.122104	18542	3993
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.090060	36177	2445
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.plus_minus	40	40.122970	54895	6759
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.075716	29454	4777
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.152298	69457	4826
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.175580	79023	3692
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.123419	51929	6421
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat	40	40.212254	104771	7453
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_in_int	40	40.148552	69595	9466
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_equiv	40	40.066183	25496	4352
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.092027	34755	4629
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_between	40	0.360889	180	40	0.1.8.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_split	40	0.472795	33	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_eq	40	40.070029	25382	8552
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.124807	31257	4734
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.051041	14407	5057
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.leb_le	40	40.077341	27236	7333
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.070403	22273	5976
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.550931	959	566	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.069150	24910	4892
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.068503	25018	4880
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_compare	40	40.063510	20339	10036
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.093722	40020	4210
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	3.272460	4029	593	2.0.0.2.1.15	synth with cache (only 1: intros l l' x y; only 1: intros; only 1: red; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.lt_O_minus_lt	40	18.037525	18147	2467	2.0.0.15.4.0.15.1.4	synth with cache (only 1: Nat.double_induct n m; only 1: intros; only 1: now Nat.nzsimpl'; only 1: intros n H; only 1: auto; only 1: simpl; only 1: intros n m IH H1; only 1: apply IH in H1; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.138957	61820	9440
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.027405	9055	635
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	12.694255	6573	1006	19.1.1.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.016612	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.004343	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_indep	40	40.094779	35525	8233
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.162766	40937	5747
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_r	40	40.076721	32959	4175
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.053898	16079	5468
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.096232	7215	3740
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.056370	19444	5030
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	3.555162	824	338	0.2.0.0.2.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	20.221319	10247	3055	1.1.0.1.1.2.0.0.0.1.4	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: auto; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.116694	46758	6320
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.145204	62284	7044
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.079388	30536	6226
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_refl	40	40.161727	72224	16516
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.107478	17411	6330
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.226922	110402	5745
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_true	40	1.738460	791	284	2.0.0.1.0.0.0.0.0.0.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: intro m; only 1: destruct m; only 1: easy; only 1: simpl; only 1: contradiction || auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.482810	134	72	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.120496	52380	10081
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.078508	28669	8280
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.046981	16183	2871
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.126599	51836	5423
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.095465	41343	5578
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_exists	40	40.092903	39536	5876
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_even_plus	40	40.067746	25987	5142
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_l	40	0.090433	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_even_plus	40	0.064307	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_plus_aux	40	0.647236	72	15	0.0.10	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_mult_l	40	0.050945	14	3	6	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_mult	40	0.089034	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.129027	29718	3490
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.074101	26404	8842
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.084199	31963	4744
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.086150	29952	5351
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.073970	25480	6742
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.022260	5201	2543
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.080345	26847	5826
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.151060	65328	5442
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	9.095292	3686	1549	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.024450	5208	849
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.087051	26919	11320
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.065281	20156	6670
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.168234	73954	9779
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.024610	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_split	40	40.088388	33867	5370
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.100780	39459	5247
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.095458	41889	3966
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.056930	18249	7057
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	3.013530	1207	459	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.076315	28582	5426
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	7.906444	446	212	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	4.053216	2208	612	0.5.1.1.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.058721	19345	4543
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.097359	35715	7464
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.089791	33796	6555
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.068288	27099	2344
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.080792	30622	5731
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	16.489977	11876	2342	0.0.0.0.0.0.0.0.0.0.0.0.0.0.31	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.008438	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.008743	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.074813	25464	4997
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.130921	58094	3005
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.036432	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.223555	109437	13164
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.097124	17764	4252
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.240900	112379	3693
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.037471	11042	3926
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.096880	39809	5885
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_or_exists	40	40.114939	47390	7096
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.059440	19898	6112
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.056774	16316	8604
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.166437	59279	3011
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.min_l	40	40.107328	38237	7851
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.nth_le	40	3.686527	3560	738	13.0.4.4	synth with cache (only 1: intros n m p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: eauto with arith).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_spec	40	0.621105	26	15	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.089162	32949	6001
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.057689	18437	4420
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.043846	11460	3814
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.071276	24526	5092
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.015341	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.093328	34671	6895
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.447605	97	56	1.2.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	2.354311	8197	381	0.3.9.26.17	synth with cache (only 1: intros H; only 1: inversion H; only 1: inversion H; only 1: destruct H as (e, H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.016802	8	2	6.0	synth with cache (only 1: intro l'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.073137	24666	4841
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.097741	36284	12795
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.106697	40269	9798
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.event_O	40	11.790143	71015	1674	3.13.0.1.8.96.0	synth with cache (only 1: inversion 1; only 1: intuition; only 1: revert H H0; only 1: intro m; only 1: inversion 1; only 1: destruct H; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_None	40	40.072231	24442	7894
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat	40	40.145876	68295	5600
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.082916	30219	7843
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.le_plus_trans	40	3.523409	3410	583	12.0.0.0.0.3.9	synth with cache (only 1: Nat.induct p; only 1: intro H; only 1: Nat.nzsimpl; only 1: assumption; only 1: intros p IH H; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.069957	23357	6887
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.011349	2401	1039
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.070185	22231	6389
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	7.075491	3532	1513	2.0.3.2.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.121734	47233	7403
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.177852	49	25	0.2.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	14.367385	6297	1923	3.5.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.143391	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.048619	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.024734	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.572324	152	74	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c d ? ?; only 1: intro LE; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.066183	21984	6367
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.067320	23453	5201
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.078294	28606	6331
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.062336	21775	7061
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_nth	40	16.676253	8467	3562	5.0.0.0.0.3.1.0.0.2.0.0.0.2	synth with cache (only 1: intro l; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl in *; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.192065	85180	6644
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.076699	23951	6510
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.121086	51113	13503
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.096694	38087	1667
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.079011	31424	4475
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.112068	136	18	7.7	synth with cache (only 1: apply abs_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.058907	20444	3733
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.076734	26192	6607
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.038130	318	126	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.odd_even_lem	40	40.123736	57081	4216
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.094036	38639	4212
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.064210	19256	8787
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.048299	14417	6022
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_add	40	40.153678	15336	3268
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.lt_plus_trans	40	24.200141	11890	1278	14.3.0.0.5.5.11	synth with cache (only 1: Nat.induct p; only 1: intros; only 1: Nat.nzsimpl; only 1: auto; only 1: intros b Hb IH; only 1: Nat.nzsimpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.038576	10401	2971
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.086910	34308	5395
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	2.393299	759	179	0.0.4.1.0.1.2.2.5	synth with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.051501	13536	5147
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.093112	33351	5789
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.119168	46783	6732
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.078286	27173	10471
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.121589	49852	8730
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.014035	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.085875	29701	8139
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_double_add	40	15.300228	3096	716	5.1.1.3.0.4	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: auto; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_double	40	0.019031	7	3	0.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.992226	130	70	3.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now nzsimpl; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.064487	18651	6970
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.265070	46	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pow_neg_r	40	0.040201	16	4	0.1	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.057745	16408	5965
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.041042	11710	5000
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	40.077151	27058	5174
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.251088	30	19	1.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.049986	15906	2691
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.080652	28624	6996
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.057117	6172	898
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.072267	25069	4002
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.121385	50705	5604
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.129153	54021	7125
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.104167	38897	5712
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.106170	42991	5767
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.025908	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.080805	29134	5458
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.324463	356	190	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	20.200084	10178	4724	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.284314	133367	16386
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.089382	31772	5329
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.092261	38758	5398
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.060873	19455	3851
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.544241	842	150	7.8.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.066373	20154	2890
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_acc_aux	40	40.053857	17779	5076
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.861208	1695	968	0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.140302	64734	2899
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.009283	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.035868	5	3	0.1.1	synth with cache (only 1: induction n; only 1: now nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.071273	23077	4825
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.034811	9051	3843
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_is_one	40	40.095271	39726	6145
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	6.222518	2227	795	3.1.0.0.1.3.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.038381	8100	3127
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.048240	12774	3556
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_log2	40	26.290205	19352	3632	16.0.9.0.0.2.0.0.0.0	synth with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: cases n; only 1: intro H; only 1: reflexivity; only 1: intros n _; only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.017712	5220	378
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.096745	34270	5649
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.241209	303	116	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.105321	39070	6208
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.125037	50531	9703
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.064598	18464	7744
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.102836	38512	6711
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.096003	32456	6727
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.091464	2992	1023
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.075095	18787	4354
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.031305	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.050653	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	40.084568	24956	7256
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.040580	9540	1438
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.091706	32589	7114
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.780940	255	102	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.059515	9771	1773
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.053078	17134	4054
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.088457	35685	4285
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.remove_In	40	40.095014	34220	7260
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.102501	39707	4315
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.017323	10	3	0.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_neq	40	40.113289	47543	5115
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.102747	38987	5806
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.057100	20775	3394
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.034242	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.031727	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.086419	27753	5971
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.193787	91336	7864
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	13.237049	4382	2161	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.070358	21612	5989
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.051734	14960	5498
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.100313	37022	6169
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.076879	27934	6269
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.succ_plus_discr	40	40.074160	27009	4888
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.075430	23295	4846
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.056115	17645	4602
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.054252	16217	6134
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	2.850702	851	328	1.0.0.0.3.5.3	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.068846	21414	5037
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_gt	40	40.103225	19310	4530
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.082875	31486	4819
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.245111	1856	693	3.1.0.0.0.3.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.091349	10591	1914
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	13.727714	4457	1869	0.0.0.0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.173701	21	12	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.058348	18671	3963
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.063074	18495	6265
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.088910	30840	8791
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.127501	48326	5194
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.084596	27598	6851
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.751772	582	70	26	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.094305	18891	5133
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.060695	16801	944
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.111725	44300	8493
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.066489	20470	8986
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.066629	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.043947	13321	4035
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.007639	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.517933	39	6	9	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.015145	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.388665	200	36	4.11	synth with cache (only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.042806	11982	3232
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.028048	3	3	0.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.302077	30	28	1.3.0	synth with cache (only 1: revert q; only 1: intro q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.029453	9	3	1.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.141160	28304	4914
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.109573	41489	5796
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.099678	34432	7481
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_minus2	40	40.075919	27379	3288
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.062850	23161	3115
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.059933	16132	5712
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.049575	10279	3544
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.063016	18421	6397
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.102422	36853	10572
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.039181	12313	4092
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.042285	12081	4397
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.850301	1253	123	0.0.0.0.0.0.0.0.20.0	synth with cache (only 1: unfold natural_isomorphism; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.049606	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.048777	14931	3694
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.062616	22488	3026
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.068386	22821	4790
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	40.054037	16180	4685
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.165521	33	12	2.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.076560	24682	6609
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_spec	40	40.155242	27718	5253
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.210274	50	15	7.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.031759	9001	2544
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.047857	15477	1554
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	40.136679	53880	6880
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.113739	42855	4804
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.072695	24176	4384
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.074309	21542	7104
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.065515	19458	7421
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	34.663492	26276	5909	1.0.1.0.19.7.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: rewrite mul_comm; only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	1.891356	602	237	0.1.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: destruct (mod_bound_pos a c); only 1: auto'; only 1: auto'; only 1: order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.121072	43324	9106
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.175514	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.453104	556	198	1.4.1.1.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.050399	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.538986	80	49	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	40.173274	6759	770
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.099941	36737	8004
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.052907	17213	3057
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.027453	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.072028	23607	7037
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.063918	19961	7425
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.006950	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.128985	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.063892	18758	5059
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.015957	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.017385	5	2	3.0	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.012648	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.008692	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.006815	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.212555	2032	840	0.0.1.0.0.0.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.125062	34936	5203
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.212609	47719	7250
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.079666	26690	7493
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.059735	20014	4403
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.063183	22989	4012
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.063934	18067	5891
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.064436	18137	5862
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.085844	32402	7109
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.011931	5	2	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.176880	78168	6397
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.197035	75803	9322
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.172739	74125	4955
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.074167	24820	5902
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.090480	32838	5904
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.050283	15188	3669
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.050226	14488	4227
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.182177	83792	1397
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.069271	25459	3623
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.061801	20811	3835
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.077095	26019	6126
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.102787	39116	6935
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.074838	23354	6380
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.073862	23112	4727
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.878199	467	206	0.0.1.5	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	3.129983	1507	476	1.0.0.6.1.0.0.5.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.065395	22648	5179
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.066089	19313	7690
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.027498	5686	2522
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.053042	6	5	1.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.057887	18617	4197
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.071619	29275	2519
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.040672	11750	2903
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.527565	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.122383	45091	8460
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.082350	25564	8479
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.112458	46806	2765
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	5.674549	1071	569	0.0.4.3.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.074918	20859	7596
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.343858	51	24	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.083466	29031	6447
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_alt	40	40.120066	44648	7172
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.074986	23676	5572
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	7.490243	2565	1176	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.075052	28036	3703
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.078696	25174	4928
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.125887	52076	3076
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.097651	33676	7492
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.016405	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.731880	191	89	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.486225	927	258	0.0.0.8.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.080986	28955	4978
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.272311	94	17	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.106639	39190	7310
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.708552	262	83	0.0.0.0.7.0	synth with cache (only 1: induction n; only 1: split; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.118591	27397	4317
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.066310	24369	3828
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.074082	24042	6698
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.077642	16308	6032
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.049724	13574	4760
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.059161	17246	5927
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.353534	1758	385	0.0.0.10.2	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_lt	40	40.072047	22056	5259
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.655720	198	98	0.1.0.1.0.0.1.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.126280	16	9	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.069150	23103	4046
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.046915	14497	2746
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.134656	53207	6707
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.028042	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.063857	17996	4830
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.126792	46771	4243
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.486807	150	55	0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.070653	20663	6358
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.045629	13248	5217
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	7.315388	2868	1231	1.3.0.0.0.1.0.0.0.0.0.2.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.307273	291	70	9.0.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.176867	77728	3986
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.005510	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.647270	2215	424	0.0.9.4.7	synth with cache (only 1: intros x y Hxy Hyz Hy; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.437764	124	57	1.0.1.0.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	3.895083	2501	505	0.1.0.0.0.0.0.2.0.15	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros a n Hn; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.882823	932	406	3.0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	9.292984	3788	979	0.0.0.0.0.0.0.4.2.1.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.031134	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.060655	22928	1619
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.090967	30316	7367
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.445322	37	17	0.1.3.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	23.508389	4676	1126	5.7.4.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	7.902334	4584	1201	1.8.0.7.0.3.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros m Hm IHm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.073475	26208	4350
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.118500	45648	5772
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.214116	94974	4918
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.010247	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.039780	10066	4222
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.929941	772	444	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.051035	13364	5150
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.242825	647	275	1.1.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.027442	7836	2326
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.093466	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.037821	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.152929	61918	6783
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.093692	28875	5695
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.973220	553	107	2.1.3.0.3	synth with cache (only 1: intro H; only 1: apply divide_antisym; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.652334	144	84	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.078903	21587	6241
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.061304	15727	2122
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.057018	18394	5715
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.106595	38041	6671
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.636453	2288	988	0.0.0.2.0.0.0.0.0.0.1.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.089289	29911	5515
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.083724	25422	6936
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.183160	85219	4066
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.054913	19529	2854
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.concat_app	40	8.800065	9035	1450	2.20.0.0.0.0.0.1	synth with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto using (app_assoc (A:=A))).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_length	40	0.210364	35	20	1.0.0.0.0.2	synth with cache (only 1: intros; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	0.864757	487	112	0.9.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_eq_nil	40	0.510653	255	82	0.0.0.5.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: intros; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.260133	2524	804	1.0.0.0.2.1.0.1.0.1.2.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.013022	2	2	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.661455	531	126	9.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.081617	24196	5192
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.051378	15179	3334
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.058438	16404	5479
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.092689	34084	6186
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.075067	26044	4757
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.011630	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.069724	22751	6161
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.054915	14463	4156
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.071805	15809	2762
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.063888	18154	6849
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.210140	92663	10773
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	2.851097	846	305	0.0.9.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.155426	64732	6689
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.176850	75641	14624
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.066561	23590	3687
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.068518	22505	5058
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.076187	23125	6063
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.059985	19789	3675
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.061004	21552	2571
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	1.587858	799	116	3.24	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.107436	40842	5795
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.158461	63978	3510
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.518827	129	47	0.1.0.0.3.1.0.0	synth with cache (only 1: destruct x; only 1: intros; only 1: intuition Z.order; only 1: destruct p; only 1: easy; only 1: now destruct 1; only 1: easy || now destruct y; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.050891	13515	5167
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.030643	9	4	1.2.2	synth with cache (only 1: intro n; only 1: intro q; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z_eq_mult	40	1.362083	1083	101	0.5.17.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	22.947461	7241	1110	0.3.2.1.21.1	synth with cache (only 1: intros x y z; only 1: intros X; only 1: red; only 1: intros H H'; only 1: apply H; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negbFE	40	0.008704	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	27.171897	14196	3689	1.7.2.7.1.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.031212	8338	2387
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraT	40	0.562708	302	36	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraFT	40	0.700909	206	19	2.17	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.017630	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.010377	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.008229	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007709	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.011293	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.052929	16377	3544
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.042512	11268	3851
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.094805	17693	1876
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.102497	24675	6219
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.104970	39047	8634
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.060758	15776	3173
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.070205	18466	9215
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.071133	24676	4486
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.count_occ_map	40	40.128240	47350	4275
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.361443	168474	7444
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.564161	247	58	12	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.175312	73012	8139
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.011094	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.142484	55955	3886
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.069337	22337	4367
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.056837	17692	5076
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.191085	83618	5835
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.091680	15745	2874
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.map_ext_in_iff	40	11.764807	6671	2076	0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1.1.1	synth with cache (only 1: intros A B f; only 1: intro n; only 1: repeat split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.057593	16094	5654
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.058366	18277	1405
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.054861	17727	3852
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.061717	15812	4319
coq-tactician-stdlib.8.13.dev	Coq.Setoids.Setoid.gen_st	40	0.333938	204	66	10.0	synth with cache (only 1: intro n; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.008562	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.107366	35507	11867
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.052871	17174	3394
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.053880	14311	4517
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.096233	30264	7070
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	4.965667	4819	1397	0.0.1.0.0.0.0.0.13	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.063903	22283	3679
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.059428	17525	4057
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.257544	22	11	0.4	synth with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.951106	308	151	1.0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.776612	215	71	2.0.0.0.0.0.7	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.925902	475	100	1.3.0.3.1.0.6	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.307306	144478	3074
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.082816	28545	5456
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.815396	1144	235	1.14.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply lt_le_incl, lt_0_1; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.119543	40205	12056
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.064336	17278	6415
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.026855	6733	2173
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003282	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.007106	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.004602	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.009181	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.119077	5	1	4	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.008816	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.615191	199	43	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.006853	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.384211	91	88	3.1.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.061710	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.358017	23811	791
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	1.453910	430	53	0.21	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.311173	174	25	0.16	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.073094	24949	4507
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.214810	93939	11148
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.091867	28783	8662
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.208545	87789	6207
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.064157	21476	4252
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.076679	24536	6621
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.159479	65175	6310
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.085111	25318	6960
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.062886	23316	3827
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.262415	121276	8787
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.024434	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.045585	12833	3405
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.289222	82703	4948
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.035828	6798	1820
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.081232	24282	5364
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.072482	23359	8133
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_length	40	40.098111	36322	4938
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.080716	24865	6966
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.031926	8114	2912
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.104757	27006	3362
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.063046	15236	11977
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.010133	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.021125	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.011832	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.050751	17089	3321
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.060185	16942	3859
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.064667	20369	3879
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.062387	17517	5249
coq-tactician-stdlib.8.13.dev	Coq.Program.Subset.match_eq_rewrite	40	1.059667	1325	199	0.1.8.2.5	synth with cache (only 1: intros n P IH0 IHS; only 1: intro m; only 1: destruct m; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.incl_right	40	0.015789	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.068226	20970	3937
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.044349	12297	5640
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.086958	30162	3508
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.048295	16295	3117
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.066488	20190	4901
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.seq_trans	40	3.876620	4500	820	0.0.2.0.15.3	synth with cache (only 1: destruct x; only 1: intro H; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.013651	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.035889	4113	559
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.053382	10484	9306
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.004793	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.UIP_refl_refl	40	0.081198	48	18	9	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.009299	17	2	8	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.solution_left	40	0.217690	131	43	1.2.3.3	synth with cache (only 1: intro eq_rect_eq; only 1: simple destruct 1; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.lock	40	3.718950	39683	387
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.070443	22965	3886
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.390689	22648	1295
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	25.099865	19589	4524	1.1.20.0.2.0.0.1	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.085853	24404	7098
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.316934	147652	9592
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_false	40	0.026319	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.085032	23316	2199
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.065733	21181	5778
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.096928	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_or	40	0.981461	502	272	0.3.0.3.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.073003	24733	5148
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.054356	16179	3361
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.757023	26593	791	5.0.3.1.32.57	synth with cache (only 1: intro x; only 1: exists x; only 1: red; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.504432	1053	39	45	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.079856	26440	4253
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.083725	23434	2613
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.398184	181731	6562
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_tag	40	0.565552	967	103	0.0.15.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct H; only 1: destruct (H z); only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig	40	0.007584	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig2	40	0.016947	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.054674	15522	4007
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.235475	54155	4664
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	4.041988	6204	982	0.0.5.2.6.0.0.0.0.6.0.41	synth with cache (only 1: constructor; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.072168	24712	4618
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.092316	35443	4990
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_rev_right	40	40.096678	32352	6585
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.081740	23902	5384
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.048361	12515	4051
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.081736	23892	4389
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	16.649394	13654	2673	0.4.0.2.0.0.21	synth with cache (only 1: intros z n; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.073280	24778	5718
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.229332	978	234	0.0.1.0.0.0.1.0.0.1.6	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.044929	7951	2653
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	8.271814	5297	1288	0.0.0.10.0.0.2	synth with cache (only 1: intros a b c Ha Hb Hc; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.065541	22649	5521
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.048260	12596	3442
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.809751	149	55	3.1.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.015654	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.049985	14984	4471
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.016098	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.051333	13852	5543
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	10.851061	4887	1969	0.6.0.3.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	25.398135	4720	1138	0.1.0.1.0.0.1.5.6	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.008262	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.068564	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.016434	3	2	1.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.008276	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.041114	17	7	6.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.008694	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.055721	15233	4298
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.044125	328	143	5.4	synth with cache (only 1: unfold lt; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.050661	12408	3166
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.044746	7061	1253
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.052780	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.048958	9702	1041
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.005464	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.008417	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_proper	40	0.027386	4	3	1.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.026361	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.079027	23001	7778
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	5.809927	1977	990	5.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.locked_withE	40	40.651064	306018	7931
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	3.483313	39593	274
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.466049	40016	1991
coq-tactician-stdlib.8.13.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.399493	186194	5176
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.047468	13144	3216
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.868618	845	392	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.093329	28018	6404
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.003783	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.047926	22	10	4.0	synth with cache (only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.039408	13981	1538
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.275563	117015	7978
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.051071	14829	4563
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	2.964038	2045	278	0.5.2.15	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	4.326370	56914	495	0.0.3.3.252	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.038592	8927	3289
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	14.340434	10015	1659	1.1.3.0.18.12	synth with cache (only 1: intros H1 n H2; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.327292	147399	11624
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.008489	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.118283	28732	4495
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.352368	546	66	3.5.16	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.030485	77	9	0.12	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.161733	22155	4134
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.080656	30436	6201
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.006966	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.006750	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.007478	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.008388	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.094886	34405	3721
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	2.574259	1261	450	2.6.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.066448	21803	4840
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.029921	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_symmetric	40	40.132667	53777	7108
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	5.351112	3072	1138	1.8.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.091406	32248	5696
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.146210	45	25	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.216939	50	28	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.065360	15163	4152
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	20.547548	354160	2997
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.080550	28187	6899
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.061305	20344	5728
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.062271	23012	6335
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.109427	41914	8121
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	25.605951	7154	2583	0.3.0.0.0.0.0.0.0.10	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.054041	15556	3709
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.189892	50	24	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.043766	11376	6636
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.055915	17768	3017
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.057863	19188	4222
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	4.475351	1437	415	0.0.2.0.0.1.1.1.3.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.068164	16858	14650
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.203646	114	30	8.0	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.016221	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.010886	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.010871	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.029765	5755	1777
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.proper_proper	40	0.427235	131	61	1.0.0.4.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.755764	1384	223	1.2.1.4.10.1	synth with cache (only 1: intro H; only 1: destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_is_true	40	0.007963	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_iff_true	40	0.014327	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eqb_prop	40	0.014640	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_sym	40	0.010740	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007923	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_true_iff	40	0.037667	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_false_intro	40	0.011577	5	3	0.2.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_r	40	0.005524	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_l	40	0.009037	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_true_eq	40	0.094043	26	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_diag	40	0.005268	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.nary_congruence	40	40.114581	43228	10812
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_false_elim	40	0.027651	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.012473	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.013558	11	4	0.3.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.100433	38611	9059
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.014126	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.014983	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_r	40	0.007163	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_l	40	0.009016	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_true_l	40	0.005357	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.014223	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_eq	40	0.011855	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.014656	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.017631	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.127220	51116	9289
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.042445	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.010275	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.017778	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_true	40	0.012790	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.012277	3	2	0.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.012954	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.058612	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.011470	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.reflect_dec	40	0.018346	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.330658	41859	2117
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.414734	437	25	0.28	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.406949	200096	13271
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.141446	54730	11861
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.386028	330	83	3.3.2.1	synth with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.013913	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.036940	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.005200	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.140591	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.080056	24046	7553
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.054682	15946	3533
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.071391	25833	4433
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.097437	33451	7511
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.076918	24906	6957
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.abstract_context	40	10.462754	138299	1664	0.120.88	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.077756	25673	5762
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.037796	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.324903	151136	9119
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.453397	69	27	0.2.0.2	synth with cache (only 1: intro H; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.074250	28286	4714
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_spec	40	0.010963	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.050950	17271	4144
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.443113	119	40	0.3.1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	7.311761	8721	777	0.6.11.6.6.1.2	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intro p; only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.025582	5165	2343
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.forallb_forall	40	40.096850	8511	2101
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	40.690459	343281	5186
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.110476	19	11	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	40.079873	29063	8449
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.051021	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.031911	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.272546	17	7	5.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.092135	33516	4262
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.154231	70800	4329
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.061887	22453	6814
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.531664	737	255	2.0.1.6	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	5.444340	1415	350	0.0.2.0.9	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.013957	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.010478	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	22.305725	14949	4772	0.0.0.0.4.0.0.0.2.0.0.1.4.4	synth with cache (only 1: apply min_unicity; only 1: destruct (min_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: destruct (lt_total n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.843137	334	131	0.0.0.0.3.0.1.0	synth with cache (only 1: intros B C x H'; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	26.614630	29552	2880	3.1.19.0.4.6.12.0.5.5.4.4	synth with cache (only 1: constructor; only 1: constructor; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: intro l; only 1: intro x; only 1: intros h1 h2; only 1: red; only 1: transitivity x; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.074062	2	2	0.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.189155	675	283	1.1.6.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.199459	675	32	0.35	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.061321	22954	3475
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.142944	2294	370	1.1.5.10.12	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.015276	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.054955	23	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.022091	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.040115	10	5	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.047345	12716	6593
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.110143	37125	10102
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.210010	22	9	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.109053	40346	6891
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.052288	15280	5666
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.066010	19958	5637
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.112382	26140	4344
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.827019	326	135	0.3.1.0.0.0.0	synth with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.dec_True	40	0.008369	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.031744	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.476320	233923	9847
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.141542	59588	8841
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.080297	27090	4733
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.compose_assoc	40	0.010183	4	3	0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.flip_flip	40	0.008097	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.080703	29633	7892
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.077782	132	35	2.2.2.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind	40	40.455548	225031	13415
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.387753	112810	4438
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.188158	81761	11349
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.320725	150170	11629
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.005509	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.384821	5514	1168	3.2.0.7.0.0.2.2.4.11	synth with cache (only 1: intro p; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.079287	25950	10363
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.008361	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.015330	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.012497	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.017913	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.059540	19979	6440
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.007885	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.019008	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.054412	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.204156	389	38	0.0.11.10	synth with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	15.413640	5123	2009	0.0.0.8.1.1.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	3.107033	8328	1026	1.9.17.1	synth with cache (only 1: intro m; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.016637	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.004836	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	10.219786	33574	3795	1.11.1.11.0.9.3	synth with cache (only 1: induction 1; only 1: red; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.094936	188	26	0.13	synth with cache (only 1: intros [? [? ?]]; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.220337	102765	14988
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.104314	23047	5646
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.498561	235481	8128
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.243000	433	43	4.4.17	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.125052	50142	3340
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	12.243208	12388	3651	11.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.8	synth with cache (only 1: constructor; only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: left; only 1: auto; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.067600	23686	3546
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	11.694127	52620	2961	0.72.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.255451	117010	4144
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.041177	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.959879	2690	270	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.054052	16423	5111
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.163547	64695	7608
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	21.624323	10041	3611	0.0.1.13.3	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.567404	129	44	0.0.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.771616	16009	1328	4.41.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.056545	17724	7590
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.253466	216	41	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.049317	11857	3913
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.938986	645	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.271394	133330	6079
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	28.423096	19200	3683	1.0.0.0.1.0.4.0.0.0.0.0.0.0.2.2.15	synth with cache (only 1: intros a Ha; only 1: symmetry; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: case compare_spec; only 1: order; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: rewrite H; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.051700	19	11	0.0.2	synth with cache (only 1: rewrite sqrt_up_eqn0; only 1: now rewrite ?Hx; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	3.284663	6129	658	0.0.0.15.5.7.5.3.0.3.3.4.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: destruct H; only 1: apply eq_existT_uncurried; only 1: subst; only 1: simpl in *; only 1: exists eq_refl; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.097338	36794	10131
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.028091	7	5	1.0.0.1.0	synth with cache (only 1: intros x y z H' H'0; only 1: elim (Strict_Rel_is_Strict_Included U); only 1: unfold contains; only 1: intros H'1 H'2; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.051202	22276	2315
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	14.681924	11716	1826	1.0.1.0.0.0.1.1.18.0.0.2.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: split; only 1: apply pow_lt_mono_r_iff; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.053059	17721	3942
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.251675	120939	3575
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.089764	31965	8852
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.089074	31168	6185
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.020624	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.092307	34664	9688
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.051238	16560	5134
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	10.878747	8648	1834	0.0.7.6.0.12	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.029914	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	27.421154	75599	9206	0.23.4.7.0.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.562254	564	132	0.2.4.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.and_hprop	40	40.294018	135544	13641
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.011759	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.011077	4	3	0.1.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.true_hprop	40	0.009400	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.009206	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.not_hprop	40	0.241098	216	55	0.0.1.0.6	synth with cache (only 1: intros h1 h2; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.392621	516	97	2.5.5	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.226062	98011	12184
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.pred_Sn	40	0.028338	12	9	3.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.plus_n_Sm	40	0.288908	222	91	1.0.0.0.0.8	synth with cache (only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.477019	235532	13475
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.344558	98348	3821
coq-tactician-stdlib.8.13.dev	Coq.Bool.DecBool.ifdec_left	40	7.069387	12758	2200	2.1.0.4.0.14	synth with cache (only 1: intro n; only 1: unfold not; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.068768	26198	3430
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.046269	13493	4594
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	2.976958	57625	491
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT_eta	40	0.009072	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.077484	26913	5677
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.347927	38338	837	0.0.0.73.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.016035	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.rew_sig	40	0.019869	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.103630	36340	9955
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.124295	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.040322	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.123814	53368	9056
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.014244	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.097539	20659	4489
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.417885	78	19	3.2.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.026727	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.394505	192918	12464
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.012009	8	3	5.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.091331	33195	6679
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.096303	36614	11325
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.494551	245855	13473
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.018161	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.069670	23328	6433
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.find_none	40	40.055077	17004	4045
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	4.084197	3542	381	3.11.12.8.1	synth with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.006656	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.013634	13	4	0.0.3	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.009512	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.054667	16698	7973
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_left	40	20.145440	64764	5719	3.17.0.1.14.0.9.2	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: intro; only 1: destruct H; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_right	40	0.011077	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.066712	23372	4396
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.003124	6	5	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002528	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_iff_compat_l	40	0.129029	1101	131
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.681873	2866	600	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.162201	75486	9946
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.075920	30232	4816
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.399036	185861	8586
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.433533	526	80	1.13.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.105090	42266	9811
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.013424	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.144783	64708	4351
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.714437	404	130	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.034637	9501	2654
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.193065	62	36	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.205863	95758	11378
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.088514	31661	9000
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.099693	37160	8781
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.123850	570	205	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	41.020022	524692	8426
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.111106	39499	7455
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.310537	147067	11104
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.hset_hOneType	40	40.231176	105564	11603
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.of_bits_to_bits	40	41.019204	517688	4072
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.mult_n_Sm	40	40.146335	64214	11819
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classicP	40	40.404785	191886	8155
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.024862	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.pair_andP	40	0.027877	19	4	7	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	11.530812	11022	2437	0.1.2.1.0.0.1.2.0.1.0.1.2.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	9.120882	19072	2525	1.38	synth with cache (only 1: intros [HypL HypR]; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.441918	377	50	0.15	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.145283	38	16	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.079048	29051	3905
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.047737	15585	4324
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.758431	490	116	1.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.019297	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.072802	15243	6136
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.910039	466893	4102
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.092738	37248	12451
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.346078	167253	7476
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.074380	24143	6454
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.land_spec	40	40.097522	37786	4907
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.383065	188359	14092
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	14.944152	98502	4062	0.39.10.0.38.11.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.221027	103495	11557
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.219581	924	110	0.4.10.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.015327	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andFb	40	0.004300	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andbAC	40	0.015533	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orTb	40	0.004865	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbb	40	0.005366	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbC	40	0.007497	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbAC	40	0.012857	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_id2r	40	0.023311	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_idl	40	0.010843	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_id2l	40	0.063346	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.072857	29058	4809
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_and	40	0.010413	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andKb	40	0.015052	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbK	40	0.011078	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orKb	40	0.009206	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybT	40	0.006585	5	1	4	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyFb	40	0.005086	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyTb	40	0.005841	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_imply	40	0.009544	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybE	40	0.020734	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybN	40	0.009210	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbF	40	0.007386	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbACA	40	0.047738	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addl	40	0.014979	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addr	40	0.015455	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addKb	40	0.011713	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addIb	40	0.016009	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbT	40	0.009833	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.filter_map	40	40.078811	27536	6315
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.096842	29863	8611
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.067325	22666	4691
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.andb_true_intro	40	41.029568	533234	16294
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.024517	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.510187	3907	207	0.13.29.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_cancel_l	40	40.552299	266889	22641
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_comm	40	0.181886	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classic_pick	40	40.069212	22668	4104
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.040299	11061	3881
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_refl	40	0.065280	143	13	0.16	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.008130	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.160050	70724	10357
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.009651	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	12.760714	16045	3707	0.0.1.0.0.12.0.0.0.1.1.0.1.0.0.0.0.0.0.0.10.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: apply clos_rt1n_step; only 1: auto; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.080739	32142	4069
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.072327	24236	6728
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.194593	90815	10105
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.064499	20196	4859
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.124338	44075	5729
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.028742	5	3	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.080796	30738	7665
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.064150	16909	3755
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.to_bits_of_bits	40	40.096951	38952	4488
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.subrelUr	40	20.597688	49850	4506	15.12.4.41	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.le_S_n	40	40.204941	92824	15872
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.376617	8873	945
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.007349	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.006919	4	1	3	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.316307	145441	11941
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.060284	20068	3688
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	1.152509	11448	144
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.050416	13462	5515
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_split_r	40	26.134157	16326	4267	0.0.0.0.0.0.1.6.0.0.1.0.0.0.0.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros p H; only 1: auto; only 1: simpl; only 1: intros p H; only 1: destruct p as [a0 b]; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H as [H| H]; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.050759	15880	2738
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.063564	19653	7145
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.028511	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_trans	40	0.522305	140	33	0.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: elim H0; only 1: auto; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_tail	40	0.019747	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.276967	14	5	2.0	synth with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.006890	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.155553	69274	3702
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.028226	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.033298	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.069579	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.685602	345568	7428
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.267116	13472	565
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.051002	12660	2646
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.098847	38175	5419
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_assoc	40	40.380816	171729	15685
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.universal_quantification.gen	40	0.009116	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007638	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.004959	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.007756	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.417304	1625	50
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_opp_l	40	0.010143	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal4	40	0.015677	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal5	40	0.020485	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.006796	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_sym_involutive	40	0.010611	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.map_subst_map	40	0.010494	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_swap	40	0.009254	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_double_ind	40	13.089659	34629	5102	1.3.14.0.0.1.3.11.4	synth with cache (only 1: intro; only 1: intro p; only 1: intros H x0; only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_id_comm_l	40	0.308581	1863	54
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.gt_lt	40	0.937936	285	111	2.2.2.1.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: destruct (le_gt_cases n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.lt_gt	40	0.008797	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.min_l	40	4.513716	2709	1537	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.057688	18540	4911
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.440264	351	89	1.2.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.138367	24917	6749
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.073422	26745	4181
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.015499	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.870639	440307	15103
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.rew_pair	40	0.010492	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_assoc	40	40.536874	254330	16377
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.102026	36930	6841
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.647391	296873	3927
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.006628	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all	40	0.468992	213	45	0.0.3.0.12	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.158630	68419	11907
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ge_le	40	12.014369	7093	1458	0.0.1.19.0.1	synth with cache (only 1: intro H; only 1: rewrite le_lteq; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: now left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.129843	56612	5196
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.032974	4004	1449
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.042409	12080	2412
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.214925	97351	14723
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.093316	32111	4702
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.073432	24940	3839
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.132273	25648	6943
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all2	40	10.445199	4065	1677	0.3.1.3.1.0.0.0.1.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: now simpl; only 1: now simpl; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl in *; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_O	40	0.008606	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.159228	33330	8233
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_O	40	0.026839	5	5	0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.302400	238	42	0.0.0.11	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_all	40	0.031706	7	5	0.0.0.1.1	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.720537	349772	2287
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.004601	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.048526	27	5	0.8	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.011958	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011318	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.019644	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.016777	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_in12	40	0.415072	140	18	0.15	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.739467	354900	2806
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.011732	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_skipn	40	4.892946	2784	791	4.0.0.0.0.2.3.0.1	synth with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.077313	14562	4613
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_app	40	37.655169	15973	4273	7.0.0.4.9	synth with cache (only 1: intros l n x d H; only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_prod	40	40.063422	19722	6926
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.081992	26431	8127
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.112180	43214	4511
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.050942	15553	4132
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.051892	15957	3387
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.657065	906	116	2.0.12.7.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros H; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.071725	26045	5264
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.510200	238844	4597
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.103123	41805	6713
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	5.880227	2823	805	4.0.3.9	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.072352	25350	3962
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.247049	659129	8380
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.702054	545	63	0.12.4.0	synth with cache (only 1: apply eq_opp_r; only 1: unfold lnot; only 1: nzsimpl; only 1: now rewrite one_succ, opp_pred, opp_0).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.064271	23425	3695
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_length_le	40	23.756981	10046	4067	1.0.0.2.2.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: intro l; only 1: simpl; only 1: inversion 1 as [H1| ?]; only 1: simpl; only 1: now subst; only 1: destruct n; only 1: simpl; only 1: intro H; only 1: easy; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.094394	35484	8355
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.054114	17477	4499
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.088195	31334	6393
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.431414	189450	7097
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.140204	54904	11702
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.061003	20497	5001
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.072926	25727	4450
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.079103	29368	4864
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.066718	21086	7411
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.048295	13784	4281
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.155250	66896	14049
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.016617	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	2.420979	1173	331	0.0.0.1.0.0.0.0.0.0.1.0.2	synth with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.095848	35033	7934
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007192	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.054246	15242	3181
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.063691	21144	4166
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.088712	32306	6895
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.266679	117646	3906
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.036525	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.272346	120196	4471
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.055739	16038	5686
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	19.826952	37363	1845	0.0.15.15.10.4.39	synth with cache (only 1: Bool.destr_bool; only 1: move  =>mf mg x y; only 1: intros; only 1: rewrite -> H; only 1: trivial; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_app	40	40.190827	84030	7801
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_split	40	40.089415	30936	7626
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.079956	28260	4242
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.026516	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.075628	27175	4006
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.047779	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.065614	20392	5589
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.083252	28636	3947
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.058625	18131	4518
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.246568	104200	3453
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	24.260409	30621	3726	0.0.11.25	synth with cache (only 1: compute; only 1: intros m H1 H2; only 1: intro n; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.067285	19232	7889
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.092956	31905	5914
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.057787	19922	2897
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_r	40	0.199250	68	32	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.105955	16	9	0.1	synth with cache (only 1: apply max_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.120076	24	16	0.0.0.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.049770	13667	5521
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.110618	43983	4597
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_inv	40	40.210616	83862	7567
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.072829	25585	7945
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.108201	41050	4422
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.059312	16982	5856
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.057129	21448	3489
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.102008	38875	3706
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.062398	20357	6168
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.133415	54182	12490
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.091700	33054	7777
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.052041	16674	3935
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	40.095741	34223	7679
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.090115	33710	3994
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.117111	31671	5936
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.088458	31824	6543
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.132149	52940	8440
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.082952	29957	5985
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.085386	30042	4759
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.094358	25532	5051
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.082306	28267	6730
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.085856	31532	5221
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.067948	22264	4285
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.114990	44942	5590
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.108364	21629	4355
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.059196	18473	3970
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.081004	25691	6659
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.094739	33154	7989
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.142389	56435	8478
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.054763	17525	4103
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.099740	36062	7020
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.096593	33088	5367
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.027161	6	5	0.0.0.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.071149	23874	3998
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.064890	23694	5650
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.135153	59350	4562
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.084918	29651	4772
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.059670	18884	4676
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_app	40	40.074987	26552	6122
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.075144	26448	4936
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Repeat.repeat_length	40	0.710544	494	66	2.0.0.23	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.071140	20615	5887
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.106956	41871	5983
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.055746	14178	3080
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.090897	30677	9170
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.046616	12556	4279
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.087506	31283	6530
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.072967	23979	6325
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.084452	27031	6580
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.109659	27038	3384
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.108871	44512	8484
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.066702	23450	5795
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.105848	44807	4428
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.113127	49741	5867
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.083982	29289	5598
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.084744	32085	5637
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.083794	31168	5026
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.129611	59031	8467
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.062181	17693	3818
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.070015	24733	5255
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.100629	43900	5859
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.110121	50041	6403
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.148324	66555	9598
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.072669	33229	3076
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pplus_minus	40	40.110087	54027	8749
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.078129	31982	6497
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.097213	42616	7633
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.114374	53419	6629
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.041155	17388	5142
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.060816	26411	7719
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.072083	33878	7567
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.043997	18919	4389
