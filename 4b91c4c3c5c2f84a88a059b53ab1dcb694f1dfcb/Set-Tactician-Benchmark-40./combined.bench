coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.022568	2	2	0.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.041486	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	4.762029	1289	459	0.7.6.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	4.404281	918	512	0.4.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.054915	19472	6500
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.042071	15086	3916
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.040441	13964	4203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.030329	9895	3399
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.075266	15693	4350
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.048328	6	3	0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: apply lt_O_fact).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.037461	13158	3924
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.104547	44640	6471
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.050214	18302	5278
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.032588	10244	3839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.089078	36078	4159
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.104903	7	2	5.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.040860	13607	5171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	1.181709	422	198	1.8.0	synth with cache (only 1: intros; only 1: intro; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.089666	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.349680	865	115	2.17	synth with cache (only 1: intros Hm; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.060557	22223	4979
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.058575	22240	5545
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.065148	27455	4920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.065004	27059	4394
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.046922	17280	5906
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	12.368612	4854	484	5.14.2.37	synth with cache (only 1: intro H5; only 1: intros y; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.068145	27156	4214
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.036030	11937	3669
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.058086	24730	3860
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.044088	16672	3754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.028593	9727	3244
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.074479	32832	5191
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.042099	14160	3349
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.027148	9200	3256
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.019099	6499	2407
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.022521	6769	3676
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.037072	12592	3913
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.024581	7688	3213
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.096998	42860	3465
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	15.245071	2037	866	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_0_2; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.053514	19992	5791
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.028527	9770	2714
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.055486	21614	5248
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.054824	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.050626	18084	4664
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.062405	24039	5659
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.034434	10786	4077
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.096929	41885	6074
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.031501	12538	1596
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.123150	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.047064	16437	4750
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.093130	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.059663	19542	3804
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.059170	22608	5423
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.028195	7929	4242
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.079923	34836	4085
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	2.397055	909	408	0.0.0.0.1.6	synth with cache (only 1: intro; only 1: intros b; only 1: intros Heub; only 1: exists (proj1_sig (completeness (EUn Un) Heub (EUn_noempty Un))); only 1: destruct (completeness (EUn Un) Heub (EUn_noempty Un)) as (l, H); only 1: now apply (Un_cv_crit_lub Un)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	5.846672	2282	865	0.0.2.0.3.0.8	synth with cache (only 1: intros H12; only 1: intros x; only 1: intros g; only 1: intros r2; only 1: unfold opp_fct; only 1: intros H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.041323	14708	4756
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.067728	27833	4341
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.042459	15740	4366
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.041440	12364	3535
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.043958	15509	3521
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	5.789484	5475	1052	7.0.0.0.1.0.2.0.0.0.2	synth with cache (only 1: intro; only 1: intros Heub; only 1: exists (proj1_sig (completeness (EUn Un) Heub (EUn_noempty Un))); only 1: destruct (completeness (EUn Un) Heub (EUn_noempty Un)) as (l, H); only 1: assert (Hi2pn : forall n, 0 < (/ 2) ^ n); only 1: clear; only 1: intros n; only 1: apply pow_lt; only 1: apply Rinv_0_lt_compat; only 1: now apply (IZR_lt 0 2); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.031377	10917	3728
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.058214	23941	3179
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.025845	8457	3455
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.032581	11839	3150
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.032453	11295	3399
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.039070	13002	3241
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.030915	11751	2540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.064581	25412	5111
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.055549	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.052561	17715	6576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.063793	23474	4952
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.046052	16509	4327
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.019294	6	3	3.0.0	synth with cache (only 1: simpl; only 1: intros m; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	41.563121	119261	3094
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.108570	48564	4956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.033409	10280	4403
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.033142	10456	4498
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.057804	21289	5202
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.062938	13722	3326
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.019256	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.070313	27840	3814
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.052586	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.055240	19691	5349
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	40.028719	10670	1198
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.039073	13376	4515
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	5.232655	2322	383	0.5.0.12	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.052502	17447	5053
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.039169	13683	4198
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.032585	11919	3168
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.042097	15405	3827
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.079102	31150	6019
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.038290	15220	3387
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.069507	27902	4052
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.030725	10513	3377
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	13.832064	3659	1400	0.2.0.0.0.1.0.1.2	synth with cache (only 1: intros a; only 1: intros x; only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros n1; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.020642	6402	2908
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.049904	19675	3335
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.036831	12596	2628
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.033643	11953	3017
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.073395	28213	6452
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.057958	22403	4173
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.048133	17028	5571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.045287	14275	5627
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.066709	26301	5797
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.065072	25203	5918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.087237	35547	4599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.014280	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.030736	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	40.080568	21668	4900
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.100100	42270	5219
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.084407	33772	6166
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.072996	28854	3559
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	1.394691	400	208	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.987928	17475	2448
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.034545	10426	4005
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.045572	15777	4385
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.015802	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.035819	11405	4268
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.054576	20798	4701
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.054301	20150	5015
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.043268	13095	4998
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.043569	15577	4139
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.061532	24117	3054
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.088351	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.044449	17311	3684
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.084442	35529	4956
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.010350	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	28.416108	5866	2298	1.1.0.0.1.1.0.0.2.0.0.0.1	synth with cache (only 1: unfold Rgt; only 1: intros until x; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.217575	45	16	1.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.026649	8254	3510
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	2.733639	1558	313	4.3.4.9	synth with cache (only 1: intro; only 1: intros n; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.032034	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.305979	96	43	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.031871	11207	3365
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.058407	22919	3627
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.052604	19122	4668
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.064080	10	7	1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.031749	9	3	2.0	synth with cache (only 1: intros H; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.075151	29349	5753
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.031767	4	4	0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: apply Nat.mul_le_mono_pos_l; only 1: Nat.order').
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.102731	23	6	1.2.1	synth with cache (only 1: intro n; only 1: intros IH; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.026178	8447	3236
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	29.813222	20811	4576	4.1.1.0.1.7.3.0.1	synth with cache (only 1: intros q; only 1: intros; only 1: intros Step; only 1: intros H1; only 1: case H1; only 1: intros H'0; only 1: intros H0; only 1: inversion H0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.091526	37923	5867
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.085743	24802	3315
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.017711	4575	3015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.042086	14085	4793
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.070462	28052	3948
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.039200	10348	2421
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.064228	24503	5827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.077194	30292	6689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.041572	13694	4519
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.052987	12	7	0.3.1.0	synth with cache (only 1: unfold open_set; only 1: intro; only 1: intros del2; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.047752	15815	4952
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.070706	29111	4447
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.039406	12699	4891
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	6.372321	7049	1005	0.1.12.9.0.0.0.5.56	synth with cache (only 1: constructor; only 1: intros _tmp_tactician0; only 1: intros r2; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with real; only 1: intros H; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.058509	21885	5041
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	5.092917	1108	653	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.034153	11124	3716
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.064262	24380	5223
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	40.693555	40562	2224
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.041546	16617	3649
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.274955	30	20	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.431203	52	32	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.037993	10960	4257
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.303084	260	43	5.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.049215	20	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	3.309545	676	266	0.0.0.0.0.5.1	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_neg; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.028582	10796	2675
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.034404	11812	3390
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.053398	17266	7369
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.472868	86	39	0.0.3.1	synth with cache (only 1: intros n; only 1: intros m; only 1: intros; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.025460	8725	2640
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.023605	6811	3869
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	9.275594	5942	1435	1.1.0.6.0.3.4	synth with cache (only 1: intros x; only 1: intros y; only 1: intros _tmp_tactician0; only 1: red; only 1: destruct _tmp_tactician0 as [H| H]; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.006086	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.072391	27245	6920
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.062842	23266	5843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.059331	20848	5260
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.101551	43011	5395
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.060743	23304	4844
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	41.246918	67985	2149
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.013386	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.074836	29826	5715
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.094806	40735	4371
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.053767	19877	4549
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.070876	28381	5787
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.059868	22420	6647
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.032903	9884	4824
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	40.040326	13121	4104
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.068676	26225	5583
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.033736	9792	4954
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.040405	13161	4729
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.042570	12081	5249
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.053298	19145	5061
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.043118	15434	3171
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.020392	6132	2915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.079943	7	7	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.041043	14723	4437
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.147046	18236	1931
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.058003	19967	7473
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.035150	12572	3940
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.039507	14370	4121
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.632177	210	84	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	38.928408	16758	8372	0.0.0.0.0.0.3.1.2.2	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros H1; only 1: unfold Rmin; only 1: intros; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.035379	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.096856	40034	6361
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.042524	5	5	0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	3.620499	1337	411	0.4.1.3.1	synth with cache (only 1: intros b; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.077964	30005	6089
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.055070	21182	3389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.223921	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.297082	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.065396	22913	6901
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.046123	14351	5422
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.153901	69379	8144
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.028363	10304	2005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.022001	3	3	0.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.037950	12562	4555
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.727796	92	59	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.104307	45121	5669
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.053757	19896	3742
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.079072	31974	6694
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.053263	18960	4925
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	15.575935	6693	2153	5.1.3.1.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros b; only 1: intro H2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.051679	17736	4946
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.021065	7423	1003
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.099860	44002	7058
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.033933	9370	4556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.134985	58680	5765
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.087037	34029	4005
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.043175	13721	4827
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	1.709612	757	222	7.0.8	synth with cache (only 1: intros x; only 1: intros H; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.050299	15011	6200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.021933	8173	1595
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.649555	189	61	1.2.0.3	synth with cache (only 1: intros Sym1; only 1: intros lpe; only 1: intros B; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.050913	18892	4282
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.041195	14964	3840
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.050455	18904	3071
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.037908	9524	766
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.056869	17725	7024
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.032827	11339	3508
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.080945	29538	6537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.087064	33607	8599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.241162	67	41	0.0.0.1.1	synth with cache (only 1: intuition; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.851049	303	85	4.6.0	synth with cache (only 1: intros m; only 1: intros p; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.027125	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.862941	274	74	4.5.1	synth with cache (only 1: intros H1; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.031265	10356	3982
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.084845	36177	4203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	13.635277	5853	1549	1.2.10.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.041102	13142	3632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.080957	36747	2630
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.100938	42372	4862
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.228609	108868	4657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.064434	23527	5188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.009937	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.051289	16761	4138
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.008197	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	1.858359	686	230	0.0.1.4.2.2	synth with cache (only 1: intros n; only 1: intros IH; only 1: induction n; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.074018	26531	4712
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.038450	12493	5019
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.139290	37649	5160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	2.289990	219	51	3.0.4.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl in *; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.035471	4	4	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.042646	14292	5105
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	40.079096	30956	6277
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.095828	38814	8487
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.240648	61	28	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.046481	15324	4010
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.033104	6	5	0.1.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.555699	167	69	0.0.1.5	synth with cache (only 1: red; only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.015952	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.035320	5	4	0.1.0.0	synth with cache (only 1: intro; only 1: intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.460427	118	53	0.0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.140565	20	10	0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: intros Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	2.268766	595	287	0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: rewrite tech5; only 1: rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	1.884960	467	271	2.0.5	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	4.257622	2098	777	5.1.0.1.2	synth with cache (only 1: intros y; only 1: unfold open_set; only 1: intros r2; only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.083348	33991	6384
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.077374	31924	4767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	2.275466	1004	353	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	11.946002	24938	541	0.0.1.0.2.0.1.0.2.3.0.45.135	synth with cache (only 1: compute; only 1: split; only 1: red; only 1: intros _tmp_tactician0; only 1: easy'; only 1: red; only 1: intros _tmp_tactician0; only 1: intros a'; only 1: auto; only 1: red; only 1: intros b; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.041565	13309	4058
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.062308	26623	2979
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.032333	11034	3158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.689759	12918	1980
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.180887	22433	3077
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.060266	21901	6567
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.028805	9744	3454
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.071102	24350	7167
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.041474	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.071985	26099	5790
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.106784	43905	6057
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.036438	13589	3162
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.059204	22602	4490
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.049106	14691	5591
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.083359	34856	3968
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.040561	15643	1751
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.042206	11869	2917
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.067623	22822	5976
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.075615	30095	2722
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.069435	28775	3884
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.037779	11789	3235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.102698	41127	7964
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.058586	19474	5909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.132501	59915	3677
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.081451	31843	6654
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.027086	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.072858	31	14	2.2.1	synth with cache (only 1: intros IH; only 1: intros m; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.057013	20375	5246
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	1.887567	617	367	4.0.3	synth with cache (only 1: intros IH; only 1: intros b; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.092665	36774	7771
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.195530	93577	5409
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.041203	15785	3881
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.061855	22759	4890
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.351975	1520	244	3.23	synth with cache (only 1: intros l; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.115560	53264	2351
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.036803	10125	5118
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	2.581919	2409	473	8.1.9	synth with cache (only 1: intros AS; only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.024124	7214	3665
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.037029	13461	3445
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.074575	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.111783	48673	3105
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.055902	18686	6944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	6.862902	2385	318	0.1.0.18	synth with cache (only 1: intros Ha; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.080692	27751	3264
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.074839	25732	6915
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.069988	26747	4617
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.060425	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros until i; only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.080277	26908	4351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.057450	19366	5747
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.279916	147	37	11	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.051455	19278	3798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.072251	19509	5753
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.041479	14475	4038
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.078578	29514	5723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.126398	58578	5382
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.038582	11047	5024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.061305	22679	4348
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.040142	13112	5351
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.044508	15228	3199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.044025	15123	5138
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.057429	20874	5145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.794839	617	188	0.11.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	41.448955	34747	2498
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.063550	24963	5161
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	40.098025	38545	8825
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.045871	15460	5428
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.033437	10134	3700
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.049890	17099	4705
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	40.054053	17813	4961
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.270345	442	143	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.059099	25830	1899
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.135117	12562	4824
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.028684	9240	3536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.029624	9760	3144
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.051477	14226	7359
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.775631	28158	5960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.136552	63185	4650
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.031353	9557	3157
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.060510	17984	6054
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.057425	19718	5558
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.030925	9133	2525
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.179437	29064	4980
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.185044	81957	12536
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.078316	28662	5522
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.055886	23168	4186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.028658	9372	2665
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.083623	35713	2438
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.052932	18424	3608
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.033157	10082	4524
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.043610	15104	4659
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.041776	13415	3245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.023036	5683	1855
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.072034	28045	3505
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.046036	15286	4255
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.116522	6	5	0.0.0.0.1	synth with cache (only 1: intro; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.177546	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.049898	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.080439	32389	5453
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.033103	10047	4643
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.041202	13547	4438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.101037	41233	5629
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.006740	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.065559	24092	4478
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	32.808327	27810	2698	0.0.0.4.11.3.20.6	synth with cache (only 1: intros _tmp_tactician2; only 1: split; only 1: auto with *; only 1: intros f; only 1: compute; only 1: rewrite singleton_spec; only 1: intros Hf; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.027194	8106	3155
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.029478	10184	3110
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.039822	13330	4543
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.189604	90526	2998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.009515	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.795791	13529	3170
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	1.358165	750	191	17	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.058839	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.036649	11842	4136
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	40.034948	13449	2099
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.093710	33892	2956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.028322	8185	2956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	8.385266	1600	940	2.0.3.0.0.0.0	synth with cache (only 1: intros f; only 1: intros D; only 1: intros X; only 1: intros cvp; only 1: intros H0; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.053807	20161	4076
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.068553	26187	4959
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.080537	30570	6256
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.033759	12518	3391
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.069916	27645	4758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	2.089724	1024	241	7.4.2	synth with cache (only 1: intros x; only 1: intros Hlpe; only 1: apply N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.060258	20768	4749
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.083534	34196	4130
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.037478	12246	4620
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.048795	17323	4887
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.072531	11	7	0.0.1.0.0.0	synth with cache (only 1: intros until l; only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.065033	23364	5167
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.054948	13152	1541
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.075186	29510	5625
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	18.236432	18991	1834	0.0.5.0.4.0.0.2.26.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply IHp; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.048475	14663	4177
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.086551	34665	6076
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.197444	71	33	3.2	synth with cache (only 1: intros l; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.070157	25861	6360
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.079350	32316	5190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.060143	18495	6382
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	33.093526	15702	5164	0.0.16.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: intropattern subst -> H; only 1: rewrite <- Rsqr_abs; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.073042	25753	6255
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.035942	9389	5019
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.116598	46473	5477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.030010	9858	3121
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.085526	35176	4585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.102490	44799	6303
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.104039	43423	6944
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.078145	26154	5614
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.053638	18098	4316
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.102623	45515	463
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.028286	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.072090	24239	5287
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.047283	16795	4116
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	40.028540	8677	4147
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.425835	4578	216	57	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.744071	79	59	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.122037	16	7	5.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.027636	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.015874	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.021977	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.072184	29364	5360
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.101285	41488	4131
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.048522	15653	4289
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	6.013612	2384	909	1.3.0.0.0.0.0.2	synth with cache (only 1: intros r; only 1: intros H; only 1: unfold Rabs; only 1: destruct (Rcase_abs r) as [Hlt| Hge]; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 Hlt); only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.030689	9158	4055
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	26.881743	15947	4455	4.0.2.14.0	synth with cache (only 1: unfold included; only 1: intros HCutR; only 1: intros f; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.016014	4	3	1.0.0	synth with cache (only 1: red; only 1: intros y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.051975	18623	4246
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.054689	20219	4736
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.098889	41221	5795
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.848339	58	25	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.029720	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.359661	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.432564	28	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.109187	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.054714	18466	4574
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.073786	29648	3371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.062814	24161	3998
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	19.993877	7663	1204	3.0.5.7.0.0.8	synth with cache (only 1: intros q; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: revert q; only 1: intros n; only 1: rewrite Rrepr_0; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.427809	10	3	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.094097	38508	3688
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.088312	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.427028	23	8	0.3	synth with cache (only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.042229	12786	5102
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.214053	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.101917	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.034708	436	103	3.0.0.0.2.0.5	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.043491	2	2	0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.051410	35	11	6	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.011178	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.046326	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.018138	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.069506	23694	7630
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.083006	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.039547	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.024869	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.146102	17	15	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.028717	4	4	0.0.0.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.065313	24002	7484
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	1.006931	312	82	0.0.0.11	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.070129	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.469408	52	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	10.302855	10122	2263	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.404343	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.542587	33	17	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.095348	3	3	0.0.0	synth with cache (only 1: intro H; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.171162	16	8	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.080059	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.107535	3	2	1.0	synth with cache (only 1: intros H0; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.496910	28	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.539325	20	6	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.033207	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.027423	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.081544	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.104402	45596	2644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.091519	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.078090	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.494476	33	17	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.066473	21567	6774
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.640674	160	70	0.1.1.5	synth with cache (only 1: red; only 1: intros a; only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.507854	83	37	0.0.0.0.0.0.2.2	synth with cache (only 1: split; only 1: intro H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	13.457577	10240	804	0.1.0.0.0.6.30	synth with cache (only 1: replace 1%Z with (Z.of_nat 1); only 1: intros H; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: ring; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.081231	27630	5811
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.028909	9729	2959
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.087672	38660	3553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.046521	16523	3420
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	17.934771	1101	266	0.0.4.5.8	synth with cache (only 1: red; only 1: red; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.133264	522	111	0.4.0.8	synth with cache (only 1: intros Hin; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.054222	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.060668	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.086811	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.432008	16	5	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.043459	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.073753	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.033497	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.074565	11250	3792
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.061179	20264	5202
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	19.910625	136394	1011	355	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.611251	43	20	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.067990	26044	4273
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.037192	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.031220	8596	3510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.040387	14512	2695
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.068812	23721	3097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.107060	43405	6004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.045312	17151	2819
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.028170	7397	3495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.041895	8801	2848
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	7.651919	4093	920	8.11	synth with cache (only 1: intros x; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.090523	37307	4505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.037893	9659	4416
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.064860	24401	5821
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.097675	24	8	3.3	synth with cache (only 1: unfold to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.087542	8	5	0.2.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.079944	32094	5720
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.060270	22150	6055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.439755	31677	2249
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.066708	27150	3052
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.057276	19291	4091
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.049527	16182	5646
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.021596	7	2	5.0	synth with cache (only 1: intros r2; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.073897	25003	6759
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.073960	25875	5364
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	34.313438	3256	787	0.0.5.1.4.3.0	synth with cache (only 1: expAdd; only 1: red; only 1: intros; only 1: rewrite F.inter_iff; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.942607	484	141	0.0.3.0.4	synth with cache (only 1: intros a; only 1: intros m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.077053	27933	3832
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.051030	18240	4405
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.193660	83917	5365
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.085290	34715	5767
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.043028	15821	3237
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.096361	43303	2814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.079504	27214	4542
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.683919	19915	4062
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.063171	5	5	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.097668	35960	6156
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.055549	20398	3602
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.027344	8294	3193
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.040716	7344	1113
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	3.457529	8571	338	7.0.14.6.0.83	synth with cache (only 1: rewrite eq_iff_eq_true; only 1: split; only 1: intros H; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.720506	324	57	8.3.0	synth with cache (only 1: rewrite <- mem_iff; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.012560	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.107300	26	6	6.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.076957	30592	5457
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.748627	67	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.066735	23170	4305
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.037072	10377	3833
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.080645	29492	5245
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.039072	12710	3290
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.064380	22430	6491
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	3.212504	723	360	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros l; only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: generalize (H a); only 1: clear H; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.069714	26744	6350
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.076256	28941	4306
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.055799	20412	4466
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.095857	39050	3373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.073845	8021	1965
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.028699	4574	1000
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.059642	21048	4145
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.072186	28206	4824
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.364947	193890	1880
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.057597	17625	7113
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.075465	28418	5038
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.077695	31156	4359
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.251850	112950	5979
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	21.663407	2694	2032	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.020391	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.011814	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.033482	5	3	0.2.0	synth with cache (only 1: intros; only 1: rewrite <- equal_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.291880	141555	4404
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	17.245872	11862	1814	2.26.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_tmp_tactician0| NEQ]; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.104274	28855	8675
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.062643	25924	743
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.032065	11492	2715
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.045477	14307	4492
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.199557	28	13	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.185099	26	13	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.054905	4	2	2.0	synth with cache (only 1: intros a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.393907	17	4	0.6	synth with cache (only 1: intros Heq; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.071219	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.637749	83	35	0.1.0	synth with cache (only 1: red; only 1: intros b; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.013230	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.212794	14	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.083198	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.601541	44	19	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.070808	27951	4148
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.077204	27274	6039
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.787054	180	78	1.3.3	synth with cache (only 1: intros H; only 1: intros Hf; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	5.469111	885	400	1.0.0.1.0.0.3	synth with cache (only 1: intros H16; only 1: unfold Ratan_seq; only 1: unfold PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.850993	315	95	0.2.3.2.3	synth with cache (only 1: intros y; only 1: unfold Subset; only 1: intros s; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.120174	51212	7237
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.011261	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.009892	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.010906	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.009243	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.011888	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.010251	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.009604	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.063260	24587	4589
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.260679	66	21	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.025597	7454	3050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.074460	28067	6210
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.446462	578	217	1.2.0.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	12.875789	12579	1713	1.10.22	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.035938	5	5	0.0.0.0.0	synth with cache (only 1: intros r; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.027428	7895	3534
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.041110	13654	3753
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.085034	32870	5492
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.073621	25909	3154
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.058120	19081	6268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.098283	40644	4839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.035897	9731	3093
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.076491	26949	3989
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.131293	16	4	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.056894	19701	4604
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.119078	38466	5403
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.425966	215298	4112
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.302665	590	110	0.1.2.6.10	synth with cache (only 1: intros m; only 1: intros H1; only 1: simpl; only 1: unfold Raw.empty; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.056683	21385	4268
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.231859	107976	1584
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.124654	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.137657	131	24	12	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.049410	14519	6235
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.064553	4	3	0.1.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.025657	2553	781
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.066461	25304	3843
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.084296	22934	3143
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.088487	35089	4420
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.070973	26769	4409
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	8.763946	6881	1266	1.0.7.8.7	synth with cache (only 1: simpl; only 1: intros b; only 1: intros _tmp_tactician0; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.072025	26138	5268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.103942	42665	4662
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.080816	30714	7980
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.055572	18058	3773
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.020385	6088	2578
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.098290	37788	7213
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.521503	638	245	0.2.0.3.0.3	synth with cache (only 1: intros a; only 1: split; only 1: intro; only 1: apply (MapsTo_1 H H0); only 1: firstorder; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.116015	49931	5851
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.073838	28294	5852
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.041832	12859	4046
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.013168	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.787358	1842	247	3.2.13	synth with cache (only 1: red; only 1: intros Hr; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.206016	44802	6601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.020397	4694	3047
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.092205	32895	5804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.848622	541	211	0.0.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.023243	6173	2977
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.518739	115	42	0.1.0.6	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.082275	20507	3776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.047717	15413	4471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.591231	16790	2598
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.084244	33302	4773
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.196661	22	9	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.034137	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.023624	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.214773	103472	2684
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.024137	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.122448	47444	4789
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.077915	30940	5510
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.070218	22097	5962
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.205357	89409	7409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.037112	9520	3876
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.038295	11989	1773
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.098000	2	2	0.0	synth with cache (only 1: rewrite <- equal_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.024671	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.009006	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.013625	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.010923	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.008862	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.028708	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.498623	18944	855
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.058852	20787	4230
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.075057	27445	2821
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	31.528861	9440	3185	2.1.1.1.2.1.2	synth with cache (only 1: intros H1; only 1: destruct (SORsetoid sor) as (_tmp_tactician0, Equivalence_Symmetric, _tmp_tactician2); only 1: intros m; only 1: intros p; only 1: intro H; only 1: clear _tmp_tactician0; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.009867	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.015510	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.011382	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.081939	30784	5793
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.094939	40208	5388
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.046717	11	2	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.084149	32837	4262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.179100	83864	2788
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.070078	24873	6231
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.036151	12617	3224
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.246799	71868	6831
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.090401	33391	5976
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	4.268251	1655	697	2.1.1.0.3.3	synth with cache (only 1: intros q2; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.192351	85787	4373
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.077918	24727	6870
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.150610	66943	6244
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.014145	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.094865	28	10	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	25.283687	14083	3635	3.11.2	synth with cache (only 1: intros x; only 1: symmetry; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.012172	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.086754	29296	8664
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.027015	7761	3311
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.269076	37691	5370
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.044382	13113	3824
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.491446	329	130	2.0.0.4	synth with cache (only 1: intros m; only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.028792	10	4	2.0.0	synth with cache (only 1: intros r1; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.029331	10	4	2.0.1	synth with cache (only 1: intros r1; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.127986	52339	3419
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.632333	77	36	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.036131	11866	3174
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.092430	35197	6349
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	3.289648	688	355	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	3.821580	1583	469	19	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.051875	18088	4382
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	13.504132	25991	3029	6.2.19.7.1.1.5	synth with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: intuition; only 1: red; only 1: intros H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.032215	9515	2939
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.202101	90233	3156
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.115281	28083	4992
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.075565	29040	4646
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.059615	18353	5545
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.300424	149047	856
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.020023	4592	1907
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.009982	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.144656	17014	3257
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.046180	15069	3519
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.033680	5050	769
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.073142	20501	4613
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	7.800740	5136	1503	0.2.0.1.1.0.6.2	synth with cache (only 1: intros n; only 1: intros Sym2; only 1: intros H; only 1: intros m; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.103152	40767	7005
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.096413	40592	2332
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.048726	16519	3575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.086911	32934	5036
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.027736	9763	2988
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.145524	62685	6978
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.115020	2	2	0.0	synth with cache (only 1: intros until m; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.058413	15695	4577
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.116037	34907	3303
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.070865	26336	5493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.152842	20536	2054
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.116726	50977	5081
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.030418	9316	3990
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.056313	15585	4609
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.020430	3255	919
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.079055	23840	6252
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.018436	4884	2569
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.054189	13009	5034
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.035826	10046	3003
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.026604	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.013928	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.042654	13824	4475
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.122066	53484	6188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.055885	17599	5650
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.027823	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.120570	46066	5703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.062312	21580	5449
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.487986	30958	6700
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.021438	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.092688	35554	2386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.104068	170	109	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros H; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.046273	12781	2027
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.064166	24037	3949
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	2.338444	507	302	0.0.1.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.122583	108	9	15	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.082607	30705	5420
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.071768	24367	6718
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.130831	57027	1857
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.007050	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	21.224763	11273	3746	2.4.0.2.2.2.1	synth with cache (only 1: intros r1; only 1: unfold Rle; only 1: intros m; only 1: intros p; only 1: intuition; only 1: subst; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.084659	29884	7189
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.156478	41	16	1	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.015380	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.106016	46096	2679
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.045961	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.081866	10	6	0.1.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.051288	17679	5465
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	3.930929	2433	836	0.0.2.2.10	synth with cache (only 1: red; only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.079973	25206	2383
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.025766	8716	3085
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.108592	44129	7523
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.071962	24038	6327
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	11.173876	14535	1352	0.1.0.4.1.25	synth with cache (only 1: destruct a; only 1: intros Hb; only 1: trivial; only 1: intros Hn; only 1: easy; only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.071122	22846	5779
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	11.272332	12486	2165	3.2.0.2.1.0.0.13.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: destruct m; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.060904	20603	6318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.182404	86412	4206
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.031879	9242	3975
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.105452	43646	5013
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.021463	3937	791
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.097064	26279	4648
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.083383	30969	5293
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.038753	9914	2474
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.094931	35978	6099
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.044167	13793	4347
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.019514	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.019459	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	40.088125	3188	334
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	40.195703	84504	5253
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.052737	16888	6561
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	10.513773	2976	1236	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte; only 1: apply derive_pt_eq_0; only 1: unfold derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.128777	13	10	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.217348	7005	1766
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.033794	7547	5241
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.044623	12295	5089
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.051803	18072	4335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.131198	60862	3816
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.042607	11753	4706
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	40.065814	20825	6374
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.266227	134552	2062
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.095624	40723	4215
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.047675	15657	4796
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.062936	21938	7059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.154388	72369	4372
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	6.941746	4535	832	0.0.0.0.0.0.13.5	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.085819	32833	6810
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.047956	13942	4320
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.099947	42427	4708
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.114154	44534	8713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.069561	24655	6396
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.059240	20944	6346
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.405728	129	70	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.024636	6719	3980
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.081413	30469	6064
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.071908	25566	4132
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.066224	24248	3995
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.029604	8166	1473
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.249126	118930	5969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.030822	5785	1654
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	7.879122	2744	897	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.108746	41422	4444
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.019671	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.058263	19017	6716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.051111	18465	4831
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	40.093718	38070	7245
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.418882	346	63	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.037371	8942	5456
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.134259	2138	203	1.1.1.2.18.7.7.2	synth with cache (only 1: split; only 1: auto with arith; only 1: intuition; only 1: red; only 1: intros x; only 1: intros y; only 1: intros p; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.117595	46959	4458
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.097813	37214	7610
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.053160	16586	5198
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.013978	3889	1284
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.075673	28102	4947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.134264	46884	2592
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	1.769289	879	241	1.1.6.3	synth with cache (only 1: intros a; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.303717	318	42	6.16	synth with cache (only 1: intros H; only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.103533	34	12	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.137704	54986	6937
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.209006	98639	6878
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.072224	27729	6289
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	3.868714	2326	666	2.0.0.3.0.0.0.2.0.0.1.0.0.7.1.0.3	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl in *; only 1: trivial; only 1: now rewrite ?nzhead_revapp_0; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: now rewrite ?IHd; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.036242	17	5	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.069179	22359	4670
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	2.368695	1035	361	0.0.3.0.4.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.064522	22865	6454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.121990	54892	3454
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.026111	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.124058	53359	4899
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.037973	9610	4974
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.052459	14789	4270
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.068691	26358	4485
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.060158	20098	6299
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.061943	20575	5481
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.080247	27837	7495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.036443	12304	3021
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.073614	25527	5128
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.047788	15550	4083
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	4.417048	3738	263	39.0	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	3.678139	1713	437	1.0.6.1.5.0	synth with cache (only 1: intros; only 1: rewrite <- Qeq_bool_iff; only 1: revert q; only 1: intros _tmp_tactician2; only 1: apply Qeq_bool_iff; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.061902	38	12	1.1	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.086173	36808	4053
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.137760	61231	6538
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.027362	9044	3074
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	30.447307	31156	4901	1.0.3.3.2.27.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.098918	40584	5081
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.046198	10533	4723
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.110852	42524	5318
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	19.521009	10814	3697	1.1.0.0.1.3.0.2.3	synth with cache (only 1: intros b; only 1: intros a; only 1: intros Pempty; only 1: intros Ha; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pstep; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.038951	11903	4541
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.027925	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.097794	36592	9473
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	13.529853	5454	301	19.7.21.5.21	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intros; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.065053	22	11	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.371023	77	7	13	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.056449	19488	7192
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.087165	34130	5845
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.049435	17968	2471
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.208707	94960	5591
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.057486	17179	7124
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.148349	68	19	5.4	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.129829	55626	7183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.044378	13956	4041
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.068130	26960	5601
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.093251	36061	7234
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.080211	28949	7761
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.942140	250	114	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.057895	20357	4251
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.152714	64243	7405
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.062089	20568	5633
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.126234	54476	6741
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.036254	8	2	5.1	synth with cache (only 1: intros p; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.055611	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.124649	51363	5205
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.072770	25775	5721
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.070501	25626	5814
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.048061	8	6	0.0.1.0.0.1	synth with cache (only 1: red; only 1: unfold singleton; only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.029999	10556	3013
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.140875	63712	3182
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.052295	15445	5266
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.114779	47563	3565
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.091540	26013	1660
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.081026	29862	6557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.451701	6219	1745
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.089167	32855	4790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.051631	23481	1460
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.116275	45982	3483
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.030891	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.546987	1306	186	0.0.0.15.0	synth with cache (only 1: intros P; only 1: intros A0; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	40.052757	16031	4691
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.078116	33690	3309
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.093095	37768	6135
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.029237	6164	552
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.097657	38428	6461
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.082271	31066	5717
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.085460	31079	2758
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.246211	92	35	4.4	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.069795	23932	6643
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.081563	30014	5479
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	4.724939	1976	921	4.1.0.8	synth with cache (only 1: intros l; only 1: intros x4; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.072684	26423	6977
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	1.874847	551	290	0.0.0.0.0.0.2.1	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.031402	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.062486	22585	5810
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.112068	25882	3484
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.067257	23848	6121
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.185478	80008	9411
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.115234	48204	6535
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.026234	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.176663	48	25	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.077378	29918	3034
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.091288	34318	5292
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.072474	26877	3975
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.073926	10	7	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.372287	56	27	1.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.078242	28302	8272
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.128786	53733	5263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.086280	32373	7909
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.033293	10652	3396
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.069491	25155	5804
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.790074	265	118	7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.094868	38488	4150
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	40.099627	38357	6888
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.035012	11554	3500
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.067062	23123	6896
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.047497	11073	5920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.017498	2385	985
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.240028	110214	5098
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.460371	169	43	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.084699	32252	6651
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.069827	23609	6865
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.436697	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.116677	48328	6688
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.009214	2720	916
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.066397	21793	7435
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.050938	18811	4381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.057290	19476	4615
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.047448	13565	5572
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.071353	30084	3658
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.053854	20585	4460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.049686	15759	4183
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.077491	25192	9245
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.369678	187283	605
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.096498	39075	6220
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.058414	18313	5756
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	14.955106	11528	2256	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0	synth with cache (only 1: destruct s; only 1: intros _tmp_tactician0; only 1: discriminate _tmp_tactician0; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros _tmp_tactician0; only 1: injection _tmp_tactician0 as _tmp_tactician2; only 1: intropattern subst <- _tmp_tactician2; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros _tmp_tactician0; only 1: discriminate _tmp_tactician0; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.055318	21870	4393
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.293085	2406	843	4.2.2.1.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.389052	56	13	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.053215	18778	4218
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.397356	120	63	0.3.1.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros n; only 1: intros m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.111183	43501	10073
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.075663	26888	5153
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.079442	28985	9079
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.765957	199	125	0.0.1.0.0.1.0	synth with cache (only 1: intros a; only 1: induction 1; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.108094	45391	6133
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.084738	30755	7334
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.540691	140	74	0.0.0.0.4	synth with cache (only 1: intros b; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.260548	124225	11698
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.048714	17840	3843
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.060077	19202	6394
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	41.825239	12756	3188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.049945	20687	2595
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.253439	121809	11729
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.180822	82785	3187
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.049484	15324	4763
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.054057	17868	4904
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.698548	833	96	0.0.0.0.0.0.23	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.098259	37830	7182
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	40.016423	5487	520
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.064446	22401	6670
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.151134	64535	11944
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	1.033832	514	140	0.0.0.0.0.0.0.1.0.2.0.6	synth with cache (only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: rewrite orb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.066575	24272	5233
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.031290	8978	3063
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.060694	19207	7177
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.184002	85451	4294
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.044511	14975	3712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.085319	31466	4972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	24.071830	7849	1623	1.15.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.051356	12295	2977
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.068662	26803	3890
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.026175	3482	1872
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.065346	26255	3440
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.152669	66608	3669
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.085523	32478	6848
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.056793	17185	5263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	9.821737	9765	1196	0.8.3.20.0.11.0	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite FM.elements_iff; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.068257	24783	2274
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	6.381826	3944	1026	6.2.7	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.061868	18529	7590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.058095	16141	2862
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.095193	37000	6773
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.081180	31708	3436
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.072949	26702	4277
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.072244	20346	2910
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.108554	46892	3547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.019462	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	16.013045	9970	2460	12.1.4	synth with cache (only 1: intros A; only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.127757	54371	4683
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.055762	24002	4626
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.093161	35479	5731
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.126512	56352	3207
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.006370	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.117813	40721	3554
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	1.853226	2258	156	8.10.0.18	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [q Hq]; only 1: apply (Z.lt_irrefl 0); only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.009251	3565	316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.094706	35129	7174
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.066079	20601	6386
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.053187	16210	6657
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.098260	38660	5467
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.054523	18247	5339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.158705	70104	4504
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.080094	30587	4454
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.086895	32832	6203
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.141932	29	9	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.125923	59628	4365
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.010827	6	2	2.2	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.838667	540	113	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.085163	33337	3720
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.074887	25049	6203
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.709466	416	39	19	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.052547	15469	5006
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.005347	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.077674	26498	1934
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.086738	31635	6676
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.152908	62919	6642
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.048200	13240	5078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.057300	8814	925
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.089204	33585	9401
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.090292	33630	5993
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.329553	167620	7633
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.021653	4	4	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.619039	318	91	0.0.4.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: Nat.order'; only 1: intros b; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.108734	43444	8978
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.464575	27362	4746
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.632696	261	97	6.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.060724	23059	3156
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.225958	14651	795
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.043116	6221	397
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	19.701963	56982	860	0.0.0.0.0.0.0.1.58.12.16.183	synth with cache (only 1: constructor 1; only 1: intuition; only 1: intuition; only 1: intros EQ; only 1: intros y; only 1: intros z; only 1: unfold Qeq; only 1: intros XY; only 1: intros YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.140142	60559	14232
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.082045	32644	6679
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.098034	42093	3290
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.060196	18525	5564
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.194286	87372	6525
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.002614	510	253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.170447	76429	5666
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.098063	36463	7247
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.530984	626	79	16.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.060688	17843	7411
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.317962	116	58	2.1.1.1	synth with cache (only 1: intros x; only 1: intros m; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.081811	30228	5582
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	17.411644	17731	2726	1.0.0.2.0.0.2.1.9.2	synth with cache (only 1: rewrite Nleb_Nle; only 1: destruct b as [| b]; only 1: intros H; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros H; only 1: trivial; only 1: rewrite Nleb_Nle; only 1: intros IH; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.005361	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.179477	75703	5635
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	2.516985	4848	645	23.1	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.083153	33075	4946
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	6.830881	5854	1495	16.0.3	synth with cache (only 1: intros x; only 1: intros x'; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.074320	28382	5313
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.104671	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.229637	106520	2312
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.054938	18770	6200
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.084377	32888	5870
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.087139	33180	4980
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	2.617882	1204	540	2.0.0.0.0.0.0.4.0	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H0; only 1: intros s''; only 1: intros y; only 1: intros H; only 1: intros a; only 1: rewrite inter_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.071575	25171	5421
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.184659	272	17	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.029226	8	2	6.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.034374	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.012119	5	3	0.2.0	synth with cache (only 1: intros H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.064130	21299	7934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.121898	50662	6472
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.132552	50940	8427
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.092149	35950	4921
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.019643	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.117879	51687	3750
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.200183	87169	10328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.266713	126607	3043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.098693	14289	1274
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.058671	21003	1190
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.118206	45633	13393
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.057623	18789	4759
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.068538	25434	4204
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.036270	8765	4533
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.057574	18446	6429
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.127228	52039	8075
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	37.412174	32835	4508	1.23.4.1	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.187677	1140	357	0.1.0.8.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intros p; only 1: intros H; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.003348	1054	166
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	3.530025	15441	621	14.66	synth with cache (only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.019754	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	28.529362	49137	3587	3.0.9.44.4	synth with cache (only 1: intros n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.109802	46074	5316
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.069427	24187	4846
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.066601	22282	5965
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.063345	23094	4346
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.549401	72	43	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.095506	38878	4164
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.081107	32002	6773
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.072701	22360	7129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.077655	28614	4959
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.040938	12774	4175
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.463740	412	210	0.0.0.0.0.4	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.092676	33453	4883
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.046321	15282	5290
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.107137	42990	6160
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.049936	15115	5280
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.037453	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	26.690394	25939	4883	2.0.8.4.10	synth with cache (only 1: intros x1; only 1: intros y; only 1: compute; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.085145	30599	7344
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.054911	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.119668	47106	9814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.058916	20727	2651
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	20.557472	12563	3836	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: intros until a'; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros until a'; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.071200	20038	6568
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.076825	24057	8578
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	9.863382	8462	1605	0.0.0.0.9.4.4	synth with cache (only 1: intros m; only 1: Nat.cases m; only 1: easy'; only 1: simpl; only 1: intros m; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.058518	17556	9407
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	25.550018	456	100	5.2.2.2.2.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	17.912340	6167	1748	1.0.2.12	synth with cache (only 1: intros c; only 1: intros b; only 1: rewrite xnnormalise_correct; only 1: now N.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.026861	6326	2303
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.172295	79455	5028
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.057114	21629	2895
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.067164	22089	5683
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.081416	30682	4778
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.164133	74172	6066
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.402984	10852	4243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.166903	69944	9077
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.141534	62769	4557
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.096084	25995	2177
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	9.222649	9042	1364	13.3.2.12	synth with cache (only 1: intros IH; only 1: intros Ey; only 1: intros z; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.093361	34129	5820
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.218896	103729	4742
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.068182	23597	4151
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.095984	34136	4081
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	4.866815	4378	928	6.3.3.12	synth with cache (only 1: intros y'; only 1: intros Ey; only 1: intros Hyy'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.372205	187325	6635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.110242	47273	2680
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.067225	22206	7980
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.151012	67134	3632
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.050769	15719	4526
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.077209	18571	4426
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.098642	36044	7182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.050547	16217	6257
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.055719	17458	5961
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.093745	41587	4048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.314291	156904	1199
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.124944	54001	5501
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.094119	34246	7815
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.109875	40388	4722
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.075418	25682	8237
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.006971	2740	125
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.152385	12624	3184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.188566	18276	2443
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.120746	49981	8190
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	24.364394	7048	742	34.5	synth with cache (only 1: intros Heq1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.068394	25579	4152
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.141130	52339	8452
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.007332	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.073076	26584	5221
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.181689	79890	7415
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.111907	46568	13668
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.191005	85628	6338
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.079708	31522	4536
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.046378	14136	1782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.082345	31677	5354
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.155492	68672	5102
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.072327	22869	3368
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.090989	33360	4933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.060269	17246	5369
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.066390	20890	8646
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	40.750635	375314	2451
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.005770	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.084912	31387	5847
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.045420	15581	5496
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.075462	26832	6834
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.097798	38407	6285
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.062806	20023	8100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.052572	77	7	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.730390	1156	464	0.2.0.0.2.3	synth with cache (only 1: intros s'; only 1: intros; only 1: intros x; only 1: rewrite filter_iff; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.622114	132	45	0.0.0.1.0	synth with cache (only 1: unfold Z.pred; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.049643	16438	5556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	2.565260	7225	138	0.0.115	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.174538	77829	6760
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.094145	38995	5782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.537536	219	38	6.6.0	synth with cache (only 1: unfold Z.opp; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.185182	84305	7460
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.088966	34885	6502
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	12.860384	10587	715	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	40.001129	150	122
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	2.540652	1353	527	2.4.3.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros b'; only 1: t_eqb).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.262481	21224	4956
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.207670	95170	8413
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	7.575168	102	27	7.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.186991	6349	1146
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.105107	42333	2803
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.091836	30605	1324
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.094447	33002	5814
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.098955	34567	5253
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.030862	5951	4492
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.084142	32312	7000
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	31.315875	19475	3428	3.2.2.20	synth with cache (only 1: intros l1; only 1: intros s'; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.184382	85294	6465
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.024107	38	4	10	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.078653	28992	5054
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	40.285107	27742	9959
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.059060	18964	6937
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	40.078369	26743	3925
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.055269	16407	6387
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.060998	24892	3048
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.129831	52923	1630
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.099727	17938	5591
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.067452	22966	4255
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.125867	52324	6478
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.068950	23387	5268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.101663	39729	4964
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	40.039877	11898	4047
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.012258	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.012901	9	2	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008053	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.008144	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.063333	21132	6690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.193545	87092	5247
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.039523	8182	1837
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.068046	20801	7742
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	3.100330	4277	142	85	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.544777	256	29	14.0	synth with cache (only 1: unfold Z.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.053473	20063	2120
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.326019	159550	7440
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.156680	67024	6242
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.142931	161	23	17	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.081034	29724	5410
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.101882	40919	4387
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	0.649367	197	80	0.0.0.0.0.5	synth with cache (only 1: destruct m; only 1: destruct b; only 1: destruct b4; only 1: t_eqb; only 1: t_eqb; only 1: t_eqb).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.029071	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.048134	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: intros y; only 1: intros y'; only 1: intros Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.002732	612	115
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.155577	14003	3430
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.122001	52714	5011
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.037475	8669	4848
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.061317	22687	2891
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.146762	61580	5315
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.026154	4951	3734
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.123785	52815	4777
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.086015	33304	3607
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	40.063471	28341	2115
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.090839	7	6	0.0.0.0.0.1	synth with cache (only 1: unfold Z.leb; only 1: unfold Z.le; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.101849	43011	3485
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.343643	103746	13175
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	3.806035	8076	897	30.5	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.017480	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.078926	31391	4676
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.030686	5	5	0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	3.200436	1105	543	0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	12.405351	11474	2341	0.0.0.0.2.1.9.14	synth with cache (only 1: revert m; only 1: intros p; only 1: unfold Z.gt; only 1: unfold Z.gtb; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.017783	3	2	0.1	synth with cache (only 1: intros LT; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.025546	5	3	0.0.2	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.022662	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.055340	20052	4669
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	41.458823	20644	2395
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	3.002352	4477	382	1.0.34.5	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: Z.order; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.077330	28019	8663
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.085969	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.052507	15061	7344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.037773	10240	3739
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.075048	23774	7322
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.063296	27083	3466
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.074279	23387	6803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.084207	28287	7296
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.051535	13889	6639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.097231	38798	4013
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.055814	19319	2339
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.141857	31747	6862
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.134898	67297	1666
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.191453	89235	4377
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.067899	23516	5272
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.001969	609	100
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.120075	48487	6673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.035197	12186	2932
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.018800	6275	1416
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.069718	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.517503	45	8	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.022219	9	4	1.0	synth with cache (only 1: intros x; only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.092306	30383	5904
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.030896	7359	4100
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.038475	11262	4604
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.058244	16034	5486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.093559	34183	6825
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.179576	25441	2261
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.077237	28798	3072
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.170561	74149	8865
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	6.189016	10759	992	0.0.0.0.40	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	2.188550	401	249	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until w; only 1: induction w; only 1: intros until n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.052520	15431	5258
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	10.204571	4518	1745	3.0.2.3.1.4	synth with cache (only 1: red; only 1: intros Hx; only 1: intros x'; only 1: unfold Equal; only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	40.051250	17995	4135
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.078136	29895	6113
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.121707	57300	2750
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.044963	696	209	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	17.143384	21121	778	115	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.121379	48227	3950
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.135125	52485	8344
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.086898	30797	6800
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.089326	34435	3520
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	1.594723	1021	238	9.4.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.088253	32899	5221
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.045287	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.065351	24140	3886
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	40.056396	15514	5034
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.031727	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.085941	28903	6193
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	6.791547	15683	1933	0.0.0.0.0.0.14.0.5.0.0.0.0.1.6.20	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.077932	29789	3947
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	2.838724	5434	587	2.0.0.2.0.2.0.0.2.5.2.0.22	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	3.347853	3136	407	3.0.0.2.0.0.1.16.1.1.19	synth with cache (only 1: destruct a; only 1: simpl in *; only 1: f_equal; only 1: induction p; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.103485	40296	1026
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	7.611287	6043	1102	4.21	synth with cache (only 1: intros x; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.278991	140223	4728
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.187637	84063	4906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.060229	19593	3759
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.106406	42225	4069
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.034560	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.006277	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	0.707025	657	53	0.0.3.4.23	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.000970	97	62
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	1.519229	1618	342	1.0.5.0.5.0.0.2	synth with cache (only 1: destruct n; only 1: destruct m; only 1: now try N.order'; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.091912	41395	2574
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.009156	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.110211	44869	7109
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.584168	247	111	2.7	synth with cache (only 1: unfold Z.lt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.103262	37906	6738
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.080058	28344	7859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.049624	11652	5275
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.021286	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.104478	40942	8380
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.065158	53	11	5.2	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.048852	10977	1309
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.064940	12284	218
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.063309	21617	3229
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.008990	4	1	3	synth with cache (only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.088622	32347	6300
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.057088	17913	5804
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.246825	120513	2900
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	24.702802	9601	789	0.0.0.36.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.143813	61674	9009
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.070553	26533	5338
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.091605	35081	6415
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.023878	6009	4141
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.065102	19982	9751
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.078261	27440	6141
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.097326	37234	5459
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.091533	34060	3598
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.095760	38361	5182
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	22.883318	74076	1884	8.2.0.8.4.116.19	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: unfold Z.testbit; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.027396	6877	3655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.073777	24390	5862
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	40.246768	116028	6328
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.025275	6189	2486
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.164575	78655	3635
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.049470	16741	3786
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	1.905761	609	71	2.3.20	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.128045	18	8	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	20.307465	68608	4753	10.11.22	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.044093	10054	2946
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.155851	56210	5492
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.088067	31053	6598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.087416	10763	3479
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.150096	60185	8041
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.067739	23045	8048
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.054644	18675	3486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	19.016068	6294	743	34	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000689	72	26
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.379946	27981	5796
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.081380	28199	8241
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.078076	30825	3354
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.034989	9658	4596
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.613337	67189	5367
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.080434	17402	5110
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.154348	91	19	10	synth with cache (only 1: now try Z.order').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.073783	4	1	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.004513	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.003888	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.005179	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.009300	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.270647	142157	3706
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.082881	26803	6537
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.142178	60983	9499
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.086607	27652	7877
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.085054	36049	1462
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.046888	10627	4382
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.059541	17968	5263
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.109029	47508	3122
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013324	3683	770
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	6.968655	5098	802	6.4.1.2.0.8	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: trivial; only 1: simpl in *; only 1: intros; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.146253	61514	7117
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.105619	41284	4153
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.157865	69221	6461
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.119944	9	6	2.0.0.0.0	synth with cache (only 1: intros Ha; only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.027920	7613	2917
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.094808	37034	6287
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.067215	24391	5784
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.055038	14171	4928
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	29.379933	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	40.076663	29010	5041
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.091352	32973	9573
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.760228	845	78	15.0.1.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.044106	11854	5241
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.026008	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.109341	43760	5084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.040191	13064	3658
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.066361	22527	8111
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.095230	41367	1636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.087511	33463	3891
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.069156	23718	8501
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.288583	27199	8551
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.052918	16036	6377
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.130018	55707	6341
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	30.677480	22646	7008	0.0.1.0.0.3.2.14	synth with cache (only 1: intros until y; only 1: intros _tmp_tactician0; only 1: induction 1; only 1: constructor; only 1: constructor; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.063187	22507	5129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.080705	28470	6492
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.074129	30641	1271
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.081869	28326	6464
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.056439	20125	4106
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.404250	73753	4942
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.089596	39241	2960
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008808	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.012048	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.028438	8097	3057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.068937	15111	5807
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.565246	759	104	0.0.16	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.327790	13079	2342
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.178732	80694	8549
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.054522	18361	4143
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.019266	5720	1187
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.096719	39532	6947
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.030456	8568	3344
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.058438	16278	5664
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.036729	12440	2557
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.051345	16375	4990
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001085	248	32
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.074238	22103	8092
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	40.064550	21825	6341
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.052288	13983	3035
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.071692	26116	6567
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.695840	17461	2646
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.191821	86788	5923
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.089758	38601	2290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.086380	30683	5344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.053708	7	5	2.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.370796	10503	1907
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.066321	6697	2110
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.008988	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.012685	4	3	1.0.0	synth with cache (only 1: red; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.007059	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.655824	119	57	4.1.1	synth with cache (only 1: intros Hf; only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.008294	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.040287	13847	2161
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.026404	6	3	2.0.1	synth with cache (only 1: intros H'3; only 1: intros y; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.086548	37	16	4.0.0	synth with cache (only 1: red; only 1: intros x; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.097715	35359	7229
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.418063	351	64	13.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	3.044236	2597	543	1.0.2.4.3.9	synth with cache (only 1: intros m; only 1: unfold singleton; only 1: intros r; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.053002	14943	4896
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.241903	29958	7981
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.049111	16840	4719
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	29.627270	19248	2926	6.4.11.1.4.9	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: auto; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.037136	12040	1870
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.124064	47114	8065
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.098837	41058	4069
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.146235	52607	7793
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.060176	46	11	0.0.7	synth with cache (only 1: intros b; only 1: intros until q; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.084731	31276	5892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.012756	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.108909	48348	1135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.084785	14609	2763
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.312987	21880	8097
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.138439	56917	8206
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.753425	1037	116	0.0.0.18.2.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.050307	14383	6504
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.091135	18472	2478
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.280452	128833	4674
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	15.392245	13659	830	0.0.1.3.7.0.9.9.5.1.7.26	synth with cache (only 1: Z.nzsimpl; only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: now destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.104211	6	6	0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.074395	28219	3138
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.039493	16219	2733
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.051565	12152	4724
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000756	56	31
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	40.094487	31976	10002
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.452556	150	74	0.1.0.0.0.0.1	synth with cache (only 1: intros EQ; only 1: intros n; only 1: intros H3; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.009476	1978	277	1.4.0.0.1.1.0.11	synth with cache (only 1: induction 1; only 1: compute in H; only 1: induction l; only 1: left; only 1: firstorder; only 1: left; only 1: now repeat constructor; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.036513	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.056521	12502	2853
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.020610	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.024869	4	2	2.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.008932	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	2.391116	1516	300	5.1.1.8	synth with cache (only 1: intros H2; only 1: firstorder  auto with crelations; only 1: rewrite <- H2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.052163	15880	6871
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.311412	20760	9705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.085670	18562	5411
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.731269	367	295	1.1.0.2.0	synth with cache (only 1: intro; only 1: intros x'; only 1: intros E1; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.091748	36069	9092
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.080247	25216	12232
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.139291	57006	6447
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.081801	30478	8883
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.036450	11317	3631
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.011132	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.080821	28662	6012
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.130799	53592	7980
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	4.658091	1861	646	0.13.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	1.048402	446	84	1.0.1.1.4.2.8	synth with cache (only 1: induction l; only 1: now apply permA_skip; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.085659	36382	6818
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.409546	19059	8300
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.104649	42956	9793
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.022099	6117	2331
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.091659	36309	7495
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.031320	10860	2036
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.073894	28916	5137
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.162076	68987	6458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.115850	45478	7701
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.129143	62178	2828
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.042821	11376	4507
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.109334	46439	6481
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.024970	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.008969	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.008547	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.063295	21895	5318
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.083055	31803	5731
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.086579	33003	8429
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.091000	6	3	0.2.1	synth with cache (only 1: intros x; only 1: intros b; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.073328	28	8	0.6	synth with cache (only 1: intros l; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.013729	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.056079	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.057076	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.230995	765	186	10.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.037436	13722	1709
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.052544	18367	3571
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.128822	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.048165	13264	5792
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.000979	178	31
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.056337	17418	4694
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.113006	44918	6891
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.094685	35752	8473
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	8.947201	2632	408	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.214195	94181	7601
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.041775	7931	3980
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.090042	33103	9649
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.068981	21995	6310
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.116347	46588	6736
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.323395	50980	1916
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.130895	52887	9587
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.097938	35205	4713
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.050966	29	8	3.2.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.020026	6	3	3.0.0	synth with cache (only 1: intro s; only 1: rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.072812	23860	7868
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.103681	42834	7168
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.044145	10	6	0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.499105	113	67	0.2.0.2.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.112651	48481	7925
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.306252	39347	8668
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.491860	146295	10133
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.068179	24333	8619
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.014329	3361	1894
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.034265	12299	2234
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.011005	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	40.099906	40297	5707
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.033572	6	2	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008179	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.075384	27769	6002
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	0.234354	75	38	1.0.4	synth with cache (only 1: intros Hiff; only 1: intros m2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.105348	44271	3671
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.023583	6526	2158
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.055966	15877	7748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	1.830767	9152	130	0.133	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.098791	28565	6206
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	12.645680	16398	3075	0.0.0.0.0.4.4.0.0.1.25	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.018505	3	3	0.0.0	synth with cache (only 1: unfold succ; only 1: unfold pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.127191	54118	5813
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.036325	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	40.057571	16856	10197
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.629700	24	13	0.1.5	synth with cache (only 1: compute; only 1: intros Hf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010185	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	19.149501	8478	3119	6.1.4.2	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.066398	24347	3739
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	1.128058	326	138	4.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.072271	26726	5912
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.067468	5738	2361
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	1.054383	293	95	0.2.5.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros y'; only 1: intros H1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.042616	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	15.060100	9721	3492	0.1.0.2.3.2.2.0.0	synth with cache (only 1: unfold le; only 1: unfold max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intros c; only 1: intuition; only 1: intros y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.094057	27	10	4.2	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.482215	158	59	0.1.3.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.111627	38	19	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.055983	16169	6582
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.066881	8756	3733
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.038402	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.057386	16321	4967
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.014308	6	2	2.2	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.033821	12025	1433
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.001076	102	63
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.490355	125125	8143
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	5.564521	2360	634	6.6.1.1.0.0	synth with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: inversion 1; only 1: setoid_rewrite Exists_exists; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	32.296352	51876	7709	1.13.0.0.0.0.0.1.0.0.0.4.10.0.1.41	synth with cache (only 1: constructor; only 1: red; only 1: red; only 1: intros; only 1: compute; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: intros p; only 1: apply compare_trans).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.036010	11675	2691
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.856790	621	291	3.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.293754	68	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.058577	20782	4793
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	5.143564	3254	633	2.5.9.1.0	synth with cache (only 1: firstorder; only 1: rewrite InA_cons in H; only 1: induction l; only 1: firstorder; only 1: firstorder  auto with crelations).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.120947	45439	9308
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	40.081820	22728	5472
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.041729	12202	3572
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	13.749740	26400	1688	7.1.0.2.4.56	synth with cache (only 1: destruct n; only 1: order; only 1: rewrite one_succ; only 1: intros H; only 1: now subst; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.017673	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.030635	2	1	1	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.082091	28725	9804
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.075931	26180	9123
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.520986	15553	7337
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.397957	14458	7401
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	3.691993	2931	710	0.1.0.0.0.0.4.9	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| x l]; only 1: intros Eq; only 1: intros x; only 1: intros H; only 1: inv; only 1: simpl; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.082481	29126	7208
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.077189	27111	7354
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.041981	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.024494	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.024042	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.180943	77593	6399
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	0.830694	252	83	1.0.3.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: destruct 1; only 1: elim (Noone_in_empty U x); only 1: auto with sets; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.032723	10535	1285
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.036062	10691	4372
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.869390	694	136	2.5.1.5	synth with cache (only 1: intros l'; only 1: elim l'; only 1: auto; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006809	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.008337	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.520869	516	285	1.0.0.7	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.046461	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros; only 1: subst; only 1: intros l'; only 1: intros l2; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.079771	27935	8951
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.075859	22084	3723
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.095813	37475	5782
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	3.028296	888	379	0.1.2.7	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.059038	20993	2465
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.078722	29285	6092
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.070987	25663	6447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.060149	20838	4147
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.077113	29021	6043
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.038542	5789	2300
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.292582	31539	6673
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.088628	21	7	1.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.072896	24226	4479
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.076126	28802	2042
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	21.572248	18036	5325	0.0.0.0.0.1.0.0.3.0.0.0.0.0.0.5.0.1	synth with cache (only 1: destruct m; only 1: now destruct n; only 1: destruct n; only 1: trivial; only 1: intros Hn; only 1: intros Hm; only 1: clear; only 1: simpl; only 1: rewrite <- (N2Z.id (_ mod _)); only 1: rewrite Z.rem_mod_nonneg; only 1: f_equal; only 1: now rewrite N2Z.inj_mod; only 1: easy; only 1: reflexivity; only 1: intros Hn; only 1: intros Hm; only 1: now destruct Hn; only 1: now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.055274	21351	1778
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.740966	639	116	14.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.001047	148	107
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.180702	73341	8623
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.095748	20170	8313
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.335536	42968	5109
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	9.833503	4451	1352	1.0.0.1.1.6.3	synth with cache (only 1: intro; only 1: intros b; only 1: red; only 1: simpl; only 1: intros H; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.060447	20075	5793
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.068099	21462	4320
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.106851	40151	5778
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.083475	29338	6840
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.306850	34266	9902
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.010085	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.045592	14143	3206
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.009752	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.045706	22	8	4.0.1	synth with cache (only 1: red; only 1: intros h1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	23.093160	10210	3496	0.0.4.0.0.0.0.0.2.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: order; only 1: order; only 1: order; only 1: specialize (IHl x y); only 1: destruct (split x l); only 1: simpl in *; only 1: rewrite join_spec; only 1: intuition_in; only 1: order; only 1: order; only 1: specialize (IHr x y); only 1: destruct (split x r); only 1: simpl in *; only 1: intuition_in; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.723944	320	74	11	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.077316	26900	5540
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.097151	40722	5388
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.197799	91641	5858
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.151345	67143	9554
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.029264	9834	1467
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.035556	8959	5114
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.411672	88283	5804
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	40.073131	23734	9381
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.069350	21428	6295
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	10.610648	6618	1986	0.0.4.4.1.1.2	synth with cache (only 1: red; only 1: intros m; only 1: simpl; only 1: intros a; only 1: intros Hb; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.102216	40595	7232
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.280489	3635	1340
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.105468	40464	3503
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.013165	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	3.671009	873	342	0.0.1.0.0.1.4	synth with cache (only 1: intros l; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.170411	62	27	1.0.0.1	synth with cache (only 1: intros H; only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.043763	14087	4512
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.023870	7802	2475
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.115017	48709	2647
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	15.815499	12944	3217	2.1.8.0.0.0.6	synth with cache (only 1: intros s; only 1: intros; only 1: intros k; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, _tmp_tactician4); only 1: apply H with k; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.049999	15214	3185
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.128659	54054	9852
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.086164	31257	7826
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.047800	9438	2998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.005892	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.196783	86308	6692
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000860	150	24
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.147008	51054	5202
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.007649	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	1.051914	340	182	2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: now destruct 2; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.211934	92144	8135
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.078262	25464	6976
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.076372	30456	4250
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.042931	17	7	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros _tmp_tactician0; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.059300	16627	7403
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.084078	32775	4889
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.199965	27766	5907
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.640628	257	120	9	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.041422	15309	3547
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.049116	11663	5149
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.202610	90976	8962
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.225486	101348	6467
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.093016	31572	8034
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.035932	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.105996	40202	6118
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.082066	29664	10038
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.027068	8493	2334
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	14.029002	49974	1436	129	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.109981	40056	5721
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.066404	21196	9092
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	2.030225	2952	549	6.0.0.5.0.0.0.1.46	synth with cache (only 1: constructor; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: simpl_relation; only 1: red; only 1: red; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.078438	29141	7601
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.528484	186	29	0.0.0.15	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.080912	33475	6050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.032940	4692	1394
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.061130	545	226	1.1.0.6	synth with cache (only 1: intros x; only 1: intros y; only 1: intros Hyz; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.046298	24	11	4.1	synth with cache (only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.538410	154	85	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	1.647127	1541	219	0.3.3.0.1.6.0.0.0.0.26	synth with cache (only 1: constructor 1; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: intros x; only 1: intros _tmp_tactician0; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros H; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.027532	8101	1006
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.044397	15071	3363
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	2.313556	6416	179	83	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.598404	240	52	3.10	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.129918	55682	5393
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.080848	31355	5633
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	9.612154	15167	2943	4.0.2.1.3.1.9.0	synth with cache (only 1: intros S; only 1: intros n; only 1: induction n; only 1: intros; only 1: assumption; only 1: unfold push; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.060266	19961	6455
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	31.571460	29128	6395	0.0.2.2.0.0.5.2.0.0.1.8	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite abs_N_nonneg; only 1: trivial; only 1: Z.nzsimpl; only 1: Z.order'; only 1: now destruct p; only 1: simpl; only 1: intros H; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	40.200263	19339	10067
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	10.396691	3225	1012	0.4.0.8.0	synth with cache (only 1: rewrite InA_alt; only 1: simpl; only 1: rewrite InA_alt; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.107810	44847	12232
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.069955	25547	5219
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	6.020287	2513	1195	3.0.0.1.0.0.1.3	synth with cache (only 1: intro X; only 1: intros C; only 1: intros Y; only 1: intros H'; only 1: intros H'0; only 1: apply Setminus_intro; only 1: trivial with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.020739	7075	1836
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.161014	68789	3074
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000666	65	28
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.104010	41809	6570
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	36.324726	29852	8712	7.0.0.4.3.1.1.0.4	synth with cache (only 1: intros ?; only 1: destruct l; only 1: intros l'; only 1: intros ?; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros l'; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.137558	59253	3523
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.096795	19051	6094
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.123526	50815	6569
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.208166	91531	8757
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.127981	15559	1829
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.053921	15161	7433
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.091489	34200	7230
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.063493	20848	8149
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.155421	63664	7109
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.086362	31471	6483
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.099956	39036	7337
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.947514	2091	705	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.023498	7255	1919
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.074109	26647	6514
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.067283	24357	5655
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.307050	62434	7722
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	4.191654	2911	410	0.2.10.6.0.0.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	1.267809	2042	319	0.2.0.0.0.0.17.1	synth with cache (only 1: intros ?; only 1: induction p; only 1: simpl in *; only 1: reflexivity; only 1: simpl in *; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.078991	27606	2129
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.404338	145489	2793
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.076567	19202	658
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.117351	50468	4921
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.077154	23699	3608
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	3.699792	4322	462	29.13	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.061013	21919	6458
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.109334	44534	5817
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.036367	5	5	0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: unfold N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.094435	36683	7426
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.253433	26011	8659
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.835758	635	95	1.2.9.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef; only 1: intuition; only 1: inversion_clear H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.210074	24832	6906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.056069	16803	5271
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.226403	45649	10128
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.032341	12068	1684
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.149112	54249	4902
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000696	69	29
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	29.634467	40631	6100	5.0.0.0.0.15.4.15	synth with cache (only 1: intros n; only 1: unfold equal; only 1: intros m; only 1: case M.equal; only 1: auto; only 1: intros; only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.089851	30485	7745
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.013134	5	2	2.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.009765	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.035197	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.069299	24510	7290
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.073550	26090	7294
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.138307	55966	8828
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.081193	28610	2965
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.064212	38	14	0.1.0.2.2	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.723082	446	122	3.6.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n); only 1: rewrite <- (id n'); only 1: now f_equal; only 1: intros H; only 1: rewrite H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.039277	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.052787	17057	5299
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.110527	25462	5588
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.011109	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.169005	74637	5763
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.049051	14729	6600
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.025100	9084	1319
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.050521	16963	6022
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.067389	23321	7097
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.084791	27499	9164
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.305880	66088	9723
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.044766	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.006047	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.081511	28691	6837
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.096535	38161	9518
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.176596	16223	6152
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.073709	26461	5470
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.097279	38634	6725
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.053600	18595	4847
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.107358	41358	5043
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	9.094164	18591	1847	6.6.0.7.2.17	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (l, F); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.053935	14664	6569
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.099186	39596	7960
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.005374	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.056217	17452	8284
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.458746	2680	191	1.0.0.32.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.073623	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.049509	8514	2585
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	23.790879	34555	3658	0.0.106	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.106851	42657	11484
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.071617	13281	5145
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.141480	59546	7897
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.181859	82358	9690
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.074463	29273	5854
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.072950	24182	10345
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.129398	53105	8672
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.094049	36968	4563
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.064914	22084	6729
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.203156	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.051115	17792	4278
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	9.121301	6410	1071	7.3.5.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	1.137640	274	159	0.0.0.0.1.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: intros H; only 1: auto; only 1: now destruct b).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.056695	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.038830	11326	5209
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	3.108142	2238	640	0.3.0.2.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: clear _tmp_tactician2; only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.077217	25758	7815
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.091893	38773	2083
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.123569	52578	7163
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.116005	46352	6838
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.065320	21478	6101
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.114635	45946	9087
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.244517	1013	348	2.0.0.6	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.024883	9889	796
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.079239	26642	11380
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.074827	24213	7932
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	2.602779	2003	729	2.0.4.1.0.1	synth with cache (only 1: unfold not; only 1: intros P; only 1: intros notall; only 1: intros exnot; only 1: elim exnot; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.110826	44077	10699
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.530761	547	299	0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intro; only 1: intros l'; only 1: intros Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	6.144417	7596	1126	1.3.1.3.9.8.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: intros Ha; only 1: split; only 1: intros; only 1: now apply H; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.038242	7917	2442
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.677103	255381	4221
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.014613	4	3	0.0.1	synth with cache (only 1: intro; only 1: intros le; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.302155	148781	4240
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	1.750232	2576	120	46.5	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.066833	24081	5625
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.133655	57342	2840
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.083167	29761	11202
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	25.054872	187195	3693	0.0.0.139	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.081347	28264	8271
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.084071	33753	6045
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	16.397502	84574	1984	135	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.105591	40330	11558
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.068246	27902	3729
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.155470	67365	7617
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.164401	64174	7997
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.100578	39342	8397
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.106073	4	4	0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.079210	29488	8680
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.083509	26037	7664
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.126355	16	7	1.2.0.0	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	40.090034	33010	7084
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.110671	45378	6871
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.013199	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.116783	46581	9152
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.058859	19881	5178
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.748412	5904	367	0.4.2.39	synth with cache (only 1: intros l1; only 1: induction l1; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.195138	31	21	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	40.121284	52390	7805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.058928	18472	1719
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.094755	36001	6580
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.103081	39690	8214
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.014421	4209	1566
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.059308	18424	8388
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.014427	8	3	0.0.5	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	6.196780	3577	1464	4.0.0.2.0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: intros Ha; only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: intros H; only 1: simpl; only 1: now destruct a; only 1: intros Ha; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.050493	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.024023	27	3	9	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.409731	152339	6904
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.075808	28361	9545
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.034383	6665	1410
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	3.779379	1715	763	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.076887	24874	7759
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.085285	33987	8240
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.592984	181	90	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.537177	377	76	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.320716	160767	10629
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.008912	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.231404	102014	5044
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.064708	21506	6847
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.137155	59911	3734
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.070352	19779	3073
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.178627	83362	6536
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.125941	46352	9061
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.245749	73	34	0.0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.083788	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.054720	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.089967	30821	9326
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.047053	15090	3089
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.087499	33326	7571
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.087753	33960	5480
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.322111	107265	3245
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.169697	72151	7350
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.369262	58249	7836
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	24.923482	28275	3851	0.1.0.0.0.2.0.1.0.2.0.0.0.35	synth with cache (only 1: induction l; only 1: simpl; only 1: intros Hneq; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: intro eq; only 1: intros _tmp_tactician0; only 1: auto with datatypes; only 1: intros H0; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.124797	51986	9079
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.241503	107498	17291
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	16.444448	16914	2107	2.1.0.2.0.3.8.0.22.13	synth with cache (only 1: induction n in m |- *; only 1: constructor; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.039725	9937	1683
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.225872	37896	6668
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.379823	36267	3750
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.461735	224512	6006
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	4.863928	4551	961	2.0.0.1.0.0.0.0.2.0.5.0.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: left; only 1: auto with arith; only 1: intros until m; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.005259	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.102771	39992	7090
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.111603	45322	7323
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	1.652820	729	258	0.0.2.1.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: elim (le_lt_dec n m); only 1: intros H; only 1: apply le_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.006957	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.010364	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.067922	24014	5337
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.023452	6451	1976
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.058611	20401	3957
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.348294	31641	7562
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	40.161873	70456	9836
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.136811	51255	7490
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	2.361609	1478	474	0.1.4.0.0.5	synth with cache (only 1: intro p; only 1: intros r; only 1: inversion 1; only 1: destruct p; only 1: firstorder  discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.050748	15356	5491
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.010525	6	2	1.3	synth with cache (only 1: intros Hfst; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.140839	59205	8501
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.172030	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.979871	1136	326	2.2.0.1.0.4.1	synth with cache (only 1: intros until l; only 1: intros a'; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: auto; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.131361	54839	5648
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.086401	32530	5415
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	1.696519	928	264	0.0.1.1.0.2.2.1.0	synth with cache (only 1: intros until l; only 1: destruct l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.155686	67885	8626
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.034823	19	7	1.0.2	synth with cache (only 1: intros B; only 1: intros; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.126241	65	27	0.0.4.1	synth with cache (only 1: intros y; only 1: intros R3; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.135285	40808	5151
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.035328	9	7	1.0.0.1.1	synth with cache (only 1: intros n; only 1: simpl; only 1: intros l; only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.119052	45256	9753
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.038528	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.228237	52545	12126
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.285157	85532	10667
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.035698	5417	1406
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.220464	100235	6818
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.063084	25353	3917
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.104513	41089	5029
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	8.668522	15511	1489	1.10.4.0.5.12.1	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| _tmp_tactician0 ll lx lr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: now auto; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.687918	1780	322	0.3.1.3.0.2.8	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.051736	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.616701	1342	334	4.0.0.0.0.2.0.3.2.0.2	synth with cache (only 1: intros until s1; only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.300533	97292	2938
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.167014	68732	8135
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	9.564541	9624	1730	3.0.0.5.0.6.11.0.2.1.1.2.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.112528	43200	7280
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	12.715648	7463	3446	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intros until n; only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: intros Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b; only 1: intros Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.056460	17398	5803
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.113361	44987	6541
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.214605	52526	5800
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.031553	9616	2568
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.309420	60281	5712
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	13.998462	21768	2118	16.3.0.37.1.91	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)); only 1: now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.315006	22112	2676
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.090467	30684	9838
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.067425	18942	1291
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.065335	19761	9866
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007113	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.017865	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.055605	17820	5653
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	21.151694	124065	2868	113.20.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.019712	5060	1818
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.021134	8	4	0.1.3.0	synth with cache (only 1: unfold meq; only 1: intros until y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	40.223314	45990	6248
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.010666	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.014126	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.091679	35049	7778
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.205216	90988	6702
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.086189	32628	6020
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.071417	24523	9267
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.049000	17558	3605
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.068711	24361	5772
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.100310	40428	7003
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.153235	48894	6170
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.144360	59332	9870
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.229502	107417	5430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.328096	18	11	1.1	synth with cache (only 1: rewrite <- even_equiv; only 1: now PeanoNat.Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.097722	39989	4569
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.162756	69121	7347
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.034905	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.080056	27950	6360
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	17.605051	16978	2612	0.0.1.7.0.0.6.10.0.2	synth with cache (only 1: intros H1; only 1: intros H2; only 1: Nat.le_elim H1; only 1: apply Nat.lt_le_trans with m; only 1: auto; only 1: Nat.order'; only 1: rewrite <- H1; only 1: generalize (Nat.lt_trans n m p); only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.072072	23611	4098
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.065471	14808	9191
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.084398	29251	8053
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.079936	31247	5788
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.200683	35615	10665
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.004089	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.083063	30976	5457
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.375981	28449	9396
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.071224	24864	4764
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.219145	51633	7313
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.262403	571	177	1.0.2.1.0.0.4	synth with cache (only 1: intros l'; only 1: inversion 1; only 1: subst; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.176965	78435	2919
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.078962	27907	8030
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.086346	33400	5800
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.089427	31577	9548
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.068064	21281	8510
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.048123	14498	5830
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.186141	79303	7195
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.968103	1010	154	15.0.0.1	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.074131	25804	6935
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012028	2920	1097
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.959848	244	108	0.2.4.1.0	synth with cache (only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.086517	31684	8546
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.084642	30250	7950
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.025435	6754	3408
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.079606	28348	8970
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.039623	13039	4261
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.100327	43066	5010
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.395730	78	50	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.331278	896	42	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.080204	26655	9333
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.103384	40869	10565
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.022861	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.007274	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.057269	16107	3291
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.098695	36233	9823
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.076911	31258	4009
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.093341	35843	6861
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	16.147649	16978	3475	0.0.1.5.14	synth with cache (only 1: intros m; only 1: intros y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.218818	48765	7893
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.380811	140068	7972
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.095609	38769	5959
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	6.134211	7400	1056	28.0	synth with cache (only 1: intros H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	2.488720	1278	226	0.2.1.15	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: Nat.nzsimpl; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.064281	20951	9032
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.157731	20207	9380
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	1.769231	785	149	0.1.16	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.097569	32889	9226
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.010605	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.066567	21410	6896
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005057	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.778726	175	82	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	3.861951	2565	791	7.9.0	synth with cache (only 1: intros _tmp_tactician2; only 1: intros b; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.049869	17080	4712
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.337218	63936	11561
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	5.596715	4495	723	1.10.21	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.168966	29769	3864
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.158848	24432	7408
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.077396	26478	9086
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.309158	29481	7042
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.253346	39453	5752
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	0.433688	546	47	2.0.5.21	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.040103	10703	4919
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.132629	60005	7384
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	2.205360	1327	339	0.0.0.0.0.0.1.1.0.9	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.072506	24866	7428
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.013126	3562	1350
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.071156	23795	8031
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.050772	17815	2835
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	2.696247	2261	693	3.2.1.1.2.7.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction s; only 1: intuition_in; only 1: simpl; only 1: descolor; only 1: invrb; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.107839	38926	8857
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.089589	36296	6107
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.050321	15274	5871
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.058733	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.048468	9	5	1.2.1.0	synth with cache (only 1: intros H; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.146963	66736	4477
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	1.476015	249	69	4.1.8	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	0.603435	107	56	0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: unfold add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.105533	40000	8061
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.215420	101379	7915
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.195206	45478	6691
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.983065	592	186	2.1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m; only 1: intros Ha; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.251614	75581	8526
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.105004	37402	8203
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	0.851627	51	10	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.129843	50980	12435
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.033355	13	5	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.051057	15559	4834
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.128864	55949	8035
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.032940	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.006534	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.108844	42611	7718
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.049244	11288	5064
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.055382	17388	6319
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.106965	41155	12389
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.103441	38932	6824
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.489045	78	38	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.194938	90236	2678
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.138026	53615	10258
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.293738	45224	5702
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	19.285822	9736	2498	0.0.0.0.2.8.4.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: unfold add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.016126	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.049263	34	7	6	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.141835	67467	4136
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.216473	44384	7939
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	18.298093	36835	3048	1.6.42	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.098370	37084	7455
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.071595	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.314321	36	14	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.071047	24456	5488
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.688682	31	7	0.0.6	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.068627	22	4	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.065551	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	40.354878	19571	4722
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.162600	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.165659	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.070531	23832	5696
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.295325	83150	5691
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	11.491090	12716	1616	3.0.1.0.3.22	synth with cache (only 1: revert m; only 1: intros p; only 1: destruct n as [| n]; only 1: intro H; only 1: apply le_0_l; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.281614	24988	7105
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.058982	17870	7993
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.376405	140	60	0.1.1.1.0.0.0	synth with cache (only 1: intros x; only 1: intros Hm; only 1: intros y; only 1: intros Hnin; only 1: intros H1; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	2.261096	1986	415	18	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.264387	28592	5990
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.042817	9185	646
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.104357	41120	4982
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.098408	36830	7533
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	38.116744	36062	6530	1.1.0.26.7	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.185276	84125	7053
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.052273	15204	6390
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	40.197566	31788	8808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.064559	20904	8410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	10.024297	3675	1875	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: intros Hn; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.086565	28428	6866
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	16.142893	7905	2795	0.1.1.2.1.0.0.0.0.0.2.2	synth with cache (only 1: unfold meq; only 1: intros until x; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.095690	36768	9290
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.053190	16715	3754
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	2.824112	2241	517	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.20	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.007543	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.006942	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.042660	12911	4321
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	2.539235	2132	399	1.1.2.6.3.0.3.0.1	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intro Hn; only 1: rewrite <- Pos2Nat.inj_succ; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.149292	62189	8586
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.202352	27609	7755
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.143546	19537	10093
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.066627	20082	6848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.040241	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.084030	31657	7324
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.148510	24321	5084
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.130444	49926	13308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.156450	19758	9593
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.144269	68680	5604
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.116157	48405	8143
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.136918	62791	5611
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.124933	54126	9604
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	15.254725	11140	1583	0.2.0.0.0.9.0.0.0.0.1.1.0.0.1.0.1.57	synth with cache (only 1: revert m; only 1: destruct n; only 1: intros m; only 1: now Z.nzsimpl; only 1: intros; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: intros m; only 1: destruct m as [| m| m]; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.030526	4	4	0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.696019	566	310	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.130785	33277	13711
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.147523	40720	8248
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.116074	45726	6898
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.160276	71232	5584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.197861	24674	5408
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.133186	55268	7496
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.028076	7960	900
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.071433	24091	6046
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.237007	58760	6779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.198674	14410	5272
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	6.957682	428	206	0.0.0.1.0.2.0.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite mkmult_pow_ok; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.066543	20936	7877
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.291661	87345	6356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.311958	9315	4990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.137170	36606	9900
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	1.735957	1277	435	2.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold sgn; only 1: intros n; only 1: destruct (compare_spec 0 n); only 1: intros H2; only 1: order; only 1: intros Hn; only 1: rewrite <- le_succ_l in Hn; only 1: rewrite <- one_succ in Hn; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.233619	38682	8742
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	2.454857	740	404	1.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b); only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.124319	45514	8801
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.058934	18605	5790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.091509	15056	8614
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	4.699960	2024	813	0.0.0.2.10	synth with cache (only 1: intros a0; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	40.039290	6824	2171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.192554	44611	8957
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.185710	29502	10230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	40.068347	20947	10961
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.039082	5877	2924
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.044850	10998	4890
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.148399	61243	13627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.123665	45331	9208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.914721	242	159	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.123765	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.050424	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.023576	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.365164	10104	3913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.290421	467	242	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.228709	58231	6302
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.272608	32	19	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.298085	89219	4798
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.094254	34836	7691
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.095460	36121	10478
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.159183	65597	5493
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.108554	39445	15724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.097494	36872	9374
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.128498	49862	7128
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.094500	30250	7797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.012502	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.147826	27803	8849
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.226030	3819	217	3.6.32	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e, abs); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.118787	50333	4933
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.157044	134	25	11	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.097540	35428	7700
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.221396	462	254	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	22.498356	10683	5748	0.0.0.1.0.0.0.1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.199341	41052	6138
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.182559	28519	8095
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.011730	2773	1143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.143263	28389	8569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.137840	14488	7656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.330299	64727	2485
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	40.131243	16461	7695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.844848	578	178	0.13.2.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: rewrite <- opp_nonneg_nonpos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.822273	738	396	0.0.0.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.113400	39115	8083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.981567	1253	637	0.0.0.3.1.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intros Hb; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.053542	14993	6074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.085182	19558	9245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.224833	23409	7559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.140442	38966	7899
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.074321	23089	9179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.081149	20127	7479
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.063408	20817	6634
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.039959	11294	3216
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.221687	102117	20223
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.154763	28798	5979
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	11.736907	61912	1878	1.3.16.52.5.8	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (p, ?, ?); only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.160183	22375	1367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.051762	17554	5699
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.041445	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.062824	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.154090	19302	5848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	11.041528	5080	2190	1.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite max_l; only 1: rewrite max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.161425	69436	9370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	7.788962	3103	1670	0.0.5.0.3	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.401674	147	67	3.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.104979	38403	9257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.081321	32167	5531
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.086377	25819	9628
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.015079	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.161329	30842	8394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.168540	15467	6475
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.101776	38268	6203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.074840	23214	8971
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.379041	1025	212	1.0.0.0.0.0.10	synth with cache (only 1: induct ltac:(n); only 1: intro H; only 1: reflexivity; only 1: intros m; only 1: intros n; only 1: intro; only 1: false_hyp ltac:(H) nle_succ_0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.080644	28665	5952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.080235	26980	8215
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.003678	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.145855	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.316416	12	2	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.281734	130612	4153
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.543059	352	90	1.1.0.0.0.5	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: intros H; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.006443	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.015240	2	2	0.0	synth with cache (only 1: unfold Pos.ltb; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.081218	23381	8397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.180558	10488	3162
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	12.533785	5980	2998	0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.192811	26436	6827
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.203900	41908	7967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.163203	35405	6912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.093200	17781	7625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.642066	1108	156	8.6.0.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.157043	16398	5121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	22.757495	9968	3309	0.1.0.2.0.0.1.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: order; only 1: now rewrite <- sub_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite max_l; only 1: rewrite min_l; only 1: order; only 1: now rewrite <- sub_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.039626	10750	5325
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	7.348892	4024	1840	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.194556	47545	8639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.066737	21139	5839
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.011860	3	1	2	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.011927	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.116217	24476	4248
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.181314	21367	8859
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.059053	17249	5321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.352779	29974	5976
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.207673	41666	5239
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	40.061824	17281	10094
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.411604	136276	9411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.234834	6357	2002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.037363	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.079107	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.145961	6800	1972
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	4.295144	5213	707	1.1.4.3.12.13	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: intros IH; only 1: Nat.nzsimpl; only 1: intros _tmp_tactician2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.088560	31982	5952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.125225	22856	7922
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.102429	39681	8300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.903342	202	121	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.102610	18079	6831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.130403	19780	8093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.139877	26111	5801
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.090618	29533	9845
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.195981	89614	4343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	6.915936	3996	1240	0.2.0.1.2.0.0.3	synth with cache (only 1: intros Ha; only 1: induct ltac:(m); only 1: now nzsimpl; only 1: intros n; only 1: nzsimpl; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.222001	29	16	2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	16.450070	4524	2522	0.0.4.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	36.283695	36832	6387	0.0.0.0.1.1.3.0.4.4.0.3.1.6	synth with cache (only 1: intros until l; only 1: intros b; only 1: induction l; only 1: intros H; only 1: now f_equal; only 1: destruct l; only 1: simpl; only 1: intros Hnth; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite IHl; only 1: reflexivity; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.171732	17545	8657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.954240	516	313	2.1.1.2	synth with cache (only 1: intros n; only 1: intros H1; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.653533	333	184	2.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.111936	43853	8401
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.008659	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.023906	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.012972	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.042199	11	5	4.0	synth with cache (only 1: unfold Pos.le; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.013791	5	2	0.3	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.008838	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.010301	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.146185	29285	6729
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.149880	27256	7062
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.024064	10	5	0.1.1.0	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	19.075614	5994	2438	1.0.0.0.1.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite max_l; only 1: rewrite max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.133312	34038	6145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.076105	23210	10322
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	5.161476	2954	705	2.4.2.5.3.0	synth with cache (only 1: intros m; only 1: split; only 1: intros Hp; only 1: apply lt_gt_cases in Hp; only 1: now nzsimpl; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.138898	36032	7741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.104741	18394	7059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	40.148782	14287	6685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.068219	20273	10182
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.203379	28232	8499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.068980	20760	7671
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.142130	22593	5362
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.137481	29365	8120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.208271	19999	7664
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.232168	30380	8956
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	3.389202	3778	703	3.8.5	synth with cache (only 1: intros H1; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.057931	19567	6314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.315872	45315	6920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.141774	5511	1847
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	15.845904	11203	1675	1.1.0.1.21.1	synth with cache (only 1: intros m; only 1: destruct (lt_trichotomy m 0) as [H2| _tmp_tactician0]; only 1: intuition order; only 1: destruct _tmp_tactician0 as [H2| H2]; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.068946	19258	6898
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	23.024548	15199	4100	0.0.0.1.0.1.0.3.4.0.1.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros H; only 1: apply testbit_false; only 1: rewrite div_small; only 1: apply Private_NZDiv.mod_0_l; only 1: order'; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: generalize (log2_nonneg a); only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.102224	39545	7157
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.077085	21940	8557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.114076	21984	8972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.208420	45114	7717
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.090850	17213	6758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.070766	20906	6939
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.938391	3685	403	0.0.0.0.0.0.0.0.1.0.0.13.39	synth with cache (only 1: simpl_relation; only 1: intuition; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.067117	19262	7147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	26.218511	9708	4939	0.0.0.3.0.0.0.0.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_l; only 1: order; only 1: rewrite max_l; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.099173	37525	6563
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.100942	35434	7460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.130879	28120	7504
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.162660	29858	7607
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.121732	51802	3737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.113984	43657	8169
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.133981	9434	2635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.195939	11524	3830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.081225	26147	10333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	2.572332	694	542	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros A_wd; only 1: intros A0; only 1: intros AS; only 1: intros n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.125421	13437	4796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.179677	21147	6444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.119955	17348	9498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.023236	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.054771	15402	6758
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.112279	41135	10042
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.108789	17328	6354
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.115142	19407	7283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	4.145304	1580	557	7.4.0.2	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.076376	21228	8423
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.124471	44847	8480
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.091343	33021	6967
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.060687	12693	3467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.147144	19883	2155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.094087	20869	7882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.095436	21711	7046
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.117357	19170	4949
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.073626	25452	7662
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.072157	16798	4168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.048162	7	6	0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.213936	21456	8300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.214000	33919	8678
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	10.503133	926	232	0.0.0.0.1.0.0.0.8.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	10.563224	7223	2552	0.0.0.9.0.2	synth with cache (only 1: intros x; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.145620	26146	6425
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	3.956379	1821	795	0.0.0.1.6.1.1	synth with cache (only 1: intros H; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	5.747040	1711	936	0.3.3.3.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.571302	430	216	0.0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.040990	8	6	0.0.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.286751	104109	6330
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	40.053576	13451	6695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.120640	24602	6494
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.079912	24157	7236
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	4.096282	1504	762	1.0.0.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.107700	40608	5766
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.115686	21663	7469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.069752	21344	7161
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.136752	52867	2270
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.011644	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.074725	22386	9273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.101858	9929	3646
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.073986	23724	8553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.188221	82036	8112
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.236706	99509	2586
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.063022	19096	6040
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.124002	28014	9564
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.129890	14640	7517
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.011929	5	2	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.144120	24935	7999
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.119001	20596	6638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.074347	24423	3947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.011080	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.081578	23477	8798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.116963	36675	5769
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.065512	22183	6519
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.078371	22878	4972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.115459	27187	5050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.141507	16139	4909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	26.055146	6078	3750	0.1.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.075364	26058	6992
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.094811	14739	3791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.081358	26725	6635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	1.326226	326	151	0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m; only 1: intros Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.120928	19549	9180
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.098181	28622	8871
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.085307	30887	5603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.132971	40283	6080
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.137186	60283	6790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.093784	39334	3882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.183683	71865	8661
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.007822	439	230	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.109781	41103	7771
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.123249	47109	8831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.177154	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.092782	30962	8717
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.100107	40999	4863
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.061716	16501	9955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.184284	14572	4257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.084618	29349	7106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.105319	41902	7507
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.871659	3856	595	0.0.0.10.10.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.067897	19860	6542
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.154534	30625	12071
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.166656	30148	9763
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.120364	90	16	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.056453	15030	7646
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.096823	19886	8064
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.157546	39	18	2.0.0.1.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.108673	19441	6530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.211836	51511	6676
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.260067	116189	5422
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.015470	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	1.015006	311	111	1.0.0.3.0.1.0.7	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.125588	40902	8151
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.058266	20019	5598
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.045641	12869	4206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.032179	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.079776	26479	8339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.056608	15389	6947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.132275	12878	4811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.051544	14193	6656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.106770	27315	6431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	2.948819	806	575	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	27.340578	60287	2091	0.1.4.0.0.16.24.25.29	synth with cache (only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: apply Pos.eqb_eq; only 1: unfold Z.pred; only 1: destruct x; only 1: now apply Pos.eqb_eq; only 1: rewrite Pos.eqb_eq; only 1: now destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.018428	3	3	0.0.0	synth with cache (only 1: intros n; only 1: intros x'; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.109362	24	5	7	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.936866	618	223	3.1.6	synth with cache (only 1: intros B; only 1: intro A; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.053568	524	293	0.0.1.1.1.0.2	synth with cache (only 1: intros ?; only 1: intros y; only 1: intros z; only 1: intros Hxy; only 1: intros H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	29.444513	15554	5053	2.0.0.1.0.0.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.032226	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	11.463945	4053	1897	0.0.0.0.1.0.1.0.0.2.1	synth with cache (only 1: intros m; only 1: intro; only 1: intros n; only 1: intros p; only 1: rewrite <- add_assoc; only 1: rewrite <- add_assoc; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.032275	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.061570	16766	8170
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.198627	91144	14000
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.007501	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.068032	21241	7844
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.090090	32870	6791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.136626	27616	6163
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	2.278601	1016	474	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.108295	43671	7779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	8.236059	2636	968	0.0.2.0.2.0.1.1.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.072052	18246	1201
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.081679	30711	5641
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.716853	1153	470	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.009708	4	2	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.099397	36498	7169
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.073670	8499	2729
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.114716	12222	4576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.056783	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	4.973502	6989	1396	6.19.4.4	synth with cache (only 1: intros m; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.150149	25943	9883
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	2.175172	1369	273	3.8.0.4	synth with cache (only 1: intros _tmp_tactician0; only 1: apply divide_antisym; only 1: apply divide_0_r; only 1: apply divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	4.936324	1437	289	10.0.0.1.0	synth with cache (only 1: intro n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.795914	211	87	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.067408	20911	10690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.034407	10042	2881
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.144209	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	40.107568	15827	7612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.134301	747	308	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.137787	55763	7907
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.068861	18171	3136
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.147343	16141	5806
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.152208	19785	7439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	12.287538	3493	2681	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec; only 1: rewrite <- odd_spec; only 1: destruct (odd n); only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.047677	11545	4763
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.268055	48823	11013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	4.099696	1077	524	0.2.0.0.1.0.1.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.249229	25936	8879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.106546	41199	9152
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	5.213788	3280	1165	4.0.3.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros H; only 1: intros Hn; only 1: intros m; only 1: now rewrite <- H).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.063412	23752	6542
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	5.926610	1792	1036	0.3.0.1.3	synth with cache (only 1: intros a; only 1: intros m; only 1: intros H1; only 1: apply NZQuot.div_pos; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	8.794355	5253	1535	0.1.6.0.5.0.0.7	synth with cache (only 1: intros p; only 1: apply lcm_unique; only 1: trivial using gcd_nonneg, abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros Hp; only 1: intros; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.068829	22152	10041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.064172	19245	4194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.048641	14669	7639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	16.314232	3550	1632	0.2.0.0.0.0.4.0.1	synth with cache (only 1: intros p; only 1: intros m; only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.007618	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.215661	101815	12246
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.568105	223	34	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.247252	113030	13480
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.716368	221	24	5.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.219497	17794	8267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.070438	22250	8527
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.063202	6174	2032
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.194849	83974	4406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.081541	26960	5624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.113013	46466	5242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.102954	24815	5868
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.071314	23059	6398
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	5.124766	2262	102	0.53	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.016725	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.005127	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.005550	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.013776	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.088458	29706	9505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	2.373141	1794	553	1.7.0.1.1	synth with cache (only 1: intros m; only 1: intro n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.124244	47376	7932
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.597541	286390	9262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	40.047307	11415	5636
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	4.803789	5731	1119	0.4.15	synth with cache (only 1: unfold not; only 1: red; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.011397	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.159623	66556	10389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.257657	20397	5004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	7.834711	2528	1406	1.3.3.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros n; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.131155	16280	6678
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.052294	15458	7005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.122559	15165	6831
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.147155	16861	6592
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.188383	75583	5013
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	17.994546	10922	4696	0.0.0.0.0.1.4.2.1	synth with cache (only 1: intros m; only 1: intros x; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: apply lt_le_trans with (m + p); only 1: now apply add_lt_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.214352	19302	4215
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.070623	22373	6825
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.083503	23093	7682
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.163339	65855	9105
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.075014	25437	8325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.066116	20031	9110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.166046	20923	7069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	4.644985	2159	999	1.4.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.018402	10	3	2.4	synth with cache (only 1: intros A; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.009014	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.118753	29478	13163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.104695	21260	6366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.055333	13577	7248
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.134099	48099	14055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.161666	68275	11454
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	32.805035	49071	6416	0.6.13.0.1.0.1.0.14	synth with cache (only 1: intros x; only 1: induction x as [| a l IHl]; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite <- app_assoc; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.078963	13	10	2.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.231924	485	220	0.0.0.0.0.0.5.0	synth with cache (only 1: intros until l; only 1: induction l as [| x l]; only 1: simpl; only 1: intros; only 1: auto; only 1: intros; only 1: simpl in H; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.202092	25003	8497
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.175269	72750	12538
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003270	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.009364	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.006960	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.092129	28338	6520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.142739	25000	9230
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.034424	4	4	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: intros y; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.663751	199	44	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.014099	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.021083	6	3	1.1.1	synth with cache (only 1: hnf; only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.007590	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.057600	20166	6020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.058693	20529	4373
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.717868	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.317013	57057	3942
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	4.922134	2084	1368	0.0.0.6.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.597371	136	80	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006777	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.176376	545	91	0.0.3.8.4	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.078546	24158	7272
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.102644	23974	6919
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.064831	13	7	0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	2.168842	1136	574	5.5.0	synth with cache (only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.752873	1396	342	8.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	24.432425	10178	3986	0.0.0.0.0.0.0.2.5.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low; only 1: rewrite testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.234073	108444	9003
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.035104	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.074919	29600	7520
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.194452	87773	11111
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.052595	13937	6320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.167380	21003	6252
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.080213	25889	9216
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.146397	19060	8757
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.189099	75210	6176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.159391	62319	5473
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.069073	19986	7876
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	5.267171	1857	1045	0.0.3.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: now apply add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.076578	25568	5765
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.261249	52	29	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.012130	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.011913	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.077199	23639	7864
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.172710	74343	7224
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	3.750799	3594	961	0.0.0.4.0.4.1.5	synth with cache (only 1: intros x; only 1: intros P; only 1: intros y; only 1: intros f; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.125955	9489	4703
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.036776	7	7	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.205094	14432	5837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.104017	24912	10875
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.120088	45473	8307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	23.463200	11285	2127	0.1.2.3.7.0.0.0.3.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: apply lt_le_incl; only 1: apply lt_1_2; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.060763	17182	5952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	0.098719	16	6	0.2.1.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	0.337133	79	28	1.1.1.2	synth with cache (only 1: intro n; only 1: rewrite shiftl_mul_pow2; only 1: rewrite two_succ; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.042154	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.050448	7	4	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.070531	21062	8391
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.153524	54689	18461
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	2.156356	1669	523	0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n); only 1: rewrite le_lteq; only 1: intuition; only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.098386	40698	2468
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.105396	39343	6428
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.094193	13818	402
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.015155	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.103288	25006	7035
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.057439	14382	6770
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.387608	18266	1492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.088208	19460	6989
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.342295	158195	10616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.076745	22469	6274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.887216	206	85	4.2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite <- add_sub_assoc; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.024432	7473	1638
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.005316	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.004951	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.077136	17	15	3.1.0.0	synth with cache (only 1: intros B; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.882658	248	89	3.2.1.0	synth with cache (only 1: intros n; only 1: intros p; only 1: rewrite add_comm; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.059613	18831	7630
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.023274	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	23.964605	21092	5828	1.0.0.1.12.0.2.2	synth with cache (only 1: intros until x; only 1: intros s1; only 1: intros s2; only 1: intros H1; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.021118	4	4	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.120951	47933	5579
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.103751	35249	12167
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.423779	207627	13047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	3.469784	3680	1220	0.0.0.1.0.0.5.0.0.0.4.0.18	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intros m; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.110845	24622	7223
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.094236	37500	5929
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.107665	15133	7358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.079421	14903	7614
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.099714	34244	8694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	1.769742	1007	351	0.2.2.0.0.0.0.1	synth with cache (only 1: intros y'; only 1: intros m; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.091500	30918	8207
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.080525	24736	6983
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.054742	20578	1839
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	3.417609	2298	864	0.0.0.0.0.0.0.0.2.2.0.2	synth with cache (only 1: intros B; only 1: intros C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.053100	15941	6051
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.164584	12391	5294
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	19.230568	8138	6066	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros R; only 1: intros Sym; only 1: intros f; only 1: intros Hf; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: red in Hf; only 1: red in Hf; only 1: red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.055286	15460	6680
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005126	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.053214	143	11	17	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.023930	38	4	10	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.027771	6	5	1.0.0.0.0	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.113169	19514	6127
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.181432	74832	11657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.065267	15413	5891
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.068851	20392	6866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.080565	29102	6082
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	6.100709	3293	909	0.3.2.6.2	synth with cache (only 1: intros p; only 1: intros y; only 1: intro n; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	10.031629	11585	955	0.37.1	synth with cache (only 1: intros; only 1: destruct r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	3.417904	948	471	0.2.1.4.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite add_comm; only 1: now rewrite (add_le_mono_r _ _ p), sub_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.123841	49291	7513
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	40.073619	22016	9476
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.049225	13511	1604
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.170589	72823	6926
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.476661	337	77	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.068822	19041	7284
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.133534	20665	5700
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.719248	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.020319	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.014965	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.008133	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.413492	42851	3342
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.012852	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.368353	107	51	3.2.0.0	synth with cache (only 1: reduce; only 1: unfold relation_equivalence in *; only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.066773	20410	8813
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	40.992145	507128	5995
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.009364	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.017299	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.100574	15648	6310
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	36.645782	10673	3489	1.0.0.0.1.1.0.3.3	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.041493	10597	5128
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.011114	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.007990	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.017211	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.008314	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.010498	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.007511	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.323746	154465	8796
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	4.596986	2123	737	2.4.3.3.0	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: now nzsimpl; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	0.273433	58	21	2.0.2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: now nzsimpl; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.081787	29948	7914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.029030	4	4	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.047814	11	6	2.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.029187	5	4	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.115952	48	20	4.0	synth with cache (only 1: intros x; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.998442	512295	14291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.068357	23598	6448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	1.912323	615	262	0.0.1.2.2.0.0	synth with cache (only 1: intro n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.043812	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.023276	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.152784	14849	4404
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.072351	23237	8808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.089279	27865	10669
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	40.075607	24616	9656
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.118820	44129	7561
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	2.605817	1485	646	0.0.1.0.0.1.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.195704	43	27	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.822208	234	147	0.2.1.1.0	synth with cache (only 1: split; only 1: rewrite (mul_comm r); only 1: rewrite (mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.071742	23013	9039
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.169649	74160	9210
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.120287	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	40.055687	16252	8722
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.036796	5916	2062
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	41.543908	817988	7710
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	3.460620	2719	678	0.0.0.0.0.2.0.0.1.0.0.2.0.3	synth with cache (only 1: destruct p; only 1: intros H; only 1: exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.030319	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.161436	68457	6748
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.087477	31721	9128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.065886	21806	5745
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.131086	44	13	4.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.028383	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	6.655001	68877	1901	2.0.5.2.74.13	synth with cache (only 1: intros x; only 1: exists x; only 1: split; only 1: intros H'7; only 1: intros H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.063038	19262	7742
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.239696	95	17	0.0.0.11	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.053414	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	28.442870	12187	4796	0.0.1.3.0.1.1.3.1	synth with cache (only 1: intros m; only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: apply add_move_l; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004389	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.157910	68375	3000
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.052014	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.157570	27731	10008
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.063636	21299	6199
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.141744	61849	8169
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.091710	32663	10002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.046714	13571	6769
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.380203	48220	1700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.100729	32885	6474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	27.583467	19135	7167	0.3.3.1.9	synth with cache (only 1: intros x; only 1: intro n; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.062893	20355	8547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.058303	16	7	0.0.0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.446769	214902	9063
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.289121	138103	10606
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.011335	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.850867	932	184	4.6.3.3	synth with cache (only 1: intros H1; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.122828	72	22	1.0.2.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: intros H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.083130	27387	14162
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.146727	61952	7374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.059320	17159	6242
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.684080	329417	10718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	12.455145	13166	2741	0.0.0.6.5.7	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (lt_eq_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.071059	12	9	0.0.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	10.153938	122507	732
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	11.248694	30859	2499	0.32.2.2.5	synth with cache (only 1: intros z; only 1: intros H1; only 1: intros H2; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.217784	18470	5604
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.063281	17978	11334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.068508	19306	7890
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.089912	30170	11795
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.933074	1303	318	4.2.2.4.1.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.011606	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.020286	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.007883	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.007663	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.005905	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.016322	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.010142	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.008076	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.007663	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.112424	47	25	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.006075	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.028923	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.012040	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.013703	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.004540	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.004803	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.006790	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.012710	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.010040	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.014031	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.013178	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.040875	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.011022	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.016899	14	3	4.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.212435	198	39	8.2	synth with cache (only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.089364	32027	11895
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.263242	112	26	9.1	synth with cache (only 1: destr_bool; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.010732	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.023280	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.014898	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.065167	33	13	0.4.1.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.080535	26527	10930
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.067227	21385	9501
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.197231	81330	16493
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.269826	126007	5156
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.060765	18316	5893
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.242029	107893	15948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.113531	22539	7230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	1.453512	776	327	0.5.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: now apply lt_le_incl, lt_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.106128	39684	6535
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	9.050989	4987	2209	4.2.4.0.1	synth with cache (only 1: intros x; only 1: intros B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.040605	10842	5618
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.071905	21589	12862
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.311479	154931	17912
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.032295	18	9	1.3.1	synth with cache (only 1: hnf; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.023109	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.038214	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.005169	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.051219	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl in *; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.379126	184605	12878
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.021392	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.092017	15357	5378
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.052818	18337	4777
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.013261	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.081602	26620	9284
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.136920	48459	12662
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.067045	23092	10417
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	3.676784	2290	684	0.0.0.5.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.069573	24606	6522
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.374700	30009	2175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.068514	22649	9971
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.814002	993	460	0.0.0.0.3.0.0.0.2	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.007583	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	13.014255	5695	3517	0.1.0.0.0.0.1.0.0.1.0	synth with cache (only 1: intros b; only 1: intros C; only 1: intros x; only 1: intros H'0; only 1: red; only 1: intros x2; only 1: intros H'; only 1: induction H'; only 1: auto using (Add_intro2 U) with sets; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	1.969883	1175	521	0.3.0.0.0.0.2	synth with cache (only 1: intros b; only 1: intros Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.277975	125568	10682
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.520220	262235	16265
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.052263	15931	4422
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.137323	51355	9778
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.077229	17	4	3.1	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	18.340865	20682	2135	1.0.12.2.16.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: apply (well_founded_induction_type Rwf); only 1: intros; only 1: rewrite F_unfold; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	40.056421	10607	3338
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.106222	34102	10970
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.017109	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.007532	10	3	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.193491	86495	6225
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.032464	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.174215	14128	6361
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	2.085214	18014	606	1.49.27	synth with cache (only 1: intros H0; only 1: apply H0; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.092603	31369	9409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.079082	24293	10370
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.106473	39269	11181
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.246905	114813	15387
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004307	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.012473	9	4	3.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.019269	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.031802	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005166	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.021122	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.011834	10	3	0.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.007643	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.118635	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.176851	74185	13831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.048797	11582	7692
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.323500	152563	6204
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.074672	23881	7899
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	3.049710	4280	1258	1.0.1.0.1.0.1.0.0.0.1.1.1	synth with cache (only 1: intros A; only 1: intros y; only 1: destruct 1; only 1: red; only 1: split; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.194656	85426	16077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.104237	39056	7493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.068212	22903	6026
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.026355	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	40.031630	8534	4347
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.063640	19415	7268
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.031885	7	6	0.0.0.0.0.1	synth with cache (only 1: intros y; only 1: intro X; only 1: intros z; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	4.228752	79841	685
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.026864	14	3	4.1	synth with cache (only 1: intros R; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.102495	46421	7871
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.210598	9	7	1.0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: red in poe; only 1: red in poe; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.344543	418	110	2.0.3.8	synth with cache (only 1: intro x; only 1: intros H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.025786	6	6	0.0.0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intros until b; only 1: destruct b as (a1, a2, _tmp_tactician0); only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.101436	22924	6940
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.729728	2425	190	0.2.31	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.100303	35195	9207
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.133544	55236	7631
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.055905	16524	9895
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.396870	73086	3605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	27.722779	15940	3504	0.1.3.0.0.14	synth with cache (only 1: unfold decidable; only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.011071	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.074632	24085	11109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.010908	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.642124	637	62	0.16.9	synth with cache (only 1: intros H0; only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.057024	45	13	0.7	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.112049	41004	9036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.795883	198	121	0.0.2.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.005765	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.067510	20033	10219
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.106120	43494	8885
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.033210	12	8	1.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros A; only 1: intros a; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.013382	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.350351	159562	12262
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.305740	581	51	4.4.21	synth with cache (only 1: exists f; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	2.417647	1221	388	1.0.1.7.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: nzsimpl'; only 1: rewrite <- one_succ; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	6.453253	4623	922	0.0.20	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.009081	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.086585	21	6	0.0.1	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.068188	21710	7154
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.180748	81571	18390
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.026974	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.164762	78522	2026
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.199468	90984	12578
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.210920	90161	17638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.068690	22377	6879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.074072	24140	9467
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.114410	42650	12465
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.363527	659	113	4.5.3.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p; only 1: destruct q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	40.223867	99423	14320
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.171796	97	50	1.0.1.0.0.1	synth with cache (only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	3.945273	3502	1491	3.1.0.1.4.1	synth with cache (only 1: intros ?; only 1: intros z; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.015367	15	7	2.1.1	synth with cache (only 1: intros until n; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.262035	410	77	1.0.1.9.2	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.147042	59601	15196
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.158037	66819	14816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	40.044324	10529	7097
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	7.903163	8234	2049	3.0.0.0.0.0.0.2.0.1.2.0.0.0	synth with cache (only 1: intros A; only 1: intros eq_dec; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.171392	77139	12571
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.098594	38519	8417
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.147589	62179	15713
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	1.577400	1239	533	1.1.2.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.038372	28	10	1.3.1	synth with cache (only 1: intros B; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.138080	78	36	1.4.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: destruct 1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.015891	4	4	0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.843461	1206	304	0.0.0.7.0.0.1	synth with cache (only 1: intro; only 1: red; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros C; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.009370	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	7.644299	12274	2870	0.0.0.0.0.0.7.0.0.0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.077103	26105	6316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.068511	24413	7932
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	14.051067	29068	4908	2.31.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.086067	28556	10381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.098659	30693	8582
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.006255	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.229373	236	105	1.2.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.035159	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	40.161921	70560	18979
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.013743	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.007190	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.030784	200	99	0.0.1.0.0.0.1	synth with cache (only 1: intros C; only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.093190	21236	5919
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.122616	43542	11037
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.022242	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.035014	8705	2581
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.885514	298	157	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x xs]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	15.890205	34435	7171	1.4.0.0.1.3.0.10.1	synth with cache (only 1: intro z; only 1: intros H2; only 1: intros B; only 1: intros _tmp_tactician0; only 1: intros C; only 1: destruct H2; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.012013	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.058417	18094	8513
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.401510	153288	6504
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.084479	27885	9957
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.049451	18657	3948
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.086066	30558	10811
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.015406	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	12.109273	39670	5193	0.1.2.12.31	synth with cache (only 1: intros H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.575014	932	243	0.1.2.6	synth with cache (only 1: intros x; only 1: intros z; only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	41.083906	554078	10682
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.281319	133413	17382
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	2.837480	1808	634	0.0.1.0.1.4.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.067193	20076	8116
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.433106	109	57	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	4.902552	4274	1227	2.2.1.8.10	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.011907	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.572180	277	90	0.0.0.5.2	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	18.223064	55525	5615	4.55	synth with cache (only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.044780	16	5	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.058302	56	10	3.5	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.034732	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.105770	15	8	0.4.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.095716	35995	5743
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.027306	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.091481	31179	11718
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	3.468872	1629	691	0.0.0.2.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	4.275652	6047	1064	0.0.6.8.1.6.4.2.1.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.180529	78897	13792
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.073940	23685	7469
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.932778	260	79	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.080698	28389	6959
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.150706	66346	15068
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	40.116824	43502	19929
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	13.315146	10974	4764	12.0.2.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros A; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.053465	47	17	0.0.0.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: now apply Ext).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.190000	83776	13908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.081330	29292	7381
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.203308	94652	15970
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.091924	33778	9891
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	41.770070	945966	8935
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	6.779793	13626	5927	2.2.0.0.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.394851	187122	12297
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	2.755973	23461	1014	0.0.3.67.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 ?]; only 1: destruct _tmp_tactician2 as (x, Hx); only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.022413	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.025565	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.207337	93454	14663
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.089946	33374	5734
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.059192	18843	6803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.099799	35371	6360
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	40.586299	274568	47207
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.355018	91370	4286
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.289443	275	62	0.0.0.0.0.0.6.2	synth with cache (only 1: split; only 1: split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.014498	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.015829	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	0.053271	5	3	0.0.2	synth with cache (only 1: destruct b3; only 1: by case b1; case b2; constructor => //; case; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.161870	67067	7658
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	0.211277	11	4	0.0.5	synth with cache (only 1: destruct b5; only 1: by case b1; case b2; case b3; case b4; constructor; try by case; only 1: by case b1; case b2; case b3; case b4; constructor; try by case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.062743	18918	9402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.090654	36878	5949
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.458154	218998	11392
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.076151	25827	7622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.027977	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.079709	25073	6483
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.016133	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.003940	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.016920	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.003077	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.007150	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.007468	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.011044	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.020605	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.011914	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.021018	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.011012	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.008881	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.008752	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.009771	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.009784	6	1	5	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.005213	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.006759	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.012364	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.007894	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.008776	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.005557	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.025434	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.227382	105802	14930
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.017445	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.015238	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.009037	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.015573	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.013593	6	3	0.2.1	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.007965	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.114674	254	22	3.18	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.006464	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.084751	27855	8476
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	3.868623	8461	748	12.19.14.15	synth with cache (only 1: intros Hx''; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.089183	31511	7283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.070781	22357	7779
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.100275	36624	14685
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.248114	108459	7301
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.008487	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.006624	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.253917	114829	10217
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.138163	58221	14404
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	40.055242	16540	4461
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.585928	652	97	2.15.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	40.539650	264299	4697
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.121745	52504	5962
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	3.314376	1336	530	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	27.495006	44932	9073	3.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: intros H; only 1: apply clos_rt1n_rt; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	3.957344	3068	721	1.2.5.0.12	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.273439	121475	20798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.079282	26601	7924
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.080574	28088	7046
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.047057	12	8	2.0	synth with cache (only 1: unfold lt; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.013945	3	2	0.1	synth with cache (only 1: apply not_iff_compat; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.046137	11185	7617
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.145744	59075	15206
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.107440	40373	8174
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.182529	78071	25244
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	1.303668	1925	864	0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.475000	239275	13087
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.050862	15165	7024
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	41.029309	532523	4997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.097971	35969	10194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.049983	15680	4603
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	12.562746	31125	5202	1.1.4.3.0.1.3.0.20	synth with cache (only 1: intros b; only 1: intros until n; only 1: induction n; only 1: intros n; only 1: auto; only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.016902	4	3	0.1.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.256180	112073	26382
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.005812	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.005551	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.018802	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	21.508640	10918	3779	1.5.1.4.3	synth with cache (only 1: intros f; only 1: intros H; only 1: intros until l; only 1: rewrite filter_map; only 1: apply ext_in_map).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.245356	199	87	0.2.1.0.1.0.0	synth with cache (only 1: intros A; only 1: intros ?; only 1: intros B; only 1: intros C; only 1: intros h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	0.466935	118	29	0.8.2	synth with cache (only 1: rewrite <- compare_le_iff; only 1: unfold le; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.062150	99	19	0.6.2	synth with cache (only 1: intros h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.013121	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.017331	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.024678	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.009712	3	3	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.009915	3	3	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.012828	3	3	0.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.040957	33	9	0.0.5	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.389429	5431	1139
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.074946	23089	8053
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	13.640186	13220	2078	0.0.54	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.052221	16765	6001
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.083135	28939	7563
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.075003	24177	9213
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.197190	83768	11643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.048553	14191	6274
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	14.250882	9088	5099	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.488364	239666	12380
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.090719	27854	9832
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.003756	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.019407	8	2	0.6	synth with cache (only 1: intros x0; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.006985	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.010412	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.950895	833	182	1.13.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.227815	174	22	17	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.013441	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.094493	31759	7270
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.413781	149	17	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.827563	425231	3372
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.177075	75487	16661
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.066844	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.248892	112729	12987
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.122920	52	29	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.081378	26466	7046
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.068750	20903	7155
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.169469	70188	13312
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.031480	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.035485	6	5	1.0.0.0.0	synth with cache (only 1: intros until l; only 1: intros a; only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	19.269128	19564	3904	4.3.1.4.3.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: induction l; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.015359	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.218855	65	26	0.3.0.0.2	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.128432	47760	8409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.086920	30078	6611
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.054687	16554	5466
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.048369	11729	6831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.039143	11540	4433
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.169915	71559	13142
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.601544	346	77	1.0.0.10.0	synth with cache (only 1: split; only 1: intros H; only 1: apply lt_eq_cases; only 1: now right; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.008093	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.223193	97168	20204
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.109021	44163	6031
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.062526	20389	5951
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.029539	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.101020	36644	8819
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.034211	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.071091	24431	8331
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	1.043235	310	152	0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.083053	28391	8737
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.089939	30877	7825
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.298565	144267	19265
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.032130	5	5	0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.790691	968	108	0.0.0.23	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.166597	37	16	1.0.0.1.2	synth with cache (only 1: intros until l; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.137103	55806	8205
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.510683	241898	6802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.080746	32419	5765
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.054941	17435	5140
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.076227	24681	7212
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.019872	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.411699	191223	8667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.047363	14704	5566
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.090517	26694	9626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.082222	25671	8395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	7.767865	4908	655	4.10.2.8.28	synth with cache (only 1: apply add_move_0_r; only 1: rewrite add_1_r; only 1: unfold lnot; only 1: rewrite opp_0; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.245978	107951	3787
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.023156	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	1.112543	742	145	2.0.9.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: now rewrite andb_true_r; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	2.296809	2352	344	2.6.10.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.255889	110208	5408
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.504945	800277	5656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.040190	12266	4158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.081595	28300	7193
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	40.073713	23780	9042
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.117032	39957	12339
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.061590	19109	6909
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.006656	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.037131	6	5	1.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.074680	24016	6604
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.050211	12752	8136
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.061371	18317	9710
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.021283	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.076648	24520	7686
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.083919	31070	7044
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.017263	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.066268	20420	6166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.036077	12	5	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	22.540388	17335	4240	0.1.0.4.4.1.6.8	synth with cache (only 1: revert q; only 1: intros _tmp_tactician2; only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [m' H]; only 1: rewrite <- add_assoc in H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.318449	1094	375	0.3.0.0.6	synth with cache (only 1: intros until n; only 1: intros Hl; only 1: intros Compat; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.019481	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.321772	718753	7444
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.085711	30271	9460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.085390	27450	9147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.069145	22685	7618
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.052838	13828	7340
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.112051	43035	9562
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	27.371411	18596	6045	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Lef; only 1: intros x; only 1: intros y; only 1: destruct (max_spec x y) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f x <= f y); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f y <= f x); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	40.093122	33805	7973
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.064967	19259	6198
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	2.818745	1287	588	2.0.0.0.0.0.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: intros H'; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.042576	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.078574	25317	8961
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.195170	32	17	0.0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.254732	110108	4234
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	13.697566	17874	3108	0.0.0.2.0.0.0.0.20.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros H; only 1: reflexivity; only 1: intros q; only 1: intros H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros q; only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.045029	13888	5469
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.126403	49254	5660
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.189313	75534	4229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.071641	22315	8038
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.109598	39776	5250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.112071	41642	6067
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.098396	34829	6183
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.087041	30435	7254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.076189	25606	4819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	1.499278	740	283	0.0.8.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.057526	17200	6153
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.079414	18897	1055
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.101250	35960	7905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.086834	28582	6823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.082866	26797	6828
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.176485	61345	6543
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.100025	38664	7886
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.102640	36436	8570
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.117861	48183	8897
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.074454	22697	7009
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.110472	42536	7928
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.053771	15307	6110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.054663	15750	7372
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.076437	26138	4502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.053796	15581	6011
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.125103	49413	8549
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.059754	18919	6175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.063496	18243	6880
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.090815	29625	7063
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.108524	42073	6096
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.085277	29315	5682
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.171283	22	21	0.1.1.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.104651	25612	9882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.070010	18729	8582
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.076840	23886	8739
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.091587	33306	8279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.062004	16983	8819
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.052194	15915	4747
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.065657	21199	8668
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.069001	20987	7161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.078448	25665	6849
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.088737	33117	5830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.068374	21956	7523
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.466685	444	36	1.0.0.25	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.087526	31634	6986
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.073384	26293	5910
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.109712	41661	10439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.077388	27310	8228
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	24.117431	18287	5573	0.0.0.0.0.6.0.3.0.0.1.0.0.0.16	synth with cache (only 1: split; only 1: induction 1; only 1: intros a; only 1: intuition; only 1: inversion_clear H; only 1: simpl; only 1: intros a0; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: simpl; only 1: firstorder; only 1: intros Eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.090284	30977	8282
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.199367	84156	7291
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.100924	37931	9349
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.128639	55568	7549
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.117858	51008	5439
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.115437	48624	8902
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.078995	31446	10205
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.065074	23267	7109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.068291	26533	7248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.053004	16745	7188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.119433	55807	7073
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.163653	82159	10509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.119692	53301	7982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.133530	67410	9356
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.123809	65709	12145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.043003	17364	6141
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.062688	24222	9759
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.113791	61863	11172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.072574	32048	12227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.046585	22083	9516
