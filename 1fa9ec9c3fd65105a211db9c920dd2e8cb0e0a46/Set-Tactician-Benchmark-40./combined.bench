coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.023443	2	2	0.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.042348	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	4.965217	1289	459	0.7.6.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	4.606186	918	512	0.4.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.052243	18202	6164
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.042748	14621	3781
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.029780	9620	3289
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.086123	14982	4147
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.040117	13248	3978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.035928	12482	3775
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.064205	6	3	0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: apply lt_O_fact).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.096991	42597	6096
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.049015	17471	5057
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.032286	10052	3735
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.097250	7	2	5.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.114059	34976	3993
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.041197	12821	4912
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.092216	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	1.356346	422	198	1.8.0	synth with cache (only 1: intros; only 1: intro; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.328616	865	115	2.17	synth with cache (only 1: intros Hm; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.055672	20735	5154
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.057804	21837	4839
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.065253	25381	4609
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.064674	25898	4174
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.047634	16182	5609
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.064682	26532	4129
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	12.918788	4854	484	5.14.2.37	synth with cache (only 1: intro H5; only 1: intros y; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.035660	11400	3506
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.058514	24127	3650
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.043729	16343	3699
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.027491	9443	3175
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.073025	31517	5075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.040165	13575	3224
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.026672	8855	3144
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.018362	6254	2286
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.021127	6305	3446
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.037109	12014	3754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.024470	7332	3089
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.093795	43180	3514
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	15.533601	2037	866	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_0_2; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.053506	19043	5477
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.028239	9179	2578
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.055408	20714	5013
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.053824	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.049319	17630	4501
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.033929	10331	3949
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.064354	22592	5316
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.033286	12290	1570
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.089050	38839	5621
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.055551	18469	3571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.056718	20986	5047
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.045176	15884	4610
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.027218	7694	4078
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.099102	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.076323	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.077131	33297	3839
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	2.435763	909	408	0.0.0.0.1.6	synth with cache (only 1: intro; only 1: intros b; only 1: intros Heub; only 1: exists (proj1_sig (completeness (EUn Un) Heub (EUn_noempty Un))); only 1: destruct (completeness (EUn Un) Heub (EUn_noempty Un)) as (l, H); only 1: now apply (Un_cv_crit_lub Un)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	6.194097	2282	865	0.0.2.0.3.0.8	synth with cache (only 1: intros H12; only 1: intros x; only 1: intros g; only 1: intros r2; only 1: unfold opp_fct; only 1: intros H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.042399	14147	4537
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.064441	27007	4203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.037826	12507	3576
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.044166	15280	4256
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.040190	15410	3504
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	5.955753	5475	1052	7.0.0.0.1.0.2.0.0.0.2	synth with cache (only 1: intro; only 1: intros Heub; only 1: exists (proj1_sig (completeness (EUn Un) Heub (EUn_noempty Un))); only 1: destruct (completeness (EUn Un) Heub (EUn_noempty Un)) as (l, H); only 1: assert (Hi2pn : forall n, 0 < (/ 2) ^ n); only 1: clear; only 1: intros n; only 1: apply pow_lt; only 1: apply Rinv_0_lt_compat; only 1: now apply (IZR_lt 0 2); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.031637	10797	3689
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.057920	23760	3131
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.025818	8146	3329
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.031111	11170	2989
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.036386	12722	3150
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.033045	10973	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.031413	11718	2532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.062544	24655	4945
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.057848	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.051406	16807	6239
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.061123	22765	4833
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.045565	15996	4191
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.027412	6	3	3.0.0	synth with cache (only 1: simpl; only 1: intros m; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	41.697334	117902	3074
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.033578	10023	4289
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.060569	19934	4983
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.032890	9981	4322
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.102053	45049	4653
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.024739	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	40.028754	10568	1191
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.052867	18445	5028
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.072586	13037	3165
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.068690	27399	3759
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.049770	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.036420	12815	4375
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	5.501217	2322	383	0.5.0.12	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.048244	17307	5000
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.038974	13469	4126
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.031294	11639	3101
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.041463	15059	3727
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.073905	30822	5926
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.038744	15261	3397
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.068390	27663	4017
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.030489	10180	3287
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.019562	6092	2805
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	13.963007	3659	1400	0.2.0.0.0.1.0.1.2	synth with cache (only 1: intros a; only 1: intros x; only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros n1; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.035571	12156	2558
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.050037	19448	3281
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.033837	11934	3014
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.056989	21758	4062
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.071028	27816	6358
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.047457	16468	5390
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.044139	13858	5473
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.064192	24930	5547
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.066233	24311	5518
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.086521	34069	4434
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.014464	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.031140	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.070151	28466	3493
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.081006	31569	5769
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.047004	15617	4362
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.016430	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	40.054012	20392	4697
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	41.210451	17082	2417
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.095113	41054	5015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	1.495430	400	208	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.041221	10361	3987
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.036282	11284	4240
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.053782	20024	4532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.052479	18717	4698
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.039610	12513	4844
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.042235	15045	4022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.059722	23161	2937
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.091623	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.041906	16725	3555
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.082637	34706	4828
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.010838	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.241083	45	16	1.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	29.597016	5866	2298	1.1.0.0.1.1.0.0.2.0.0.0.1	synth with cache (only 1: unfold Rgt; only 1: intros until x; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	2.773840	1558	313	4.3.4.9	synth with cache (only 1: intro; only 1: intros n; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.035135	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.025947	8092	3431
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.320288	96	43	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.033459	11231	3373
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.053655	22312	3543
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.049474	18560	4536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.068001	10	7	1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.030131	9	3	2.0	synth with cache (only 1: intros H; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.070966	27377	5381
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.029048	4	4	0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: apply Nat.mul_le_mono_pos_l; only 1: Nat.order').
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.025841	8390	3210
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.101340	23	6	1.2.1	synth with cache (only 1: intro n; only 1: intros IH; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.070396	23466	3163
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.087104	36799	5703
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.017525	4560	3003
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	31.491241	20811	4576	4.1.1.0.1.7.3.0.1	synth with cache (only 1: intros q; only 1: intros; only 1: intros Step; only 1: intros H1; only 1: case H1; only 1: intros H'0; only 1: intros H0; only 1: inversion H0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.039606	13409	4584
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.035771	10058	2366
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.066838	27936	3918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.040008	13087	4309
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.073610	27954	6188
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.072993	26668	4085
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.056483	12	7	0.3.1.0	synth with cache (only 1: unfold open_set; only 1: intro; only 1: intros del2; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.060689	23451	5580
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.037555	7215	2260
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.047185	14314	4527
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.039099	12367	4784
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	6.964563	7049	1005	0.1.12.9.0.0.0.5.56	synth with cache (only 1: constructor; only 1: intros _tmp_tactician0; only 1: intros r2; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with real; only 1: intros H; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.055133	21114	4841
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	5.326668	1108	653	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.032940	10408	3483
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.059444	22498	4886
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	40.827566	39613	2164
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.436920	52	32	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.040523	16212	3555
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.247672	30	20	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.036466	10382	4036
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	3.383080	676	266	0.0.0.0.0.5.1	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_neg; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.316585	260	43	5.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.052729	20	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.029043	10435	2580
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.033434	11106	3232
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.056156	16858	7128
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.024714	8090	2492
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.489269	86	39	0.0.3.1	synth with cache (only 1: intros n; only 1: intros m; only 1: intros; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.024972	6675	3783
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.068709	25785	6615
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	9.453497	5942	1435	1.1.0.6.0.3.4	synth with cache (only 1: intros x; only 1: intros y; only 1: intros _tmp_tactician0; only 1: red; only 1: destruct _tmp_tactician0 as [H| H]; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.006010	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.061888	21924	5473
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.057197	22181	4597
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.866495	64254	2056
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.093918	41904	5279
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.054178	18884	4832
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.015873	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.077729	30021	5759
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.095119	38272	4177
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.051688	18907	4384
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	40.040422	13562	4260
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.058732	20324	5981
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.067638	27100	5566
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.066540	24151	5229
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.032691	9375	4586
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.047163	9553	4834
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.036642	12578	4527
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.040080	11899	5211
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.051064	17701	4807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.041585	15220	3119
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.080498	7	7	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.020468	5997	2847
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.040182	14375	4358
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.058102	19600	7355
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.100006	18000	1913
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.032781	12083	3802
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.648614	210	84	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.038933	14090	4059
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	38.956343	16758	8372	0.0.0.0.0.0.3.1.2.2	synth with cache (only 1: intros r1; only 1: intros r2; only 1: intros H1; only 1: unfold Rmin; only 1: intros; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.036783	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.091460	38774	6183
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.044278	5	5	0.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	3.643631	1337	411	0.4.1.3.1	synth with cache (only 1: intros b; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.053024	20290	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.066439	22457	6699
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.217408	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.154266	64919	7662
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.282276	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.044786	14012	5284
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.073890	28088	5759
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.027793	10297	2005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.037443	12099	4416
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.774493	92	59	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.023470	3	3	0.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.104650	44751	5618
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.057862	18786	3542
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.050934	17909	4973
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.050824	17809	4679
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.076347	30567	6350
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.100862	42459	6738
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	15.992597	6693	2153	5.1.3.1.0.0.0.0	synth with cache (only 1: intros r1; only 1: intros r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros b; only 1: intro H2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.020830	7095	960
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.033905	9021	4408
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.081253	32986	3940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.133803	58168	5701
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.046785	13325	4691
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	1.743048	757	222	7.0.8	synth with cache (only 1: intros x; only 1: intros H; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.047089	14847	6117
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.029259	8171	1595
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.049614	17729	3983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.664545	189	61	1.2.0.3	synth with cache (only 1: intros Sym1; only 1: intros lpe; only 1: intros B; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.041499	14414	3698
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.048794	18960	3087
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.058490	17535	6944
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.036243	9411	760
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.031707	10977	3420
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.075993	28886	6385
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.081319	33462	8545
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.244531	67	41	0.0.0.1.1	synth with cache (only 1: intuition; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.832604	303	85	4.6.0	synth with cache (only 1: intros m; only 1: intros p; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.025996	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.857701	274	74	4.5.1	synth with cache (only 1: intros H1; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.032083	10130	3916
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.096759	38794	4469
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	14.376951	5853	1549	1.2.10.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.038459	13470	3728
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.215333	106389	4577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.079160	36692	2623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.083967	33963	3859
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.060773	22887	5042
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.009001	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.053548	16431	4069
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.006240	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.037578	12201	4916
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.069544	24502	4460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	1.834984	686	230	0.0.1.4.2.2	synth with cache (only 1: intros n; only 1: intros IH; only 1: induction n; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.200374	35526	4935
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.046592	15196	3963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	40.071380	29252	5958
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.040961	14016	4994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	2.288428	219	51	3.0.4.2	synth with cache (only 1: intros m; only 1: destruct m; only 1: simpl in *; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.033369	4	4	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.081824	32286	6063
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.047672	6	5	0.1.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.471413	118	53	0.0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.090218	36865	8111
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.104204	20	10	0.0.0.0.0.1.0	synth with cache (only 1: intros P; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [wit spec]; only 1: intros Hd; only 1: intros Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	2.252998	595	287	0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: rewrite tech5; only 1: rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.279904	61	28	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.591614	167	69	0.0.1.5	synth with cache (only 1: red; only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: intuition eauto  3).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.014804	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.035032	5	4	0.1.0.0	synth with cache (only 1: intro; only 1: intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	2.365977	1004	353	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros x; only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0; only 1: intros H'; only 1: intros H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	1.926540	467	271	2.0.5	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	5.063889	2098	777	5.1.0.1.2	synth with cache (only 1: intros y; only 1: unfold open_set; only 1: intros r2; only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.077286	31047	4616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	11.978359	24938	541	0.0.1.0.2.0.1.0.2.3.0.45.135	synth with cache (only 1: compute; only 1: split; only 1: red; only 1: intros _tmp_tactician0; only 1: easy'; only 1: red; only 1: intros _tmp_tactician0; only 1: intros a'; only 1: auto; only 1: red; only 1: intros b; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.040429	12909	3920
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.061017	26169	2876
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.032882	10369	2987
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.072517	20382	6126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	41.669294	12648	1946
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.075352	22609	3089
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.026934	9364	3319
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.067212	22538	6483
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.046938	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.098431	39875	5639
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.069736	27766	6027
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.036731	13465	3133
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.067718	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros until i; only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.282977	147	37	11	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.047053	13442	5107
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.077900	32471	3676
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.040455	10686	2696
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.039177	16009	1789
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.058721	19465	3882
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.061099	23473	6110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.072511	30355	2742
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.066204	27049	3653
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.041571	11009	3024
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.051607	18978	5757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.123189	54727	3394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.102282	40533	7844
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.056405	19271	4976
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.074073	28964	6114
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.024253	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.072669	31	14	2.2.1	synth with cache (only 1: intros IH; only 1: intros m; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.059259	21949	4753
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.084335	34542	7420
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	1.911232	617	367	4.0.3	synth with cache (only 1: intros IH; only 1: intros b; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.191435	88513	5060
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.041555	14227	3552
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.107769	52467	2318
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.033368	9582	4859
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.025371	6920	3519
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.059681	17146	6332
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.065426	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.112262	48154	3089
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.035618	12860	3262
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.100386	26675	3122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	7.531826	2380	317	0.1.0.18	synth with cache (only 1: intros Ha; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.069070	24772	6666
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.068215	26291	4555
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.070136	25143	4124
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.539644	1520	244	3.23	synth with cache (only 1: intros l; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.217270	27697	4762
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.046979	18905	3717
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.038577	13496	3833
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	3.041945	2409	473	8.1.9	synth with cache (only 1: intros AS; only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.039117	10663	4847
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.074485	28431	5414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.075635	18041	5375
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.119555	55135	5114
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.059714	21857	4216
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.040952	12298	4996
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.043331	14364	3052
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.055408	20336	4993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.044708	15237	5179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	41.391097	33865	2436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.671645	617	188	0.11.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.062971	24791	5120
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	40.051251	17156	4752
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.043776	14634	5229
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	40.092101	36731	8393
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.278516	442	143	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.032596	9943	3621
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.046028	15856	4467
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.052484	18083	5344
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.153026	11571	4495
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.028259	9073	3499
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.053721	13211	6794
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.029472	9273	2964
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.692755	27584	5888
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.028069	9290	3075
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.127585	56020	4223
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.054374	17718	5990
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.056340	19552	5518
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.029304	9124	2523
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.074077	25293	4944
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.065835	25494	4843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.052844	21717	3962
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.028047	9317	2656
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.055907	23926	1754
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.175679	73925	11513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.083822	37288	2520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.050046	18002	3541
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.033235	9655	4336
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.041809	14970	4606
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.049150	12831	3096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.069976	26874	3369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.024915	5699	1862
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.076923	31932	5341
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.044473	14962	4176
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.126190	6	5	0.0.0.0.1	synth with cache (only 1: intro; only 1: intros r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.038461	13088	4284
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.198499	4	3	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.055581	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.032531	9280	4349
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.129028	23849	4440
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.041402	12281	4280
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.027217	7922	3084
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.028965	9771	2996
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.010157	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.752541	13526	3170
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.181876	88447	2905
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.036658	11487	3994
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.027464	8268	2977
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	40.034671	12347	1981
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.083578	33853	4102
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.053194	18007	3670
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	1.370280	750	191	17	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.058189	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	8.447193	1600	940	2.0.3.0.0.0.0	synth with cache (only 1: intros f; only 1: intros D; only 1: intros X; only 1: intros cvp; only 1: intros H0; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.074082	27946	5797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.070073	27498	5065
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.033790	11828	3171
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.094929	38055	5213
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.007565	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	34.725599	27810	2698	0.0.0.4.11.3.20.6	synth with cache (only 1: intros _tmp_tactician2; only 1: split; only 1: auto with *; only 1: intros f; only 1: compute; only 1: rewrite singleton_spec; only 1: intros Hf; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.066377	25890	4456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.059661	18956	4388
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.104656	33348	2875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	2.208010	1024	241	7.4.2	synth with cache (only 1: intros x; only 1: intros Hlpe; only 1: apply N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.035924	11517	4392
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.046855	16376	4700
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.081423	11	7	0.0.1.0.0.0	synth with cache (only 1: intros until l; only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.065762	22311	4940
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.045298	14805	4213
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.050929	13196	1543
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	18.742798	18991	1834	0.0.5.0.4.0.0.2.26.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply IHp; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.066884	24256	6053
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.057786	17918	6179
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.083480	31659	5610
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.189097	71	33	3.2	synth with cache (only 1: intros l; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.071285	27236	5309
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.074204	30426	4857
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	34.530375	15702	5164	0.0.16.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: intropattern subst -> H; only 1: rewrite <- Rsqr_abs; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.034167	9126	4894
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.029581	9379	2972
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.079405	33200	4379
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.096980	40615	6580
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.099346	41390	5922
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.067119	22715	4975
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.063413	17525	4190
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.054507	19061	4488
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.042796	15705	3924
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.069834	25218	5452
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	40.027792	8406	3991
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.095061	38621	3892
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.049402	14182	3928
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.029876	8554	3798
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	6.380943	2384	909	1.3.0.0.0.0.0.2	synth with cache (only 1: intros r; only 1: intros H; only 1: unfold Rabs; only 1: destruct (Rcase_abs r) as [Hlt| Hge]; only 1: absurd (r >= 0); only 1: exact (Rlt_not_ge r 0 Hlt); only 1: auto with real; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.098635	41666	5762
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.067048	22602	5590
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.112664	43786	5138
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.118715	44588	457
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.020693	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.051536	17707	3963
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.089885	38363	5381
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	29.434719	15947	4455	4.0.2.14.0	synth with cache (only 1: unfold included; only 1: intros HCutR; only 1: intros f; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.575887	4578	216	57	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.787541	79	59	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.120342	16	7	5.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.026007	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.016465	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.021477	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.021032	4	3	1.0.0	synth with cache (only 1: red; only 1: intros y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.052578	16686	4234
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.040195	12551	5005
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	20.195367	7663	1204	3.0.5.7.0.0.8	synth with cache (only 1: intros q; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: revert q; only 1: intros n; only 1: rewrite Rrepr_0; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.066306	24259	4022
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.091406	37037	3516
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.128755	436	103	3.0.0.0.2.0.5	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.028812	2	2	0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.010788	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.062411	20591	6493
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.098826	42674	2499
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.064289	21686	7066
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.026074	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.138955	17	15	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.030318	4	4	0.0.0.0	synth with cache (only 1: intros r; only 1: intros r1; only 1: intros r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.068402	28602	3256
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.847679	58	25	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	11.168944	10122	2263	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.038985	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.063583	20194	6377
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.460663	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.437824	28	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.108479	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.401796	10	3	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.084480	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.448854	23	8	0.3	synth with cache (only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.057967	35	11	6	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.032247	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.403288	17	4	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.035869	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.087084	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.100950	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.043102	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	14.342997	10240	804	0.1.0.0.0.6.30	synth with cache (only 1: replace 1%Z with (Z.of_nat 1); only 1: intros H; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: ring; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	1.126049	312	82	0.0.0.11	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.079915	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.520450	52	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.417092	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.568557	33	17	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.097823	3	3	0.0.0	synth with cache (only 1: intro H; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.029195	8709	2691
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.214555	16	8	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.084150	36544	3366
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.082994	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.463669	36	12	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.506932	28	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.044521	16005	3268
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.861137	39	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.034903	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.026167	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.097018	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.092155	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.079301	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.171692	522	111	0.4.0.8	synth with cache (only 1: intros Hin; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.498630	33	17	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	21.026345	136394	1011	355	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.669880	160	70	0.1.1.5	synth with cache (only 1: red; only 1: intros a; only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.057334	19517	5004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.095457	10718	3595
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.028239	8502	3475
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.066472	22564	5434
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.500341	83	37	0.0.0.0.0.0.2.2	synth with cache (only 1: split; only 1: intro H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.038696	13452	2522
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.066314	24253	4006
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.041928	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.043454	16979	2797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.071396	28067	5034
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.036729	8308	2688
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.026081	7051	3336
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	18.001804	1101	266	0.0.4.5.8	synth with cache (only 1: red; only 1: red; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.076121	25586	5375
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.058344	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.056345	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.070201	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.440025	16	5	0.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.045020	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.075941	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.035176	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.036937	9372	4247
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.624153	43	20	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	8.217120	4093	920	8.11	synth with cache (only 1: intros x; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.077738	29711	5245
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.103325	24	8	3.3	synth with cache (only 1: unfold to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.074992	8	5	0.2.0.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.080866	35516	4277
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.063170	22680	2970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.055305	17630	3755
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.062488	26596	2997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.812168	30882	2190
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.066074	22652	6220
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.073673	25611	3543
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.046834	15402	5386
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.020752	7	2	5.0	synth with cache (only 1: intros r2; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.057944	19695	5516
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	23.122659	2063	518	0.0.5.1.4.3.0	synth with cache (only 1: expAdd; only 1: red; only 1: intros; only 1: rewrite F.inter_iff; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.181973	82866	5301
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.068711	23004	4846
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.051990	17170	4181
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.009638	484	141	0.0.3.0.4	synth with cache (only 1: intros a; only 1: intros m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.081299	30505	5187
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.041978	14417	2965
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.093897	41544	2673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.069732	26292	4442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.053615	5	5	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.070991	24954	5943
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.853567	19326	3826
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.026406	7836	3012
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.051895	19482	3460
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	3.700582	8571	338	7.0.14.6.0.83	synth with cache (only 1: rewrite eq_iff_eq_true; only 1: split; only 1: intros H; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.764857	324	57	8.3.0	synth with cache (only 1: rewrite <- mem_iff; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.012475	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.062675	21329	4067
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.114282	26	6	6.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.063762	21332	4042
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.297986	66	21	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.076336	27053	4810
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.809108	67	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.030524	9735	3585
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.054894	19805	4306
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.038402	12265	3181
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.089360	35274	6055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.072271	28173	4153
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.057757	20856	6076
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.045440	7217	1100
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	3.274579	723	360	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros l; only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: generalize (H a); only 1: clear H; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.071661	26330	4481
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.056063	20844	4104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.027253	8242	1993
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.054323	16192	6646
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.341582	178905	1707
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.093402	40394	3515
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.237559	107184	5682
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.042580	4572	1000
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.278668	136659	4017
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.066536	25063	4489
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.062792	4	2	2.0	synth with cache (only 1: intros a; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.485071	21	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.068610	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.621361	83	35	0.1.0	synth with cache (only 1: red; only 1: intros b; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.069593	28444	4051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.083949	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	23.157650	2694	2032	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.022993	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.014669	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.036794	5	3	0.2.0	synth with cache (only 1: intros; only 1: rewrite <- equal_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.088408	26515	7997
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	17.849732	11862	1814	2.26.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_tmp_tactician0| NEQ]; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.043030	13501	4264
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.203735	28	13	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.195247	26	13	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.031212	11279	2647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.064490	23104	3536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	5.623301	885	400	1.0.0.1.0.0.3	synth with cache (only 1: intros H16; only 1: unfold Ratan_seq; only 1: unfold PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.016354	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.094479	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.588294	44	19	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.836657	180	78	1.3.3	synth with cache (only 1: intros H; only 1: intros Hf; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.067020	25902	742
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.024888	7175	2930
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.834460	315	95	0.2.3.2.3	synth with cache (only 1: intros y; only 1: unfold Subset; only 1: intros s; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.069440	26603	5868
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.107867	45283	5415
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.081553	31967	5346
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.040032	12721	3539
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.026701	7469	3351
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.055901	18458	6119
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.072549	26444	5866
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.066139	26053	3186
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.095072	40195	4789
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.120038	48546	6804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.013221	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.009611	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.018094	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.010575	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.013870	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.013447	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.011870	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	12.782318	12579	1713	1.10.22	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.031882	5	5	0.0.0.0.0	synth with cache (only 1: intros r; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.036786	9884	3132
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.548494	578	217	1.2.0.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.058349	19199	4476
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.072222	26187	3881
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.088933	37179	5246
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.136669	16	4	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.386123	590	110	0.1.2.6.10	synth with cache (only 1: intros m; only 1: intros H1; only 1: simpl; only 1: unfold Raw.empty; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.049781	14106	6032
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.061246	4	3	0.1.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.219527	102183	1508
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.088543	21690	2903
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.385617	187679	3539
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.125018	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.143041	131	24	12	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.054217	21154	4246
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.065771	25382	3887
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.068452	25953	4256
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	9.399731	6881	1266	1.0.7.8.7	synth with cache (only 1: simpl; only 1: intros b; only 1: intros _tmp_tactician0; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.089382	32812	4128
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.030044	2567	784
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.068334	25573	5145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.098457	40353	4486
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.079987	29691	7688
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.021200	5869	2490
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.559841	638	245	0.2.0.3.0.3	synth with cache (only 1: intros a; only 1: split; only 1: intro; only 1: apply (MapsTo_1 H H0); only 1: firstorder; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.070771	25822	5393
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.183748	84351	4318
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.090671	35717	6978
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.837286	1842	247	3.2.13	synth with cache (only 1: red; only 1: intros Hr; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.023274	5920	2858
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.020223	4479	2909
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.088036	31467	5560
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.047414	14601	4273
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.050881	18065	3773
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.205943	98119	2517
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.058730	19417	3593
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.109028	42017	6220
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.044032	12430	3887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.531402	17393	2702
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.013999	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	2.034360	541	211	0.0.0.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.496814	115	42	0.1.0.6	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.076768	30361	4448
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.207069	22	9	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.039130	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.024076	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.022389	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.106490	45958	4660
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.065865	22683	6127
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.550810	19339	875
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.196220	87527	7198
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.073447	28512	5389
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.072702	28610	5197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.037633	9125	3686
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.102496	2	2	0.0	synth with cache (only 1: rewrite <- equal_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.022958	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.010885	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.012787	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.012930	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.009758	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.026919	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	30.824488	9440	3185	2.1.1.1.2.1.2	synth with cache (only 1: intros H1; only 1: destruct (SORsetoid sor) as (_tmp_tactician0, Equivalence_Symmetric, _tmp_tactician2); only 1: intros m; only 1: intros p; only 1: intro H; only 1: clear _tmp_tactician0; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.013793	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.008401	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.016774	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.074953	26945	2750
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.085715	31544	4416
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.054897	20401	4158
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.054633	11	2	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.036569	11778	1737
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.076778	32887	4266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.168863	81359	2692
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.037695	11647	3010
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.082131	29137	5364
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.071228	24719	6865
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.104956	33923	3254
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.074589	26134	7841
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.265803	71976	6839
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.026606	7265	3118
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.043970	13167	3842
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	26.451857	14082	3634	3.11.2	synth with cache (only 1: intros x; only 1: symmetry; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.034097	11390	3071
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.513315	329	130	2.0.0.4	synth with cache (only 1: intros m; only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.049810	10	4	2.0.0	synth with cache (only 1: intros r1; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.028270	10	4	2.0.1	synth with cache (only 1: intros r1; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.136979	63783	5949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.013127	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.614686	77	36	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.095720	28	10	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.051271	17724	4302
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.067364	22467	5689
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.186257	88122	3069
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.084027	34211	6201
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	3.347070	688	355	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.012057	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	4.243089	1655	697	2.1.1.0.3.3	synth with cache (only 1: intros q2; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.233683	37734	5384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.033410	9895	3023
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	13.519914	25991	3029	6.2.19.7.1.1.5	synth with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: intuition; only 1: red; only 1: intros H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.121157	52699	3436
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.084863	26445	4677
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.056234	17600	5362
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.118609	16440	3143
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	4.130414	1583	469	19	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.295681	147378	848
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.070708	28025	4529
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.092261	37535	6432
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.019165	4455	1872
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.010662	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.060397	19816	4486
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.030163	4972	760
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	8.318946	5136	1503	0.2.0.1.1.0.6.2	synth with cache (only 1: intros n; only 1: intros Sym2; only 1: intros H; only 1: intros m; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.044862	14331	3379
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.092411	35410	2070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.047318	15499	3332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.081542	32438	4975
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.027219	9262	2867
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.134919	61355	6847
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.103774	2	2	0.0	synth with cache (only 1: intros until m; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.082595	24223	4902
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.065799	22177	5613
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.100964	45946	4666
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.029881	8378	3646
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.053571	14625	4398
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.011175	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.016359	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.017210	4807	2533
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.289847	19637	1956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.042713	13066	4263
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.112457	46298	5737
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.067619	23082	6053
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.042777	12613	4845
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.052450	15287	4427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.053243	18430	5906
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.021198	3138	887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.021198	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.116117	54206	6251
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.059026	20184	5119
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.034188	10471	3112
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.086806	35396	2375
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.073912	27369	6638
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.152864	41	16	1	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.015640	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.056383	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.211899	170	109	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros H; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.648574	27878	6160
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.023064	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.059006	12191	1946
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.079406	29599	5204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	2.406566	507	302	0.0.1.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.068096	22987	6355
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.101413	44073	2583
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.062844	22578	3745
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.082031	10	6	0.1.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.123747	108	9	15	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.049047	17182	5265
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	21.313392	11273	3746	2.4.0.2.2.2.1	synth with cache (only 1: intros r1; only 1: unfold Rle; only 1: intros m; only 1: intros p; only 1: intuition; only 1: subst; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.125956	25195	2378
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	3.989765	2433	836	0.0.2.2.10	synth with cache (only 1: red; only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.007035	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	12.204670	12486	2165	3.2.0.2.1.0.0.13.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: destruct m; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.121583	56432	1840
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.026212	8218	2926
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.103707	39443	6784
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.056810	18246	5697
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.031099	8407	3624
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.055091	19367	6027
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.088574	32833	5653
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.066028	24269	4288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.170479	82587	4051
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.040994	13717	4308
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	11.791447	14535	1352	0.1.0.4.1.25	synth with cache (only 1: destruct a; only 1: intros Hb; only 1: trivial; only 1: intros Hn; only 1: easy; only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	40.175525	74998	4868
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.076715	29738	5119
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.019168	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.024681	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.103189	39679	4579
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.066603	22301	5927
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	40.078486	3188	334
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.023801	3853	782
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	11.281567	2976	1236	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte; only 1: apply derive_pt_eq_0; only 1: unfold derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.049255	16252	6345
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.159244	13	10	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.043605	9795	2446
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.032002	6831	4780
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.253997	6525	1663
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.040265	11731	4697
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.044747	11757	4854
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	40.105023	19847	6101
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.049853	17094	4160
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.089164	37678	3909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.123135	59185	3665
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.041928	14024	4377
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.140396	66332	3951
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.055711	20530	6594
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.103228	37839	7491
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.243500	123923	1911
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.460793	129	70	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.079589	29646	6207
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.063054	21796	5705
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.024866	6370	3727
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	7.622066	4535	832	0.0.0.0.0.0.13.5	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.056012	18085	5792
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.059865	22047	3688
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.066209	23763	3826
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.094045	39866	4452
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.097629	40038	4294
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.021718	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.206364	98163	5163
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.071119	26614	5393
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.044067	13125	4032
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.028564	5827	1664
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.052067	16741	6036
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.050338	16742	4384
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.034184	8162	1475
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	40.084446	31331	6118
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.055127	18051	4823
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.405099	346	63	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.039381	8292	5032
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.107479	45845	4351
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.236354	2138	203	1.1.1.2.18.7.7.2	synth with cache (only 1: split; only 1: auto with arith; only 1: intuition; only 1: red; only 1: intros x; only 1: intros y; only 1: intros p; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.054495	16198	5003
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.125135	49913	6351
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.063999	24066	5626
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.071949	26884	4700
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	8.100721	2744	897	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	1.924395	879	241	1.1.6.3	synth with cache (only 1: intros a; only 1: intros m; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.132455	46512	2525
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.057745	20730	4327
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.329410	318	42	6.16	synth with cache (only 1: intros H; only 1: auto with set fset).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.101842	34	12	4	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	2.522860	1035	361	0.0.3.0.4.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.111134	50014	3200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.030625	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	4.119389	2326	666	2.0.0.3.0.0.0.2.0.0.1.0.0.7.1.0.3	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl in *; only 1: trivial; only 1: now rewrite ?nzhead_revapp_0; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: now rewrite ?IHd; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.049336	17	5	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.014496	3761	1217
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.058724	20363	5871
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.182483	86120	6164
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.066076	24671	6712
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.036696	8876	4652
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.034365	11972	2926
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.113266	47166	4415
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.064924	24953	5643
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.081662	35262	3886
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.047153	14527	3825
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.061307	24737	4200
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.096916	39109	4875
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.087917	35360	7294
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.115214	53221	5867
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.064108	23850	4747
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.046553	14012	4049
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	4.622647	3738	263	39.0	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	4.013454	1713	437	1.0.6.1.5.0	synth with cache (only 1: intros; only 1: rewrite <- Qeq_bool_iff; only 1: revert q; only 1: intros _tmp_tactician2; only 1: apply Qeq_bool_iff; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.065954	38	12	1.1	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.027836	9082	3083
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	31.625676	31156	4901	1.0.3.3.2.27.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.043400	9762	4400
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.037637	11249	4260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.111142	49468	5044
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.078209	31653	8266
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.072809	22	11	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.047192	16635	2346
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	13.740593	5454	301	19.7.21.5.21	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intros; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.351247	77	7	13	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.055387	17763	6670
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.054476	15537	6386
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.095419	36397	4571
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.063675	23635	5054
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.184327	86210	5206
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.168920	68	19	5.4	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.082825	31901	6474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	20.583198	10814	3697	1.1.0.0.1.3.0.2.3	synth with cache (only 1: intros b; only 1: intros a; only 1: intros Pempty; only 1: intros Ha; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: intros Pstep; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.025777	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.056707	17873	3770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.039403	13706	3976
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.070207	26020	7043
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.936851	250	114	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.112204	48018	6346
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.065791	24831	5527
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.058580	18847	5247
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.048201	8	6	0.0.1.0.0.1	synth with cache (only 1: red; only 1: unfold singleton; only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.030233	9860	2861
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.131850	58658	6808
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.064378	24429	5646
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.108587	46664	3513
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.117700	51272	6429
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.040366	8	2	5.1	synth with cache (only 1: intros p; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.059336	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.107194	44457	3323
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.079591	31861	5545
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.133874	61109	3056
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.044984	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.063575	25510	1622
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.580576	1306	186	0.0.0.15.0	synth with cache (only 1: intros P; only 1: intros A0; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.048494	14281	4909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.537253	6316	1768
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.080365	29416	6474
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	40.049206	15556	4591
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.117881	50941	5015
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.083117	34328	5769
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.100546	30460	2707
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.269200	92	35	4.4	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.029362	6228	559
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.095446	34961	5976
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.071294	22477	6228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.061118	23318	1455
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.083235	30593	4473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.059420	20259	5278
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	1.997628	551	290	0.0.0.0.0.0.2.1	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.026146	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.078952	30080	5495
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.065708	21033	5474
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	5.031758	1976	921	4.1.0.8	synth with cache (only 1: intros l; only 1: intros x4; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.074203	31170	3094
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.163141	75045	9025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.075326	28984	2902
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.077226	25219	3421
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.105987	45005	6146
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.030120	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.198130	48	25	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.076506	25328	3797
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.069247	24705	6662
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.084060	10	7	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.092718	29714	7341
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.383784	56	27	1.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.797836	265	118	7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.032260	9920	3194
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.088569	30615	4753
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.072593	27484	8084
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.035041	10992	3377
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.078081	29678	5500
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.088903	36765	4021
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.061343	20460	6133
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.212402	98929	4580
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.501910	169	43	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	40.092495	35341	6353
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.012298	2487	1013
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.045244	10694	5722
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.231425	112584	10975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.096826	42245	5699
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.104645	44102	6047
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.048071	17014	4078
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.009766	2659	892
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.050965	18980	4162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.056254	17948	4301
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.069479	27183	3362
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.068208	22753	8471
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.045884	13017	5298
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.079083	31726	6445
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.064300	22532	6479
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.361998	188889	608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.053261	19567	3844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.045177	14668	3993
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.596107	2406	843	4.2.2.1.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.425102	56	13	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.429863	120	63	0.3.1.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros n; only 1: intros m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.052065	18192	5719
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.101401	40722	9534
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.073884	23819	4666
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.073090	28239	6904
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.531820	140	74	0.0.0.0.4	synth with cache (only 1: intros b; only 1: intros s'; only 1: intros x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.053939	17081	3905
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.224994	110488	10531
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.082481	27876	8688
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.059429	19894	6879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	15.302686	11528	2256	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0	synth with cache (only 1: destruct s; only 1: intros _tmp_tactician0; only 1: discriminate _tmp_tactician0; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros _tmp_tactician0; only 1: injection _tmp_tactician0 as _tmp_tactician2; only 1: intropattern subst <- _tmp_tactician2; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros _tmp_tactician0; only 1: discriminate _tmp_tactician0; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.048567	16706	3605
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.053728	18341	6070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.813461	199	125	0.0.1.0.0.1.0	synth with cache (only 1: intros a; only 1: induction 1; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.189512	12221	3065
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.192089	82627	3178
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.633119	833	96	0.0.0.0.0.0.23	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.420685	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.087153	36325	5806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.050428	20679	2593
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.137671	62507	11670
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.086369	34540	6638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.048407	15936	2840
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.065756	20675	4565
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	40.014830	5639	530
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.042360	14164	3562
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.032143	7959	2736
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.167485	71785	3736
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.054313	19002	7100
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.045739	14015	4408
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	25.893967	7849	1623	1.15.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.078599	12240	2972
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.123038	52424	4478
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.081996	29394	4697
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.139287	63457	3500
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.134199	27556	5970
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.029572	3396	1819
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.060108	24771	3255
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.072968	24110	2211
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.085805	32840	6035
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.105176	46844	3535
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	10.777483	9765	1196	0.8.3.20.0.11.0	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite FM.elements_iff; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.054457	16052	4920
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	6.698373	3943	1024	6.2.7	synth with cache (only 1: intros n; only 1: intros r1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.064640	20859	6314
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.076924	29884	3224
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.054441	24002	4626
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.055576	17570	7310
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	1.042654	514	140	0.0.0.0.0.0.0.1.0.2.0.6	synth with cache (only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: rewrite orb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.070995	25389	4090
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.039770	4	4	0.0.0.0	synth with cache (only 1: intros until n; only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.096806	40955	3586
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.639111	318	91	0.0.4.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: Nat.order'; only 1: intros b; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.050793	17674	4858
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.065851	27331	3943
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.074229	20499	2933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.020459	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.032605	8948	939
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	15.870504	9970	2460	12.1.4	synth with cache (only 1: intros A; only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.085141	32732	6850
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.009276	3555	314
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	1.883162	2258	156	8.10.0.18	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [q Hq]; only 1: apply (Z.lt_irrefl 0); only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.011675	6	2	2.2	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.694826	416	39	19	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.007414	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.051574	17956	5254
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.091082	35041	5031
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.050472	15647	6470
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.085464	35057	5650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.075855	27597	4076
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.082497	32066	3599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.154051	70413	4520
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.066876	23484	5955
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.143675	63938	6738
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.120304	56484	4119
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.077070	29895	6266
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.082951	33598	5984
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.078258	26062	1894
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.438017	14499	785
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.048720	14795	4776
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.047526	13087	5039
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.081927	32314	9094
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.312445	162765	7448
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.630052	261	97	6.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition Z.order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.089480	24726	4320
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.128951	59112	13973
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.063146	20498	6346
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.058956	22578	3106
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.059555	18015	5371
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.121784	42483	8741
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.140797	55967	3166
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.007024	6	1	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.082491	32997	6222
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.134161	29	9	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	19.120398	56982	860	0.0.0.0.0.0.0.1.58.12.16.183	synth with cache (only 1: constructor 1; only 1: intuition; only 1: intuition; only 1: intros EQ; only 1: intros y; only 1: intros z; only 1: unfold Qeq; only 1: intros XY; only 1: intros YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.860833	540	113	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.046223	6226	397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.112995	47146	5942
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.005061	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	18.571696	17731	2726	1.0.0.2.0.0.2.1.9.2	synth with cache (only 1: rewrite Nleb_Nle; only 1: destruct b as [| b]; only 1: intros H; only 1: now destruct a; only 1: destruct a as [| a]; only 1: intros H; only 1: trivial; only 1: rewrite Nleb_Nle; only 1: intros IH; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.159734	72342	5407
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.002754	519	256
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	2.715045	4848	645	23.1	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.188353	87132	6519
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.076986	29968	5539
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.059063	16819	7083
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.372071	116	58	2.1.1.1	synth with cache (only 1: intros x; only 1: intros m; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.075181	28363	5978
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.193141	272	17	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.036437	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.024963	5	3	0.2.0	synth with cache (only 1: intros H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.080353	32656	4895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.217510	104060	2221
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.171594	79064	5844
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.048594	17052	5655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.067517	23203	5016
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.036701	8	2	6.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	7.456144	5854	1495	16.0.3	synth with cache (only 1: intros x; only 1: intros x'; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.082420	32954	4552
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.084383	30659	4583
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.079463	30989	5570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	2.789277	1204	540	2.0.0.0.0.0.0.4.0	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H0; only 1: intros s''; only 1: intros y; only 1: intros H; only 1: intros a; only 1: rewrite inter_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.060011	20831	7758
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.108595	49991	8265
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.106703	48722	3551
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.251341	126871	3050
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.103920	42353	12532
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.089815	36424	7243
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.532627	626	79	16.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.036851	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.034631	7913	4089
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.183515	86663	10272
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.119624	50287	7812
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.093811	40825	3185
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.074026	20858	1183
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.068631	27681	5237
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.029652	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.258150	14718	1309
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.105432	43026	5000
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	3.451886	15441	621	14.66	synth with cache (only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.016288	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.057099	19891	2566
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.060254	21342	5713
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.003349	1042	164
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.053219	18006	6270
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.087963	37058	3990
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	27.463878	49137	3587	3.0.9.44.4	synth with cache (only 1: intros n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.062990	21997	4445
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.052928	18491	4692
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.099002	42742	6118
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.038286	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.063163	22089	4208
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.061702	20894	6714
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.072403	28211	4813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	28.624540	25939	4883	2.0.8.4.10	synth with cache (only 1: intros x1; only 1: intros y; only 1: compute; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.580033	72	43	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.050040	14257	5017
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.057536	18980	6272
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.090681	31688	4648
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.045679	13271	4660
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.038325	12248	4023
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.081170	28132	6881
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.068997	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.100408	43801	9155
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.051949	15818	8561
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	10.513793	8462	1605	0.0.0.0.9.4.4	synth with cache (only 1: intros m; only 1: Nat.cases m; only 1: easy'; only 1: simpl; only 1: intros m; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	39.176376	32835	4508	1.23.4.1	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.068532	24195	8616
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.065228	21714	5560
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.526833	9794	3833
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	25.759295	456	100	5.2.2.2.2.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.062802	24363	4043
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	9.855950	9042	1364	13.3.2.12	synth with cache (only 1: intros IH; only 1: intros Ey; only 1: intros z; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.165091	73076	4671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.074366	31634	6713
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.199530	1140	357	0.1.0.8.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intros p; only 1: intros H; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.025758	6377	2310
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.132860	61219	4435
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.070079	25241	2123
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.531939	412	210	0.0.0.0.0.4	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	4.983955	4378	928	6.3.3.12	synth with cache (only 1: intros y'; only 1: intros Ey; only 1: intros Hyy'; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	18.721997	6167	1748	1.0.2.12	synth with cache (only 1: intros c; only 1: intros b; only 1: rewrite xnnormalise_correct; only 1: now N.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.286381	144659	1135
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.152639	65645	5323
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.198003	95525	4318
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.074583	27966	4428
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.088240	35732	4223
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	21.336481	12563	3836	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros until a; only 1: destruct a; only 1: intros until a'; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros until a'; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.082871	31167	5335
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.052634	19955	2715
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.087998	34642	6932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.045712	15734	6138
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.107889	46009	2528
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.085073	18235	4347
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.083065	31104	7194
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.142901	61958	3425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.045449	13936	4000
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.047439	16828	5721
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.086606	41135	4010
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.065698	24933	7975
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.096916	38134	4499
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.129695	52472	8480
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.095949	40563	12123
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007310	2856	128
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	24.621939	7048	742	34.5	synth with cache (only 1: intros Heq1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.115306	48928	7930
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.152038	69049	8968
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.077509	31672	4555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.191174	18898	2496
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.058469	20808	7493
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.043070	13966	1755
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.344691	185750	6169
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.091374	32757	4841
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.018154	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.046092	10806	2811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.159740	73482	6362
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.163886	73374	6961
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.142803	64968	4881
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.065783	26027	5133
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.117360	48651	5048
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.078698	28283	4834
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	12.820137	10587	715	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.065053	24334	3999
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.091695	38804	6336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.055982	19934	8052
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.156302	21716	3209
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.049124	16468	5164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.615832	132	45	0.0.0.1.0	synth with cache (only 1: unfold Z.pred; only 1: intros _tmp_tactician2; only 1: unfold Z.eq; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	2.533755	7225	138	0.0.115	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.075496	25889	6589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.053162	77	7	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.552480	219	38	6.6.0	synth with cache (only 1: unfold Z.opp; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.163821	77400	7087
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.080067	29288	5445
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.048692	14127	5001
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.045702	15567	5229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.033171	1156	464	0.2.0.0.2.3	synth with cache (only 1: intros s'; only 1: intros; only 1: intros x; only 1: rewrite filter_iff; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.077275	33310	6229
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	2.632666	1353	527	2.4.3.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros m; only 1: intros b'; only 1: t_eqb).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.029942	5690	4303
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	40.356467	26206	9557
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.089872	31376	1352
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	40.001115	150	122
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.096947	42752	2830
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.196170	92963	8211
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.182254	79694	5918
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.056868	17472	6469
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.054700	19396	8224
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.131373	6823	1216
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	40.070614	26650	3915
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	40.723448	374496	2444
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.005308	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.100793	33856	5165
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.473849	19689	4605
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	7.598835	102	27	7.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	32.321069	19475	3428	3.2.2.20	synth with cache (only 1: intros l1; only 1: intros s'; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.179017	81937	5028
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.168307	76907	5899
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.026190	38	4	10	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.050877	15314	5982
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.076713	28875	6365
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.086370	33872	5154
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.019092	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.015294	9	2	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.007217	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.009170	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.050857	19568	2079
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.119547	52407	6488
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.083216	33546	5892
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.074624	21877	4929
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.092462	37665	4725
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.062879	22881	4241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.048021	7903	1787
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.063330	20001	7481
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.082330	17023	5364
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	40.038678	11209	3863
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	3.036831	4277	142	85	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.553953	256	29	14.0	synth with cache (only 1: unfold Z.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.308991	153002	7119
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.025577	5035	3790
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.348204	95159	12297
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.036496	8481	4752
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.120083	49843	4790
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.133499	161	23	17	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.076376	26889	4707
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.097580	40989	4394
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.075630	30363	4548
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.060745	25509	3143
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.034493	5	5	0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	0.624479	197	80	0.0.0.0.0.5	synth with cache (only 1: destruct m; only 1: destruct b; only 1: destruct b4; only 1: t_eqb; only 1: t_eqb; only 1: t_eqb).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.032101	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.049361	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Exx'; only 1: intros y; only 1: intros y'; only 1: intros Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	4.186040	8076	897	30.5	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.179847	14434	3511
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008585	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.120957	51410	1583
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.155894	68422	6322
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.059244	22918	2929
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	3.588299	1105	543	0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.002647	612	116
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.075887	28939	5281
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.084410	35130	3773
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.081761	25383	6399
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	40.064831	27065	2041
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.097981	7	6	0.0.0.0.0.1	synth with cache (only 1: unfold Z.leb; only 1: unfold Z.le; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.115947	51353	4647
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.066875	20931	6635
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.061249	24111	3140
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.063769	18961	2303
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.070575	28595	8811
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.140184	57683	4924
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.086132	35	21	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.017696	3	2	0.1	synth with cache (only 1: intros LT; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	13.848653	11474	2341	0.0.0.0.2.1.9.14	synth with cache (only 1: revert m; only 1: intros p; only 1: unfold Z.gt; only 1: unfold Z.gtb; only 1: destruct Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.030427	5	3	0.0.2	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.025945	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.035862	10163	3704
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.053033	13960	6786
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.050599	13019	6230
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	3.330525	4477	382	1.0.34.5	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: Z.order; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.066897	21890	6732
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.089691	37068	3854
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.111337	31132	6654
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.131469	65676	1632
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.058237	14845	5135
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.279200	69789	8386
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.115407	49018	6749
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.063417	22789	5129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.026171	9	4	1.0	synth with cache (only 1: intros x; only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.018258	6107	1386
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.094701	41666	3380
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.053193	19585	4538
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.524580	45	8	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.072415	28344	3008
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.036143	12691	3064
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.188792	83396	4081
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.101173	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.038845	11156	4543
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	41.156572	20528	2376
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	2.258597	401	249	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until w; only 1: induction w; only 1: intros until n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.048768	14655	5031
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	6.127614	10759	992	0.0.0.0.40	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.086747	28621	5464
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.001933	609	100
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	10.911347	4518	1745	3.0.2.3.1.4	synth with cache (only 1: red; only 1: intros Hx; only 1: intros x'; only 1: unfold Equal; only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.091229	31201	6276
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.066490	23103	6719
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.062693	696	209	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	40.053401	14899	4833
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.027217	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.090424	38382	989
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.031674	6732	3744
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.122727	54136	8563
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	17.444983	21121	778	115	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	7.257714	15683	1933	0.0.0.0.0.0.14.0.5.0.0.0.0.1.6.20	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	40.048659	15839	3661
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.078755	29045	6502
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.061518	22411	3620
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	2.861018	5434	587	2.0.0.2.0.2.0.0.2.5.2.0.22	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.102028	41898	4037
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.040037	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.117994	45707	3768
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.008095	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.083857	30060	4858
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.043870	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	0.839798	657	53	0.0.3.4.23	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	1.675827	1021	238	9.4.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.117789	56402	2671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	1.698962	1618	342	1.0.5.0.5.0.0.2	synth with cache (only 1: destruct n; only 1: destruct m; only 1: now try N.order'; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007435	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.496324	247	111	2.7	synth with cache (only 1: unfold Z.lt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.073724	27838	3703
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.268223	132354	4400
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	8.501428	6043	1102	4.21	synth with cache (only 1: intros x; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.097688	37769	7804
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.237101	23762	2131
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.072746	27834	5751
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.056843	17829	3445
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.102118	39920	6438
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.182860	85749	4998
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.090986	41076	2554
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.058190	22323	3360
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.083884	28431	5696
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.088313	33980	3472
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.053779	10967	1307
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.071826	28452	7892
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.062795	12277	218
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.056033	16980	5462
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.000901	97	62
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.045177	11197	5105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.021629	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	22.049897	74076	1884	8.2.0.8.4.116.19	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: unfold Z.testbit; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.079544	30132	6401
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.009297	4	1	3	synth with cache (only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.089721	36403	4974
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.024892	6119	2468
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.078767	53	11	5.2	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	3.576314	3136	407	3.0.0.2.0.0.1.16.1.1.19	synth with cache (only 1: destruct a; only 1: simpl in *; only 1: f_equal; only 1: induction p; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.059790	19557	9534
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.098695	34650	6170
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	24.706059	9601	789	0.0.0.36.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.025498	5963	4117
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.136227	58765	8567
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.073086	27459	6143
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	40.234405	111081	5957
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.027307	6679	3562
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	18.389453	68608	4753	10.11.22	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.090714	35114	5140
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.085345	34723	6354
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.071689	22369	5410
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.067863	25531	5194
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.049591	9065	2736
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.048060	15684	3573
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.158325	74814	3388
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.050914	18045	3381
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	1.931011	609	71	2.3.20	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.073497	30185	3299
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.063359	20659	7326
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.136771	18	8	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.224940	109044	2632
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.123119	11011	3612
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.032431	9581	4551
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.090990	32373	3422
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	19.585835	6294	743	34	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.143351	58519	6718
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.344077	28035	5812
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.028258	7361	2822
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000714	75	27
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.182919	58903	7885
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.033010	10672	4396
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.085807	28992	6185
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.073985	27714	7898
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.053392	16796	4905
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.153929	51256	5071
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.083135	34401	1388
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.073378	26571	7830
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.272860	135698	3330
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.058429	15937	4696
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.087472	33128	5725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.148420	68153	6376
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.136919	9	6	2.0.0.0.0	synth with cache (only 1: intros Ha; only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.047831	14176	4933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.104694	46531	3032
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.133459	56418	8718
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	7.686362	5098	802	6.4.1.2.0.8	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: trivial; only 1: simpl in *; only 1: intros; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.100388	39046	3938
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.074592	26583	6505
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	40.075541	27155	4778
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.063792	22741	5457
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.771648	845	78	15.0.1.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.105195	41100	1604
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.060661	22077	7956
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	29.349389	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.050603	15537	6226
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.723746	68712	5449
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.164939	91	19	10	synth with cache (only 1: now try Z.order').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.075553	4	1	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.008371	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.004224	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.007653	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.006057	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.015705	3862	798
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.044028	12748	3574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.083281	32161	3739
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.101078	42255	4948
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.172000	78216	8278
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.126862	55105	6267
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.315081	25448	8024
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.032793	8275	3221
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.076226	30090	6798
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.043030	11225	5017
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.047180	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.062461	21215	4905
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.082585	29922	8702
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.069625	30042	1252
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.066085	21240	7711
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.027399	8098	3057
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.054058	16697	5797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.058767	18742	3839
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.087870	36307	6404
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.048737	17291	5224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.085242	36278	2748
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008829	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.010986	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.399651	73091	4903
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.055624	16482	3788
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.347372	12862	2299
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.064413	14107	5424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.521987	759	104	0.0.16	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.074041	26373	6105
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.035240	11784	2410
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	40.059936	23233	6697
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.089665	36481	2193
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.067784	24156	6188
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001225	248	32
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.040136	13795	2157
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.005515	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.005861	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	33.983666	22646	7008	0.0.1.0.0.3.2.14	synth with cache (only 1: intros until y; only 1: intros _tmp_tactician0; only 1: induction 1; only 1: constructor; only 1: constructor; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.823046	16226	2489
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.007479	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.013225	4	3	1.0.0	synth with cache (only 1: red; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.681354	119	57	4.1.1	synth with cache (only 1: intros Hf; only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.021256	5446	1123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.080856	29414	5151
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.045172	13770	2980
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.136784	52019	7573
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.048721	7	5	2.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.023694	6	3	2.0.1	synth with cache (only 1: intros H'3; only 1: intros y; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.085550	37	16	4.0.0	synth with cache (only 1: red; only 1: intros x; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.461153	351	64	13.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.750157	1037	116	0.0.0.18.2.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.090189	36025	7297
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.434098	8882	1653
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	31.799967	19248	2926	6.4.11.1.4.9	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: auto; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.111468	46507	7965
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	3.337489	2597	543	1.0.2.4.3.9	synth with cache (only 1: intros m; only 1: unfold singleton; only 1: intros r; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.835906	367	295	1.1.0.2.0	synth with cache (only 1: intro; only 1: intros x'; only 1: intros E1; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.048991	13969	4592
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.067706	21373	7813
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.036343	12070	1873
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.108170	49002	1145
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.063866	6596	2087
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.348138	84284	5719
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.254720	124280	4526
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.040828	14898	2550
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	4.830366	1861	646	0.13.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.082095	30335	5725
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	1.080733	446	84	1.0.1.1.4.2.8	synth with cache (only 1: induction l; only 1: now apply permA_skip; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.092637	40628	4015
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.066574	46	11	0.0.7	synth with cache (only 1: intros b; only 1: intros until q; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.016211	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.050227	11881	4645
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.136233	46137	6935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.049507	13566	6179
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.314822	20826	7809
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	16.492461	13659	830	0.0.1.3.7.0.9.9.5.1.7.26	synth with cache (only 1: Z.nzsimpl; only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: now destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.125531	6	6	0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Ha; only 1: intros Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.109879	14637	2764
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.048261	16748	4705
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.070114	28599	3171
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.046665	14525	6257
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.079530	21461	10476
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.273985	29985	7986
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000851	56	31
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.079687	16885	5022
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.044907	12526	2858
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.018143	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.015467	4	2	2.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007427	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.078301	29192	8260
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.104870	43893	6185
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.024518	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.013043	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.011505	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.130847	54708	6149
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.115812	17038	2307
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.021788	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.066045	1978	277	1.4.0.0.1.1.0.11	synth with cache (only 1: induction 1; only 1: compute in H; only 1: induction l; only 1: left; only 1: firstorder; only 1: left; only 1: now repeat constructor; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.278659	18108	8712
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	2.691656	1515	299	5.1.1.8	synth with cache (only 1: intros H2; only 1: firstorder  auto with crelations; only 1: rewrite <- H2; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.088441	34945	7313
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.034920	11019	3527
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.076112	25788	5558
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	40.085216	29721	9236
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.426186	150	74	0.1.0.0.0.0.1	synth with cache (only 1: intros EQ; only 1: intros n; only 1: intros H3; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.036866	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.087677	34299	8695
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.020551	6198	2369
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.126218	60700	2708
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.081444	31308	8063
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.038208	13315	1650
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.138449	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.080011	6	3	0.2.1	synth with cache (only 1: intros x; only 1: intros b; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.073721	28	8	0.6	synth with cache (only 1: intros l; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.014601	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.060989	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.062730	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.070621	28038	5010
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.094026	36022	4799
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.413049	765	186	10.1.1	synth with cache (only 1: intros x; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.029915	10652	2003
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.060890	13097	5710
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.179203	65328	6162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.059904	20888	5057
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.389702	18153	8073
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.062327	11324	4495
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	9.307926	2632	408	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.110015	44358	7577
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.131720	54478	9915
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.081150	33300	6417
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.049608	17701	3474
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.088967	34823	8280
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.126039	51232	7664
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001041	175	30
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.052524	16383	4453
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.100710	26394	5814
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.087175	29667	8970
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.078479	30607	5510
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.193503	87313	7096
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.065357	24054	7930
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.350647	40892	6397
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.102137	37628	8648
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.064303	23355	8254
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.061170	22084	6343
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.105813	45727	6579
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.062621	29	8	3.2.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.020181	6	3	3.0.0	synth with cache (only 1: intro s; only 1: rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.039589	7916	3973
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.014429	3254	1847
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.023926	6431	2129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	40.096003	37333	5350
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	40.060562	22876	5508
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	0.245453	75	38	1.0.4	synth with cache (only 1: intros Hiff; only 1: intros m2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	40.053238	15909	9634
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.427416	124631	8824
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.033078	12585	2312
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	13.804065	16398	3075	0.0.0.0.0.4.4.0.0.1.25	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.013485	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.037317	6	2	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.015945	3	3	0.0.0	synth with cache (only 1: unfold succ; only 1: unfold pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.010749	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.039841	5699	2350
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.072894	26528	5803
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.101544	45320	7391
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.051011	15213	7500
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.035458	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.797718	694	136	2.5.1.5	synth with cache (only 1: intros l'; only 1: elim l'; only 1: auto; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.662775	24	13	0.1.5	synth with cache (only 1: compute; only 1: intros Hf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.033122	11969	1424
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010793	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.574522	516	285	1.0.0.7	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.069291	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros; only 1: subst; only 1: intros l'; only 1: intros l2; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.096271	44447	3675
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	2.006089	9152	130	0.133	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.065415	23690	3617
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	19.804598	8478	3119	6.1.4.2	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	1.083867	293	95	0.2.5.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros y'; only 1: intros H1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.042623	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.105275	43644	9031
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.098019	38323	6477
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	1.138633	326	138	4.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.042283	10	6	0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.553337	113	67	0.2.0.2.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.067404	24994	5602
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	14.397290	9721	3492	0.1.0.2.3.2.2.0.0	synth with cache (only 1: unfold le; only 1: unfold max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intros c; only 1: intuition; only 1: intros y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.101247	27	10	4.2	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.510936	158	59	0.1.3.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.128225	38	19	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.052758	14822	4569
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.013796	6	2	2.2	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.321530	48087	1812
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.051057	14855	6024
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.088966	36539	5621
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.001092	97	62
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.117457	51456	5538
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.456869	114120	7425
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.324410	35146	7816
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.075827	27622	9540
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.075008	28929	7159
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.404846	8496	3619
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.031248	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	15.113095	26400	1688	7.1.0.2.4.56	synth with cache (only 1: destruct n; only 1: order; only 1: rewrite one_succ; only 1: intros H; only 1: now subst; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.017763	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.043036	2	1	1	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.040446	11899	3484
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.036860	11156	2591
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	33.220888	51876	7709	1.13.0.0.0.0.0.1.0.0.0.4.10.0.1.41	synth with cache (only 1: constructor; only 1: red; only 1: red; only 1: intros; only 1: compute; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: intros p; only 1: apply compare_trans).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	0.814819	252	83	1.0.3.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: destruct 1; only 1: elim (Noone_in_empty U x); only 1: auto with sets; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	6.321477	2356	633	6.6.1.1.0.0	synth with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: inversion 1; only 1: setoid_rewrite Exists_exists; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.029975	10627	1299
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	3.728713	2931	710	0.1.0.0.0.0.4.9	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| x l]; only 1: intros Eq; only 1: intros x; only 1: intros H; only 1: inv; only 1: simpl; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.036137	10025	4149
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.075686	26729	5652
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.905257	621	291	3.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.341673	68	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.397722	14160	7303
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.071020	26198	7113
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.045637	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.037584	5763	2290
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.022633	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.022626	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.158350	72712	6010
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	5.639843	3254	633	2.5.9.1.0	synth with cache (only 1: firstorder; only 1: rewrite InA_cons in H; only 1: induction l; only 1: firstorder; only 1: firstorder  auto with crelations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.072394	26385	8492
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	40.066164	23472	9296
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006000	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.005483	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.053877	21306	1775
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	24.942667	18036	5325	0.0.0.0.0.1.0.0.3.0.0.0.0.0.0.5.0.1	synth with cache (only 1: destruct m; only 1: now destruct n; only 1: destruct n; only 1: trivial; only 1: intros Hn; only 1: intros Hm; only 1: clear; only 1: simpl; only 1: rewrite <- (N2Z.id (_ mod _)); only 1: rewrite Z.rem_mod_nonneg; only 1: f_equal; only 1: now rewrite N2Z.inj_mod; only 1: easy; only 1: reflexivity; only 1: intros Hn; only 1: intros Hm; only 1: now destruct Hn; only 1: now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.067315	21273	3556
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.726746	639	116	14.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.060839	20484	4062
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.345629	29910	6369
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.084194	20695	4188
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.067409	22735	5778
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.091896	21	7	1.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.578654	15262	7228
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.072264	26917	5589
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.071887	28471	2019
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.274347	19413	4545
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	3.074084	888	379	0.1.2.7	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.067073	23411	4314
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.054021	20264	2413
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.001108	147	106
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	10.143554	4451	1352	1.0.0.1.1.6.3	synth with cache (only 1: intro; only 1: intros b; only 1: red; only 1: simpl; only 1: intros H; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.356162	67698	8007
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.074340	25483	8888
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.080561	27361	5633
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.098604	38609	5558
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.088948	20199	8318
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.145487	64810	9236
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.032172	9773	1463
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.044242	16335	3638
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.031949	8847	5048
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.043607	13558	4346
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	11.222685	6618	1986	0.0.4.4.1.1.2	synth with cache (only 1: red; only 1: intros m; only 1: simpl; only 1: intros a; only 1: intros Hb; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	24.393076	10210	3496	0.0.4.0.0.0.0.0.2.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: order; only 1: order; only 1: order; only 1: specialize (IHl x y); only 1: destruct (split x l); only 1: simpl in *; only 1: rewrite join_spec; only 1: intuition_in; only 1: order; only 1: order; only 1: specialize (IHr x y); only 1: destruct (split x r); only 1: simpl in *; only 1: intuition_in; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.060640	19543	5668
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.286264	31693	9173
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.014448	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.009508	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.052164	22	8	4.0.1	synth with cache (only 1: red; only 1: intros h1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.764704	320	74	11	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.090289	37300	4974
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.191214	92488	5920
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.066753	20585	6007
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.068517	20502	8792
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.375486	83262	5551
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.117063	50594	9294
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.037646	9483	3012
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.079478	30635	7716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.005788	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.098582	39352	6825
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.111707	49484	2685
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	1.062662	340	182	2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: now destruct 2; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.197567	91499	8074
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.023414	7297	2316
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.073478	28981	6768
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	17.073473	12944	3217	2.1.8.0.0.0.6	synth with cache (only 1: intros s; only 1: intros; only 1: intros k; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, _tmp_tactician4); only 1: apply H with k; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.379645	39049	4675
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.326934	3542	1304
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.049230	15030	3140
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	3.890261	873	342	0.0.1.0.0.1.4	synth with cache (only 1: intros l; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.164597	62	27	1.0.0.1	synth with cache (only 1: intros H; only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.098469	39859	3450
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.011185	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000877	150	24
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.183410	82370	6469
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.207063	98464	6293
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.073598	26840	3774
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.054827	17	7	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros _tmp_tactician0; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.070848	28480	9582
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.027424	7900	2168
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.122747	53939	5222
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.048258	12310	5453
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.142517	50412	5173
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.007806	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.076880	31839	5838
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.039738	14435	3380
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.195978	85480	8523
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.082272	29538	7701
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.007926	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.071124	24955	6860
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.096217	38284	5880
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.074288	27230	7152
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	32.622669	29128	6395	0.0.2.2.0.0.5.2.0.0.1.8	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite abs_N_nonneg; only 1: trivial; only 1: Z.nzsimpl; only 1: Z.order'; only 1: now destruct p; only 1: simpl; only 1: intros H; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.077555	32319	4837
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.098001	37446	6988
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.096777	38114	10658
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.100099	40880	5835
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.020928	7039	1822
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.034816	4631	1360
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	4.377487	2911	410	0.2.10.6.0.0.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.075400	30346	5356
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.095067	42017	6625
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	14.771894	49974	1436	129	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.048817	15176	6689
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.058422	17876	5790
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	2.119708	2952	549	6.0.0.5.0.0.0.1.46	synth with cache (only 1: constructor; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: simpl_relation; only 1: red; only 1: red; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.583083	186	29	0.0.0.15	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	10.155337	15167	2943	4.0.2.1.3.1.9.0	synth with cache (only 1: intros S; only 1: intros n; only 1: induction n; only 1: intros; only 1: assumption; only 1: unfold push; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.210158	545	226	1.1.0.6	synth with cache (only 1: intros x; only 1: intros y; only 1: intros Hyz; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.051336	24	11	4.1	synth with cache (only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.217627	27097	5726
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.513821	154	85	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.692289	257	120	9	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	1.681782	1541	219	0.3.3.0.1.6.0.0.0.0.26	synth with cache (only 1: constructor 1; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: intros x; only 1: intros _tmp_tactician0; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros H; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	2.415722	6416	179	83	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.577192	240	52	3.10	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	40.057518	18236	9582
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.065421	23548	4868
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.039488	14356	3202
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.023585	8017	1000
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000727	65	28
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	6.213365	2513	1195	3.0.0.1.0.0.1.3	synth with cache (only 1: intro X; only 1: intros C; only 1: intros Y; only 1: intros H'; only 1: intros H'0; only 1: apply Setminus_intro; only 1: trivial with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.154053	67511	3022
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.445066	2087	702	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.084220	33333	7102
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.129923	57461	3431
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.059396	18529	7270
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	10.934043	3225	1012	0.4.0.8.0	synth with cache (only 1: rewrite InA_alt; only 1: simpl; only 1: rewrite InA_alt; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.112077	47052	4638
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.050420	15305	7523
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.063832	23187	5431
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	1.344745	2042	319	0.2.0.0.0.0.17.1	synth with cache (only 1: intros ?; only 1: induction p; only 1: simpl in *; only 1: reflexivity; only 1: simpl in *; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.074768	15227	1793
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	38.831355	29852	8712	7.0.0.4.3.1.1.0.4	synth with cache (only 1: intros ?; only 1: destruct l; only 1: intros l'; only 1: intros ?; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros l'; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.022306	6986	1859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.141869	58856	6605
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.192364	85885	8213
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.101871	42489	5595
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.038763	5	5	0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: unfold N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.071486	25322	6221
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.116729	47132	6089
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.068429	23458	6432
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.081626	29165	5968
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.031462	12071	1686
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.078770	28706	6843
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.075038	22051	3397
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.139987	17887	5822
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.057972	19527	5867
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.335170	55840	6920
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.410869	141703	2722
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.086606	19168	657
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.069671	24450	8229
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.051387	15402	4880
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	3.355655	4322	462	29.13	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.077888	27552	2124
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.247501	39903	9071
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.139171	56191	5045
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.047831	13763	6214
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000699	69	29
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.066320	24265	7209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	30.530800	40631	6100	5.0.0.0.0.15.4.15	synth with cache (only 1: intros n; only 1: unfold equal; only 1: intros m; only 1: case M.equal; only 1: auto; only 1: intros; only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.089484	32731	6735
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.051433	16815	5245
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.091149	36103	6309
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.912693	635	95	1.2.9.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef; only 1: intuition; only 1: inversion_clear H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.046005	16294	5840
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.088042	28965	7398
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.017470	5	2	2.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.092435	36040	9024
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.020929	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.039547	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.024924	8835	1285
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.068564	22850	5089
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.329390	62047	9074
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.073915	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.007605	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.010027	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.076263	28016	2907
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.095447	35872	7234
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.064299	22300	6830
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.008122	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.128573	49119	7818
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.075041	38	14	0.1.0.2.2	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.778802	446	122	3.6.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n); only 1: rewrite <- (id n'); only 1: now f_equal; only 1: intros H; only 1: rewrite H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.040863	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.551721	2680	191	1.0.0.32.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.080247	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.154886	70293	5484
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.100171	39761	10798
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.073581	24661	8011
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.051668	17015	4523
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.490550	547	299	0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intro; only 1: intros l'; only 1: intros Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.070062	24437	6753
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.071044	25954	5238
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.049090	14086	6347
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.075390	26968	9018
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.205572	15503	5869
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	9.167360	6410	1071	7.3.5.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.051041	16543	7779
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.073389	12358	4785
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.103812	40898	4999
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	9.492660	18591	1847	6.6.0.7.2.17	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (l, F); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.067961	25448	5256
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.142036	54276	7276
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.104980	41351	6274
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	26.019849	34555	3658	0.0.106	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.173072	80318	9484
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.090096	34926	4314
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.068396	22477	9681
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	3.263779	2238	640	0.3.0.2.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, _tmp_tactician0); only 1: destruct _tmp_tactician0 as (aa, bb); only 1: simpl; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, H); only 1: clear _tmp_tactician2; only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.036400	10959	5039
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.036122	8263	2508
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.284942	141390	4041
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.061674	21220	6025
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.100618	39946	9892
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.119608	49212	8115
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.068122	23822	7305
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.070431	24608	10450
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.025131	9716	787
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.088340	38266	2063
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.051914	16997	4065
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.104761	43553	8684
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.095634	37592	10759
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.115738	49059	6661
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.404701	1013	348	2.0.0.6	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.063251	22120	5175
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.033245	6637	1408
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	3.026634	2003	729	2.0.4.1.0.1	synth with cache (only 1: unfold not; only 1: intros P; only 1: intros notall; only 1: intros exnot; only 1: elim exnot; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.060042	20808	6434
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.201244	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	1.161865	274	159	0.0.0.0.1.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: intros H; only 1: auto; only 1: now destruct b).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.058248	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	6.673075	7596	1126	1.3.1.3.9.8.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: intros Ha; only 1: split; only 1: intros; only 1: now apply H; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	16.793139	84574	1984	135	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.070771	25899	7757
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	1.868304	2576	120	46.5	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.658521	243744	4036
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.028384	4	3	0.0.1	synth with cache (only 1: intro; only 1: intros le; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.080583	29055	5353
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	26.365877	187195	3693	0.0.0.139	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.108198	44713	8808
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.073083	27012	7949
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.131387	55711	2723
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.073799	26953	10355
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.045460	7804	2400
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.159233	61869	7043
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.302396	33908	6218
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.145878	58839	7444
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.071209	25996	7638
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.150148	16	7	1.2.0.0	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	40.111450	45743	6879
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.088466	34798	7491
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.116187	4	4	0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.057271	19401	5061
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.064183	27009	3630
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.208906	96391	4780
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.214717	31	21	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.070680	25948	8835
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	40.083464	32086	6888
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.059656	15963	7308
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.032642	8	3	0.0.5	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.087418	16980	1611
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.014752	4079	1527
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.113819	42842	6504
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	7.035907	3577	1464	4.0.0.2.0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: intros Ha; only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: intros H; only 1: simpl; only 1: now destruct a; only 1: intros Ha; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.012724	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.054453	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.025457	27	3	9	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.095471	37541	7790
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	4.122198	1715	763	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.047277	5904	367	0.4.2.39	synth with cache (only 1: intros l1; only 1: induction l1; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.634648	181	90	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.083141	29507	6784
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.566025	377	76	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.060314	18729	5917
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.121631	50573	7416
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.075147	28621	8783
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.104014	43829	7849
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.399910	144914	6591
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	28.152538	28275	3851	0.1.0.0.0.2.0.1.0.2.0.0.0.35	synth with cache (only 1: induction l; only 1: simpl; only 1: intros Hneq; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: intro eq; only 1: intros _tmp_tactician0; only 1: auto with datatypes; only 1: intros H0; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.276091	26938	6714
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.047626	14164	2899
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.103688	41941	8272
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.130593	58667	3678
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.291746	73	34	0.0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.040508	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.279941	141383	9154
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.009707	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.248819	32949	5857
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.058362	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.063166	19352	3013
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.171575	73830	5716
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.064338	23024	7280
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.162443	66445	6828
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.355106	100222	3085
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.365584	49335	6795
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.208404	95782	15601
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.080616	30496	5041
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.117181	50242	5224
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	40.131805	58954	8463
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.038958	9657	1638
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.116686	39937	6571
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.096253	36745	6570
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.023672	6092	1899
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.357717	34872	3584
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	17.660639	16914	2107	2.1.0.2.0.3.8.0.22.13	synth with cache (only 1: induction n in m |- *; only 1: constructor; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.059184	19239	3704
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.064301	23498	5236
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.448815	210547	5659
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.058238	23482	3698
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.117459	52156	7446
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.195981	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	5.370870	4551	961	2.0.0.1.0.0.0.0.2.0.5.0.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: left; only 1: auto with arith; only 1: intros until m; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.004404	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	1.542010	729	258	0.0.2.1.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: elim (le_lt_dec n m); only 1: intros H; only 1: apply le_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.009216	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.012417	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.076222	29169	4825
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.081341	29624	5534
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.194034	92111	6327
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.064895	15680	5346
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.406491	29579	7135
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.049178	5178	1345
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.104237	43004	9281
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.037549	6	6	0.0.0.0.0.0	synth with cache (only 1: intros s; only 1: intros s'; only 1: intros x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	2.478125	1478	474	0.1.4.0.0.5	synth with cache (only 1: intro p; only 1: intros r; only 1: inversion 1; only 1: destruct p; only 1: firstorder  discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.017196	6	2	1.3	synth with cache (only 1: intros Hfst; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.130991	56690	7612
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.980397	1136	326	2.2.0.1.0.4.1	synth with cache (only 1: intros until l; only 1: intros a'; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: auto; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.351830	56097	5291
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	1.564782	928	264	0.0.1.1.0.2.2.1.0	synth with cache (only 1: intros until l; only 1: destruct l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.288802	50123	11598
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.034577	19	7	1.0.2	synth with cache (only 1: intros B; only 1: intros; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.319617	75924	8994
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.116109	65	27	0.0.4.1	synth with cache (only 1: intros y; only 1: intros R3; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.033884	9	7	1.0.0.1.1	synth with cache (only 1: intros n; only 1: simpl; only 1: intros l; only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.152256	37289	4741
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.046539	14102	5025
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.165852	62533	7415
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.361055	91855	2803
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.265920	48923	5432
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.099202	40353	6827
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.103210	44526	6466
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	10.154097	9624	1730	3.0.0.5.0.6.11.0.2.1.1.2.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	13.302648	7463	3446	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intros until n; only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: intros Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b; only 1: intros Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.098669	39690	4835
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.048375	16113	3381
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.030456	9137	2454
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.190196	87714	6537
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	9.224161	15511	1489	1.10.4.0.5.12.1	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| _tmp_tactician0 ll lx lr]; only 1: ok; only 1: destruct _tmp_tactician0 as [| ]; only 1: now auto; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.106159	17331	1177
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.670718	1342	334	4.0.0.0.0.2.0.3.2.0.2	synth with cache (only 1: intros until s1; only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.019891	4880	1747
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.782064	1780	322	0.3.1.3.0.2.8	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.349150	20903	2546
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.075132	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.084179	34021	7546
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	14.172400	21768	2118	16.3.0.37.1.91	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)); only 1: now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.054493	17547	5566
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	40.224191	43194	5888
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.078431	29092	9371
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.008382	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.006739	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.148589	67077	7186
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.010845	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.024826	8	4	0.1.3.0	synth with cache (only 1: unfold meq; only 1: intros until y; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.309979	22438	8524
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.061597	18721	9338
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.009527	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.030366	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.065540	24082	5705
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.027976	6779	3420
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.095178	38640	4406
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.076667	28187	5271
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.076952	27452	6250
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.214662	103705	5235
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.094162	39283	6760
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.169374	80427	2970
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	18.398282	16978	2612	0.0.1.7.0.0.6.10.0.2	synth with cache (only 1: intros H1; only 1: intros H2; only 1: Nat.le_elim H1; only 1: apply Nat.lt_le_trans with m; only 1: auto; only 1: Nat.order'; only 1: rewrite <- H1; only 1: generalize (Nat.lt_trans n m p); only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	22.181606	124065	2868	113.20.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.132947	53560	9093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.327322	18	11	1.1	synth with cache (only 1: rewrite <- even_equiv; only 1: now PeanoNat.Nat.nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.115206	46462	5882
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.077859	14040	8702
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.229047	50661	7167
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	3.058651	1010	154	15.0.0.1	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.078248	30051	5303
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.078428	28246	7811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.304997	28259	9349
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.185102	32465	9816
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.004694	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.039827	11995	3977
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.063284	24831	4761
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.078996	29563	7748
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.376407	896	42	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.374994	571	177	1.0.2.1.0.0.4	synth with cache (only 1: intros l'; only 1: inversion 1; only 1: subst; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.066467	22896	3973
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012052	2836	1070
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.304782	32914	5726
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.086076	28112	7786
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.076228	24869	7284
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.047955	13681	5524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.081000	29983	9111
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.070901	30470	3920
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.066487	24100	6534
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.072942	25179	8060
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.060710	20119	8061
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.090422	39215	4608
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.444468	78	50	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.024044	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.007262	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.081610	31924	8859
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.077517	19850	6435
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.847108	175	82	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.087992	32843	6310
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.054823	15190	3152
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.391908	128983	7462
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	6.074579	7400	1056	28.0	synth with cache (only 1: intros H; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	2.756178	1278	226	0.2.1.15	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: Nat.nzsimpl; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	19.373204	16978	3475	0.0.1.5.14	synth with cache (only 1: intros m; only 1: intros y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.264180	44114	7262
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	1.994626	785	149	0.1.16	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.010313	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.164742	74851	6810
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.218601	37662	9761
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	4.031138	2565	791	7.9.0	synth with cache (only 1: intros _tmp_tactician2; only 1: intros b; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.977977	244	108	0.2.4.1.0	synth with cache (only 1: destruct t as [| _tmp_tactician0 l x r]; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.069104	23829	8305
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.269308	38069	5591
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.051342	18578	8107
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	5.825840	4495	723	1.10.21	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.216094	28284	3692
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	0.412361	546	47	2.0.5.21	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.117923	55094	6822
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	2.365316	1327	339	0.0.0.0.0.0.1.1.0.9	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.046570	16348	4508
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.188013	17845	8360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.382708	56702	10283
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.082914	29895	8440
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.007895	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.134027	63918	4243
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.090132	35543	5473
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.013232	3504	1323
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.337180	26412	6353
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.063842	21961	7479
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.192973	24042	7330
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.039908	10429	4824
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.082300	35200	5872
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.067338	25524	8818
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.091250	34654	7666
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.066357	24120	7199
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.092290	34187	7962
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	1.529432	249	69	4.1.8	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	0.619013	107	56	0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: unfold add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.046565	14110	5435
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.065562	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.055244	9	5	1.2.1.0	synth with cache (only 1: intros H; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.245651	44737	6322
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	1.002168	592	186	2.1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m; only 1: intros Ha; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.100880	37227	6583
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.439837	68	30	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.047894	15250	4744
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.101034	43371	10919
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.036655	13	5	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.119891	48952	7255
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.260003	74655	8427
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.030355	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.009983	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.188978	90706	7182
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	1.069716	83	16	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.185877	91000	2697
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.048643	17480	2767
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.096623	39628	7963
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	18.066948	9736	2498	0.0.0.0.2.8.4.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: unfold add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.033029	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.062448	34	7	6	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	2.784766	2261	693	3.2.1.1.2.7.0	synth with cache (only 1: intros _tmp_tactician0; only 1: induction s; only 1: intuition_in; only 1: simpl; only 1: descolor; only 1: invrb; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.060085	11040	4947
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.137970	64601	3949
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.212834	39873	6955
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.165930	77050	5326
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.118281	51741	9973
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.053204	16481	5974
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	40.239446	18835	4570
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.164329	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.159448	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.095406	37005	11194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.470819	43657	5458
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	11.432656	12716	1616	3.0.1.0.3.22	synth with cache (only 1: revert m; only 1: intros p; only 1: destruct n as [| n]; only 1: intro H; only 1: apply le_0_l; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.091889	31599	6562
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	2.174826	1986	415	18	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.096678	38633	7033
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.092417	35084	7072
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.055918	16993	7641
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	18.718115	36835	3048	1.6.42	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.080073	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.332074	36	14	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.029398	9047	635
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.068220	23070	5496
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.706844	31	7	0.0.6	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.078083	28108	6792
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.310018	24512	7007
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.347771	25766	5365
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.065594	22	4	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.071635	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.075090	23658	5295
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.360556	140	60	0.1.1.1.0.0.0	synth with cache (only 1: intros x; only 1: intros Hm; only 1: intros y; only 1: intros Hnin; only 1: intros H1; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.058786	19016	7678
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	2.778853	2241	517	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.20	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.009652	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.008459	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	2.507565	2132	399	1.1.2.6.3.0.3.0.1	synth with cache (only 1: destruct n; only 1: intros _tmp_tactician0; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intro Hn; only 1: rewrite <- Pos2Nat.inj_succ; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	39.082216	36062	6530	1.1.0.26.7	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.047867	15191	6384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	11.100865	3675	1875	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: intros Hn; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.061712	19054	6527
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.052380	16599	3734
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	16.195783	7911	2800	0.1.1.2.1.0.0.0.0.0.2.2	synth with cache (only 1: unfold meq; only 1: intros until x; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.087862	34833	8882
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	40.082590	31307	8668
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.079331	30442	7036
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	15.160835	11140	1583	0.2.0.0.0.9.0.0.0.0.1.1.0.0.1.0.1.57	synth with cache (only 1: revert m; only 1: destruct n; only 1: intros m; only 1: now Z.nzsimpl; only 1: intros; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: intros m; only 1: destruct m as [| m| m]; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.214179	63819	8749
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.029489	4	4	0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.167131	76044	6531
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.519489	566	310	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.133691	63741	5162
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.096644	39613	4839
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.102266	45197	7649
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.159599	18793	9716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.025617	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.119277	47952	12873
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.181739	26661	7483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.161062	21415	4597
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.138249	31512	13023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.171388	20785	10096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.149453	39783	8097
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.129281	53392	7236
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.041923	11809	3996
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.129008	59565	5362
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.107554	42647	6437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.240554	22032	4756
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.025091	7948	895
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.165921	69358	5477
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.119469	50575	8973
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.062969	20374	7705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.291688	9014	4873
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	6.947231	428	206	0.0.0.1.0.2.0.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite mkmult_pow_ok; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.198725	13255	4937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.275348	81005	5997
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.222789	35262	7846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	1.850008	1277	435	2.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold sgn; only 1: intros n; only 1: destruct (compare_spec 0 n); only 1: intros H2; only 1: order; only 1: intros Hn; only 1: rewrite <- le_succ_l in Hn; only 1: rewrite <- one_succ in Hn; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.031584	5792	2867
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.056081	17843	5538
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.107982	44381	8597
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	4.880355	2024	813	0.0.0.2.10	synth with cache (only 1: intros a0; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.144558	34446	9450
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.264418	57717	6642
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.041745	10695	4758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.112111	46305	9352
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	2.777693	740	404	1.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b); only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.149801	63963	5375
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.132864	13598	7809
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.067560	22594	5711
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.224425	52739	5638
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.289735	85263	4606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	40.060716	19567	10323
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.129093	55171	12302
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.172958	27954	9715
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.103968	38996	15556
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.244043	43350	8828
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.953682	242	159	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.125982	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.050433	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.021356	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.391645	9724	3759
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.309608	467	242	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.090278	34530	8912
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.269244	32	19	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.112021	49330	4827
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	40.037807	6764	2158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.158476	27085	8574
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.121611	49333	7049
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.085732	32848	7217
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.082335	29498	7624
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.017584	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.087640	35661	10373
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.273675	3819	217	3.6.32	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (e, abs); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.200535	134	25	11	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.139452	26001	7954
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.286742	13793	7198
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.011737	2753	1129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	23.587545	10683	5748	0.0.0.1.0.0.0.1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.197777	39161	5879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.908789	738	396	0.0.0.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.059731	20457	6491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.355576	66831	2539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.839970	578	178	0.13.2.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: rewrite <- opp_nonneg_nonpos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.052487	13739	5607
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.100600	38811	8056
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.215343	20827	6899
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.077614	26858	7576
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.038430	10793	3083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.201762	36084	7318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	40.160057	15835	7403
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.075192	29524	5161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.101478	17534	8384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	8.236099	3103	1670	0.0.5.0.3	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.441013	147	67	3.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.172718	23998	1514
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.091358	32640	7012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	3.115534	1253	637	0.0.0.3.1.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intros Hb; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.183805	17684	5406
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.263034	462	254	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.221779	103998	20549
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.066122	22651	9039
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.075587	25138	9415
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.013314	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	13.072511	61912	1878	1.3.16.52.5.8	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (p, ?, ?); only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl'; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.282451	27941	5788
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.188236	26499	7338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.123400	16539	5505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.063527	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.071235	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.093666	36422	5978
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.334500	1025	212	1.0.0.0.0.0.10	synth with cache (only 1: induct ltac:(n); only 1: intro H; only 1: reflexivity; only 1: intros m; only 1: intros n; only 1: intro; only 1: false_hyp ltac:(H) nle_succ_0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.167333	14695	6170
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.145696	63499	8664
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.111486	17869	6725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.076253	28809	6002
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.094771	35432	8541
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	11.985115	5980	2999	0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.072137	22258	8605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.207417	25266	6575
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.210372	40526	7578
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.007542	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.155510	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.092957	4	1	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.562199	352	90	1.1.0.0.0.5	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: intros H; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.008366	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.021731	2	2	0.0	synth with cache (only 1: unfold Pos.ltb; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.073304	25412	7801
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	7.357814	4024	1840	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.024076	3	1	2	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.009893	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.210397	9894	3002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	11.790562	5080	2190	1.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite max_l; only 1: rewrite max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.092065	16651	7143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.170305	33554	6611
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.039510	10340	5091
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.677501	1108	156	8.6.0.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.063027	20419	5625
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.228896	24352	8737
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.057458	16582	5143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.204258	23253	4056
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.204671	46135	8400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.247415	6131	1952
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.139782	20926	7147
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.230939	41331	5161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.167296	16168	5044
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.938787	202	121	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.247983	6123	1813
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.178085	21205	8792
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	4.390248	5213	707	1.1.4.3.12.13	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: intros IH; only 1: Nat.nzsimpl; only 1: intros _tmp_tactician2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.249576	110083	3635
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.042981	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.083771	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.156490	18484	7554
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.542795	131577	9118
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.443651	26840	5447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.140012	15616	6021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	40.056591	14836	8734
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	22.698376	9968	3309	0.1.0.2.0.0.1.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: order; only 1: now rewrite <- sub_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite max_l; only 1: rewrite min_l; only 1: order; only 1: now rewrite <- sub_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.187213	85647	4166
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.080781	31206	5862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.152864	23748	5392
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.093617	37912	7981
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.083122	28673	9520
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.143580	24126	6464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.023799	10	5	0.1.1.0	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.066263	21978	9782
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.102414	42685	8134
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.007463	1	1	0	synth with cache (only 1: now injection 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.028529	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.016430	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.044632	11	5	4.0	synth with cache (only 1: unfold Pos.le; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.014742	5	2	0.3	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.005885	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.013296	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	21.286375	5994	2439	1.0.0.0.1.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite max_l; only 1: rewrite max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.178053	16570	8140
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.149896	20275	4880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.173479	26209	6052
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	7.714256	3996	1240	0.2.0.1.2.0.0.3	synth with cache (only 1: intros Ha; only 1: induct ltac:(m); only 1: now nzsimpl; only 1: intros n; only 1: nzsimpl; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	17.545993	4524	2523	0.0.4.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.245608	29	16	2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.831422	333	184	2.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.152031	516	313	2.1.1.2	synth with cache (only 1: intros n; only 1: intros H1; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.145941	30779	5533
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	36.366574	36832	6387	0.0.0.0.1.1.3.0.4.4.0.3.1.6	synth with cache (only 1: intros until l; only 1: intros b; only 1: induction l; only 1: intros H; only 1: now f_equal; only 1: destruct l; only 1: simpl; only 1: intros Hnth; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite IHl; only 1: reflexivity; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.089595	33394	7231
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.058131	18521	9381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.062097	19342	7203
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.054198	18591	5986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.228353	19037	7280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	5.706206	2954	705	2.4.2.5.3.0	synth with cache (only 1: intros m; only 1: split; only 1: intros Hp; only 1: apply lt_gt_cases in Hp; only 1: now nzsimpl; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.243816	26462	7983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.260219	5248	1762
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.146154	17731	6769
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.152727	20760	8571
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.247416	27550	8143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	3.866735	3778	703	3.8.5	synth with cache (only 1: intros H1; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.200459	25128	7055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.083056	18172	6570
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.062705	16785	6596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.365582	42942	6607
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.268493	38360	6576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.065178	21683	8448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	40.195210	13099	6332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	24.529908	15199	4100	0.0.0.1.0.1.0.3.4.0.1.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros H; only 1: apply testbit_false; only 1: rewrite div_small; only 1: apply Private_NZDiv.mod_0_l; only 1: order'; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: generalize (log2_nonneg a); only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.092635	34958	6418
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.092380	34280	6050
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.058198	19305	6482
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.997437	3685	403	0.0.0.0.0.0.0.0.1.0.0.13.39	synth with cache (only 1: simpl_relation; only 1: intuition; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	16.493635	11203	1675	1.1.0.1.21.1	synth with cache (only 1: intros m; only 1: destruct (lt_trichotomy m 0) as [H2| _tmp_tactician0]; only 1: intuition order; only 1: destruct _tmp_tactician0 as [H2| H2]; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.061829	18882	7021
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.221249	39312	7400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.072917	21948	9050
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.116202	54912	3950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.212397	8560	2371
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.071642	24777	6779
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.095109	35641	8761
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.163815	28214	7257
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.247704	10565	3504
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.092238	33571	7135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.157935	13091	4695
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.163000	16482	9156
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.050211	14150	6292
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.026322	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	2.769365	694	542	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros A_wd; only 1: intros A0; only 1: intros AS; only 1: intros n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.083799	31887	6752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.060789	19172	7190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	4.170167	1580	557	7.4.0.2	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	28.808420	9708	4939	0.0.0.3.0.0.0.0.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_l; only 1: order; only 1: rewrite max_l; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.188141	19842	2153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.208853	19505	5938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.202897	21875	8438
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.067877	18436	7311
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.123883	42060	8062
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.110527	18723	6707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	5.476437	1711	936	0.3.3.3.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.050322	8	6	0.0.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.126751	20322	6628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.100633	12259	3360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.224333	32666	8337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.108003	15956	3974
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.049826	7	6	0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	10.722447	926	232	0.0.0.0.1.0.0.0.8.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.157063	17148	4440
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	4.574411	1504	762	1.0.0.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.068091	24024	7276
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.071518	22925	6880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.150421	24934	6170
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.112972	19438	7349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.545135	1821	795	0.0.0.1.6.1.1	synth with cache (only 1: intros H; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.288845	96633	5984
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.135760	20029	8374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.068955	22547	7878
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.132758	21340	5789
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.114157	50622	2196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.011464	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.181107	9310	3442
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	11.326539	7223	2552	0.0.0.9.0.2	synth with cache (only 1: intros x; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.127721	20776	7158
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.132732	15034	7655
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.015621	5	2	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.657984	430	216	0.0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.062393	20218	6899
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.101380	38643	5528
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.059542	16977	5402
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.126564	26717	9058
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.174299	75130	7208
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.060383	21133	6150
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.146407	19709	6400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.190316	24688	3987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.014531	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	40.089934	12073	6214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.286808	100145	2613
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.071902	22012	8253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.159499	33024	5190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.166399	24440	7857
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.143305	26086	4823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.133593	20333	4516
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.112130	14105	3637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.071933	26968	6694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.153964	14280	4328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	1.308241	326	151	0.0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m; only 1: intros Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.068416	25117	6802
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.079369	32944	5920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.092140	37280	5719
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.133543	17664	8348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.131736	51057	5854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.086364	38771	3833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	27.693857	6078	3749	0.1.2.2.0.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros Hn; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.053483	14211	8737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.191424	27449	6696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.166395	67325	8314
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.095041	40752	4841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.952994	439	230	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.692499	3856	595	0.0.0.10.10.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.274016	13925	4094
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.112211	44731	8448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.170915	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.095539	24672	7864
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.079384	29264	9522
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.117796	90	16	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.138801	39	18	2.0.0.1.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.099177	37100	6966
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.059485	18350	6072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.182194	24737	10160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.096407	38054	6878
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.054569	19485	5408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.164690	18948	6410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.271667	49033	6310
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.101394	28620	8143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.093727	14524	7453
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.444086	113490	5287
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.008313	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.131872	38091	7674
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	1.054998	311	111	1.0.0.3.0.1.0.7	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.095951	18966	7696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.072404	23999	7626
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.041992	12637	4116
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.034956	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.104436	29084	6844
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	28.454911	60287	2091	0.1.4.0.0.16.24.25.29	synth with cache (only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: apply Pos.eqb_eq; only 1: unfold Z.pred; only 1: destruct x; only 1: now apply Pos.eqb_eq; only 1: rewrite Pos.eqb_eq; only 1: now destruct p; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.029343	3	3	0.0.0	synth with cache (only 1: intros n; only 1: intros x'; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.149576	12882	4813
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.123394	24	5	7	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.081810	32644	6763
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.150878	25651	5850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.961258	618	223	3.1.6	synth with cache (only 1: intros B; only 1: intro A; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.043778	12879	6077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.059894	18541	6947
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.228435	16262	7935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.111477	524	293	0.0.1.1.1.0.2	synth with cache (only 1: intros ?; only 1: intros y; only 1: intros z; only 1: intros Hxy; only 1: intros H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.092846	38410	7097
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	31.245886	15554	5053	2.0.0.1.0.0.0.0.0.0.0.1.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite min_r; only 1: rewrite min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.073511	18203	1199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.051061	14768	6709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	7.114656	2636	968	0.0.2.0.2.0.1.1.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.070432	23947	9150
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	2.707557	806	575	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc; only 1: rewrite (mul_comm b c); only 1: rewrite <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	2.122610	1369	273	3.8.0.4	synth with cache (only 1: intros _tmp_tactician0; only 1: apply divide_antisym; only 1: apply divide_0_r; only 1: apply divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.048320	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.877971	211	87	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	11.697358	4053	1897	0.0.0.0.1.0.1.0.0.2.1	synth with cache (only 1: intros m; only 1: intro; only 1: intros n; only 1: intros p; only 1: rewrite <- add_assoc; only 1: rewrite <- add_assoc; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.035209	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.093519	28242	5363
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.007777	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	2.448335	1016	474	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.055788	18353	9477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.278117	746	306	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.137357	11123	4236
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	3.006789	1153	470	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.060567	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b); only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.008816	4	2	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.175382	17785	6811
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.170673	78178	12211
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.093999	33223	6509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	5.607076	6989	1396	6.19.4.4	synth with cache (only 1: intros m; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	40.047454	13863	6739
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.123079	47867	6895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	9.483594	5253	1535	0.1.6.0.5.0.0.7	synth with cache (only 1: intros p; only 1: apply lcm_unique; only 1: trivial using gcd_nonneg, abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros Hp; only 1: intros; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.059769	21112	5943
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.032560	10041	2880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.136892	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.043909	11997	4895
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.112359	42374	9744
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	5.169040	1437	289	10.0.0.1.0	synth with cache (only 1: intro n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	5.815115	3280	1165	4.0.3.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros H; only 1: intros Hn; only 1: intros m; only 1: now rewrite <- H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	4.081089	1077	524	0.2.0.0.1.0.1.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.109453	7907	2559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	6.071113	1792	1037	0.3.0.1.3	synth with cache (only 1: intros a; only 1: intros m; only 1: intros H1; only 1: apply NZQuot.div_pos; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.071905	18757	3233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.146028	34381	7884
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.238991	23014	7983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.160781	16406	5907
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.060198	20121	9283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.183672	17584	3857
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.183979	82941	4333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.148448	28839	5942
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.045897	12759	6846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.068187	19822	7696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.241659	17311	8077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.105757	47666	5441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.233887	107396	12800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	14.579623	3493	2680	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec; only 1: rewrite <- odd_spec; only 1: destruct (odd n); only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.066601	23172	6418
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	15.870068	3550	1632	0.2.0.0.0.0.4.0.1	synth with cache (only 1: intros p; only 1: intros m; only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.206071	93622	11399
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.009302	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.106299	25020	5909
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.534116	223	34	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.727464	221	24	5.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	2.509460	1794	553	1.7.0.1.1	synth with cache (only 1: intros m; only 1: intro n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.297013	18524	4668
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.075878	26963	8799
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.107362	6170	2032
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	5.080688	2262	102	0.53	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.014243	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.005485	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.006512	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.011074	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	40.046122	11210	5542
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.541560	270573	8771
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.055543	15265	5986
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	5.056478	5731	1119	0.4.15	synth with cache (only 1: unfold not; only 1: red; only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.011174	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.118888	43990	7420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.145660	15742	6490
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	19.984900	10922	4696	0.0.0.0.0.1.4.2.1	synth with cache (only 1: intros m; only 1: intros x; only 1: intros n; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: apply lt_le_trans with (m + p); only 1: now apply add_lt_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	8.406350	2528	1406	1.3.3.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros n; only 1: rewrite (mul_comm a); only 1: rewrite (mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.202438	20102	6776
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.069224	23940	7781
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.261555	18087	3977
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.153620	66183	10328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.144783	62018	8702
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.046697	15195	6834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.063742	19006	8614
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.063384	20943	6994
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.134502	15591	6991
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.234055	20631	6293
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.101437	26151	12038
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	5.525558	2159	999	1.4.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.018031	10	3	2.4	synth with cache (only 1: intros A; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.063193	19769	5987
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.010181	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.082470	28980	6636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.047032	12916	6948
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.150228	24722	9127
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.182716	23096	8047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.150333	66993	11168
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.054195	19197	5762
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003561	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.008556	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.013805	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.182591	77674	5145
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.057325	18896	4120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.193631	545	91	0.0.3.8.4	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.633816	199	44	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.131719	47065	13769
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.008111	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.999483	1396	342	8.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.110193	23686	6841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.074230	13	7	0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	4.888163	2084	1368	0.0.0.6.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006728	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.016532	4	4	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: intros y; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.012749	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.021001	6	3	1.1.1	synth with cache (only 1: hnf; only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.070572	21654	6755
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.763123	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.624729	136	80	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.172822	75997	9906
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.160578	64742	11337
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.309860	58239	4028
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	2.255257	1136	574	5.5.0	synth with cache (only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	26.020216	10178	3986	0.0.0.0.0.0.0.2.5.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low; only 1: rewrite testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.241578	75209	6176
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	34.947811	49071	6416	0.6.13.0.1.0.1.0.14	synth with cache (only 1: intros x; only 1: induction x as [| a l IHl]; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite <- app_assoc; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.078762	13	10	2.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.438262	485	220	0.0.0.0.0.0.5.0	synth with cache (only 1: intros until l; only 1: induction l as [| x l]; only 1: simpl; only 1: intros; only 1: auto; only 1: intros; only 1: simpl in H; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.210128	98199	8204
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.024711	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.012133	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.012124	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.177401	20396	6083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.061232	18101	7137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.046491	13299	6079
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.200986	14317	5756
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.159699	69739	6846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.067992	22925	5215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.291641	52	29	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.082407	26985	6905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	5.532718	1857	1045	0.0.3.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: symmetry; only 1: now apply add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	23.628377	11285	2127	0.1.2.3.7.0.0.0.3.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: apply lt_le_incl; only 1: apply lt_1_2; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	4.130321	3594	961	0.0.0.4.0.4.1.5	synth with cache (only 1: intros x; only 1: intros P; only 1: intros y; only 1: intros f; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.076158	25188	9004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.132535	8876	4459
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.037910	7	7	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.185279	18071	8360
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.067331	21335	7267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.115990	21445	9398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.052311	14983	5227
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	0.091177	16	6	0.2.1.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	0.354753	79	28	1.1.1.2	synth with cache (only 1: intro n; only 1: rewrite shiftl_mul_pow2; only 1: rewrite two_succ; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.056875	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.048194	7	4	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.095384	38827	6328
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.011194	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.062841	20234	8070
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.104286	41540	7656
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.098094	26715	7470
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.151434	56210	4920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.051601	13603	6448
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.073418	13806	401
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.142878	53417	18021
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	2.250567	1669	523	0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n); only 1: rewrite le_lteq; only 1: intuition; only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.141229	21131	5926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.953809	205	84	4.2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: rewrite <- add_sub_assoc; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.950730	249	90	3.2.1.0	synth with cache (only 1: intros n; only 1: intros p; only 1: rewrite add_comm; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.093420	16969	6233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.024071	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.367564	185417	11914
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	9.664434	11585	955	0.37.1	synth with cache (only 1: intros; only 1: destruct r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.314159	151224	10195
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.432356	18201	1487
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.022167	7517	1650
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.007612	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.006383	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.086719	17	15	3.1.0.0	synth with cache (only 1: intros B; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.051053	16219	6681
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	25.574269	21092	5828	1.0.0.1.12.0.2.2	synth with cache (only 1: intros until x; only 1: intros s1; only 1: intros s2; only 1: intros H1; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.023543	4	4	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.094302	39305	2380
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.116452	43449	5107
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.077129	29388	7842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.085967	31676	8154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.130581	22366	6666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.050787	14191	5932
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.120038	15546	5960
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	3.869596	2298	864	0.0.0.0.0.0.0.0.2.2.0.2	synth with cache (only 1: intros B; only 1: intros C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.110379	33546	11756
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.053981	20169	1802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	3.913911	3680	1220	0.0.0.1.0.0.5.0.0.0.4.0.18	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intros m; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.045016	13469	5254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.095010	36257	5719
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.175228	12563	5383
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	1.826967	1007	351	0.2.2.0.0.0.0.1	synth with cache (only 1: intros y'; only 1: intros m; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	20.351330	8138	6066	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros R; only 1: intros Sym; only 1: intros f; only 1: intros Hf; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: red in Hf; only 1: red in Hf; only 1: red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.179186	13471	6689
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.074027	22355	6359
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.161045	17843	5673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.057159	18103	6145
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.156072	68133	6496
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.084859	25439	5424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	7.273756	3293	909	0.3.2.6.2	synth with cache (only 1: intros p; only 1: intros y; only 1: intro n; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.139499	22135	6009
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.113721	13424	6892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.086252	15883	6360
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.052330	13176	1563
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.460305	337	77	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	3.402967	948	471	0.2.1.4.0	synth with cache (only 1: intros n; only 1: intros p; only 1: intros m; only 1: rewrite add_comm; only 1: now rewrite (add_le_mono_r _ _ p), sub_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.763651	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.022937	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.027797	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.006183	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.012764	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.364999	107	51	3.2.0.0	synth with cache (only 1: reduce; only 1: unfold relation_equivalence in *; only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.111400	45366	6955
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.008668	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.078147	143	11	17	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.021786	38	4	10	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.021930	6	5	1.0.0.0.0	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.051453	15351	6194
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.058235	17613	7776
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.143986	63638	2815
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.057290	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.422055	41955	3286
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.864701	465826	13040
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	40.935906	487698	5856
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.009366	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.016564	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.040212	9985	4749
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	37.455737	10675	3490	1.0.0.0.1.1.0.3.3	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.008184	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009814	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.021782	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.012777	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.007171	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.008522	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	40.061811	20815	8925
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.049848	15026	9508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	4.933023	2123	737	2.4.3.3.0	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: now nzsimpl; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	0.280358	58	21	2.0.2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: now nzsimpl; only 1: order_pos).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.071539	25413	9794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.116625	19365	5445
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.045891	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.022508	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.151430	65258	8160
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.119047	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.161936	75020	11683
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.059986	21086	8272
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.071087	27148	7229
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.030437	4	4	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.050925	11	6	2.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	7.099543	68877	1901	2.0.5.2.74.13	synth with cache (only 1: intros x; only 1: exists x; only 1: split; only 1: intros H'7; only 1: intros H'; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.029116	5	4	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.111512	48	20	4.0	synth with cache (only 1: intros x; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.238125	95	17	0.0.0.11	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.161816	63371	6280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	40.050101	14432	7641
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	41.430778	770841	7403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	1.966284	613	261	0.0.1.2.2.0.0	synth with cache (only 1: intro n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	40.075502	24098	9445
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.048255	5844	2040
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.101626	39215	6696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.218556	16267	4767
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.204271	43	27	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.005309	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.904169	234	147	0.2.1.1.0	synth with cache (only 1: split; only 1: rewrite (mul_comm r); only 1: rewrite (mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	3.226800	1485	646	0.0.1.0.0.1.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l; only 1: apply divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	4.105278	2719	678	0.0.0.0.0.2.0.0.1.0.0.2.0.3	synth with cache (only 1: destruct p; only 1: intros H; only 1: exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.032284	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.059317	20456	5456
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	31.050907	12187	4795	0.0.1.3.0.1.1.3.1	synth with cache (only 1: intros m; only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: apply add_move_l; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.135542	44	13	4.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.027455	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.068094	18426	7424
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.080610	28279	8839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.052858	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.989563	1303	318	4.2.2.4.1.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.011879	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.020526	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.007984	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.008083	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.006418	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.017316	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.008525	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.008096	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.005313	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.112467	47	25	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.005850	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.028756	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.026204	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.014406	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.087421	32877	6473
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.005017	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.008360	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.007863	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.023402	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.010580	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.016734	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.077406	19485	7478
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.015631	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.040683	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.011678	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.021349	14	3	4.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.052433	10939	5583
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.223617	198	39	8.2	synth with cache (only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.264486	112	26	9.1	synth with cache (only 1: destr_bool; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.012051	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.021090	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.018542	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.059141	33	13	0.4.1.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.185513	26111	9332
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.061118	21075	6126
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.295591	145806	8295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.052303	18106	7605
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.350823	167938	11750
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.023673	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.524013	48434	1705
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.263970	125978	9635
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.009264	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.604019	303808	9969
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.938417	932	184	4.6.3.3	synth with cache (only 1: intros H1; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.136771	72	22	1.0.2.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: intros H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.091633	26705	13836
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.129977	55241	7405
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.052024	15855	5853
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.418622	208861	8864
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	28.707552	19135	7167	0.3.3.1.9	synth with cache (only 1: intros x; only 1: intro n; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.078619	27949	10893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.061828	16	7	0.0.0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.081241	30198	8596
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.069392	24281	10032
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.188490	80789	16380
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	9.735151	122507	732
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.059606	19840	11825
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	18.475943	20682	2135	1.0.12.2.16.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: apply (well_founded_induction_type Rwf); only 1: intros; only 1: rewrite F_unfold; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.060271	20626	9155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.063006	23752	7458
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.256333	122089	5020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	1.513801	776	327	0.5.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: now apply lt_le_incl, lt_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	13.321120	13166	2741	0.0.0.6.5.7	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (lt_eq_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.258332	17722	5364
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	9.620915	4987	2209	4.2.4.0.1	synth with cache (only 1: intros x; only 1: intros B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.296066	148080	16933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.056305	12	9	0.0.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.032050	18	9	1.3.1	synth with cache (only 1: hnf; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.023536	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.038887	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006824	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.057346	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl in *; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.148470	29213	10879
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	10.908055	30859	2499	0.32.2.2.5	synth with cache (only 1: intros z; only 1: intros H1; only 1: intros H2; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.055611	17592	5685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.099501	39516	6505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.036625	10170	5264
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.121368	48603	12684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.065294	23386	6043
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.069923	17528	7200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.062309	20236	9335
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.142324	13346	4740
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.226206	105186	15393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	2.268769	1175	521	0.3.0.0.0.0.2	synth with cache (only 1: intros b; only 1: intros Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.051900	17899	4659
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.013000	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.139845	59241	7006
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	13.847807	5695	3517	0.1.0.0.0.0.1.0.0.1.0	synth with cache (only 1: intros b; only 1: intros C; only 1: intros x; only 1: intros H'0; only 1: red; only 1: intros x2; only 1: intros H'; only 1: induction H'; only 1: auto using (Add_intro2 U) with sets; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	3.477477	2290	684	0.0.0.5.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.068608	20123	9037
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.818538	993	460	0.0.0.0.3.0.0.0.2	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.007568	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.432261	29402	2127
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.120205	49516	9447
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.062862	17	4	3.1	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.271168	125610	10686
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	2.055527	18014	606	1.49.27	synth with cache (only 1: intros H0; only 1: apply H0; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.071727	24590	8570
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.047120	14991	4203
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.521859	272313	16915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.070573	23606	10105
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.008511	10	3	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.031293	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.170902	71934	13474
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.095618	33627	10829
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.012005	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	40.029614	8717	4428
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.031386	7	6	0.0.0.0.0.1	synth with cache (only 1: intros y; only 1: intro X; only 1: intros z; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.041330	11393	7592
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.099651	37720	10610
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.306914	155518	6286
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.013028	10	3	0.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.015320	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.103054	43975	8369
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.023459	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	40.063287	10454	3288
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.191653	13264	5951
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.098009	42389	7101
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.222469	9	7	1.0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: red in poe; only 1: red in poe; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.185944	87588	6319
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.184476	77511	17653
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	3.067723	4280	1258	1.0.1.0.1.0.1.0.0.0.1.1.1	synth with cache (only 1: intros A; only 1: intros y; only 1: destruct 1; only 1: red; only 1: split; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.069622	21268	7034
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.063346	21834	5772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.066153	17389	6578
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.122150	52008	7163
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.084385	29409	8868
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.050782	16732	9975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.096894	23048	6972
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.190544	82896	15529
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.108104	40687	8424
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.011934	14	3	4.1	synth with cache (only 1: intros R; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.060387	19121	9772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	2.584243	1221	388	1.0.1.7.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: nzsimpl'; only 1: rewrite <- one_succ; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.032420	12	8	1.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros A; only 1: intros a; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.243101	115938	15558
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004611	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.013136	9	4	3.0.0	synth with cache (only 1: hnf; only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.019291	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.030169	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.008942	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.020216	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.102607	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	4.337864	79841	685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.070769	22644	10404
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	6.820661	4623	922	0.0.20	synth with cache (only 1: unfold lt; only 1: unfold gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.010039	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.086509	21	6	0.0.1	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.026268	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.735754	2425	190	0.2.31	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.053380	45	13	0.7	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.006562	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.110852	42657	9429
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.359473	418	110	2.0.3.8	synth with cache (only 1: intro x; only 1: intros H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.372138	72895	3593
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.026196	6	6	0.0.0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intros until b; only 1: destruct b as (a1, a2, _tmp_tactician0); only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.636706	637	62	0.16.9	synth with cache (only 1: intros H0; only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.013554	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.350627	153239	11847
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.293698	581	51	4.4.21	synth with cache (only 1: exists f; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.197926	89406	17433
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.357910	659	113	4.5.3.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p; only 1: destruct q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.172618	97	50	1.0.1.0.0.1	synth with cache (only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.088197	33804	8858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.064527	21070	6927
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.074417	23907	9364
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.108234	42241	12316
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	28.787159	15940	3504	0.1.3.0.0.14	synth with cache (only 1: unfold decidable; only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.011366	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.012920	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.773507	198	121	0.0.2.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.152819	66372	14692
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	3.982733	3502	1491	3.1.0.1.4.1	synth with cache (only 1: intros ?; only 1: intros z; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.160768	76850	1993
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.081025	28173	10218
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.014817	15	7	2.1.1	synth with cache (only 1: intros until n; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	40.044198	10498	7082
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.261939	410	77	1.0.1.9.2	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.159821	73113	11977
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	7.689422	12274	2870	0.0.0.0.0.0.7.0.0.0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	40.219505	100728	14506
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.069427	24707	8128
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.145976	59647	15212
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.088688	32983	12312
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.195567	89954	12415
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.140802	57511	14818
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.093526	36542	8004
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.074160	25365	6125
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	1.741335	1239	533	1.1.2.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.043475	28	10	1.3.1	synth with cache (only 1: intros B; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.099921	28472	8004
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.154038	78	36	1.4.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: destruct 1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.025420	4	4	0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.934680	1206	304	0.0.0.7.0.0.1	synth with cache (only 1: intro; only 1: red; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros C; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.010446	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.064037	21572	6704
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.006366	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.211595	236	105	1.2.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.017260	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	7.799201	8234	2049	3.0.0.0.0.0.0.2.0.1.2.0.0.0	synth with cache (only 1: intros A; only 1: intros eq_dec; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.092685	20944	5855
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.007450	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.030961	200	99	0.0.1.0.0.0.1	synth with cache (only 1: intros C; only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	40.157759	68735	18349
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.012114	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	13.675360	29068	4908	2.31.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.079369	29500	10426
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.014725	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.063169	19826	7972
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	16.711173	34435	7171	1.4.0.0.1.3.0.10.1	synth with cache (only 1: intro z; only 1: intros H2; only 1: intros B; only 1: intros _tmp_tactician0; only 1: intros C; only 1: destruct H2; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.012699	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.056207	18000	8463
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.111130	42686	10865
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.025925	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	2.964461	1808	634	0.0.1.0.1.4.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.429139	109	57	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.076410	27463	9848
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.892229	298	157	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x xs]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.372274	156793	6634
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.274767	129050	16860
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.979986	506113	10005
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.176573	78889	13789
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	3.491185	1629	691	0.0.0.2.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	11.764281	39670	5193	0.1.2.12.31	synth with cache (only 1: intros H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.142241	62670	14260
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.535743	932	243	0.1.2.6	synth with cache (only 1: intros x; only 1: intros z; only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	5.308478	4274	1227	2.2.1.8.10	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.015837	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.052887	8556	2537
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.599524	277	90	0.0.0.5.2	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.043249	16	5	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.036205	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.105880	15	8	0.4.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.089679	34813	5557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.031714	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.073014	26466	6594
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.050204	17593	3790
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	18.554810	55525	5615	4.55	synth with cache (only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.060685	56	10	3.5	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.070255	23196	7308
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	13.299842	10974	4764	12.0.2.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros A; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	40.113542	45353	20699
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.055865	47	17	0.0.0.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: now apply Ext).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	1.122820	260	79	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	4.550022	6047	1064	0.0.6.8.1.6.4.2.1.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.075949	28014	6975
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.183711	82346	13633
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.204032	90715	14322
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.058331	18385	6649
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	6.873647	13626	5927	2.2.0.0.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.100442	36552	14670
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	41.719065	906454	8625
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.272078	275	62	0.0.0.0.0.0.6.2	synth with cache (only 1: split; only 1: split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.016252	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.015409	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	0.053072	5	3	0.0.2	synth with cache (only 1: destruct b3; only 1: by case b1; case b2; constructor => //; case; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	0.224711	11	4	0.0.5	synth with cache (only 1: destruct b5; only 1: by case b1; case b2; case b3; case b4; constructor; try by case; only 1: by case b1; case b2; case b3; case b4; constructor; try by case).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.084374	32567	9503
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	2.886040	23461	1014	0.0.3.67.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 ?]; only 1: destruct _tmp_tactician2 as (x, Hx); only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.022360	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.027046	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.087848	33085	5692
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.083174	32886	5945
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.379915	182635	11999
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.197524	93159	15651
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	40.521295	250510	44623
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.374672	85879	4067
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.014437	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.004033	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.019469	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.007423	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.004064	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.008163	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.010756	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.026696	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.025658	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.027909	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.018747	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.008325	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.008233	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.008988	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.007257	6	1	5	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.006039	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.005930	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.009761	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.010053	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.010484	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.006708	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.076528	25930	7945
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.080057	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.016343	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.013635	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.012653	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.018033	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.011980	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.056188	17694	8852
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	3.807780	8461	748	12.19.14.15	synth with cache (only 1: intros Hx''; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.134538	254	22	3.18	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.009872	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.427941	211050	11078
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.070382	23400	6947
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.131305	59046	14549
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.035001	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.248462	109465	7346
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.226593	112517	15841
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.011449	6	3	0.2.1	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.008602	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.004637	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.070549	25756	6646
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.150707	65828	7535
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.085006	31842	7336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.067691	20483	7372
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	27.443700	44932	9073	3.7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: intros H; only 1: apply clos_rt1n_rt; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.078045	23999	7254
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	40.055122	16453	4444
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.089704	35565	5745
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.070147	25330	6368
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.058949	12	8	2.0	synth with cache (only 1: unfold lt; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.023406	3	2	0.1	synth with cache (only 1: apply not_iff_compat; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	3.127797	1336	530	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.111990	49679	5679
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	40.522775	261514	4659
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.242237	108190	9678
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.618329	652	97	2.15.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.042449	11107	7570
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.246780	107767	18669
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	3.781080	3063	719	1.2.5.0.12	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.095567	35105	9935
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.161426	70328	23222
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	1.463363	1925	864	0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.368528	5402	1132
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.094795	37391	7593
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.047257	14035	6523
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.049754	14592	4237
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	41.042260	552486	5169
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	22.665790	10918	3779	1.5.1.4.3	synth with cache (only 1: intros f; only 1: intros H; only 1: intros until l; only 1: rewrite filter_map; only 1: apply ext_in_map).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.458762	234061	12837
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	13.096614	31125	5202	1.1.4.3.0.1.3.0.20	synth with cache (only 1: intros b; only 1: intros until n; only 1: induction n; only 1: intros n; only 1: auto; only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.126770	52441	13549
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.227743	100620	24049
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.006140	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.006560	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.006299	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.255800	199	87	0.2.1.0.1.0.0	synth with cache (only 1: intros A; only 1: intros ?; only 1: intros B; only 1: intros C; only 1: intros h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.059980	99	19	0.6.2	synth with cache (only 1: intros h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.010394	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.017792	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.024583	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.009894	3	3	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.008674	3	3	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.016463	3	3	0.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.040092	33	9	0.0.5	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.047518	13825	6028
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.017419	4	3	0.1.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	0.463149	118	29	0.8.2	synth with cache (only 1: rewrite <- compare_le_iff; only 1: unfold le; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.193731	84777	11807
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.471040	228110	11778
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.163902	76493	17014
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.077897	28768	7505
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	15.075749	13220	2078	0.0.54	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.004503	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.022672	8	2	0.6	synth with cache (only 1: intros x0; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.010509	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011532	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.248761	174	22	17	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.021590	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.452145	149	17	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.066989	23206	8823
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.814707	415295	3319
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.070498	21537	7600
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.086436	26890	9491
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.009575	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.082276	29370	6811
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.155465	67637	12815
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	15.918877	9088	5099	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.988027	833	182	1.13.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.079242	24729	6652
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.079329	28238	6254
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.054196	16317	5842
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.052510	15356	5086
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	39.901782	21658	7409	0.0.4.2.0.3.0.0.1.0.1.1.0.0.0.0	synth with cache (only 1: induction l, l'; only 1: intros _tmp_tactician0; only 1: simpl; only 1: intros; only 1: contradiction; only 1: simpl; only 1: intros; only 1: contradiction; only 1: intros l1; only 1: firstorder  (subst; auto); only 1: intros _tmp_tactician0; only 1: simpl; only 1: intros n; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.021598	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.026811	6	5	1.0.0.0.0	synth with cache (only 1: intros until l; only 1: intros a; only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.706731	346	77	1.0.0.10.0	synth with cache (only 1: split; only 1: intros H; only 1: apply lt_eq_cases; only 1: now right; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.221361	109338	12728
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.119139	52	29	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.043028	11490	6702
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.120142	47206	8314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.097300	35394	8569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.036979	10343	3982
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.199265	83668	17811
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.488317	228096	6531
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.058020	18342	5454
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	21.726497	19564	3904	4.3.1.4.3.0.0.0.5.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: induction l; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.015679	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.202311	65	26	0.3.0.0.2	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.064626	20797	7202
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.007258	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.099561	43764	5986
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.031179	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.036492	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.080843	28304	7293
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	1.079125	310	152	0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.030956	5	5	0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.796017	968	108	0.0.0.23	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.158517	67898	12404
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.175637	37	16	1.0.0.1.2	synth with cache (only 1: intros until l; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.296737	146801	19568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.044796	14080	5333
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.075131	24340	7525
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.411878	196269	8846
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.047772	15941	4742
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.120240	48747	7353
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.020974	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.406775	755092	5377
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.226005	98887	3481
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.022492	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.067506	23287	6825
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.078476	25746	9318
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.245294	111756	5491
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.008145	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.038193	6	5	1.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.072688	23470	7753
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.102633	37552	11520
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.019075	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.040640	11649	4000
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.068826	24292	6261
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.077429	30210	5446
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.519813	1094	375	0.3.0.0.6	synth with cache (only 1: intros until n; only 1: intros Hl; only 1: intros Compat; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	8.288027	4908	655	4.10.2.8.28	synth with cache (only 1: apply add_move_0_r; only 1: rewrite add_1_r; only 1: unfold lnot; only 1: rewrite opp_0; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.019186	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	1.210947	742	145	2.0.9.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: now rewrite andb_true_r; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	2.583452	2352	344	2.6.10.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: trivial; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	40.068721	23041	8706
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.067744	22296	6276
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.066901	21751	6816
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.040891	12	5	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.046358	11952	7581
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.075936	26213	8909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.050560	15901	8757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.024136	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.265273	701842	7283
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.058948	19223	5777
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.239932	108343	4165
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.061768	20598	6982
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.055030	17103	6304
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.047585	13280	7062
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.079910	28641	6601
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	25.881639	17335	4240	0.1.0.4.4.1.6.8	synth with cache (only 1: revert q; only 1: intros _tmp_tactician2; only 1: rewrite lt_iff_add; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [m' H]; only 1: rewrite <- add_assoc in H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H)).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	40.083833	29364	7026
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	29.024831	18585	6038	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Lef; only 1: intros x; only 1: intros y; only 1: destruct (max_spec x y) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f x <= f y); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f y <= f x); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.060961	19493	7192
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.074996	26604	8325
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.098152	38073	8507
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.051989	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.191161	32	17	0.0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x; only 1: intros x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.059646	17885	5737
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	3.227309	1287	588	2.0.0.0.0.0.0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: intros H'; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.069349	22716	8080
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.179448	75652	4234
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.093151	32608	7161
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.110739	46628	5363
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	17.591271	17874	3108	0.0.0.2.0.0.0.0.20.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros H; only 1: reflexivity; only 1: intros q; only 1: intros H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros q; only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.076681	27350	6608
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.098623	36989	4879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.042257	12898	5074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.102839	38792	5508
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.088607	31439	5714
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.066856	24109	4595
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	1.614785	740	283	0.0.8.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.077961	27419	6511
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.050899	16002	5736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.064028	20611	6442
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.139814	57901	6241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.047919	15419	6187
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.069185	24416	6325
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.053090	18733	1048
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.088767	30903	7356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.072037	23920	4089
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.046608	13543	6602
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.085862	35884	7285
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.104383	44326	8342
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.104805	42912	7546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.050455	13310	5270
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.096704	38528	7240
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.081298	31642	7782
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.081429	28632	6854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.054558	18444	6071
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.212284	22	21	0.1.1.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.099275	40482	5822
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.079166	28552	5537
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.058304	16533	6228
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.059276	18045	8259
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.097835	39020	9840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.054842	16002	8242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.069511	22494	8347
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.177355	75982	6576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.063625	18465	7713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.098529	25536	9841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.048662	14964	4408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.061509	20703	7113
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.073742	25519	6829
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.060701	20776	7174
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.068854	23317	7080
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.082318	33726	5929
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.106417	42761	7999
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.091530	32788	8135
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.483893	444	36	1.0.0.25	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	27.340189	18287	5573	0.0.0.0.0.6.0.3.0.0.1.0.0.0.16	synth with cache (only 1: split; only 1: induction 1; only 1: intros a; only 1: intuition; only 1: inversion_clear H; only 1: simpl; only 1: intros a0; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: simpl; only 1: firstorder; only 1: intros Eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.076510	27011	7432
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.080679	30598	6753
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.074038	26709	8790
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.064235	23217	6342
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.073124	22910	6880
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.067947	26965	6041
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.118532	54547	7425
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.109897	48835	5275
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.050323	15138	6569
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.151401	68536	8763
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.107283	47548	8729
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.112800	51823	9931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.112379	56315	7199
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.116097	53694	8033
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.127713	66331	9215
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.060346	24009	9684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.038880	15757	5764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.062292	29331	11157
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.047294	20221	8923
