coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin2	40	0.038679	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.569540	275	43	0.11.0	synth with cache (only 1: intro; only 1: rewrite Nat.div2_succ_double; only 1: Nat.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.nsatz.Nsatz.Rsth	40	0.211100	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.075421	31717	5578
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.054453	23180	3890
coq-tactician-stdlib.8.16.dev	Coq.Reals.Binomial.pascal	40	40.035416	12582	3327
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.050559	18697	2862
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.054878	21947	2771
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.440479	130	39	0.0.0.2.0.0.2.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: apply Nat.lt_lt_add_r; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.039744	15160	3428
coq-tactician-stdlib.8.16.dev	Coq.Reals.Alembert.Alembert_C3	40	40.029863	9667	4221
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.049236	18571	5006
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.interior_P1	40	40.190818	90466	8201
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.quadruple	40	0.029408	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.048834	8	2	6.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.included_trans	40	0.461261	278	50	0.10.1	synth with cache (only 1: intros f D l x0 H H0; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.104426	44618	4451
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.030788	10284	4247
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.063375	24943	5148
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.098519	41618	5730
coq-tactician-stdlib.8.16.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.062722	25335	4380
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.MVT_cor1	40	40.089258	38259	5144
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.097458	43655	4808
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.034833	11078	3511
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.040198	16634	3807
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.distance_refl	40	40.058060	19795	3913
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.037720	12130	4099
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.037917	13264	3490
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.037136	14522	2947
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.exp_ineq1	40	40.042636	15729	3668
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_R.Rcri	40	22.577139	14771	1414	17.35.3.4	synth with cache (only 1: intros x H; only 1: unfold equality; only 1: rewrite <- (Rmult_comm x); only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.147337	70912	4423
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	4.480138	1387	420	0.0.0.0.3.4.0.1.1.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite Rmult_1_r; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.021065	7502	2429
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.038686	15357	3042
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.031697	10392	3393
coq-tactician-stdlib.8.16.dev	Coq.Floats.FloatLemmas.shift_value	40	0.032723	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.tech	40	40.031090	10198	2759
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.069282	30832	2617
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	13.355254	2413	593	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: apply Rinv_neq_0_compat; only 1: assert (Hyp : 0 < 2); only 1: change 2 with (INR 2); only 1: apply lt_0_INR; only 1: Nat.order'; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.nsatz.Nsatz.Rcri	40	40.044837	18754	2212
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	3.515980	3794	351	0.0.0.0.1.12.2.28	synth with cache (only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: prove_sup; only 1: now apply (IZR_le 0 2); only 1: auto with real; only 1: apply sqrt_positivity; only 1: now apply (IZR_le 0 2)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.733931	177	73	0.2.3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: cut (1 + 0 * x = 1); only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.046133	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.097668	27472	4257
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.alternated_series	40	40.068017	26577	5198
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rprod.C_maj	40	40.044517	16179	3664
coq-tactician-stdlib.8.16.dev	Coq.Reals.Alembert.Alembert_C5	40	40.023600	6928	3863
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.099048	43198	5460
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.059623	20783	5192
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.interior_P3	40	40.174578	81297	6310
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.062040	18608	4368
coq-tactician-stdlib.8.16.dev	Coq.Reals.Cos_plus.cos_plus	40	40.046026	17431	3383
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.047923	16778	4972
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.058446	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.071827	31111	4660
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.MVT_cor3	40	40.031823	10962	3760
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.complementary_P1	40	3.709372	7934	657	1.8.7.15.2	synth with cache (only 1: intros H1; only 1: intro H; only 1: destruct H as [alp [Halp H]]; only 1: apply H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	0.733823	787	90	3.0.2.9.2	synth with cache (only 1: intros; only 1: intro; only 1: intros; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.097211	44044	4598
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.074909	32447	4124
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.057247	23521	4081
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.059658	24088	3353
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.028733	9181	3596
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.exp_Ropp	40	40.066694	26932	3904
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.053726	21340	3787
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.066937	11399	3074
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.051662	22485	2377
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.pow2_ge_0	40	39.960930	20422	3583	2.12.11.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: pose proof (sin2_bound x); only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rderiv.Dx	40	40.054657	22103	5776
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.149613	4	3	0.1.0	synth with cache (only 1: intro m; only 1: simpl; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.Machin_2_3	40	40.051147	19971	2657
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.050409	20647	3040
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech1	40	40.098713	42987	5686
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech5	40	0.060429	19	8	0.1.0	synth with cache (only 1: simpl; only 1: intros x y; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.054882	23559	3888
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.minus_neq_O	40	1.354271	588	157	10.3	synth with cache (only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.042338	14163	3966
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.060539	24417	5619
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.045868	16709	4737
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.696948	127	70	1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros H'2; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.growing_cv	40	40.142131	65463	6339
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.041741	14979	4334
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.034177	10770	4324
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.060590	23169	4253
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.043865	15340	4751
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.039627	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.034280	10011	4629
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P1	40	40.107280	47052	6469
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.AbsList_P2	40	27.604067	19767	3345	2.0.2.1.3.6.0.9.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: intros; only 1: inversion H; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.042059	17105	4459
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.029198	8587	3688
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.056959	23521	3542
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.053415	19080	4076
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.ln_exp	40	40.063996	26539	3803
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.041447	17030	3182
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Rsor	40	40.117582	52323	5747
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.le_double	40	27.614866	21120	3643	5.19.7	synth with cache (only 1: simpl; only 1: intros H x; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.090387	39023	5252
coq-tactician-stdlib.8.16.dev	Coq.Reals.ArithProp.tech8	40	0.423540	78	19	4.3	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.031889	10710	3455
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.034112	13488	2544
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.349031	172064	5099
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.072127	31142	3571
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.074706	31416	4090
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_O	40	0.018481	4	2	0.2	synth with cache (only 1: intros a; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_1	40	0.023480	8	2	6.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rderiv.Dopp	40	40.068541	28322	5076
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_add	40	0.063077	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.040691	15074	2337
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.053627	21878	2830
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_mult	40	40.108813	49922	5173
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech6	40	40.062859	23187	5287
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.tech12	40	0.006972	1	1	0	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.060613	26166	3132
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.055757	20532	3417
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	4.882365	1755	513	1.4.0.0.5.1.0	synth with cache (only 1: intros r1 r2 H; only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_plus	40	4.933455	3237	582	8.2.13.0	synth with cache (only 1: intros x y; only 1: elim archimed with x; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.034589	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	1.549685	669	153	4.2.4.0	synth with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.061404	24147	5521
coq-tactician-stdlib.8.16.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.077337	32500	5521
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	8.630895	1201	473	0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: apply g_wf; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.031060	11941	2401
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.192536	92753	6570
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.057662	21633	4531
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	40.038201	15666	2943
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.040811	13074	4477
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.positive_derivative	40	40.037487	11350	4589
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.080026	32045	6775
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P4	40	0.437455	1693	57	4.52	synth with cache (only 1: intros p q; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.MaxRlist_P2	40	40.085766	32278	5706
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.055138	22762	3851
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.054852	18868	4502
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.087862	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.052269	20244	2786
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.032143	9455	3822
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.ln_inv	40	40.030005	10429	3488
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreals.IZR_nz	40	0.009052	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Qle_true	40	40.101087	45112	4075
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.108827	48705	4641
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.029694	10183	3137
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.044374	17781	3377
coq-tactician-stdlib.8.16.dev	Coq.Reals.DiscrR.IZR_eq	40	0.052447	6	2	4.0	synth with cache (only 1: intros x y H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.073471	28399	6182
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_refl	40	0.276188	391	50	4.10	synth with cache (only 1: right; only 1: now try rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.024798	7128	3345
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_le	40	0.144530	56	16	2.3.1	synth with cache (only 1: intros p q H; only 1: left; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.045663	16836	3341
coq-tactician-stdlib.8.16.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.029735	10256	2315
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.scal_sum	40	40.131295	34666	4032
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.070276	27547	5315
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_ge	40	5.009381	3662	820	2.9.0.0.0.4	synth with cache (only 1: induction 1 as [| x y z]; only 1: red; only 1: tauto; only 1: generalize (total_order_T r1 r2); only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.049631	17325	3692
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005550	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.072810	25605	7125
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.050178	18126	6504
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.053882	20019	5055
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.124600	58859	7263
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.046835	17261	5145
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.047761	19251	3559
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.increasing_decreasing	40	40.081688	33972	4247
coq-tactician-stdlib.8.16.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.051452	18909	4473
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_P3	40	40.035654	12171	4609
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P1	40	40.067007	25499	5970
coq-tactician-stdlib.8.16.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.053568	21273	4414
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	4.952175	1233	635	0.0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply (sqrt_positivity x H); only 1: apply sqrt_pos).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.tan_0	40	40.062076	24083	4299
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	17.324274	6329	3195	0.2.0.0.3.6	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.034484	11870	3528
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.360354	31	24	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_pow	40	40.036047	13379	3599
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	4.976296	1329	383	1.0.0.2.6	synth with cache (only 1: intros r1 r2 H H0; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreals.Qle_Rle	40	40.067996	27685	3941
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.fp_R0	40	40.789670	49542	3089
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.015404	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.073224	28656	4420
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.133859	61879	4292
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.029428	10557	2566
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.028030	8285	3699
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.327781	35676	4327
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.126978	55652	5098
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.057578	15744	939
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.tan_increasing	40	40.043519	15147	2880
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.poly	40	40.069151	25485	5184
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.plus_sum	40	40.799306	36084	2744
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rlimit.limit_minus	40	40.040426	12595	4917
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.037785	11932	4320
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.064278	22465	3495
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.037305	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.203127	33	20	1.0.0.0.0.2	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.888673	929	247	7.3.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.163429	74673	6278
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.062922	24101	6319
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.071305	27740	5590
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.Vn_growing	40	40.100175	44352	4296
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	5.628869	6226	342	68	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.not_Rlt	40	0.008500	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.037229	14080	4076
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	5.429031	6062	987	0.0.4.4.1.6.2.3	synth with cache (only 1: intro l; only 1: intros H H3; only 1: induction 1; only 1: eauto with *; only 1: auto; only 1: destruct r; only 1: eauto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.null_derivative_1	40	40.038156	12079	5132
coq-tactician-stdlib.8.16.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.150023	69833	6647
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.Rsepare	40	40.059972	22188	5047
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P2	40	40.068133	27052	5634
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.044373	15386	5447
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.047229	16637	4398
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.119792	53017	5457
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_lt	40	40.052966	19489	3678
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.056672	25725	2225
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.074737	15	9	0.0.0.2.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.base_fp	40	40.080299	30075	6654
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.046886	19277	1914
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.105652	46824	4556
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.039875	13595	4902
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.049048	20486	3326
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.038836	13700	3281
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.047640	7	4	0.2.0.1	synth with cache (only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.family_P1	40	18.442843	18385	2909	1.0.13.12.8	synth with cache (only 1: intros LE p Hp1 Hp2; only 1: intro; only 1: simpl; only 1: intros HF; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.098661	41348	6408
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.open_set_P6	40	2.437857	1399	402	8.3.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.034311	10056	2339
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.041106	16189	2431
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.135183	61037	5389
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.sum_eq	40	40.074490	30111	4952
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	40.066009	24724	4182
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.026178	5667	1367
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.084196	35080	5111
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.164692	46	22	0.0.0.0.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.584528	148	55	0.0.1.2.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto using Rnot_lt_le with rorders).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.017010	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_asym	40	0.046020	11	7	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.052827	19196	6311
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_antisym	40	1.186534	510	150	0.6.0.0.0.3	synth with cache (only 1: intros * []; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.012687	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	33.245612	66029	4573	0.0.0.7.11.4.38	synth with cache (only 1: intros Base Step n; only 1: induction 2; only 1: constructor; only 1: setoid_rewrite  <- H; only 1: eauto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.016056	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.025927	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.044714	16212	4893
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.594608	558	53	5.24	synth with cache (only 1: intro Ha; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.411906	70	41	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.776588	1604	301	0.0.0.11.6	synth with cache (only 1: intro z; only 1: intros def_n0; only 1: intros g c; only 1: intros n0 H' m; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.029649	6	5	0.0.0.1.0	synth with cache (only 1: intros x x' y y'; only 1: intros H1 H2 H3; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.012406	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.074308	29325	5330
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.approx_min	40	40.077142	28959	5695
coq-tactician-stdlib.8.16.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.122479	50067	5380
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.IVT	40	40.063913	27279	4461
coq-tactician-stdlib.8.16.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.050095	18687	4386
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	30.004823	20987	4187	0.0.0.0.0.10.0.13	synth with cache (only 1: intro; only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P3	40	40.040965	12594	5256
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.042520	14304	4604
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_trans	40	10.904646	15603	1787	0.2.1.39	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros v1 v2 env env' H ? ? ?; only 1: intuition eauto  3).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.043328	14309	3591
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.069067	30116	3997
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.174855	20	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.094328	39279	4469
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.050358	18431	3879
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.101561	44058	4825
coq-tactician-stdlib.8.16.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.141129	64565	5381
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	12.586895	7045	1491	1.0.0.0.1.0.0.1.2.6.1.3	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: unfold Rmax; only 1: rewrite Rlt_def; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: intro; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.013124	11	3	5.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.052935	23333	2126
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.032380	11020	3145
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.036770	12568	3283
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.sum_cte	40	33.362299	20462	3674	2.9.0.2.0.0.1.0.5.2.1.1.0.0.2	synth with cache (only 1: intros z [| n]; only 1: simpl; only 1: apply Rquot1; only 1: rewrite Rmult_1_r; only 1: auto with *; only 1: simpl; only 1: elim n; only 1: rewrite Rmult_plus_distr_l; only 1: simpl; only 1: ring; only 1: simpl; only 1: intro; only 1: intro; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	0.994481	296	124	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.108415	47152	4930
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.165663	8233	873
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.compact_EMP	40	40.165781	79378	5066
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.051438	17869	3756
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.079750	32027	5870
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	36.354980	18390	4107	0.0.0.0.3.14.0.0.1	synth with cache (only 1: generalize PI2_RGT_0; only 1: intro; only 1: unfold Rdiv; only 1: pose proof PI_4 as t; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: pattern PI at 2; only 1: Lra.lra).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalZ.of_iff	40	40.089379	36498	6159
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_le	40	1.016917	264	113	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	22.367485	5622	1293	15.2.4	synth with cache (only 1: intro p; only 1: intro q; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.045978	15579	5187
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.149049	69600	5877
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.058932	24161	4596
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.055985	8	6	0.0.0.2.0.0	synth with cache (only 1: intros m x; only 1: functional induction find x m; only 1: easy'; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.065268	12697	1480
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.081237	9	8	1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: induction n as [| n IHn]; only 1: destruct x; only 1: simpl in *; only 1: auto; only 1: intro l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.351753	76	33	1.0.0.0.0.3	synth with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: split; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.035190	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl in *; only 1: now try rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.058479	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.UL_sequence	40	40.091641	28693	4261
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.106006	44338	3224
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P6	40	40.061492	24502	5346
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.097190	40097	4336
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.133400	59378	5485
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_period	40	40.039962	12899	3396
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_complete	40	0.022598	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.038993	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.021604	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.053432	20126	2824
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.042115	11507	3285
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.052549	19744	4944
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.088319	34685	6718
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.013936	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.084528	34293	4771
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.386671	67	39	6	synth with cache (only 1: apply Unsigned.of_inj).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.043565	18038	1627
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.059243	24634	2838
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.056526	22642	3383
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.182275	86575	1983
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.080972	33001	5374
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.088327	34921	5022
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.142372	40790	2444
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.GP_infinite	40	40.044898	15821	3854
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.frame_tan	40	40.034721	12346	2537
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.085584	33165	3183
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.129749	54130	7020
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow_mult	40	40.077006	30379	4153
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.782835	2570	395	4.15.1.0.5.3	synth with cache (only 1: split; only 1: split; only 1: congruence; only 1: red; only 1: intros n; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.059512	23640	4872
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	20.201326	6718	3463	0.3.9.0	synth with cache (only 1: revert q; only 1: intro n; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.018723	3936	737
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.047611	15287	5921
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.pow1	40	7.755974	4450	927	0.2.0.2.0.0.20	synth with cache (only 1: unfold IZR, IPR; only 1: simple induction n; only 1: reflexivity; only 1: intros v w; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.033174	3	3	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.043723	15279	2496
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.129169	60707	5014
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.224197	102330	5601
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_plus	40	40.075901	29901	4949
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.096746	37139	7259
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P7	40	40.065519	25697	5513
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.053340	19252	3592
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rgt_dec	40	40.056116	20988	4056
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	40.067400	23627	5636
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rge_dec	40	1.088086	519	128	1.0.10	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.034953	4	3	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.040600	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.063707	24803	3230
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.limit1_ext	40	40.037161	13950	3657
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.034386	10799	5107
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.086172	36406	2463
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.071204	24250	5653
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.076985	32117	4128
coq-tactician-stdlib.8.16.dev	Coq.Reals.Runcountable.R_uncountable	40	40.163471	75704	6484
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	10.524324	46323	1390	1.0.4.0.0.54.28	synth with cache (only 1: intros m; only 1: case m; only 1: intro n; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.079600	36627	2202
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.056291	20597	5432
coq-tactician-stdlib.8.16.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.080197	34150	5993
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.080626	32497	6306
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rseries.CV_shift	40	40.072700	27083	5342
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.518004	18558	2992
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.040173	14094	2957
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.045369	15310	4466
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.108915	45884	4555
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.085333	35903	4233
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.035122	10740	4234
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.122258	54135	5687
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.052380	14846	6865
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.021969	3480	786
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.075691	29304	5082
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.043755	16690	2563
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.036884	12682	3945
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.205734	100530	5246
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.107534	47264	5759
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	1.660296	793	199	0.6.10	synth with cache (only 1: simpl; only 1: intros a n ?; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P8	40	40.058964	21093	5022
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.051273	19114	3980
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.048484	17150	4330
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.028906	10723	2299
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.065618	23	7	3.0.1	synth with cache (only 1: intros x y H; only 1: intros; only 1: intuition congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	9.749846	35233	1617	62.9	synth with cache (only 1: intro n; only 1: now constructor).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.130356	146	24	4.6	synth with cache (only 1: intros m Hm; only 1: exact 0%Z).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.045883	15384	3417
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.Dln	40	40.028880	8731	3457
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.073666	28415	4300
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.027214	8129	2129
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.260713	129102	4758
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	10.403760	3767	1067	1.0.0.0.0.12	synth with cache (only 1: rewrite <- Ropp_0; only 1: apply Ropp_lt_gt_contravar; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.059832	23854	3088
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.121620	53799	5510
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.110901	50127	3450
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.068885	22395	5726
coq-tactician-stdlib.8.16.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.244573	115679	10573
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qpower_positive_0	40	40.056166	21703	2367
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.060936	24038	2999
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.in_int	40	40.038213	13676	2869
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.040151	14087	3310
coq-tactician-stdlib.8.16.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.085224	34590	3920
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.035479	14179	1273
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.057105	22061	3868
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.077721	31337	4544
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.054462	19389	4989
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.055166	21239	1244
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.071780	27198	6243
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.050749	19864	3726
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	14.785661	13978	2208	4.4.0.4.1.1.2.1.0.0.0.2.0.2.2.4.0.0.0.0.2.0.2.3.8.1.1.8	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: generalize (rev d); only 1: intros H'; only 1: trivial; only 1: simpl; only 1: now case d; only 1: simpl; only 1: now case d; only 1: generalize (rev d); only 1: simpl; only 1: intro H'; only 1: now induction d; only 1: generalize (rev d); only 1: reflexivity || ring; only 1: simpl Little.double; only 1: now induction d; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: apply to_list_inj; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.030240	5	4	1.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.048256	15994	3438
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.133797	58302	5536
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_mult	40	40.036729	10619	4776
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.033626	9511	1993
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.adherence_P4	40	16.581644	22379	2516	11.3.9.9.1.4	synth with cache (only 1: unfold included; only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: intros y Ey; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P9	40	40.088005	36113	5389
coq-tactician-stdlib.8.16.dev	Coq.Reals.RList.RList_P18	40	0.684885	180	79	0.0.0.0.0.4	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.070107	26625	5376
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.056084	18621	6070
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.023723	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.288590	14	4	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.012962	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	5.366920	4637	638	0.4.0.5.0.0.0.4.11	synth with cache (only 1: intro n; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: set_iff; only 1: now intros ->; only 1: unfold Same_set, Included, mkEns, In; only 1: inversion 1; only 1: eauto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.052288	22270	1793
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.008201	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.034455	12081	3063
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.054168	18109	3808
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.064241	24183	4549
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.071574	26119	4894
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	24.226307	9374	3189	17.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.010090	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.051107	16775	5495
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.071815	27423	4473
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.056189	22594	3062
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.D_in_imp	40	10.374612	3167	988	3.4.6	synth with cache (only 1: intros r r1 r2; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.043770	17275	2313
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.073328	31166	4116
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.112307	49578	5923
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.031940	11251	2932
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.139861	63294	5170
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.060198	22787	4718
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.092931	37747	4964
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.D_in_ext	40	9.643137	3435	1056	0.3.0.5.1.0.0.2	synth with cache (only 1: intros; only 1: generalize H, H0; only 1: unfold D_in; only 1: intro; only 1: elim H1; only 1: intro; only 1: unfold limit1_in; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.065398	26127	4930
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.125890	29633	4851
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.107874	45864	3429
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.046570	15183	4408
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.tech9	40	40.094684	39140	5018
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.036178	14248	1225
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.172663	82534	2331
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.domain_P1	40	40.156551	73613	4308
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.095628	38118	4140
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.018758	2	2	0.0	synth with cache (only 1: intros x y H; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.312082	157590	3023
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.104661	43819	5272
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.085168	36224	3933
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.027125	13	4	3.3	synth with cache (only 1: intros x l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.053934	19877	3805
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.045160	14309	4612
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.062023	20854	5135
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.073595	27854	5674
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.070634	28277	4350
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.101103	43092	3018
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.093106	35334	3013
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.019582	4039	1353
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.100992	42435	6309
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.027942	7459	4126
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.046756	16785	3578
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.045809	9936	2110
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.062198	17952	3309
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.180178	27416	1492
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.022430	5618	2750
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.345882	175380	2160
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.075979	28057	4450
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.202373	94	25	0.2.6	synth with cache (only 1: intuition; only 1: red; only 1: auto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.054655	18023	4659
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.114019	46873	5347
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.086033	36321	3615
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.083336	34200	5340
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.063914	24338	4927
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.082418	33252	5722
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.087225	35283	4019
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.tech13	40	40.099741	41956	4351
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.104352	43614	4582
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.092118	39259	4487
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.016149	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.347434	29	22	0.3.0.0.0	synth with cache (only 1: intros; only 1: generalize (Dec.F.mem_iff s x), (Dec.F.elements_iff s x), (existsb_exists (Dec.F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: generalize (Dec.F.mem_iff s x), (Dec.F.elements_iff s x), (existsb_exists (Dec.F.eqb x) (elements s)); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.884135	67	64	5.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.599980	60	48	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s (x:=x) (y:=y) H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.008988	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.483866	118	41	0.0.0.0.5.1	synth with cache (only 1: intros; only 1: destruct (In_dec x s'); only 1: rewrite <- not_mem_iff; only 1: auto with *; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.010824	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.125594	35	18	2	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.981981	1402	354	2.0.2.0.4.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	6.806210	6944	1050	30	synth with cache (only 1: apply N.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtopology.Heine	40	40.085017	37294	5219
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rsqr_0	40	40.311385	156720	787
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.118774	48060	10937
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.083168	34939	5108
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.082786	34316	5839
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.057545	21534	3460
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.044622	13263	3970
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.081392	35224	4457
coq-tactician-stdlib.8.16.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.045516	15033	2836
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.044367	14318	4013
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.094167	38934	3226
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.130892	58881	3133
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.015351	3071	1191
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.069414	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.028336	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.173522	76888	6512
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	1.331103	248	113	0.2.2.2	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.508545	34	11	0.0.6	synth with cache (only 1: destruct (mem x s); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.039685	11192	6566
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.096692	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.044672	17425	3645
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.018021	9	2	2	synth with cache (only 1: f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.027493	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.019003	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.075170	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.030596	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.413394	14	3	2	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.113053	50780	3694
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.366803	42	14	0.0.0.5	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.070690	2	1	1	synth with cache (only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.603098	1158	48	0.46	synth with cache (only 1: intro LT; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.110371	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.540926	28	8	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.095277	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.078271	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.483142	33	11	3.0.2	synth with cache (only 1: intros; only 1: red; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.546464	23	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	36.410875	18220	5082	12.0.7	synth with cache (only 1: intros x ?; only 1: unfold permutation; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.414021	12	3	1.3	synth with cache (only 1: intuition; only 1: intuition fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.045356	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.055448	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.102497	45458	2943
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.096057	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.073645	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.081267	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.061598	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.103002	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.049324	17458	3049
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.483177	17	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.269527	6	3	1.0.2	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.043148	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.082346	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.031304	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.141042	63	19	0.0.3.2	synth with cache (only 1: intros a m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.418462	10	5	2.1.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.084774	37019	4899
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.025322	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.029195	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.070718	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.070613	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.063447	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.459069	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.392961	21	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.079735	32133	5277
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.118940	52566	5680
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.101831	314	110	3.0.1.2.3	synth with cache (only 1: generalize (F.mem_iff s x); only 1: intros; only 1: intuition; only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rpower.arcsinh_0	40	40.055986	19934	3854
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	1.717062	99	34	3.2.1.0	synth with cache (only 1: expAdd; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qabs.Qabs_Qinv	40	1.977446	1440	284	9.0.9	synth with cache (only 1: unfold Qeq in *; only 1: intros (n, d); only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.127887	55650	6101
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.045931	8552	1861
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.059436	21935	3874
coq-tactician-stdlib.8.16.dev	Coq.Reals.SeqProp.CV_minus	40	40.030110	8923	4659
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.022790	7801	685
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	19.286627	31709	475	10.177	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.092831	6	3	0.3.0	synth with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.010357	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.014547	2	2	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.128820	56317	4291
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.823341	90	75	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s (x:=x) (y:=y) H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.103075	42203	5136
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.848412	1905	501	0.0.0.0.2.0.1.3.0.0.0.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.054272	23012	2731
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.026612	9	3	1.1	synth with cache (only 1: intro n; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.080204	35800	3529
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.142435	30186	3539
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.144648	25588	3216
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	40.038438	10173	5336
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.166128	37	14	2.1	synth with cache (only 1: unfold opp, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.049966	17293	3698
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.097640	44525	2822
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.064597	23615	5075
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.108410	49775	6288
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.084985	32511	5203
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.025002	8264	2296
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.043720	14232	3750
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.113553	48064	4153
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.683447	88	48	0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.055880	21038	2957
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.100627	47107	3348
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.079500	29926	3567
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	40.020483	6773	1468
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.042017	12854	4457
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.919915	363	95	0.1.0.1.2.0.2	synth with cache (only 1: intro q; only 1: zify; only 1: apply Zmod_small; only 1: split; only 1: Z.order; only 1: pose proof gt_wB_1; only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.093379	37718	6051
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.110151	43051	5787
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.648136	332542	1575
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.014105	4291	934
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.094895	39165	5328
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.103149	41723	4939
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.246280	28062	3542
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.024776	7256	1382
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	38.966677	5582	4409	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.017918	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.007489	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.020098	4	2	2.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.051063	18718	2543
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.333065	157449	7143
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.075101	26886	4042
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.060959	15855	3269
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.100541	14	8	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.071436	16	6	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qfloor_le	40	40.077800	34421	3815
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	3.499007	740	174	1.12	synth with cache (only 1: intros l x; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.042184	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.026328	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.062296	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qsor	40	40.050551	17876	3150
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.084287	34558	4461
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.107298	43938	5120
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	40.038970	11352	3496
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.345961	928	46	42	synth with cache (only 1: now rewrite ?(Ring_polynom.local_mkpow_ok Rsth pow_th)).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qred_iff	40	40.097821	40992	3896
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.028147	11	4	3.1	synth with cache (only 1: intro n; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.035287	8648	3993
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.072811	29173	4868
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcge_alt	40	1.071861	581	114	1.2.2.7	synth with cache (only 1: simpl; only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.536067	1095	238	1.14	synth with cache (only 1: intros m Hm; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.112747	49715	2878
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.517836	53	16	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.996529	549	99	0.1.8.4	synth with cache (only 1: intros a b; only 1: intros c Hc IH; only 1: rewrite add_spec; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.072913	29908	2701
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.039459	14	4	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.020083	11	3	3.1	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.039949	12605	2694
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.144829	38178	3833
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.027347	7935	2963
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.124832	52472	5019
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.106120	47720	4541
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.035096	12273	2449
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.084488	35941	2574
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.086318	34932	6595
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	6.540789	8536	989	0.35	synth with cache (only 1: intro q; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.065159	23107	7231
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	3.250961	855	180	6.5.4	synth with cache (only 1: intro r; only 1: intros ? ? IH p1 p2; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.239678	115150	4701
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.107421	46857	5583
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	4.598714	3238	510	2.20	synth with cache (only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.061351	13	5	1.0.2	synth with cache (only 1: unfold Subset; only 1: intros a b c Hc Ha Hb; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.160745	72381	5142
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.039806	12210	3585
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	24.904823	44903	2968	45.22	synth with cache (only 1: intros m H; only 1: now elim H).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.QNpower	40	0.018656	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.031520	7830	1885
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.036388	9153	3977
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.648078	332716	1817
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.111812	44516	10238
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.012490	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.010400	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.007761	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008880	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.021376	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.008515	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.010392	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.122837	28662	5705
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.789005	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.007505	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	6.167981	1371	617	1.2.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	6.480854	9316	1459	0.0.24.5	synth with cache (only 1: intro n; only 1: <Coq.Strings.String.t_eqb>; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.090861	37908	3671
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qle_ceiling	40	40.082040	24842	3572
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.095669	38715	5302
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.038822	4	2	2.0	synth with cache (only 1: intros; only 1: now field).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.830217	437	107	12	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.012980	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.285007	82	23	4.3.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.033541	9	4	1.3.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.602828	120	42	0.2.0.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	0.613052	152	65	1.3.0.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.062697	23688	5152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.059288	20606	4412
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.222902	101963	4669
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.042711	13905	3598
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.100501	41704	5252
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.073888	4	1	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	40.120846	53439	5687
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.109068	46566	5152
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.663061	284	53	7.1.1	synth with cache (only 1: intros p H2 H3; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.079673	29700	5143
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.045279	11387	8385
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.094720	38068	4068
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.156716	73219	1570
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.045758	17266	2761
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.150578	33492	5736
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.112359	46307	7610
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.023718	6896	3020
coq-tactician-stdlib.8.16.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.053583	16227	1813
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.122446	52821	4847
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.152226	70199	5593
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.101489	44810	2340
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.076220	29886	4004
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.088240	35493	7227
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.070513	28068	4318
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.202373	43679	6911
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	41.938190	20514	2438
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.073860	26597	4952
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.008696	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.137886	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.009654	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.015757	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.011023	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.011322	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.009610	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.127412	16	6	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.009507	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.160822	74131	4213
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.047249	14073	4262
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.014079	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.078923	30241	6683
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.550937	173	42	4.0.0.2.0	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.063764	25741	3669
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.108049	44593	4973
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.179951	76331	9223
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.078467	29208	3700
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.082857	33226	6038
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.118855	48490	5078
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.107854	42549	3534
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.092833	37658	4164
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.054522	19016	3860
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.173280	78784	6101
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	5.749247	3329	786	0.1.0.0.1.0.7.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: simpl; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	12.921522	10471	1276	11.1.4.4.11	synth with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intros a H; only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.137162	58261	5090
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.097863	39061	5319
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.059799	18863	3166
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.044605	13210	2048
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.027056	8602	2509
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.171069	73866	5928
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.092402	36953	3569
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.041172	15249	2918
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.072886	26171	5351
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.143343	64274	5694
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.080583	34261	1033
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex2	40	2.553662	1570	271	0.1.0.2.7.8	synth with cache (only 1: intro z_ne_0; only 1: intro a; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex6	40	0.014098	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qfield.Examples.ex7	40	0.015227	9	2	1	synth with cache (only 1: exact Qplus_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.070491	26823	4373
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.093952	35785	6292
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	5.603180	5868	964	4.3.0.5.15	synth with cache (only 1: intros a b q r Hr EQ; only 1: intuition; only 1: apply fold_rec; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.149839	42008	6125
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.084168	35004	4039
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.045827	14392	1926
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	27.072041	10397	2162	0.4.0.0.0.14	synth with cache (only 1: firstorder; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: rewrite <- H0; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.065628	28516	2778
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.480704	124	56	1.3.2.0	synth with cache (only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: intros; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.112291	50283	4269
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.152670	71348	3778
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.047659	25	7	0.1.3	synth with cache (only 1: split; only 1: now try Nat.order'; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.008558	4	2	2.0	synth with cache (only 1: intro n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.212466	101315	7047
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.032247	14	4	0.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.047931	11	4	0.0.1	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.051054	18222	4122
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	33.231210	24726	3079	0.0.1.23.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: auto with zarith).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.117650	48686	4387
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.236854	104151	4463
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.076410	30532	3086
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008760	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.008563	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.015352	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.049174	15545	4943
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.009714	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.009963	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.031854	8155	3493
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	25.402492	24028	4279	17.3.0.18	synth with cache (only 1: split; only 1: apply M.elements_2; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.074767	26015	3236
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.103165	36588	5179
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.120167	49873	3430
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.187229	65	21	7.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.170683	78436	3372
coq-tactician-stdlib.8.16.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.050040	12718	7863
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.096795	41293	3803
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.156979	12597	4712
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.043842	16089	2753
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.106605	43511	7133
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.013576	6	2	4.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.119718	50601	5415
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.620960	281	91	1.1.1.1.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: auto with sets; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.019725	5871	2288
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.225264	103852	7249
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.016861	6	3	1.0.2	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.056876	21030	4507
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.150782	65210	6744
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.007083	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.145126	68721	6076
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.108070	45636	4552
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.077147	30459	5249
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	18.486433	6212	1543	0.0.0.0.0.0.0.0.0.0.0.1.6	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	40.105156	42269	6295
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	2.425212	977	283	0.4.0.0.0.4.2	synth with cache (only 1: intros op Hop; only 1: intros x y Hxy Hyz Hy; only 1: apply fold_rec_bis; only 1: intros; only 1: eauto; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.171104	84	20	2.1.4	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.755936	199	70	0.0.0.0.5	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.628254	22	5	3.4	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.062467	19822	5622
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	1.307433	472	147	0.0.9.1.0	synth with cache (only 1: intros; only 1: apply (MP.fold_equal st (f:=f) Comp Ass); only 1: apply MP.remove_equal; only 1: rewrite not_mem_iff; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.113583	39264	3035
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	1.958955	1156	167	1.1.3.12	synth with cache (only 1: intros n m; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.719006	353	84	10.1.0	synth with cache (only 1: intros w1; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.020642	1	1	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.099581	39661	7371
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.139417	61979	5440
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.132262	58479	6178
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.074951	31686	3347
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	40.074728	29755	4638
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	3.634150	3504	566	0.1.1.0.2.19	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: now split; only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.040109	16361	3032
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.067000	21338	7028
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	3.325312	1714	343	2.5.0.2.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: rewrite Qmult_comm; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.129021	56323	5072
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.041729	11587	5167
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.136707	60147	3664
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.422307	1413	260	0.8.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.024961	5615	3351
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.307111	146398	5878
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.107690	43244	6682
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.131225	56542	5782
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.253186	124398	3183
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.058154	19554	3829
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.034630	12218	2840
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.078187	14224	1735
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.120609	42925	4098
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.095755	34713	2744
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.isZ0_0	40	0.445377	125	48	0.0.0.0.0.0.2.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.018363	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.048390	15942	4460
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.008143	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.090179	32559	8499
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.335054	179	42	11	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.073548	23960	2655
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.074317	27219	3933
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.031713	7873	1743
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.064526	21715	1448
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_correct	40	40.108331	44965	6917
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.068179	4360	1122
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.272299	134620	3743
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.055809	18981	3003
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.047182	19864	2023
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.134182	56890	3318
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.115482	32	16	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	30.174959	24358	3441	0.0.2.30.0.0	synth with cache (only 1: intros; only 1: qc; only 1: Z.nzsimpl'; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.175279	70554	4921
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.123120	55397	4546
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.054183	19505	4872
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.065591	23913	4545
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.068523	22980	7870
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	18.637414	10438	1859	1.0.27	synth with cache (only 1: intros P l; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.144953	63302	7152
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.063527	23368	5162
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.095026	38163	2795
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	3.987255	1792	430	1.2.12	synth with cache (only 1: intros H'1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.027753	6388	3065
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.123236	50762	6116
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.084482	34438	2900
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.035842	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.078690	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.060047	18304	2910
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ratan.PI_ineq	40	40.036132	11272	2827
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.052127	19131	2499
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.104869	44096	5910
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.080523	20565	1681
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.110034	43515	4830
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.141714	69450	2265
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.246716	114581	2779
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.102179	36250	8635
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.382788	1906	362	6.0.0.0.0.0.0.6.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.069245	27919	3617
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.035096	11137	2357
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.064634	19555	7815
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.089924	34956	3770
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.686807	420	61	0.10.3.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.081365	28203	3668
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.127226	10861	2444
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.074126	26640	5674
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.330302	164161	3693
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.334850	59	25	0.0.4.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	21.411019	9215	444	34.33.5.18	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intro He; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.056613	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.018437	5347	1045
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.067958	23929	5814
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.086835	34367	3765
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.047308	12508	8031
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.049176	16738	4723
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.105251	47621	4227
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.034491	8783	5416
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.076812	31339	5748
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.144420	61612	4215
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.061156	21020	5068
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.026361	6538	3185
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.103556	41777	5603
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.177809	82799	5349
coq-tactician-stdlib.8.16.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.102842	43209	4445
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.193621	94341	1632
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.030319	9546	1542
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.023162	9	3	4.0	synth with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_one	40	40.091194	36129	7389
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.017861	4	3	0.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.133165	56818	3238
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.087464	5	3	0.1.1	synth with cache (only 1: intuition; only 1: rewrite diff_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.040884	4	4	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.174682	79586	6391
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.176114	80807	6134
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.114017	49745	5570
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.149925	64692	4512
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.051242	18529	2868
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.060617	18847	7395
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.145961	64194	4480
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.174452	80501	4158
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.059528	21596	3867
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.044456	15843	2315
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.050667	13950	708
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	1.467306	788	206	0.0.0.0.0.0.6.1	synth with cache (only 1: intros i s; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.024137	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.303867	150918	8794
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.106364	44947	4618
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.022330	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.039690	4	4	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.025903	5610	666
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.068236	24712	4761
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.066726	24781	5489
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.022637	7834	1220
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.096329	38616	4864
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.077154	32934	3327
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.149923	66559	7539
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	5.573882	1327	489	0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.035113	9006	5879
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.237396	110315	3210
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.064265	22732	4869
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.044422	13674	4344
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	6.182760	19377	389	1.0.2.47.4.19.100	synth with cache (only 1: split; only 1: intuition; only 1: auto; only 1: intro q; only 1: intros l'; only 1: intros Ha Hb H; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.080599	32568	6479
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.105767	41587	5271
coq-tactician-stdlib.8.16.dev	Coq.Reals.Ranalysis1.pr_nu	40	7.099058	6275	884	0.0.6.2.3.16	synth with cache (only 1: intros k f1 f2 pol; only 1: destruct pol; only 1: unfold derive_pt; only 1: apply derive_pt_eq_0; only 1: simpl in *; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.041759	10226	1931
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.087813	34796	4139
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.072506	28806	3163
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_le_trans	40	40.157064	69243	6525
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.047062	10	7	0.2.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.095292	34882	5317
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.331123	160206	2830
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.138289	61284	4752
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.057716	22315	5419
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	2.096531	1274	313	0.0.0.0.0.0.13	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.109361	45844	5314
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.070974	28972	4258
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.103449	41	16	0.0.0.1	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.099080	39046	6546
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.086802	33646	4586
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.089229	34022	4280
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.068885	22120	6175
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.022734	6486	1787
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.131304	57116	5617
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.043609	18401	2313
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.051211	17903	3831
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.021594	6646	672
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.375804	184458	4957
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	8.397859	11168	1264	0.1.1.0.0.1.2.0.0.29	synth with cache (only 1: elim (ZArith_dec.Z_lt_ge_dec x y); only 1: destruct x; only 1: intros; only 1: auto; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.087814	41	12	0.0.2.0.2	synth with cache (only 1: intros ->; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.097230	36055	7651
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.061114	22064	3081
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_trans	40	1.580580	1203	360	5.0.2.0.0.0.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: eapply Qle_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: apply Qle_refl).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	6.314480	764	274	6.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.123789	50559	5784
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.146401	25	11	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.064382	26627	3191
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.356319	67	31	1.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_not_le	40	2.318091	1833	312	2.0.13.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intro l; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.768946	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.100395	45209	4036
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.093731	35203	5537
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	13.436579	7137	1293	0.2.1.2.15	synth with cache (only 1: intros l x e r; only 1: simpl; only 1: intros sorted belong1; only 1: inversion_clear 1; only 1: constructor 1).
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.042624	14256	3610
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.026882	6782	3911
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.131697	58501	5013
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	11.275383	14921	1747	11.0.0.0.0.0.0.11.1.17	synth with cache (only 1: intro x; only 1: destr_bool; only 1: CRelationClasses.simpl_crelation; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.072634	26568	5513
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_alt	40	40.153857	69367	5019
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.126625	56470	4063
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	40.080904	30640	6653
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.027898	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_lb	40	40.068615	23839	6941
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.073815	28016	4762
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.183433	85043	7066
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.115808	146	21	16	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.061500	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.132505	56963	5880
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.081887	77	7	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.075048	27410	6647
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.112174	47157	6317
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.049242	15675	2169
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.592655	276	79	8.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.060107	23298	4466
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.075941	27314	7217
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.055760	22129	2259
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.077573	32582	2612
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.117222	50583	6664
coq-tactician-stdlib.8.16.dev	Coq.Numbers.DecimalString.NilZero.sis	40	40.060442	18986	6008
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.094499	38907	5303
coq-tactician-stdlib.8.16.dev	Coq.Logic.Epsilon.iota_statement	40	40.262624	119120	8236
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.081004	33176	3580
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	40.060455	21532	6431
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.056119	16358	4536
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.143856	61081	3375
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.121883	49757	5737
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.008126	2954	336
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.044703	13674	2488
coq-tactician-stdlib.8.16.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.389770	192155	7807
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.083676	33627	4911
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.040554	13881	3288
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	2.332581	1297	285	8.1.0.2.0.0.2	synth with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.171140	75577	5268
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.759563	6923	1337
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.131976	55243	7013
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.629125	3304	458	12.4.0.6	synth with cache (only 1: intros x x'; only 1: unfold Empty; only 1: destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.120851	49610	6348
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.052125	19905	4117
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Nplength_ub	40	40.113268	46730	6872
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.056697	18704	4778
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalChoice.choice	40	40.157152	74550	7779
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.090792	38420	3790
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.069281	25770	2185
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.184928	91598	1920
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.041604	13213	1310
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.091310	35343	6943
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.086375	34766	6502
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.972871	561	149	0.0.10	synth with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.176519	77418	7292
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.058444	20196	2678
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.119693	52672	6420
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.035090	8327	3393
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.016763	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.16.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.129063	24661	4974
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.085038	31298	6038
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.048997	14674	4100
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.063041	26026	4540
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.083340	20803	3661
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.078205	27905	5182
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.004206	892	340
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.135100	55882	4488
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.122019	50297	6549
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.037517	11618	3175
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.087085	33557	3616
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.098432	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.109777	48065	5112
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.153259	65314	5218
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.074582	26231	4367
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.087263	34902	4662
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.079096	25773	4154
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_trans	40	40.114065	44806	6346
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.094672	40679	4281
coq-tactician-stdlib.8.16.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.075733	28362	3690
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.136817	63046	6028
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	19.460690	9364	2133	4.0.10.0.0.1.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: apply Qmult_le_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.012704	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.081083	18615	3836
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.109194	42158	3188
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.050334	14309	5815
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.036894	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.039921	10880	2888
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.026055	5568	795
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	2.973819	531	443	0.0.0.0.0.0.1.1	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.094001	38311	6117
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.134333	57342	6505
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qreduction.Qred_lt	40	40.072905	22100	2587
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.084893	34114	3914
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.045407	6744	3267
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.114791	49121	4950
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.144166	68472	6444
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.090858	34939	5217
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.049307	15043	7724
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.091593	36371	5606
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.078703	29471	4653
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005556	2083	208
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.071326	25014	2728
coq-tactician-stdlib.8.16.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.146731	24040	4385
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.078846	28853	5834
coq-tactician-stdlib.8.16.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.033348	8757	3802
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.075921	28656	4553
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.130826	59046	4045
coq-tactician-stdlib.8.16.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.062600	25345	2925
coq-tactician-stdlib.8.16.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.018645	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.026135	9	4	2.2.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.125653	53981	5715
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.087341	17618	2853
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.093411	38818	3535
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.079128	29849	5247
coq-tactician-stdlib.8.16.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.112668	31578	2088
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.009128	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.073108	8	1	7	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.013133	3	2	1.0	synth with cache (only 1: unfold Zlength; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.065354	23500	4889
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.029058	10641	2280
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qcpower_0	40	1.902659	1425	315	1.0.0.0.0.2.1.10	synth with cache (only 1: intros n; only 1: Nat.cases n; only 1: intro H; only 1: qc; only 1: now elim H; only 1: simpl; only 1: intros n IH; only 1: auto with qarith).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.060213	15	4	4	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.097555	36272	5183
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.081345	35242	4288
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.578057	273	62	0.0.0.1.8	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.056847	20792	4348
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.030856	6652	5400
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.105651	42404	4469
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.277439	80	37	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.118251	47948	3902
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.102495	41041	4862
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_refl	40	40.163985	70941	5954
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.429781	25751	3215
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.078640	30734	4676
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	34.559955	812	158	2.0.2.2.2.2.3	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.200164	91061	8621
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.122327	52191	4850
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.042469	11401	2269
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.059821	9	8	1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.127162	55051	7389
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.101433	41292	6400
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.032609	7	4	3.0.0.0	synth with cache (only 1: intros z Base Step; only 1: rewrite eq_option_alt; only 1: intro e; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.138042	56500	4235
coq-tactician-stdlib.8.16.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.128931	53745	6964
coq-tactician-stdlib.8.16.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.093435	39069	5609
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.339662	172983	4796
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.167260	27638	3394
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.093148	35375	9448
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.122822	51499	5593
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.108364	45562	5895
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.104150	39967	5607
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.136084	57557	5424
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.075088	31013	4219
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.057889	41	12	1.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.154320	68106	5145
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.292841	139819	2148
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.051958	19278	2874
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_spec	40	40.129802	57048	4211
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.not_prime_1	40	40.092248	41764	2917
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_refl	40	1.166135	571	120	0.12.2	synth with cache (only 1: destruct x; only 1: apply Nat.eqb_eq; only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.114313	44878	3890
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.030314	8512	5005
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.097503	33649	4871
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.772542	2255	613	0.3.0.1.0.7	synth with cache (only 1: intros z n H; only 1: apply Z.ge_le; only 1: rewrite ?eval_pol_sub; only 1: rewrite <- !eval_pol_norm; only 1: Z.nzsimpl; only 1: now destruct Hn || easy).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.117391	47119	5348
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.083385	31975	5835
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.093786	38801	3344
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.010670	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.007178	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.059206	19389	6651
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_sym	40	40.094707	33135	4235
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.345367	21158	2644
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007631	2656	142
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.105417	45702	3370
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.298804	48	16	5	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.289935	142225	10246
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.575821	389	97	0.8.1	synth with cache (only 1: intro n; only 1: Z.nzsimpl; only 1: Z.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.987998	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	40.093896	37017	4783
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.902876	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.080110	30033	6410
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.099279	42102	4747
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.076003	27559	5284
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.076934	27635	4885
coq-tactician-stdlib.8.16.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.148623	62999	6976
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.126429	56426	7094
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.483417	67	24	3.0.0.5	synth with cache (only 1: split; only 1: intro; only 1: intuition_in; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.074922	26	6	4	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.018556	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.byte_dec_bl	40	40.080531	10976	666
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.143671	62413	7248
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.079626	29610	4446
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.087794	32627	7297
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.148279	60094	7894
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.624456	527	82	1.0.10.4	synth with cache (only 1: intros l; only 1: intuition; only 1: intros z Hin; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.067001	19499	4800
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	1.735996	1765	140	15.18	synth with cache (only 1: intros m Hm IHm; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	0.235044	171	19	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.266014	2991	368	11.16	synth with cache (only 1: intro LS'; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.052899	15687	7438
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	30.000243	119610	2505	55.102	synth with cache (only 1: intro q; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.028110	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.127846	59844	3400
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.094350	41165	2417
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.100937	44088	5371
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_eq	40	40.089698	21921	5478
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_neq	40	0.015667	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.eqb_compat	40	0.026662	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.035371	8335	5397
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.035780	9030	3679
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.107222	43742	4952
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.051184	13959	3136
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.123160	55368	3867
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.805258	401	91	11.2	synth with cache (only 1: intros m; only 1: now destruct m).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.086947	37140	1958
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.092151	39189	3554
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.eqb_eq	40	40.057319	17303	7688
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.056609	18460	4722
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.042613	14109	3163
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.082250	30063	4739
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	5.904999	3143	680	1.0.1.1.2.6.2.2	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct p; only 1: reflexivity; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.024467	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.035099	12392	1066
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003586	800	160
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.061224	23376	2512
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.061431	21061	4687
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.find_left_path	40	40.147132	66820	6317
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.113641	50895	4550
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nless_def_2	40	3.838164	1844	710	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	26.748463	45519	3555	0.0.2.2.0.22.0.5.13	synth with cache (only 1: intro l; only 1: intros l' H; only 1: unfold Subset, Empty, impl; only 1: intros n m IH H1; only 1: do 2 rewrite inter_iff; only 1: intros (EQ, LE); only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.082094	27693	5425
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	40.092693	37260	4072
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.606075	199	56	0.0.3.6	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.132837	56376	5914
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.506855	2112	407	2.18	synth with cache (only 1: intros n m; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.276095	64	28	2.0.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.105113	40983	10351
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.099956	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.096120	32651	7249
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.099744	17621	1219
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	33.980828	42852	1582	0.0.5.122	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	1.219772	380	161	3.0.0.0.5.0.0.0	synth with cache (only 1: Nat.induct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros [| i]; only 1: auto; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.026926	7339	459
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	2.641846	3809	131	57.4	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.064586	24062	1318
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.044582	15491	2840
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.143638	63292	3392
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_le_2	40	7.511291	11278	1207	0.0.0.3.0.9.21	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.083544	35538	4233
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.046875	12498	6967
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.029293	6906	5361
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.032920	11594	1345
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.095214	37670	3609
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.120767	48040	5228
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.109627	3938	663
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.043725	12413	2108
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.133077	59865	3114
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.070195	23269	3788
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.index_correct1	40	40.103235	37883	7363
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.261539	11641	1399
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.179032	82861	4109
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.141498	29	10	0.0.0.4	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	6.143235	4047	458	17.14.1	synth with cache (only 1: intros x; only 1: intros Base Step n; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.166338	72937	4591
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.002753	921	100
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_minus	40	40.051875	16198	4910
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.241097	117256	6837
coq-tactician-stdlib.8.16.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.245797	118768	4993
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.144429	63984	6447
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N0_less_2	40	40.101670	42218	6930
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.166726	72163	5071
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	3.976204	2715	598	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.200885	92947	4254
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.103295	45855	6989
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.081768	26979	1982
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.071677	25958	6687
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.138106	63152	4839
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.062579	24854	2386
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.115584	49398	3998
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.064613	24808	4088
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.066784	26639	3410
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.073857	26930	3766
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.091052	38621	4260
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.565962	74	32	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.103260	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.026464	4	3	1.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N	40	40.064205	27331	2374
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.092303	40070	4005
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.101439	36206	5069
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.112798	49664	3771
coq-tactician-stdlib.8.16.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.137530	58021	4167
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.193173	85516	7028
coq-tactician-stdlib.8.16.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.055644	25398	437
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.115854	50651	4451
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	40.045037	12483	4596
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.index_correct4	40	40.114169	43226	8132
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	5.737808	10024	1152	15.22	synth with cache (only 1: intros a Ha; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.154772	21339	3058
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.140324	63106	4548
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.060189	19032	6160
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.057518	21057	3543
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001086	148	76
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	23.151791	17996	2603	3.16.3.0.7.0	synth with cache (only 1: intros m x; only 1: red; only 1: simpl; only 1: intros; only 1: compute; only 1: auto using (find_1 (elt:=elt)), (add_1 (elt:=elt)) with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.016545	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.063248	21298	6168
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.136936	61151	5867
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.101806	41257	5933
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.428671	219561	9084
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	2.798608	2235	351	3.0.3.0.9.3.1.2	synth with cache (only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: generalize (Z.compare_eq n m); only 1: intro H; only 1: destruct (n ?= m); only 1: auto; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zabs.Zabs_dec	40	40.158741	34936	5107
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.240352	59618	5965
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.142513	63646	4809
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.010159	1	1	0	synth with cache (only 1: apply Zle_is_le_bool).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.118819	52027	5721
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.646225	3522	387	0.0.0.6.33	synth with cache (only 1: intros n; only 1: destruct n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	0.227020	43	17	0.0.0.0.0.4	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.068129	26090	1862
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.080386	31335	5135
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.164257	76061	4808
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.078397	30938	1753
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.104655	44997	4270
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.049225	17292	3661
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.067832	21541	8664
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.032645	7748	4016
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.031617	9606	784
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.068853	27116	3565
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.041726	13888	3273
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.128357	50279	6144
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.078052	28176	4310
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.133931	53538	5407
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.323919	153046	1978
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.122458	51638	5373
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.041089	14440	3065
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	1.873431	8358	243	4.4.0.0.33.72	synth with cache (only 1: compute; only 1: elim s; only 1: reflexivity; only 1: intros; only 1: f_equal; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.056800	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.135520	59249	7289
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.084361	32236	4916
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_0_1	40	0.038578	13	5	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.050944	15546	2546
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	21.871761	10177	2558	1.6.0.0.0.1.1.1.8.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.118697	51076	2388
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.086087	31921	4369
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.142968	31	16	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.113116	45106	5167
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.075241	29164	4953
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.061803	21512	4223
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	2.038446	736	236	0.0.0.4.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.143914	65019	4793
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rlt_plus_1	40	4.399919	1554	715	3.9	synth with cache (only 1: intros p; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.444599	166437	5100
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.S_INR	40	1.244601	293	74	0.3.1.3.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000693	61	28
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.245338	48108	5442
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.008698	2	1	1	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.393858	60	19	2.5	synth with cache (only 1: unfold Z.le, Z.max; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.028469	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.423660	206603	2938
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.034285	11328	3051
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.034216	9607	3674
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.054151	16252	2208
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.114547	53325	1718
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zegal_left	40	40.281074	18277	2815
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zle_left	40	0.010304	2	1	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.012551	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.009672	2	1	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.709655	4617	146	63.6	synth with cache (only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.082845	24421	680
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.095155	35651	7161
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	21.307986	18715	3058	3.19.6.3	synth with cache (only 1: intros f Hf; only 1: intros a n H; only 1: intro l; only 1: eauto with set).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.144444	64959	884
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.081616	33568	4159
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.242783	47836	3929
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.064352	23657	3549
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.991084	239	50	2.0.3.8	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.063829	14930	5219
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	25.267993	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.030265	8532	1470
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.042608	11161	3889
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.007606	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.602825	27	11	7	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.014046	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.078500	24872	5567
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.017681	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.043799	13049	4447
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	35.763501	30250	4806	0.0.0.0.0.0.0.1.0.0.0.2.0.0.0.0.0.0.0.0.0.0.9.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: simpl; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.017644	11	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.524013	266781	1986
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.092366	40774	3147
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.049537	21763	1693
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.092531	35633	2962
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.123784	48963	6921
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.147180	62509	5129
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.066912	22908	3832
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.109472	36066	3833
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.307129	95559	4394
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.plus_INR	40	40.026207	7694	2178
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	5.956367	12444	697	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.48	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.269149	72200	5153
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zone_pos	40	0.881554	544	53	24	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.not_Zne	40	40.239089	69542	3578
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.138540	56389	4832
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.978741	262	65	3.1.7	synth with cache (only 1: intros; only 1: unfold Z.geb, Z.leb; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	2.630423	6060	544	39	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.946854	332	85	0.0.0.9.1	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.074204	28383	3465
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.162544	74015	5922
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.083914	33794	3815
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.033371	9988	1448
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.370067	48799	4961
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zge_left	40	0.145900	60	11	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.032889	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.020266	4706	2376
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.180941	78750	5847
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	8.040251	6030	1528	0.0.0.20.0	synth with cache (only 1: unfold Z.gtb, Z.gt; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.024362	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	1.956858	1059	255	0.0.3.0.6.0.1	synth with cache (only 1: unfold Zeq_bool; only 1: intro H1; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.043003	17606	2320
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.086577	35112	5237
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.043148	13248	1372
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N_nat_Z	40	40.344533	50139	4279
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.033992	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.positive_N_nat	40	0.008072	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.000978	147	43
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.047116	16308	3188
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.161558	73065	4707
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.107050	46104	4771
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.042552	13494	3896
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.096384	26908	5803
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.012143	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.049848	21256	1132
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	3.065989	515	331	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.125242	56871	7774
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.094789	35644	3779
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.062254	10261	2091
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.119781	50201	5800
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.097851	35629	6306
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.202213	92079	5575
coq-tactician-stdlib.8.16.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.726419	262	95	0.0.0.0.0.0.0.0.0.0.3.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.099178	39073	5432
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.235026	59762	1524
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.minus_INR	40	40.091398	39785	4257
coq-tactician-stdlib.8.16.dev	Coq.micromega.Env.S.nth_jump	40	0.437707	391	57	4.4.3.9	synth with cache (only 1: destruct p; only 1: easy'; only 1: now destruct p; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Env.S.nth_pred_double	40	0.021447	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.017580	9	3	1.1	synth with cache (only 1: red; only 1: Nat.order).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.006721	3	1	2	synth with cache (only 1: exact Nat.le_trans).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.675902	742	105	19.4	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.186530	42861	4933
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zge_trans	40	0.051943	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.078461	29191	5337
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	40.197436	42852	3608
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.166603	78015	10612
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.096766	40700	3838
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_dec	40	1.435121	1030	228	1.0.0.7.1.1.0.0.7.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.067400	22936	3955
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.100991	43014	3943
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.067222	26163	1461
coq-tactician-stdlib.8.16.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.267742	28007	2768
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.030627	9461	2533
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z_nat_N	40	26.468165	19561	2119	0.0.0.1.0.0.0.0.2.2.0.0.19.3.7	synth with cache (only 1: bitwise as m; only 1: f_equal; only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: N.order_nz).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.105456	41392	3572
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj	40	2.738721	2927	352	1.0.0.1.0.1.0.0.15	synth with cache (only 1: destruct n, m; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.013798	8	1	7	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.223828	105953	5631
coq-tactician-stdlib.8.16.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	3.484874	8969	478	22.21.53	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: destruct y; only 1: now destruct x).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	2.403817	271	148	1.10	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.080239	16	9	2.3	synth with cache (only 1: repeat red; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.023357	7	4	0.1.2.0	synth with cache (only 1: do 2 red; only 1: induction l; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.041617	14	5	4.0	synth with cache (only 1: intro; only 1: simpl_relation).
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006454	5	1	4	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.009986	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.16.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.070139	4062	605
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.086355	33326	5076
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000735	120	29
coq-tactician-stdlib.8.16.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	6.070888	7585	1214	4.1.22.0	synth with cache (only 1: intros A ? x y z H H0 H1; only 1: rewrite H1 in H; only 1: assert (x == y) by (transitivity z; eauto); only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.130369	59815	3154
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.087542	34512	5132
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.089666	34889	6703
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.046904	12656	5508
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.133401	56836	5691
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.107435	46456	5978
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.012193	4	2	1.1	synth with cache (only 1: repeat intro; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.060018	17297	7701
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.097904	39237	3754
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.284701	18839	3583
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.128167	52671	6677
coq-tactician-stdlib.8.16.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.078848	30020	3717
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	11.069016	8025	855	2.0.0.30.1.2	synth with cache (only 1: intros LT; only 1: intros H; only 1: destruct 1; only 1: compute in H0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.310941	150856	3849
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.mult_INR	40	40.053936	19164	4108
coq-tactician-stdlib.8.16.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.032030	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.224795	110752	2487
coq-tactician-stdlib.8.16.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.204667	59801	9216
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.image_empty	40	2.698888	2128	518	2.0.1.3.1.1.0.3.1	synth with cache (only 1: intro H'5; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: red; only 1: destruct H1; only 1: elim (Noone_in_empty U x); only 1: auto with sets; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.483967	351	83	3.2.7.2	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.089310	34597	6134
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.127139	34421	5933
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.120872	47975	4974
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.177729	85549	5389
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_comp	40	40.118260	39419	4510
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.137996	43416	5281
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.057484	5	3	0.2.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	14.603516	13267	1948	37.2	synth with cache (only 1: intros; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.591900	2350	248	11.0.0.3.2.1.1.27	synth with cache (only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: easy; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.083480	8	4	0.1.3.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.071971	28995	1432
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.047503	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.026197	7716	3025
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.114968	47473	4696
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.172969	48244	7414
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.162008	38981	6149
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.425317	114416	2631
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.031765	9967	1416
coq-tactician-stdlib.8.16.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.104915	40596	7560
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	22.159126	15023	4479	3.8.0.10	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_cons	40	1.008329	262	57	8.0.1	synth with cache (only 1: repeat red; only 1: intros f g l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA8	40	40.109220	45279	2831
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001117	209	35
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.766806	1452	439	0.0.0.0.0.2.6.1.0.0.2	synth with cache (only 1: induction 1; only 1: easy; only 1: intuition; only 1: simpl; only 1: simpl in *; only 1: destruct H0; only 1: auto; only 1: auto; only 1: cbn; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.215038	22289	2928
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.047612	15087	4400
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	40.146060	61101	3815
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.102446	42179	5487
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.079420	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.203533	29405	7292
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.131786	39015	5015
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.393648	11104	2399
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.122899	45758	4889
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	6.582367	7224	1083	2.3.2.5.14	synth with cache (only 1: intros x H; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.168883	8847	1170
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.lt_0_INR	40	40.078590	28208	4852
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.163538	40131	1914
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.010027	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.010220	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.008597	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.004340	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.007344	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.007469	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.148030	28062	3777
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.168777	71828	7392
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.118740	54867	2425
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.028611	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.008896	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.007384	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.172514	36051	6073
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.253708	121561	4799
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Znot_le_succ	40	0.433640	585	70	1.19	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.058842	4	2	1.1	synth with cache (only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.010980	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.293408	135437	6737
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.099504	44786	4509
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.061324	23432	2613
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.067235	20451	1928
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.031524	9266	1874
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	6.931621	4392	1324	1.2.0.0.1.0.1.1.0.6	synth with cache (only 1: induction l; only 1: intros l'; only 1: intros H H0 H1; only 1: constructor; only 1: intros; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.102763	40882	4028
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.105159	24263	7957
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.201101	26045	3874
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.177434	17993	4835
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.069951	29164	1817
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.297496	22308	2359
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	32.111538	168002	1777	15.296.0	synth with cache (only 1: unfold singleton; only 1: repeat red; only 1: intuition eauto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.274829	70784	8347
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.093446	41789	2124
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.084668	30226	6277
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.072534	24208	5629
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorEq.CAST.cast	40	1.397245	700	211	13	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.121363	43308	2474
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.136508	60202	5394
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.002674	389	48
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	40.207439	43093	4862
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.192836	57062	6869
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.128259	54171	3984
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zle_compare	40	3.630878	4634	446	1.0.0.0.3.22	synth with cache (only 1: intros n Hn; only 1: case Z.compare_spec; only 1: unfold Z.le, Z.max; only 1: intuition; only 1: intuition; only 1: intuition Z.order).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.442893	212	64	1.1.0.4.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: intro H1; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.051553	20203	3571
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.133967	27354	6042
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.080960	27879	7122
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	2.976691	2828	491	0.1.1.15	synth with cache (only 1: intros a; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.118698	50002	8828
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.068925	29482	3055
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	38.223329	13405	1405	19.0.0.6.9.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: nzinduct p; only 1: now Z.nzsimpl; only 1: intro p; only 1: Z.nzsimpl; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.116654	44914	8079
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	4.856529	3090	639	0.0.0.0.0.0.0.10.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: dintuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.185235	15760	1754
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.170407	76429	5567
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	10.512979	9927	1746	2.5.0.18.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hy; only 1: rewrite Hx; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.145126	63993	6721
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.051779	16968	3143
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.038133	10	4	0.1.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.056274	8556	980
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.274564	100436	4007
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.022923	6651	2354
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.123428	27978	6221
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.047316	13740	5106
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.027423	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.181852	42147	7612
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.004091	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.300423	98721	3376
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.045493	14101	3350
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.017154	6	2	3.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.028040	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.015116	3	2	1.0	synth with cache (only 1: unfold elements; only 1: constructors).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.034957	11624	1383
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	8.744719	4186	242	5.1.0.0.1.37	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.063358	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.133873	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.005740	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007013	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.le_INR	40	19.279081	11246	2676	4.0.18.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: destruct n; only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.352786	82993	3823
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	14.050144	19694	2343	21.3.18	synth with cache (only 1: intros l; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	7.133313	2362	309	3.3.1.9.2.14	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.236235	114614	5684
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.400974	711	199	0.10.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	7.842074	11076	1251	0.0.2.2.25.0.0.0.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_not_0	40	7.625065	3968	840	1.1.3.7.0.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction n; only 1: intro; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.omega.OmegaLemmas.OMEGA16	40	40.083383	37296	2294
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.115513	43858	5621
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.247441	11657	1913
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.103247	40343	3087
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.104406	44722	3912
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.008711	514	82
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.197223	33700	8466
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.069889	15493	3738
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.142466	13583	4202
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.014344	5	2	3.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.177429	99	23	3.1.3	synth with cache (only 1: intros m H; only 1: inv; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.170666	78344	9776
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.299569	51395	2975
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.154036	66335	3044
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.009486	6	1	5	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.033866	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.041336	16443	2376
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.012661	4	1	3	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.032833	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.011522	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.107626	39189	5913
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.673689	1701	207	7.1.4.4.22	synth with cache (only 1: split; only 1: repeat red; only 1: intros n m p q H1 H2; only 1: now f_equiv; only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.119504	51933	6249
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	5.957525	1531	845	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.072816	29303	3050
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.495184	128	27	0.0.0.11	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.147486	112	20	5.4	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.012841	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.206143	78196	7385
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.188361	83954	5789
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.070251	29487	2450
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.055204	18418	2051
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	2.776456	712	152	19	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.406844	468	263	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	19.610072	8032	1434	4.0.2.0.0.0.15.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: trivial; only 1: induction l; only 1: simpl; only 1: constructor; only 1: constructor; only 1: cbn; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.662773	510	37	14.13	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.118906	36582	7633
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.014699	3331	2129
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.108961	44929	6889
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.180087	25100	3978
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.028060	6470	1789
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.141839	44609	4524
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.063623	24822	5124
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.482252	146	38	0.0.0.2.1.3.1	synth with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	10.120051	10230	698	63	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.128235	117	16	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.050445	20326	2756
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.030031	10023	1292
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.143574	25046	5351
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.062722	21973	3777
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_eq	40	40.072936	28105	5634
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.opp_succ	40	12.661248	14472	2808	0.0.1.0.1.0.6.0.0.0.0.8.3.3.0	synth with cache (only 1: apply opp_inj; only 1: apply opp_inj; only 1: apply opp_inj; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.011844	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.068004	25099	5995
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.013657	2	2	0.0	synth with cache (only 1: intros; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.064289	24500	4559
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.039248	11683	6152
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000923	54	30
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.192364	82098	7119
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	40.110859	46091	6178
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	1.846329	2290	223	0.0.9.7.0.14	synth with cache (only 1: intros H0; only 1: induction 1; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.028217	8624	2393
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.069916	15	7	0.0.0.0.0.2	synth with cache (only 1: intros [| n]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.079615	30068	6305
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.062117	26720	2606
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.064273	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.025784	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.064524	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.055458	17588	5589
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.047127	6912	2991
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.038370	12737	3473
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.290591	113164	5917
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.153790	13891	5153
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.082821	34171	3956
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.095235	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.054822	9586	1397
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.100103	40667	7636
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.113407	31143	5972
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.130785	30306	6092
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.117882	52611	2679
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	26.726588	28827	6760	1.0.0.0.22.0.3.0.3	synth with cache (only 1: destruct s; only 1: inversion_clear 1; only 1: now constructor; only 1: simpl; only 1: descolor; only 1: split; only 1: contradiction; only 1: contradiction; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.042321	16339	1350
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.190485	502	139	4.5.0.0.1.0	synth with cache (only 1: intros [| x acc]; only 1: intros; only 1: exfalso; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.140308	22418	3248
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.052653	16603	4560
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.055332	17651	5051
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.137491	39017	3302
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.150712	48846	306
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.id	40	0.291596	7	5	0.2.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: reflexivity; only 1: now destruct Hn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.025358	2	2	0.0	synth with cache (only 1: simpl; only 1: now N.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.010328	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	16.426622	14885	1946	2.0.0.0.0.1.0.1.0.1.1.7.0.0.0.0.1.1.0.9	synth with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: Z.swap_greater; only 1: Z.order; only 1: discriminate; only 1: simpl; only 1: Z.swap_greater; only 1: destruct 1; only 1: intros H; only 1: Z.order'; only 1: easy || now destruct y; only 1: trivial; only 1: simpl; only 1: trivial; only 1: Z.swap_greater; only 1: now destruct 1 || intros _; only 1: simpl; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: easy || now destruct y).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	0.865729	890	85	17.17	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.104494	40096	8501
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	2.326217	2852	391	6.18	synth with cache (only 1: intros H a l H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	1.382176	718	160	0.12.0	synth with cache (only 1: intros Hn Hm; only 1: unfold N.ltb, N.lt; only 1: now rewrite <- N2Z.inj_compare, !id).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.057958	23158	1744
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.161701	30282	5598
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.not_1_INR	40	40.035743	12160	2958
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.max_r	40	40.098364	36109	7927
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.059265	16	5	6.0	synth with cache (only 1: unfold le, max; only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.756507	237	95	0.0.0.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.019100	7	3	0.4.0	synth with cache (only 1: intros; only 1: now rewrite Pos.sub_xI_xI || now rewrite Pos.sub_xO_xO || now rewrite Pos.sub_xO_xI || now rewrite Pos.sub_xI_xO || subst; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	1.039704	488	128	0.0.0.5.4.1.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: intro n; only 1: order; only 1: trivial; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.014133	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.015645	3	2	1.0	synth with cache (only 1: simpl; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.178686	32191	6352
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.079390	33881	6101
coq-tactician-stdlib.8.16.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	1.123457	494	130	0.4.6.0.0	synth with cache (only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.151190	70686	5551
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000724	57	32
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.107609	44492	6655
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.086280	34223	5802
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	32.959510	73212	3628	36.26.0.129	synth with cache (only 1: assert (forall s s', s = s' -> ~ L.lt s s'); only 1: Nat.order; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.040906	14333	2618
coq-tactician-stdlib.8.16.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.076918	30634	8023
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.060907	19726	3674
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.039122	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.052345	17934	2997
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.241584	106588	9227
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.165356	76078	8751
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.084624	35010	4142
coq-tactician-stdlib.8.16.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.039311	8470	1310
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.248882	106595	10329
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	1.989194	192	33	0.0.12	synth with cache (only 1: compute; only 1: intro l; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.017389	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.085316	219	99	0.0.1.2.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: inversion_clear H; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.706658	108	60	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.090733	34435	7221
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.133807	24031	6802
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.483025	1204	201	0.0.0.0.0.0.0.1.13	synth with cache (only 1: intros f Hf; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.065877	25669	4133
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.034404	12480	1617
coq-tactician-stdlib.8.16.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.664760	888	259	1.9.1	synth with cache (only 1: red; only 1: intro eq_dep_eq; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	1.501083	1163	198	8.12	synth with cache (only 1: intros s' i j heqij heqss'; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.035514	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.079450	31799	3504
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.215778	52858	4867
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.073851	26604	4474
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.070420	29136	2504
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.009900	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.104718	15913	879
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.114914	45789	6887
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.149806	40863	5273
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.id	40	0.027202	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.046853	8	6	0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.067683	27079	4257
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.221833	10	4	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.16.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.032801	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.032028	11662	1900
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.INR_IPR	40	40.063190	23728	4294
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.174958	71362	4031
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.138700	57470	4075
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.179246	30263	4043
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.071525	11	10	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.082928	17	11	0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.462347	225369	4706
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000698	84	36
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Finite_alt	40	40.188123	85937	6353
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.199417	13140	2064
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.024221	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.339999	166922	7309
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.184099	84942	2379
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.discr	40	16.656446	105271	2447	0.91.0.1.102	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: constructor; only 1: now exists n).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.015987	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.014854	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.043623	10721	4479
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.010594	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.100255	41036	5436
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.188268	81160	5408
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.059974	18060	8112
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.054702	19040	3831
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.176100	46229	7547
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.088406	35827	6309
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.057203	19747	5162
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.114718	40927	5358
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.218744	7908	1042
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.030235	10389	2326
coq-tactician-stdlib.8.16.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.111615	46712	7190
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.707372	851	247	0.0.0.1.0.0.1.1.2	synth with cache (only 1: intros n m p; only 1: split; only 1: inversion 1; only 1: auto; only 1: subst; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.108774	46620	6615
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.099723	39123	6982
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.170786	55	30	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.16.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	1.398265	565	159	0.0.0.7.1	synth with cache (only 1: unfold eqk, eqke; only 1: intros s' s x **; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.883389	4333	770	9.13	synth with cache (only 1: intro A; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.051109	15317	3338
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.798094	359733	2633
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.169084	22748	1452
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.144214	21324	5761
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.028025	6	4	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.109147	44598	6382
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.015202	4609	1440
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.of_nat_ext	40	40.259587	118592	4440
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.mult_IZR	40	40.067071	24810	3946
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.148783	63077	5233
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.083047	13653	2580
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.031163	8	5	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Rtauto.with_env.compose0	40	14.998335	27821	3203	9.2.2.1.30	synth with cache (only 1: intro H; only 1: induction F; only 1: destr_bool; only 1: unfold push, map, contents, index; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.090532	39140	4631
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.083133	27137	7424
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.014171	9	2	2	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.094969	39216	5596
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.198666	48692	5805
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.183560	26772	8594
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.091022	37215	6473
coq-tactician-stdlib.8.16.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.172344	1005	155	2.0.12.7	synth with cache (only 1: firstorder  auto with crelations; only 1: inversion H; only 1: firstorder; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.bi_induction	40	40.134227	57335	6630
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.041736	9765	5446
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.114588	50248	2679
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.074089	27325	5692
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.234754	97496	6004
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.053150	20427	4139
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.230992	70951	5845
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.074207	28564	5685
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.119596	26119	3428
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.038804	8411	1596
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.024012	7862	1800
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	40.136661	59887	9993
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Prop.NNPP	40	40.295520	142650	10670
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.071403	25252	4692
coq-tactician-stdlib.8.16.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.179239	44	20	0.5	synth with cache (only 1: intros n m H1 H2; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.180001	83186	6077
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.178705	42215	4335
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.093703	40056	3359
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.139721	29633	2038
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.152148	28845	6580
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.008737	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.595726	97	55	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.147475	56607	5819
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.470828	493	134	0.1.1.1.3.0.5	synth with cache (only 1: destruct n; only 1: easy; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.022890	7283	1615
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.222277	104128	4749
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	1.498894	612	204	0.1.0.0.0.0.0.0.0.2.2	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.020425	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.succ_IZR	40	40.052011	17971	4541
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	40.206975	80593	4465
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	10.497751	6534	584	30.1.2.0.17	synth with cache (only 1: simpl; only 1: unfold to_nat; only 1: simpl; only 1: f_equal; only 1: exact (inj_mul 2 p)).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.216274	81114	3354
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.L_R	40	6.274987	8325	332	10.0.2.99	synth with cache (only 1: induction n; only 1: Nat.nzsimpl; only 1: assumption; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.126619	58084	4677
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.395624	179837	14537
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.071754	24740	6125
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.296932	136527	6345
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.make_conj_impl	40	12.745097	8622	3120	2.0.2.6.0.0.0.0.0.0	synth with cache (only 1: intros A eval l; only 1: intro; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: cbn; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.250802	39779	7502
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.009692	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.126773	55280	6202
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.057087	31	14	0.0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.029036	10871	1343
coq-tactician-stdlib.8.16.dev	Coq.Arith.Euclid.eucl_dev	40	40.156732	67553	3782
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	3.097879	1864	683	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.533344	210	87	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.032737	13	3	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.117362	43033	6960
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.067514	24957	5165
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.200015	62641	3672
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.053616	17902	3682
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.114442	23634	5630
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_refl	40	0.040537	41	8	6.2	synth with cache (only 1: red; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.213002	101692	7171
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	30.098673	22410	5134	5.0.0.0.0.0.1.0.0.0.0.8.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.080163	30593	4584
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	22.809256	20986	3181	19.0.8.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.081851	32960	6156
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	40.073515	18873	2598
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.032161	8	5	1.0.1.0.1	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	15.050814	19344	4030	1.30	synth with cache (only 1: intros; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.029696	10991	1274
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.010505	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.008116	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.110471	26070	4533
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.044214	11550	4587
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.142025	61039	9080
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.081464	32571	4727
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.764227	1825	745	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.093382	39860	5829
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.107533	12867	5043
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.005654	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Z_R_minus	40	40.066899	25357	4302
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.130026	1319	112	4.4.9.25	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.028024	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	40.129802	55936	5758
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.106138	41749	5265
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.230879	17220	5963
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.101295	42966	6562
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.078973	31901	5207
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.131626	56638	6441
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	4.199271	2660	551	11.0.0.9.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.223544	54296	7711
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.236194	42520	6393
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.make_conj_rapp	40	40.083790	33084	7485
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.039977	10348	4380
coq-tactician-stdlib.8.16.dev	Coq.Arith.Euclid.quotient	40	40.069246	25892	4309
coq-tactician-stdlib.8.16.dev	Coq.micromega.Refl.not_make_conj_cons	40	5.920557	1869	539	0.0.0.3.0.1.2.2	synth with cache (only 1: simpl; only 1: intros A eval l; only 1: intros n m; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.108674	43515	9659
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.009635	1	1	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.092463	34846	6690
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.093641	39013	6372
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.157083	63521	4512
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_trans	40	40.163849	67677	6050
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.189468	87844	7986
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	40.195204	91635	9146
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	0.480059	110	26	1.7.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: Z.order').
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.zerop	40	2.994653	3702	362	25.0.0.10	synth with cache (only 1: induction n; only 1: now left; only 1: right; only 1: Nat.auto').
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.067581	23263	6805
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.021352	5414	2567
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.097267	38687	8740
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.174706	81616	6146
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.076022	15284	3460
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.134024	7	4	2.1.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.238468	113006	6213
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.297358	176	51	0.5.4	synth with cache (only 1: intros l; only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.022918	8766	703
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.020501	5184	2424
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	7.936878	11784	1182	0.0.0.1.0.0.1.4.0.24.0.17.12	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: apply Nat.le_0_l; only 1: destruct m; only 1: right; only 1: apply Nat.lt_0_succ; only 1: elim (IHn m); only 1: intros H; only 1: left; only 1: now apply le_n_S; only 1: intros H; only 1: right; only 1: now apply Nat.succ_le_mono in H).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.030320	7486	4340
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.099862	42226	8346
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.122645	47	19	1.0.0.0.2	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.165784	74721	7955
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.004091	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.066046	26506	3687
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.eq_IZR	40	40.026757	7055	2845
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.097589	36348	7536
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.080821	29877	6698
coq-tactician-stdlib.8.16.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.041108	14994	1828
coq-tactician-stdlib.8.16.dev	Coq.Vectors.Fin.eqb_eq	40	40.082609	31610	7268
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.062517	24253	5326
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.071914	27600	5206
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	40.285633	39960	6772
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.destruct_list	40	19.724162	82051	2686	103.23.27	synth with cache (only 1: induction l as [| T l IHl]; only 1: RelationClasses.simpl_relation; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.079488	29858	7456
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.107514	28468	5141
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	0.993692	550	101	0.0.16	synth with cache (only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.029415	10064	2129
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	14.121451	7330	1771	3.1.2.0.2.2.7	synth with cache (only 1: revert m; only 1: unfold Z.geb, Z.ge; only 1: Nat.cases ltac:(n); only 1: intro m; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.713814	278	56	11	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.leb_le	40	40.070008	26388	9192
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.076348	25849	6799
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.164140	74251	6130
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.143546	63531	6425
coq-tactician-stdlib.8.16.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.028962	4	4	0.0.0.0	synth with cache (only 1: intros P ? ? l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.190075	72382	6327
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.140718	61943	6893
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.exists_le_S	40	12.954310	15161	1930	1.25.1.1.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: auto; only 1: apply le_n_S; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.053715	18808	6234
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.156316	72597	4706
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.121612	51037	6661
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.097786	38637	6768
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.063279	25887	3476
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.152164	30275	5165
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.269143	192	27	2.0.10.0	synth with cache (only 1: constructor; only 1: intuition; only 1: inv; only 1: constructor).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.110839	48201	7041
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.184236	128	29	0.10.0	synth with cache (only 1: intros x y H; only 1: elim H; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.010378	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.033755	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.018357	6240	1544
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.le_dec	40	40.107922	44974	8665
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	10.432351	3616	452	19.1.3.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.014013	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.006968	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.083283	29043	9012
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.087842	35362	7562
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.054983	13385	2986
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.105282	42662	8876
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005154	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.041259	12462	1865
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.le_0_IZR	40	40.090807	36683	4970
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.gt_dec	40	9.560052	9129	1856	0.1.10.19	synth with cache (only 1: revert n m; only 1: intro m; only 1: intro H; only 1: apply le_dec).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.ge_dec	40	0.025656	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.081422	31956	6569
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.125968	56395	6781
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.068548	26091	4403
coq-tactician-stdlib.8.16.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.146703	66131	3676
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	40.192428	90972	4316
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.293623	144930	5125
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	0.155475	39	15	0.2.0.1.1	synth with cache (only 1: destruct l as [| x xs]; only 1: intro m; only 1: discriminate; only 1: red; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.005343	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.129256	27703	2967
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.078228	31001	5433
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	5.148508	3434	1143	1.0.1.1.0.0.1.0.0.0.0.6	synth with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.046817	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.046079	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.159767	40555	3932
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.not_eq	40	14.712626	12562	2144	5.1.12.18	synth with cache (only 1: intuition; only 1: destruct (lt_eq_lt_dec n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.not_lt	40	0.008370	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.127402	52661	5325
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.080736	29400	9056
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.098062	38940	4704
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.064296	23238	4923
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.246293	113690	5764
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.052028	16060	8786
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.between_in_int	40	40.178306	80302	10347
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	40.327933	158147	6867
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.096775	40341	5264
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.027040	831	439	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.app_eq_nil	40	13.722583	13090	3627	18.0.5.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now intros ->; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.091149	35555	6277
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	1.845695	1354	125	27.7	synth with cache (only 1: intro; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	0.104497	20	7	1.1.0	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.in_int_between	40	2.576733	2082	417	0.0.5.9.0	synth with cache (only 1: intro k; only 1: induction 1; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.app_length	40	0.798284	581	132	0.1.0.12.1	synth with cache (only 1: intros n m; only 1: induction n; only 1: split; only 1: simpl; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.in_eq	40	0.099754	69	18	5.3	synth with cache (only 1: intros ? ?; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Facts.in_cons	40	0.024877	12	5	0.0.3	synth with cache (only 1: intros l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.016509	4	3	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.175103	79169	6311
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.147872	67865	5657
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.011134	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.184908	2904	210	0.24.4.0	synth with cache (only 1: intuition; only 1: apply (Raw.elements_3 (elt:=elt)); only 1: case m; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.147802	7204	1653
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.085735	33718	4865
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.036119	13413	1545
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	6.497571	2900	935	0.0.1.1.0.0.7.1.0.7	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.080052	28582	10821
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	4.383948	19862	846	1.0.1.72	synth with cache (only 1: intros (c, Hc); only 1: apply Raw.PX.Sort_NoDupA; only 1: apply (Raw.elements_3 (elt:=elt)); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	4.673241	3403	640	0.2.0.9.6	synth with cache (only 1: intros E; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.175028	72551	8091
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	4.967967	2773	758	0.3.2.1.0.5.0.2	synth with cache (only 1: intros l; only 1: intros [y H]; only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros x a0 **; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: eauto with *).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.124088	21360	6829
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.059916	18176	3840
coq-tactician-stdlib.8.16.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.112734	43468	9017
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.137558	60070	6163
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.IZR_ge	40	40.057192	22340	3688
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.097438	38266	6612
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.107778	45800	7381
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.718379	105	50	2.0.3.0	synth with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: now Z.nzsimpl; only 1: now apply Z.mod_add).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.139736	62110	10713
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	1.538239	673	189	0.0.2.5.0.1	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros EQ; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.098717	41168	4798
coq-tactician-stdlib.8.16.dev	Coq.rtauto.Bintree.Map.get_map	40	40.182616	27428	6163
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.073797	26556	6278
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	3.302402	2658	551	0.6.3.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros H; only 1: now zero_or_not b; [ intros; subst | apply Z.mod_opp_l_z ]).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.200500	20044	4447
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.105465	29282	4810
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.011150	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.068833	23905	9664
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007407	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.009782	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	14.474544	10896	2698	2.0.0.3.5.1.7.6.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl; only 1: Nat.cases ltac:(n); only 1: trivial; only 1: induction n as [| n H]; only 1: simpl Pos.of_nat; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.min_l	40	40.094192	35149	9553
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_spec	40	0.062207	3	1	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.148625	64429	9293
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.047652	14520	4875
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.174216	43872	7245
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.054592	16935	5758
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.077206	31568	5897
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.254975	30	20	0.1.2.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.030590	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.103878	42840	7449
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.216438	107660	2657
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.in_int_exists	40	40.154344	71971	5694
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.128563	54002	9232
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListDec.uniquify_map	40	40.094637	37524	7390
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.019181	5279	1586
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.070482	24755	5776
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	7.375544	3646	1311	0.0.7.6	synth with cache (only 1: intros x; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.086347	32475	12304
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_add	40	13.537932	7465	1748	0.1.0.0.1.0.2.0.15	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: unfold succ, add; only 1: split; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.map_2	40	40.102598	44916	5607
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.123994	27275	2985
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.107689	45375	7899
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.203245	13404	2729
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.070683	23808	6946
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.045563	14676	4198
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.081062	23725	6839
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.succ_double_add	40	5.634826	886	274	0.1.0.0.1.0.4.0.3	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: split; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.div2_double	40	0.018791	5	4	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.030045	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.178018	80207	6565
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.090332	38667	4367
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.166121	42	20	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_lt_mono	40	5.569472	2401	371	10.4.2.0.5	synth with cache (only 1: cases m; only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros m IH; only 1: now destruct n, m).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.273582	41	28	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	9.092995	3398	1603	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.198219	92836	12670
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	36.897592	19558	4138	17.0.7.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	2.988220	1732	543	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.191433	39838	5804
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.048538	14590	4746
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	17.742615	6918	1827	0.0.0.0.4.3.3.2.0.2	synth with cache (only 1: intros l k e H H0; only 1: invlist InA; only 1: intuition; only 1: inversion H; only 1: subst; only 1: constructor; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.080227	30582	7270
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.146658	17231	7294
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.127143	40075	3895
coq-tactician-stdlib.8.16.dev	Coq.Arith.Compare_dec.leb_compare	40	40.062894	20697	10846
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.122897	53565	8069
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.133117	49966	8810
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.042516	11374	4808
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.156831	25202	3567
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.079553	25685	7815
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.048197	16838	4405
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.027158	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.064275	23948	5702
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.between_or_exists	40	40.116300	50101	8206
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_In	40	40.118033	46909	10417
coq-tactician-stdlib.8.16.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	31.762780	17104	5305	0.0.0.3.1.2.1.1.0.2.0.2	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_sym; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_left; only 1: apply munion_perm_left; only 1: apply munion_ass; only 1: apply meq_sym; only 1: apply meq_right; only 1: apply meq_left; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.070473	24063	1663
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012808	3393	1408
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.087289	32895	5746
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	6.386461	1317	627	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.065936	22265	5609
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.067233	23499	9660
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.013798	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.094127	38452	6152
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.087074	32322	5198
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.102062	27610	7587
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.047396	18556	1881
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.073348	28316	6088
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.049632	18191	3947
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.double	40	0.421688	175	31	5.5	synth with cache (only 1: intros a; only 1: ring).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pow_neg_r	40	40.166764	50128	5482
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	15.422002	9040	4089	0.0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.148916	65797	12940
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.089873	32992	6649
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	16.187510	9099	1274	1.0.3.0.0.23.3.3.0	synth with cache (only 1: induction s1 as [| a s1 IHs1]; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.076443	24629	7351
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.295515	65	40	0.2.0.0.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.169974	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.137312	29	22	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.031122	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.218644	32526	5329
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.048986	13298	5441
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.619849	223	78	0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.249259	23528	2507
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.838235	141	86	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.074316	27326	6468
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.min_l	40	7.950365	4371	2068	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.164896	25109	6707
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.098622	33276	5593
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.004235	2	1	1	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.010567	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.074602	23991	5437
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.083168	30082	5483
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.124184	52819	9035
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.038085	10668	4168
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.077023	24141	8367
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.122665	32473	7210
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.213012	95777	6184
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.size_log2	40	18.407201	16155	2959	21.0.0.0.5	synth with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	10.963992	7183	2096	0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.nth_le	40	40.104572	42836	6515
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.In_nth	40	40.154426	64752	7314
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	13.049932	9850	1405	0.2.14.0.17	synth with cache (only 1: intros Heq; only 1: intuition; only 1: inversion H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.079331	29636	7176
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.065429	21969	4294
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.037655	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015754	4670	1494
coq-tactician-stdlib.8.16.dev	Coq.Arith.Between.Between.event_O	40	5.382966	31211	858	2.3.43.19.17	synth with cache (only 1: intros * []; only 1: Nat.le_elim H; only 1: now Nat.nzsimpl; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.090908	26072	5823
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.098031	16	10	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.107935	19976	3613
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.124648	39182	5927
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make.map2_2	40	40.112379	48329	6755
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.059742	22059	5684
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.056430	14208	4226
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.058494	19387	6772
coq-tactician-stdlib.8.16.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.025497	4803	2212
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.315638	146331	16383
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.053891	16082	5925
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.080974	28994	5720
coq-tactician-stdlib.8.16.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.303928	43361	3037
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.102952	37810	6074
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.046926	15454	3798
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.053362	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.048200	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.077424	25955	7379
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.126462	35958	5524
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.088189	30461	6478
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.893536	273	129	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.008864	6	1	5	synth with cache (only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.008823	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.091653	33396	8806
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.115364	32400	6774
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.102564	40616	8366
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.074581	21218	5182
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.070112	22875	7613
coq-tactician-stdlib.8.16.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.067623	22278	3297
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.025347	4	3	0.1.0	synth with cache (only 1: intros m x y e e'; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: auto using (Raw.PX.eqke_equiv elt)).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.130243	9783	1713
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.size_gt	40	40.150650	27948	5569
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	11.104241	3454	1817	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.102124	36408	7163
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_indep	40	40.106801	41151	8686
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	1.864989	552	303	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.054650	15029	7883
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.080982	24106	4418
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.154150	65962	3911
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.174477	178	32	5.7.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.098507	31027	6538
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.080649	30477	3879
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.030017	10507	667
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.395002	35	18	4.2	synth with cache (only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.110079	43131	6667
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.088749	29886	7087
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.885902	216	119	1.3.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: auto'; only 1: order').
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.081442	33298	6480
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.080156	32949	4727
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.051899	15542	6327
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.631510	3694	1959	0.0.0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.254510	26	13	4.1.0	synth with cache (only 1: intros; only 1: pose proof (add_mul_mod_distr_l a b c 0) as E; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.157176	75544	5341
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.068761	19998	8024
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.862200	214	91	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.100006	35661	6980
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.069904	25660	5283
coq-tactician-stdlib.8.16.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.191507	89362	13290
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.075574	24731	5363
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.044229	13106	5792
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.054623	16003	6926
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.090401	31260	9109
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.086388	35584	4120
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.083471	31645	4652
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.073182	24359	6187
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.089050	30907	8042
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	27.655136	20338	4982	7.14.5	synth with cache (only 1: intros a b c Hb; only 1: apply pow_le_mono_r; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.077552	26087	7589
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.266770	1055	370	2.0.0.2.0.0.3	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.200583	93043	5165
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.log2_spec	40	40.160566	30945	5641
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.574232	278	65	10.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.140996	8788	1544
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.147453	60556	9125
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.052801	9988	4672
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_split	40	40.083750	30038	6236
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.063165	19475	8099
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.052812	5762	1130
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.139651	56578	8567
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.022222	5529	920
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.058978	22109	4103
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.089114	31424	6100
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	4.380115	2326	729	0.0.5.0.7	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.052819	16470	3850
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.182809	86901	6988
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	2.763417	1802	601	1.4.2.1.2	synth with cache (only 1: intros n IH; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.125007	55299	5800
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.080850	29521	6263
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	5.378878	290	146	0.0.0.1.0.1.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	9.223900	5712	1104	0.2.6.18.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.123177	49117	6123
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.051164	16535	5650
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	16.365830	12065	3008	1.0.8.4.0.8.1.1.1.0.0.0.0	synth with cache (only 1: intros n; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: now rewrite opp_nonneg_nonpos; only 1: destruct_max n; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: now apply divide_abs_l; only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: now apply divide_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.059883	18862	2786
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.684386	1905	913	0.0.0.1.0.0.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	3.570114	1086	419	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.065926	21723	5524
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.106321	42921	6465
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.071435	21214	6227
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.042817	10878	4665
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.144849	5777	383
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.187443	258	109	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.097256	38941	5792
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.062100	21545	6369
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.010155	3	2	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.116735	47753	6390
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.022257	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.127223	52374	6573
coq-tactician-stdlib.8.16.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.075043	29645	6070
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.029426	12	4	1.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.081580	536	250	0.3.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.085387	28427	8033
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	23.528995	12014	2310	2.0.1.1.11.15	synth with cache (only 1: intros m IH; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: apply eq_true_iff_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.082022	28081	8532
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.048151	17143	2939
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.097626	37252	5757
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.015106	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	0.281857	362	37	0.0.17	synth with cache (only 1: intros (e, abs); only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.033606	21	4	6	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.178954	43856	2933
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.061598	8328	1534
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_error_None	40	40.166005	72665	9287
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.100574	37854	5896
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.053777	18956	3839
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.058736	6586	3557
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.057381	23255	3896
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.081067	28457	4315
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.063758	19751	8829
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.128636	55053	6984
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.061547	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.140893	58898	7382
coq-tactician-stdlib.8.16.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013343	2984	1240
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.101822	37615	6576
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.120120	47839	8855
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.025763	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.027647	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.042488	11715	4065
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.385227	563	278	2.3.2	synth with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.062612	18746	7770
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.067196	20621	4935
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	2.707906	688	341	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.124590	47393	10122
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.186332	29	23	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.041571	10923	3965
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	17.451429	13771	2946	1.0.17.1.0.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.107661	38923	5795
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.095000	35075	6187
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.027242	9324	1317
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.079764	24470	5844
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.115247	35206	5566
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.090841	78	12	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.057886	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.092588	34058	6310
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.260703	14	6	2	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.inj_neq	40	40.115587	47238	7138
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.065117	21639	5748
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.077142	27088	7183
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.056180	17302	5515
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.004230	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.110168	6	1	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.014809	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.056364	27	5	6	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.006661	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.005548	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.069980	20723	7624
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.049951	3269	1302
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.098539	37935	5754
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.113209	18566	942
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.mod_lt	40	40.225870	42389	6649
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.089514	31412	9231
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.073865	26571	5930
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.065726	21627	6487
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	5.069588	512	106	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.16.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.056686	19317	4044
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.049513	17336	3353
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.040732	8939	2113
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	20.016213	6865	2597	6.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.027168	7	5	0.1.1.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.032102	7	5	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.978533	285	120	0.0.0.0.1.0.0.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.119726	49227	5848
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	24.149252	10449	3303	1.0.0.1.1.1.5.13	synth with cache (only 1: intros n IH; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.351131	44	18	2.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.241328	38	16	1.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.040701	10804	3265
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.044820	9690	3681
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.059377	17651	6162
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	11.003954	11753	2243	14.6.8	synth with cache (only 1: intro m; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.050623	14521	4373
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.061755	19051	6945
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.141257	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	8.023817	2900	736	1.9.8	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.031562	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.043639	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.762419	1323	140	0.0.0.0.0.0.0.0.19.1.0	synth with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.056926	17236	5800
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.030625	6947	3314
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.048800	5	5	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.16.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	40.054109	13901	4638
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.090995	31764	5069
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.029343	8386	3442
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	1.568054	968	182	0.0.0.8.0.3	synth with cache (only 1: intros a; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.077811	12191	1353
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.891466	644	311	0.0.2.4.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.346871	50	27	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.086111	31766	8826
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.091157	32201	7798
coq-tactician-stdlib.8.16.dev	Coq.ZArith.Znat.inj_minus2	40	40.098954	42029	5284
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.050309	16070	4414
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.112264	13	10	1.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.079242	23334	8118
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.056457	18346	3982
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.101329	40755	6137
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.014027	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.032581	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.017928	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.026012	8	2	3.3	synth with cache (only 1: unfold Pos.le; only 1: easy').
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.067728	20098	7580
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.015480	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.012627	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.008602	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.074100	23352	9943
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.066892	22308	5857
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.069926	24384	6132
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.094471	35379	6277
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.059758	22669	3493
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.063133	18977	4367
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.457030	79	31	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.038217	11467	1853
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.067068	21894	4927
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.036476	10886	2806
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.121574	48404	6658
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.052398	17471	3717
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.052316	17182	3966
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.059269	19981	6168
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.060681	16971	5834
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.074882	26228	6577
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.039681	11448	2846
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.247914	106981	8678
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.164067	69741	6893
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.046232	13091	4836
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.069913	19425	5984
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.090375	18566	5133
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.292599	142197	3814
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.053484	19262	2927
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.067337	20665	5454
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.389017	476	189	3.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.081885	26871	6745
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.078449	28599	6095
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.843609	1040	385	0.0.0.4.5	synth with cache (only 1: intros n m p Hp; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: now f_equiv; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	4.823937	1808	698	1.0.0.6.1.0.0.5.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.102173	38172	5546
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.067018	18823	5152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.053627	14659	4108
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.214439	27	12	0.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.146177	54269	5829
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.143050	64296	3426
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.176062	69436	8122
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.013013	2	2	0.0	synth with cache (only 1: revert P a f; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.748582	436	111	0.2.1.3.3.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.091995	33701	5593
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.080828	33538	2565
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.027314	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.158002	26399	5553
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.remove_In	40	40.097181	36730	6666
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	11.478732	7776	1826	2.13.0.3.1.0.7	synth with cache (only 1: intro l; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros n m; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	4.136027	1564	448	0.0.0.0.5.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.040799	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.071523	24256	4219
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.367313	284	74	2.2.0.3	synth with cache (only 1: intros x x0; only 1: firstorder; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.060523	36	10	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.130950	54515	3292
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.064309	23956	3743
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	40.088157	32223	4843
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.062345	20671	3633
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.078775	26463	5755
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.110445	42327	5078
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.065787	23161	5573
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.089253	35494	5888
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.016585	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.092262	25743	3756
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.089059	33496	5711
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	12.440284	4818	1810	4.11.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.070665	22974	5668
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.103627	8	4	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	1.507026	907	209	0.0.0.0.5.4	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.113135	15	9	0.0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.117869	44523	7431
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.051944	14128	5730
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.098691	35669	6278
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.043285	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	4.415939	2106	914	2.0.0.0.0.0.1.1.0.0.1.1.1.0.1.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	26.656247	13460	4577	0.3.9.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.076200	27608	3244
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.065092	23642	4101
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.289513	1806	821	2.1.1.0.0.0.0.1.0.0.1.1.0.1.0.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.008913	2	2	0.0	synth with cache (only 1: autorewrite with order; only 1: easy).
coq-tactician-stdlib.8.16.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.133804	52261	7360
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.065316	22161	6215
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.026809	8388	2450
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.101743	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.081015	22852	7810
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.119395	49628	5886
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.169714	70216	8088
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.060823	19837	5170
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	2.155160	1602	402	4.0.11	synth with cache (only 1: intro a; only 1: unfold lcm; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.067272	22184	4482
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.572937	1907	211	23.0.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	1.297346	723	206	0.0.0.1.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.011299	3	2	1.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.167121	79102	3253
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.013855	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	39.091015	22759	1647	0.1.0.0.57.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: now nzsimpl; only 1: apply le_refl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.070110	18859	5822
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	2.344268	1139	209	12.0.1.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.258690	75059	4906
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	6.070358	2182	934	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.146693	59350	5963
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.268253	126976	11201
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	40.079007	21639	8071
coq-tactician-stdlib.8.16.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.077756	29120	4423
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.275357	122875	6716
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.045960	14286	2835
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negbFE	40	0.005411	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.contraT	40	0.085725	41	9	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.669211	810	256	0.0.0.4.1.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.contraFT	40	0.179639	51	8	1.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.007554	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.012281	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.006725	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.005153	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.010689	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.073884	23348	5652
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.025772	6592	1393
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.059965	19577	3525
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.116254	47094	7530
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.064597	17908	5059
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	3.342868	687	410	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.065364	23896	7641
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.070200	19169	4801
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.081466	30497	5349
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	0.950646	518	84	2.23	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.116539	41865	13866
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.057204	19313	4092
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.044871	11039	4818
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	22.098169	7568	1975	0.0.0.0.0.2.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.065226	19284	4158
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.055243	18741	3675
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.646213	322150	6625
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.rev_app_distr	40	30.223785	20777	4829	0.8.1.0.0.1.2.0.14.3	synth with cache (only 1: intro l; only 1: induction l as [| a tail]; only 1: intros l2; only 1: symmetry; only 1: apply (app_nil_r (A:=A)); only 1: intros l2; only 1: cbn; only 1: rewrite !(app_assoc (A:=A)); only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	1.247131	976	191	5.12	synth with cache (only 1: unfold not; only 1: iorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.010399	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.031988	6731	2213
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.050498	17483	3647
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.042148	11371	4599
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.054721	16501	4363
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.085977	33645	5192
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.086502	9579	1490
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.073540	25838	4058
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.069757	25217	4462
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.069792	19983	6498
coq-tactician-stdlib.8.16.dev	Coq.Setoids.Setoid.gen_st	40	0.692806	470	210	3.9	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.201472	82502	8052
coq-tactician-stdlib.8.16.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.007768	2	1	1	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.084381	33193	2843
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.078710	25871	5584
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.068112	16740	1265
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.092571	32262	5682
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.359286	27763	1252
coq-tactician-stdlib.8.16.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.235608	105251	8985
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.775951	450	43	0.25	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.666042	370	38	0.23	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.077443	25057	5336
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.078576	26949	4244
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.091371	31341	8286
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	16.508724	26689	2436	0.6.0.0.32.0.14	synth with cache (only 1: unfold Z.lt; only 1: simpl in *; only 1: unfold Z.succ, Z.pred; only 1: destruct x; only 1: congruence; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.012445	6	2	3.1	synth with cache (only 1: intros x y H; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.087324	29920	6202
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.090398	31306	9899
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.137808	59591	5363
coq-tactician-stdlib.8.16.dev	Coq.ZArith.BinInt.Z_eq_mult	40	1.987779	1455	275	7.6.9	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.002983	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.008520	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.003362	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.300781	64	16	1.2.3.0	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.012049	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.068919	21184	4599
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.230268	99997	6913
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.602378	80	40	0.4.1	synth with cache (only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.100104	33257	11144
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.050310	16317	3335
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.052472	15467	4036
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.003474	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.010993	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.127483	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.091052	34051	3748
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.483987	120	103	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.056686	16348	5067
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.064227	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.080674	26807	6747
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.rev_alt	40	40.108161	39165	7708
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.248218	111686	9527
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.023152	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.023559	6682	2221
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.064706	23244	4011
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListOps.concat_app	40	2.965835	1438	484	1.5.0.0.0.1.0.0.3	synth with cache (only 1: intro l; only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- app_assoc; only 1: f_equal; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.036337	8262	4102
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.map_length	40	0.031425	6	5	1.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.map_eq_nil	40	0.027529	10	3	2.0	synth with cache (only 1: intro l; only 1: now destruct l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.086138	23000	4206
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.829881	168	40	0.0.0.8.1	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.088480	27758	8036
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.060651	20462	3012
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.076724	23594	7059
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.007328	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.010201	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.064242	25300	4406
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	4.318585	2695	709	0.0.0.4.0.0.5	synth with cache (only 1: intros a b n ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.076649	17019	13498
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.208187	19875	5445
coq-tactician-stdlib.8.16.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.007819	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.039492	11158	3556
coq-tactician-stdlib.8.16.dev	Coq.Program.Subset.match_eq_rewrite	40	0.547431	350	94	0.1.0.3.6	synth with cache (only 1: intros n P IH0 IHS; only 1: intro H; only 1: destruct H; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	6.658228	3656	642	0.5.0.12.0.0.8	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_2; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.116197	47651	5441
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.incl_right	40	0.013243	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.078769	18742	3655
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.204666	2804	523	1.0.2.11.0.5	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.011946	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.354296	165754	10060
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005871	4	1	3	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.UIP_refl_refl	40	0.023167	11	6	4	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.192187	203	14	20	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.16.dev	Coq.Program.Equality.solution_left	40	0.032087	28	8	0.0.7	synth with cache (only 1: intros y H; only 1: destruct 1; only 1: exact y).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.491688	15607	898
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.085291	22136	5671
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	10.507321	3239	844	2.0.2.0.0.0.4.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_r; only 1: rewrite <- succ_le_mono; only 1: now apply le_le_succ_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.088432	29445	8154
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.055354	18720	4176
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.083363	25333	9650
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.159847	64354	6272
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	2.478666	1322	324	0.0.17.4	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.059990	19650	6521
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.029667	4107	576
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.057824	16424	5008
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.136415	25693	2531
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.107631	38730	15256
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.671962	185	102	0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.091039	30334	7809
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.074680	23634	4282
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.072282	18261	15733
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.066806	23132	4025
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.023516	6520	1689
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	11.357347	6593	1168	0.2.0.2.17.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	2.076332	962	249	0.1.1.0.0.0.0.4.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.111269	43670	5154
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.491989	218782	7879
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.126630	35502	4950
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Map.count_occ_map	40	40.119171	42646	4197
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.031719	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.097504	14	8	0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.061686	21568	4059
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.082413	25199	5998
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.091135	34307	7473
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.131226	56448	7438
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.209135	793	208	0.0.1.0.0.1.0.0.4.5	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.069342	22230	6053
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.150674	26272	4218
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.div2_spec	40	0.016034	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.079330	26935	5165
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.118988	37490	6497
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.map_ext_in_iff	40	11.247771	10739	2083	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.15	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	28.535567	9519	2752	17.0.7	synth with cache (only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.069995	21199	6188
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.781303	156	51	5.0.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.017749	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.025617	8144	1317
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	34.553593	27403	6309	1.0.4.0.0.0.0.0.0.4.0.1.1.7	synth with cache (only 1: intro n; only 1: induct n; only 1: intro n; only 1: intro H; only 1: apply le_0_l; only 1: intros n IH m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: now rewrite pred_succ; only 1: intros k H1 H2; only 1: apply le_succ_l in H1; only 1: rewrite pred_succ; only 1: apply lt_le_incl in H1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.384605	39175	1902
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.058073	16675	6591
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.lock	40	41.149194	584645	7742
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.062111	18326	5115
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.058733	17403	6996
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.083084	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.094904	29615	8343
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.047688	13028	6108
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.106513	39247	6898
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.051324	5723	873
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.068925	11	2	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.092742	28270	7263
coq-tactician-stdlib.8.16.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.844004	627	93	2.3.5.15	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.103396	40497	5286
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.046689	12714	4353
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.035577	10017	1158
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.004034	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.004388	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.proper_proper	40	0.022323	8	3	5.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.026020	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.069877	24764	4357
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.118749	48953	4226
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	16.144030	8371	3149	0.9.0.2.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.030784	8	6	0.0.0.0.0.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.106610	37716	6251
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	40.027438	4968	1152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	33.690881	44784	7014	0.0.14.5.6.0.1.0.43.2.0.1.3.0.2	synth with cache (only 1: split; only 1: intro n; only 1: intro m; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: revert m; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.008891	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009188	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.022061	6	2	3.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.007518	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.007486	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.005731	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.093640	21930	5388
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_tag	40	40.919630	463299	4585
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_sig	40	0.010173	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.all_sig2	40	0.018823	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.068477	10975	3198
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.109051	38742	9247
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.132379	40	21	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.164048	53	27	0.2.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.067107	21705	6172
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.043161	11768	6822
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.153755	64545	4400
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.069555	24279	4401
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.003465	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.074297	25929	8084
coq-tactician-stdlib.8.16.dev	Coq.Bool.IfProp.IfProp_false	40	0.026676	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros A B H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Bool.IfProp.IfProp_or	40	0.024045	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	6.383608	4000	1446	0.0.1.0.0.0.0.1.0.0.0.0.2.0.1.0.0	synth with cache (only 1: revert q; only 1: induction p as [p| p| ]; only 1: simpl; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: intros H; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.026715	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	35.008232	507802	3547
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_left_length	40	40.129443	49496	5550
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	4.595861	44891	1083	5.0.1.49.71	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.083597	28759	6547
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.242394	66	15	0.0.0.9	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.055215	16306	3773
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.077919	27611	8279
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.060186	20654	5499
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.459027	34719	991
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.576927	500	27	0.30	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.locked_withE	40	40.654121	324631	11772
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.055358	19606	3678
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.110897	43913	7758
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	6.090756	2024	539	0.0.3.0.0.1.1.1.4.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.047708	14677	4197
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.056818	16826	5564
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	16.383238	5981	2366	0.0.1.7.0.0.0.0.0.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.064176	16303	13963
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.046730	37	8	2.4	synth with cache (only 1: intros R H x x0 y H0; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.022749	18	6	0.0.6	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.007035	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.012659	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.Morphisms.proper_proper	40	0.803092	316	159	3.6	synth with cache (only 1: simpl_relation; only 1: apply H).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.061155	21092	4924
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.030121	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	5.723995	3131	590	0.5.2.14	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.16.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.509434	241097	6549
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.996057	1679	270	1.1.12.5.1	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.not_false_is_true	40	0.007945	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.not_false_iff_true	40	0.014252	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eqb_prop	40	0.005001	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_sym	40	0.006841	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007818	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_true_iff	40	0.014534	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_false_intro	40	0.035027	6	6	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_true_r	40	0.005355	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.orb_true_l	40	0.005473	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_true_eq	40	0.083485	27	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_diag	40	0.006390	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_false_elim	40	0.054087	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.010592	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.010764	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_false_r	40	0.007316	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_false_l	40	0.010129	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_true_l	40	0.005980	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.011706	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_eq	40	0.008251	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.022595	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.013644	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.040232	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.019207	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.016240	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.absurd_eq_true	40	0.016224	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.010209	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.010786	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.018701	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.013818	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Bool.Bool.reflect_dec	40	0.017044	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.067846	22730	5240
coq-tactician-stdlib.8.16.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.016061	2009	620
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.073318	27748	3729
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.053909	15952	5686
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.014158	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.086497	30032	7002
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.091769	29395	11341
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.078924	27030	7188
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.009239	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.011060	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.006476	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.007505	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.064862	19145	11401
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	1.625815	22550	205
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.079565	30809	4328
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.338582	145874	12373
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.010220	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.260505	73	20	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.027963	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.577633	1277	126	9.16.3	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.089412	297	18	24	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.041554	10466	6024
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.058624	19477	6070
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	8.249793	5247	568	0.4.10.4.3.1.1.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intro p; only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.768088	306	102	2.0.1.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.098509	34246	5773
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.104562	31	11	0.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.390655	185240	10686
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.457492	574	86	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.101557	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.036923	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006717	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.137674	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.056681	16775	7174
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.156339	72436	3524
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	14.036248	4493	2044	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_left_rev_right	40	40.097833	34737	7265
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.697717	696	352	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.030788	8472	3430
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.048549	15528	5272
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.045786	15978	3481
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.nary_congruence	40	40.117382	37889	9852
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.387956	140239	5316
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.116899	9	3	2.4	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.360991	167530	9124
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	4.774105	43335	543	0.0.0.3.3.214	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: split; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.064278	20059	5291
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.634230	265	90	0.1.1.0.0.0.2	synth with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.JMeq_ind	40	40.280571	131112	11797
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.044976	12741	6347
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.354159	161475	10734
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.006131	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.005586	2	2	0.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.010807	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.118918	9	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.004932	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.035389	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.072713	23701	5154
coq-tactician-stdlib.8.16.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.087759	3	2	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.354880	1149	60	0.41	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.232416	102209	11769
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.072908	5174	2152
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.054723	16596	3652
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.106368	40051	9519
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	18.050873	3830	1434	0.0.3.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.183418	51	23	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.042189	12266	4496
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.046650	5062	1567
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.345739	104	27	0.2.2.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.087617	27905	9682
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	40.055262	19723	4594
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.253067	109743	13698
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssreflect.abstract_context	40	21.081551	293336	2579
coq-tactician-stdlib.8.16.dev	Coq.Logic.Decidable.dec_True	40	0.009459	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.030993	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.128670	44612	8819
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.009129	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.071479	25850	6993
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.393505	184789	10197
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.086456	33767	6280
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.075446	31819	2202
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.049991	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.102100	39460	10509
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.land_spec	40	40.092537	36556	4169
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.019016	8	2	6.0	synth with cache (only 1: intros A a b H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.122202	51362	4820
coq-tactician-stdlib.8.16.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.099154	4	4	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Program.Combinators.compose_assoc	40	0.012181	5	3	1.0.1	synth with cache (only 1: intros A B f g H x; only 1: intro a; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Program.Combinators.flip_flip	40	0.006367	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	11.332957	6329	2589	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.029329	10	4	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.111543	21	10	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.055112	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.488989	60	29	5.0.1	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.072455	16467	7664
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.264286	124011	7182
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.fold_symmetric	40	40.120277	48286	6857
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.065630	23006	4303
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.061756	17894	4411
coq-tactician-stdlib.8.16.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.116935	46651	7239
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.568666	84190	3591
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.113043	42661	6824
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.096174	37756	6094
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.027070	7	6	0.0.1.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: symmetry; only 1: now rewrite ?Hx; only 1: order; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.050788	15653	5483
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.289631	133194	11827
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.070377	16243	6529
coq-tactician-stdlib.8.16.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	1.278862	18887	187
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.270433	126349	4141
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.020219	18	7	1.1.3	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.238722	105350	10613
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.057906	18252	5786
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.087398	29442	9677
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	4.893374	8088	1646	2.2.0.0.2.1.2.5.0.0.0.0.8	synth with cache (only 1: intro n; only 1: constructor; only 1: constructor; only 1: auto  10 with sets; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: red; only 1: intros A B [H1 H2]; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.010132	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.467436	240878	11698
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.009448	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.107940	39689	6989
coq-tactician-stdlib.8.16.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.049861	51	13	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.122453	3813	623	0.12.6.0	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.014729	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.033808	9452	3915
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.008197	7	2	0.5	synth with cache (only 1: intros [x y]; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.062128	19902	3438
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.094790	31743	9585
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.085770	28300	7758
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.078973	17869	3653
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.and_hprop	40	40.219616	93905	12510
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.true_hprop	40	0.019011	28	6	4.2.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.not_hprop	40	0.014397	6	5	0.0.1.0.0	synth with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	15.752574	26391	4718	7.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.17.6	synth with cache (only 1: constructor; only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.073305	23964	4680
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	14.313389	62965	2866	0.83.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.499176	225654	8512
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.059306	20956	4858
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	1.300490	3369	340	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.010925	3	3	0.0.0	synth with cache (only 1: intros A B f g H x; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.417092	194862	10892
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.019749	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.087274	33818	9612
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.105582	40077	4138
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.013533	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	36.778502	114326	12802	2.3.2.3.0.7.23.4	synth with cache (only 1: red; only 1: intros A P H; only 1: destruct H; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.gt_lt	40	0.180012	42	13	0.4.0.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: intro H1; only 1: false_hyp H ltac:(H1)).
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.lt_gt	40	0.007925	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	1.653510	1310	310	0.0.0.2.2.1.0.3	synth with cache (only 1: unfold Setminus at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: tauto; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.269717	59	33	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	4.791527	66815	632
coq-tactician-stdlib.8.16.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.113342	509	190	0.1.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.029739	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	4.377333	3480	415	3.12.10.8.2	synth with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	29.030005	12971	3882	1.4.11.3.0.0	synth with cache (only 1: intros; only 1: apply odd_add_even; only 1: nzsimpl'; only 1: exists m; only 1: nzsimpl'; only 1: now nzsimpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.075034	15505	4318
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.009585	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.011744	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.pred_Sn	40	0.023840	12	8	3.1.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.089015	32178	7002
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.plus_n_Sm	40	0.256688	180	74	1.0.0.0.0.4.2	synth with cache (only 1: intro n; only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.402712	33	15	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.187792	81516	11173
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	8.500700	25746	2086	11.40.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.412318	348	59	2.11	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.forallb_forall	40	40.115444	11777	2398
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.063896	20224	7658
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	2.240886	3308	430	0.1.6.9.1.4.1.3.3.5.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.073618	19706	4573
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT_eta	40	0.008815	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.064633	20078	7596
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.classicP	40	40.441507	207611	8543
coq-tactician-stdlib.8.16.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.305985	141460	10758
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.015371	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.891495	641	141	0.1.0.0.9.8	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.019365	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.061345	25	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.030140	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.044098	11	5	5	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.095071	18	8	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.205260	89419	6076
coq-tactician-stdlib.8.16.dev	Coq.Bool.DecBool.ifdec_left	40	10.457269	18085	3089	3.1.0.0.13.4	synth with cache (only 1: unfold not; only 1: intros h1 h2; only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.065166	15434	6070
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	4.665342	47020	947	0.0.0.85.50	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.039120	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig.rew_sig	40	0.019612	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.028724	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.164545	70695	6634
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.071122	25092	6040
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.050562	12058	3160
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.andb_true_intro	40	8.868557	87562	3140	1.111.3	synth with cache (only 1: destruct 1; only 1: subst; only 1: repeat split).
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.329618	1541	119	0.30	synth with cache (only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.339382	160009	10796
coq-tactician-stdlib.8.16.dev	Coq.NArith.BinNat.N.ge_le	40	26.971314	20408	3732	4.19.0.5	synth with cache (only 1: unfold min, le; only 1: intro H; only 1: rewrite Pos.compare_gt_iff; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.071612	25367	5056
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.090262	32304	10261
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.025002	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.049817	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.014677	86	27	2.2.0.0.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002738	12	5	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_iff_compat_l	40	0.132959	1250	143
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.511791	2321	414	9.9.0.1.4	synth with cache (only 1: intros H ?; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	40.031338	7243	2101
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.062256	22098	4942
coq-tactician-stdlib.8.16.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.087276	32619	12074
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.072579	22957	7665
coq-tactician-stdlib.8.16.dev	Coq.Logic.HLevels.hset_hOneType	40	40.207682	93725	10949
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	34.415861	94362	10419	0.23.4.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	3.375077	10099	1210	0.37.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.013054	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	8.007002	13074	1757	6.6.34	synth with cache (only 1: intros H ?; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.pair_andP	40	0.020925	14	3	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.108237	41170	12610
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.911825	307	89	0.0.9	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.701385	574	170	0.2.4.2.0	synth with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.011326	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.013174	8	3	0.5.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.010403	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.425966	615	114	2.6.6	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.066528	22603	4424
coq-tactician-stdlib.8.16.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.944877	470797	7765
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	37.277116	23445	2437	38.24	synth with cache (only 1: intro n; only 1: order).
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.390029	189363	13123
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.038680	33	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	8.487287	11089	1261	0.2.28.10	synth with cache (only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.026864	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.073788	27298	6864
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.mult_n_Sm	40	40.149269	61216	11193
coq-tactician-stdlib.8.16.dev	Coq.Init.Byte.of_bits_to_bits	40	41.359773	702104	6842
coq-tactician-stdlib.8.16.dev	Coq.Init.Tactics.decide_left	40	40.341783	166810	12612
coq-tactician-stdlib.8.16.dev	Coq.Init.Tactics.decide_right	40	0.019880	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.157499	69774	7692
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.048842	16637	4850
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.356825	164360	8265
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	1.311553	1551	206	3.20.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.classic_pick	40	40.176520	72199	3525
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.354440	169953	6456
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.087873	31381	6642
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.042479	14420	4960
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.070121	12061	5490
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.165773	74591	3929
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.029242	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.036359	5	4	0.0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.067784	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.204849	96524	8859
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.734168	1009	117	0.2.13.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.013330	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andFb	40	0.009074	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andbAC	40	0.009896	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orTb	40	0.004703	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbb	40	0.008797	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbC	40	0.008298	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbAC	40	0.017074	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_id2r	40	0.021114	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orb_idl	40	0.011260	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orb_id2l	40	0.022316	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negb_and	40	0.048063	2	1	1	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andKb	40	0.009874	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orbK	40	0.010292	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.orKb	40	0.011207	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybT	40	0.010603	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implyFb	40	0.005646	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implyTb	40	0.009786	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.negb_imply	40	0.007663	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybE	40	0.009160	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.implybN	40	0.009660	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbF	40	0.006161	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbACA	40	0.024753	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_addl	40	0.010509	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.andb_addr	40	0.011522	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addKb	40	0.013724	4	1	3	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addIb	40	0.014596	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.addbT	40	0.008485	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.sub_refl	40	0.180706	402	36	2.2.21	synth with cache (only 1: intro; only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.064581	21764	5652
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.057787	19374	3741
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.776671	399226	14307
coq-tactician-stdlib.8.16.dev	Coq.Init.Datatypes.rew_pair	40	0.013093	3	3	0.0.0	synth with cache (only 1: destruct H; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	8.813112	81228	607
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.088039	30434	7941
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.subrelUr	40	12.659559	31457	2600	9.20.15.37	synth with cache (only 1: intro z; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.045054	15303	3866
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.and_cancel_l	40	40.609581	288192	22664
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_comm	40	0.177824	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.226441	99543	10594
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.395345	193444	11312
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.391142	8492	937
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.017528	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.096631	35091	4951
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.017778	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.038220	15	5	0.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.094394	37495	6120
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.165479	32388	8404
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.275718	9566	934
coq-tactician-stdlib.8.16.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	1.981128	21500	200
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Bool.find_none	40	40.126321	7490	1935
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_split_r	40	0.052238	6	6	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: intros [? ?]; only 1: cbn; only 1: now intros [[=]| ?%IHl]; destruct (split l); [ left | right ]).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.145742	65635	4728
coq-tactician-stdlib.8.16.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.348026	169874	11073
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	40.094810	32118	7088
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.080066	30035	4723
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.136986	23210	6350
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.le_S_n	40	40.251432	109201	17098
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.026029	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.024371	6	3	0.1.2	synth with cache (only 1: unfold leb, le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	10.327752	12550	2870	0.0.0.0.0.10.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.12.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: right with y; only 1: assumption; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Byte.to_bits_of_bits	40	40.110792	49347	5106
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.050677	16238	3271
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.050835	16264	4299
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.185087	32416	7076
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.172457	78174	11517
coq-tactician-stdlib.8.16.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.010152	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.015006	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.085722	28313	9224
coq-tactician-stdlib.8.16.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.635769	330652	6936
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.084104	30362	6412
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.and_assoc	40	40.412876	193283	17211
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004696	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007021	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.006906	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.007456	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.149187	63430	13299
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.356504	1625	50
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.rew_opp_l	40	0.007832	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.f_equal4	40	0.015860	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.f_equal5	40	0.022937	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.007198	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_sym_involutive	40	0.007247	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.map_subst_map	40	0.007206	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.rew_swap	40	0.011446	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.eq_id_comm_l	40	0.402877	2052	57
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.055384	17230	5097
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.060891	21433	3630
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	7.610041	5199	1423	0.1.0.1.0.0.0.1.0.1.0.0.1.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.956801	857	103	0.21	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.105153	21	10	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.627107	321	73	0.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.16.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.180558	87	29	0.0.1.0.7	synth with cache (only 1: intro b1; only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.555833	262870	3605
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.090735	34341	5061
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.length_order.lel_tail	40	0.006379	1	1	0	synth with cache (only 1: now intros ?%Nat.succ_le_mono).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.031363	23	7	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Filtering.filter_map	40	40.069096	23773	6853
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.068962	25196	6853
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.006096	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_all	40	0.181594	72	33	0.0.0.1.4	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.546905	255024	2533
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.004701	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	20.100761	12073	3435	1.7.10.0.1.4	synth with cache (only 1: revert m; only 1: intro q; only 1: unfold lt, le; only 1: revert q; only 1: intro H; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.055645	38	6	0.9	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.008782	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.or_assoc	40	40.566491	261056	17418
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.010743	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.085696	44	9	3.6	synth with cache (only 1: intros r s; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.022839	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.sub_in12	40	0.619721	455	33	2.26	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.084340	32107	3966
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.063055	22153	6573
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.662554	327616	3806
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.079001	27728	8796
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.010023	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.366599	169245	3277
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_trans	40	7.742774	5214	1133	0.0.1.0.7.0.0.3.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.093860	30139	6543
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.086674	32845	5657
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_O	40	0.009582	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.079228	32138	3950
coq-tactician-stdlib.8.16.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.128573	46810	8278
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.049811	15786	3906
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.nat_double_ind	40	40.186694	83639	12718
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.047670	14370	5296
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.157880	67115	10821
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.042478	14283	3698
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ListPairs.in_prod	40	40.102144	19191	7112
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_O	40	0.033313	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: cbn; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.443607	449	48	0.0.17	synth with cache (only 1: intros [| n]; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.skipn_all	40	0.037063	8	6	1.0.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.min_l	40	4.329941	2719	1483	0.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.107303	41459	7815
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	3.833290	1870	523	0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: apply testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: assumption; only 1: order_nz).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.067474	23712	5250
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_skipn	40	3.791088	2276	667	2.0.0.3.0.0.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.091721	31043	6425
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.203802	94620	13514
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.length_order.lel_trans	40	40.262452	62028	6079
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.SetIncl.incl_app	40	27.709028	13840	2649	11.1.0.1.7.4	synth with cache (only 1: intros l m a; only 1: induction l; only 1: intros H; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.063019	21301	4237
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	11.736072	7042	1002	1.1.2.0.18.4	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *).
coq-tactician-stdlib.8.16.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.897797	459498	11903
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.028026	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.067281	25510	3551
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.070465	24124	8777
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_app	40	7.526258	39711	818	2.39.1.11.2.178	synth with cache (only 1: revert a; only 1: intros H; only 1: induction l1 as [| h l1 IHl1]; only 1: now constructor; only 1: right; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Init.Peano.nat_rect_succ_r	40	17.473133	31428	4096	1.2.7.0.32.4	synth with cache (only 1: simpl; only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.379559	171714	6268
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.088422	34319	5819
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.034854	4297	1651
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_all2	40	40.171966	17660	7348
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.237205	103725	3794
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.083978	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.044780	14394	2684
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.088357	31937	4502
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.083374	32170	5681
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.076887	25401	5575
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.016675	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.289453	127877	3449
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.273288	119912	2992
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007133	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.le_preorder	40	40.178214	79226	8801
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.067873	22475	6834
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.058933	19723	3320
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.130589	58310	5133
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	5.498585	4076	1178	1.0.3.0.14	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: exists r; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.049475	14057	2409
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.086420	30456	6848
coq-tactician-stdlib.8.16.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.138961	57002	11770
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	11.729619	10152	1360	18.4.0.0.0.0.0.3	synth with cache (only 1: assert (H : forall n, Even n -> Even (- n)); only 1: intros n (m, H); only 1: exists (- m); only 1: rewrite mul_opp_r; only 1: now f_equiv; only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.047839	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.066567	21378	8443
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.078568	28935	5827
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.072339	24631	3525
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.055055	18281	5280
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.061738	21128	5108
coq-tactician-stdlib.8.16.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.164167	72954	11922
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.099126	37153	5458
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_split	40	40.128771	46565	7052
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.087260	30329	6759
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.050001	14872	5094
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.093317	34904	7166
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.max_r	40	0.701300	306	101	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now apply le_antisym; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.121976	18290	5365
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.105736	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Add.Add_inv	40	40.189911	75578	7644
coq-tactician-stdlib.8.16.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.182428	76775	2957
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.071089	25797	4812
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.096878	36635	4398
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.075239	25343	7445
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.152595	45439	7517
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.078661	24838	6717
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.099464	38366	4493
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.102049	40262	7989
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.091924	31483	6334
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.099045	39067	4778
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.078189	26761	5019
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.103521	41322	3022
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.072905	27294	4560
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.079085	28506	5564
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.NatSeq.seq_shift	40	24.356672	27962	4593	4.0.0.0.0.0.0.0.0.0.13.8	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros []; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: intros []; only 1: f_equal; only 1: auto; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.148984	63305	6705
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.100962	27853	5311
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.105202	38835	8320
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.076565	19656	4797
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.068204	11961	3083
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.089204	32610	5939
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.140576	44316	5964
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.088526	16678	3413
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.138110	59997	6065
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.065716	23098	5470
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.043251	13297	4154
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.091058	30204	5838
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.091975	34127	7315
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	40.076077	25124	6073
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.082771	28443	6327
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.109276	42350	4239
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.013115	3	2	1.0	synth with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.NatSeq.seq_app	40	40.069110	26705	5820
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Repeat.repeat_length	40	1.538318	1166	219	2.1.0.27	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.074007	25280	4798
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.089246	31647	5390
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.054966	18170	6082
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.140399	60050	6660
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.065668	19212	6775
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.115112	44492	5210
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.082873	29606	5104
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.112530	46284	5953
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.084305	30330	7342
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.079056	28492	7135
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.072747	26056	5206
coq-tactician-stdlib.8.16.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.043642	16123	4043
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.096957	41116	5327
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.068331	22913	7061
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.094760	41164	7553
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.059991	20778	5418
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.190427	80232	6775
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.110953	47634	7167
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.079789	29431	6413
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.122645	54647	6330
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.075414	31774	7559
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.082602	31547	5815
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.074660	30020	4830
coq-tactician-stdlib.8.16.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.151668	73626	7716
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.055661	22650	5691
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.055565	22936	5346
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.048449	20080	2499
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.166039	78925	8755
coq-tactician-stdlib.8.16.dev	Coq.PArith.BinPos.Pplus_minus	40	40.144999	79498	10409
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.049429	20747	7232
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.129610	72216	7841
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.082711	39252	6584
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.069335	35145	7148
coq-tactician-stdlib.8.16.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.033873	15002	3916
