coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.030166	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.212342	8	6	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.017840	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.038210	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.779742	427	176	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	0.452245	174	49	0.3.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.069315	26362	6685
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	8.167104	3868	358	5.13.6.32	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.077605	33452	2718
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.066435	26462	4257
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.051659	22010	3415
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.047472	18391	3731
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40	40.027691	3858	1051
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.028229	8196	3725
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.630996	185	67	0.0.2.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.059201	20720	5096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.142803	66124	6054
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	0.101337	62	17	0.7.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.080028	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.042196	16441	5024
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.101103	42810	5463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.949138	921	99	14.7	synth with cache (only 1: intros a0; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.063214	18874	5460
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.099921	47783	4582
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.083122	34043	5648
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.063502	25500	4581
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40	44.863102	36736	812
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.103559	43009	6236
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.081674	32846	4545
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.039385	12679	3930
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.056172	22080	4313
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.044348	15769	3605
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.049998	20397	4019
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.034775	13676	3309
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.029661	9888	3498
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.137012	68626	3840
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.045223	6966	2496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.037743	15580	3468
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.034389	11065	3760
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.077588	34689	3421
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	40.028111	8821	2857
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.060979	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.083621	37039	5853
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	40.071278	28796	5782
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	40	40.016574	4280	1560
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.041112	16615	2810
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.027977	8309	3916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.189968	37274	6326
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	0.018369	6	3	0.0.3	synth with cache (only 1: intros; only 1: intros [y [H H0]]; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.065296	24568	4933
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.063712	24255	4950
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.062356	24428	4902
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.041421	13823	4782
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.056221	21731	4903
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.056911	18857	4940
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.029032	8884	4856
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.102433	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.587851	29806	2579
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.082107	33253	5160
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	37.838597	5329	2029	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.064573	26740	4239
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.041513	14436	4151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.042988	17263	3715
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.068102	26727	3251
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.041915	15750	3625
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.035845	13221	3481
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.093943	27235	3151
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.047475	19820	2250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.035906	12246	3505
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.088711	38194	5177
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.023846	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.054746	18820	3998
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.087121	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	40.036256	12261	3155
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.072134	29286	5992
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.042496	16447	3921
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.050821	18972	5839
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.064602	24290	4313
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.023301	8096	873
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.092188	39689	6543
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.058667	22934	4898
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.034777	11322	4683
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.059949	22182	4247
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.082441	34113	4127
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.041375	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.099091	35703	4610
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	2.474404	744	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.055200	19886	4664
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.063252	24090	5466
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.049206	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.058293	23472	3339
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.041197	14790	3837
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.044240	16609	4169
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.074430	30324	4385
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.040134	16299	3044
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.141570	65548	6972
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.034826	12516	3479
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.044412	11	4	0.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.097179	37018	6978
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.036871	14257	2918
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.049300	20029	2959
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.042489	15122	3125
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.118085	51612	5587
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.057565	19345	5162
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.015650	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.053288	20711	2247
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.070749	29740	5867
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.070082	28660	5709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.117544	48366	5753
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.045694	16890	3744
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.011318	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.020337	5	3	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	0.055424	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	14.549852	6853	1997	3.0.15.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.035411	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.183281	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.061105	23168	5836
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.081065	33340	6866
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.037576	11988	2775
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.051397	21412	1353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.094653	27487	6596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.157343	85	23	3.1.1.0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: unfold neighbourhood; only 1: intro; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.270278	29907	3340
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.041393	12986	4610
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.038199	11877	4563
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.091869	38380	5183
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.064109	26028	4563
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.121948	55795	5106
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	0.011598	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.060539	23280	4379
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	0.778015	173	48	9.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.048596	18211	2859
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.066160	26169	3195
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.083760	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.064124	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.038451	11659	4133
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	26.215135	5323	2132	0.0.0.0.0.0.0.0.1.0.0.10.0	synth with cache (only 1: unfold Rgt; only 1: intro; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.042618	15692	3925
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.131779	50830	5133
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.035055	12333	3282
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.061106	23058	3795
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.071858	29495	4900
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.035070	13744	3015
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.094873	41235	3043
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	40.101651	45306	4249
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	39.966248	3623	1889	0.2.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: split; only 1: rewrite <- Left_inv with (x := lb); only 1: intuition; only 1: intuition; only 1: rewrite <- Left_inv; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.075257	28387	4709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.091869	32860	5469
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.009612	3	1	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.068064	27362	5318
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.135715	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.033234	10527	1721
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.061002	21059	7937
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.059374	21692	5348
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	10.475439	3847	1341	4.0.0.0.0.1.5	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.047492	17360	2603
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.053835	20243	5153
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.043759	14586	4618
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.046059	15409	5343
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.051572	19233	5503
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	0.813702	135	73	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.035716	12460	3790
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.049533	19105	4017
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.069982	27631	3445
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.071472	26266	5675
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	40.933930	41731	2351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.761962	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.033795	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.370504	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.047166	19626	4069
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.318808	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.044670	17807	2684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.034837	11578	3475
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.040233	9752	1999
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.059010	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	5.238836	4307	324	0.1.17.15	synth with cache (only 1: intros n; only 1: pattern n; only 1: unfold Rle; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.274517	151	48	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.185865	53593	4487
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	2.284498	1615	326	10.2.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.005767	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.101901	42729	3583
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	5.296469	10906	925	0.0.22.0.0.0.14.16.56	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.042868	15216	3239
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.035502	11466	4956
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.123460	54986	4816
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.069423	26519	3977
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.072436	29610	4784
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.074789	30566	3718
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.087852	37996	4228
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.043882	13688	5504
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.099557	45403	3727
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	40.037208	14830	1508
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.077711	30725	6360
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.013265	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	16.969858	19768	2778	1.0.9.0.9.5.0.9	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.031265	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.074050	27174	7745
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.058831	22017	5256
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.613900	771	283	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	40.090906	36731	4326
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.055785	18376	4539
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.110323	27632	4440
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.043544	12923	5496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.079983	26317	4490
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.066914	25488	5190
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.090729	36286	8526
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.030915	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.037253	12245	3854
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.035129	12064	2789
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.070086	28798	3909
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.186392	43579	4296
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.006804	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.069563	24845	7935
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.176296	83455	4134
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.040114	15076	3767
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.155265	72628	4835
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.078259	22979	3964
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.052134	16968	6376
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	2.371604	1350	257	0.7.0.0.6	synth with cache (only 1: intro LS'; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.090128	33882	5870
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.205675	36511	6250
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.101491	41847	4273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.125863	55854	4978
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	40.034618	13498	985
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.117497	52117	7490
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.156680	53023	3471
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.117165	50230	3341
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.240672	11774	1252
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.056827	18820	7518
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.046393	17571	5135
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.236772	47837	6501
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.305777	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40	40.067440	24503	4482
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.230449	43	18	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.209532	56	24	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.012073	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.022459	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.011183	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	40.117193	49861	5816
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.077042	13620	5672
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.046229	13602	4868
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.607853	7984	1004
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.084171	35023	4506
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.058259	22159	3600
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.201506	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.260737	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.070041	23752	10448
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.036586	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.056525	21591	3507
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.126932	10	10	1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.047602	16779	3888
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.049666	18627	3312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.088164	35750	5932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.110022	49053	4116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.007109	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.046225	13953	4599
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.128922	60819	2815
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.091846	39046	3932
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.037410	12632	3620
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.083701	38929	2938
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	42.463779	93014	2250
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.051691	19096	3152
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.968545	42732	5111
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.056606	20748	6144
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.494935	52172	3622
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.012569	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	28.923903	41380	5145	20.1.0.10.9.0	synth with cache (only 1: unfold open_set; only 1: intros HCutL HCutR Hfix env; only 1: unfold neighbourhood, disc; only 1: intros; only 1: unfold Rminus; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.087769	34732	4866
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.094593	38149	6412
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.130988	60044	4243
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	0.267703	50	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	40.143945	15270	1244
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.061384	23131	6368
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.083454	26010	4192
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	40.103699	42458	5531
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.023845	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.156114	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.051614	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.077251	30422	6031
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.066586	21883	5914
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.060877	24544	4674
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	8.544074	10684	1397	9.2.1.6.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.043077	14839	3955
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.134583	56845	7556
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.051469	18631	4426
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	40.064447	24238	3077
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.036662	12626	3431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.114976	53239	2919
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.064108	22682	6022
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.068213	27456	5422
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.039963	8166	899
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.050298	10339	1765
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.045835	13524	3413
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.058652	24283	3446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.987310	752	127	2.4.12	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.087529	39932	3231
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.565733	45806	1727
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	11.621996	5505	1371	1.2.11.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.052113	22606	3534
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	42.591509	26906	3286
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	40.070467	27170	6858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.064481	25221	4306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.006435	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.062199	9365	4786
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.219836	105673	5449
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.084855	32619	5479
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.074306	29340	4663
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.188363	19710	1489
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.060877	21484	7485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	7.011054	3666	847	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.051329	18444	5008
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.050017	16548	4548
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	40.549714	23571	2522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.518555	577	77	0.0.2.12	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.036517	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.069446	24475	4187
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.038242	3961	932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.114674	50400	4658
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.073474	18551	2273
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.125904	5	4	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	0.176934	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.045853	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.127281	58581	4378
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.057656	18298	6464
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.030823	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.041779	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.025940	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.586996	125	72	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.032417	10940	3472
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.057534	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.052362	19836	3420
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	42.791153	35451	1712
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.106667	25698	5367
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.702585	19925	1899
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.040011	12458	5068
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.116005	53471	3715
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.115347	43412	4535
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	29.784704	15613	4176	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.052269	16075	6132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	43.409602	8686	1512
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.946964	365	105	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.088935	18219	3349
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.101467	41458	6632
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.059675	20549	6214
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.068614	12293	5231
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.106128	44675	5891
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.060868	22936	4739
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.068395	24602	8530
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.033296	10506	4448
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	40.073536	27477	7477
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.079488	34015	2867
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.046342	15595	3796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.327066	160335	5080
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.044916	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.126592	34221	4227
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.009408	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.049038	18282	3105
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.038402	16	5	1.3.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.034662	2205	493
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.044366	14836	4422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.182386	88780	3024
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.027031	8012	2806
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.412082	26399	3064
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.136073	62478	5007
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.028421	8559	3822
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.042054	14903	3208
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.078861	33713	4362
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.053048	16026	4560
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.590640	40590	4293
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.055621	20510	2896
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.055862	21396	3704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.108057	49369	2571
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	9.656123	11033	1013	0.0.4.1.1.0.0.2.23.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.044886	16703	2871
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	40.724961	18147	1691
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.056944	20143	4339
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.073388	29485	3509
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.685760	2924	266	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.099068	766	169	3.3.1.5.0	synth with cache (only 1: apply Vector.caseS; only 1: intros; only 1: destruct h; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	41.008823	42917	3020
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.042573	13405	5124
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.059842	20323	5817
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.034573	11175	3986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.066076	24463	4577
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.543591	75162	5499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.042116	18432	1918
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.077221	31859	3889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.400108	131	47	0.8.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.038212	12531	2915
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.158051	41002	3046
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.090485	38590	4636
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.074440	26104	8009
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.019872	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.104761	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.013138	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.044874	17141	969
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.030059	9928	2565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.102583	46308	2569
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.066531	26033	4125
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.557676	63944	3785
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.074018	29725	3445
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.027283	8651	3340
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.039342	12270	2803
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	21.476921	14211	3682	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.070569	27983	3778
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	40.039890	12066	5274
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.328763	24913	2713
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.393856	33681	2998
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.047300	16621	3914
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.091802	41093	2825
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.100217	42316	4730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.070327	22639	6895
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.085863	16984	2887
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.083029	34918	3429
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.093937	39007	5302
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	0.763636	390	76	1.0.0.0.13	synth with cache (only 1: induction l; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.065604	27209	2213
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	0.971884	242	96	3.1.1.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: intros n m p H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.026669	8049	2818
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.095938	38510	4436
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.062652	22611	4686
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	10.947303	7937	634	6.0.0.0.17.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.057751	18491	3768
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	9.089954	12895	1546	0.0.18.0.5.10.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: elim H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	40.512573	214154	1899
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	9.886373	11934	1558	5.6.2.6.8.0	synth with cache (only 1: unfold included; only 1: intros A A_wd A0 AS; only 1: intros; only 1: intros del H9; only 1: unfold intersection_domain; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.069658	10964	2031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.039691	5060	1061
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.044919	15250	2522
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.085073	37536	3507
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.059770	24298	4622
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	4.262131	5093	661	2.2.1.20.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: auto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.067095	25378	4058
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.017232	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.046194	17223	1988
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.060033	24386	4658
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.521758	35810	3680
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	40.031254	9751	3603
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.110014	47045	3576
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.035672	12365	2925
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.010299	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.103968	28899	5463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.038680	14893	1880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.868857	313	92	3.0.0.0.2.0.3	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.029027	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.006853	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	40.070063	27578	4206
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.435985	1285	249	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.171553	75336	5458
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.040311	13848	3152
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.069422	26417	4350
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.088682	39411	2319
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.116370	48704	2472
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.035511	10048	4190
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.048466	4642	1916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	41.063721	27229	3180
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	10.441056	49706	463	269	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.133675	56113	4989
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.007199	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	40.072271	26854	2193
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	9.272117	820	465	1.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.178876	80026	5377
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.201008	102825	2705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.059828	18361	5300
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	5.781530	943	256	0.1.12	synth with cache (only 1: intros m H; only 1: destruct H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.109534	46561	5760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.026301	2650	253
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	21.347581	39590	1939	14.5.55.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	32.286935	10516	2982	1.15.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.094420	38077	4084
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.044555	13737	2755
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.074592	32154	2504
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.258956	69133	5814
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.252540	120485	1567
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.247077	1028	161	6.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.218784	45663	3388
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.023146	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.077994	19545	2926
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.765076	921	97	12.0.17	synth with cache (only 1: red; only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.061156	24658	3350
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.126468	12727	2645
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	42.038918	12647	1173
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.051429	20610	3067
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	41.215944	9140	3214
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.142494	60304	4670
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.018596	2668	790
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.081139	30303	4162
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.112105	48904	3816
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.038547	10021	4043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.071445	25298	4172
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.076683	29894	4194
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.041024	14110	3090
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.905524	32626	415
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.021662	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.143784	61215	3829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.180168	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.057231	21138	3449
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.725746	2274	142	44	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.865139	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.101275	39046	3591
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.093443	12	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.018047	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.013351	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.015107	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.008096	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.419214	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.115348	47700	6379
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.118680	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.191762	87227	3750
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.063633	22282	4557
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.046054	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.494396	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.422865	29	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.102048	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.561434	16	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.289120	9	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.115887	48213	5719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.071048	23777	4560
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.104738	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.114497	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.089431	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.101365	44052	815
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	3.314792	4013	374	19.0.24	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.038248	25	7	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.064760	25661	2628
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.025862	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.021417	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.139965	65222	2686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.889853	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.052658	17390	3867
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.154141	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.043601	14265	3553
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.033833	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.179709	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.187022	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.072233	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.111395	42971	4660
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.128091	16	4	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.612359	66	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.596151	36	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.623996	20	9	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.162554	75113	2856
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.087914	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.103667	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: intuition; only 1: do 2 rewrite F.union_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.077966	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.092998	33012	4617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.455360	28	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.336633	31581	4555
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.525633	44	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.540646	20	8	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.024528	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.027347	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.064728	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.076761	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.057816	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.326557	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.069049	22775	7234
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.034109	11796	2996
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.518907	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.381563	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40	40.986914	66727	3642
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.034893	9438	5098
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.106433	45677	2820
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	41.307906	16801	3041
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.019079	3603	449
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	4.210092	334	85	3.0.7.0	synth with cache (only 1: expAdd; only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.082074	33456	1730
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.635250	109435	3718
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.030667	8591	3746
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.043944	15438	3031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	7.572306	13855	621	7.0.13.18.0.81	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.270688	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.012050	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.215933	46	9	7.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.096617	39606	3932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	1.433536	68	53	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.814938	26483	2734
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	41.548996	37688	2320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	33.611509	10452	4360	0.0.0.0.1.0.0.3.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: assert ([|b|] > 0) by lia; only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.272609	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	41.116407	29215	4811
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.054423	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.087649	35259	5024
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	31.687018	10742	1318	0.0.0.3.1.6.1.18.1	synth with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: L.MX.elim_comp; only 1: auto; only 1: eauto with ordered_type; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.222420	17546	1160
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.074166	4043	831
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	40.217705	24103	3702
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.054293	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.056486	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.076337	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	40.926015	14340	1395
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.523221	22	6	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.043363	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.071821	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.034359	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.058515	20740	3393
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.486357	53	16	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.062533	22407	3761
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.086534	35107	4675
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.066618	25133	2445
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.146358	17	5	1.2	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.025226	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.022160	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.020225	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.260756	76621	4395
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.069029	21123	5604
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	21.478893	2688	2030	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.089799	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.011284	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.141879	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.084020	32480	5165
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.047480	13769	2650
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.478006	31704	3246
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.648932	40437	3177
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.126802	55790	3818
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.261423	126339	4878
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.087972	39407	2460
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.417132	110136	4204
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.041664	12607	4150
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.523999	21865	1906
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.031047	8240	2996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.170356	76370	3655
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.071009	23774	700
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.938667	863	94	2.6.17	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.023288	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.845132	9873	1719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.068654	23566	4086
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.008777	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.015129	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.045158	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.829878	34654	4694
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	43.094005	28237	427
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.308088	41685	4206
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.021985	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.011820	2781	1186
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.163660	73945	4228
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.042474	15132	3016
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.149926	4561	1065
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.075560	27230	3812
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	7.523260	4797	794	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	41.136358	23524	1600
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.110507	44299	5868
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.084592	34127	4139
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	2.168105	414	99	0.0.3.0.5	synth with cache (only 1: destruct 1; only 1: destruct (CRltLinear R), p; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.050995	17079	3608
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.058267	20392	3548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.060895	23049	3031
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.071892	28761	5583
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	2.887026	1429	181	1.5.16	synth with cache (only 1: intuition; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.595508	15633	4012
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.539093	742	206	2.1.2.5	synth with cache (only 1: intro Hz; only 1: red; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.814055	448	133	3.7.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.062912	18	6	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.061359	23143	4007
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	3.960138	2167	335	0.24	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.245616	332	158	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.051472	13280	4461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	5.456143	5500	475	1.1.0.29	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.659480	43	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.087729	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.798558	19565	3205
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.098518	30008	3044
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	2.502438	1775	228	3.17	synth with cache (only 1: intros n A f x; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.091158	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.192456	97488	1614
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.137348	59506	4094
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.665694	40713	6158
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.011219	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.270375	15804	1704
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.394367	14	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.705993	44	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.029799	8592	3786
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.575046	17115	3676
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	9.718947	1919	700	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.339771	167414	5620
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.026162	6241	3025
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.137600	35694	2874
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	10.014127	9834	1280	1.1.1.1.0.0.25	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.724054	56532	7164
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.014259	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.010006	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.010418	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.007135	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.011103	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.011622	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.009186	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.096807	36698	4743
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.777952	167213	3196
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	40.882802	17062	2230
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.218440	735	267	1.2.1.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.057217	21630	4220
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	11.712448	5110	267	31.15.0	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.037201	8194	2240
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.506796	31061	4983
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.327673	50041	4131
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.039871	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	41.302695	44571	2043
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.098529	40620	5982
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.050899	19030	3817
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.378716	30224	2737
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	41.396565	20200	2906
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.101362	42529	7572
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	41.192209	9445	3920
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.244680	34	10	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.008297	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.186732	73	11	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.034753	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.016012	13	3	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.860226	3	2	0.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.011700	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.013620	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.010234	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.010095	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.026907	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.051520	16943	4263
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.047091	15940	2554
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	12.653632	2962	220	8.8.6.11.3.18	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intros; only 1: constructor; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.070790	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	40.397362	14968	4587
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.029365	8	6	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.153600	73067	4682
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	41.963015	51919	4660
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.044642	12714	1307
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.019546	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.309826	15640	862
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.023396	5096	3231
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.508910	23243	2652
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.553570	30981	2867
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.023373	5859	2375
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.876612	551	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.155334	65169	5004
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.811202	55586	4372
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.991977	69206	5023
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	41.256534	34840	5287
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.054549	19752	2765
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.151156	14964	5112
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.083731	34242	4059
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.011627	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.254030	304	111	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.067826	26294	3140
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.313193	43284	1823
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40	40.095161	41755	3790
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.039576	10142	2601
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.081935	32917	2665
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.088757	37998	4007
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	41.074228	12037	3564
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.077743	29223	5910
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.822948	122293	1707
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.164668	70947	5558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.933815	89592	6976
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.758174	49864	4740
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.899310	1563	189	19.17	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.074680	23007	4379
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.846508	4533	1884
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.010360	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	41.186811	5368	633
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	40.157307	73799	2465
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.102607	31574	3080
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.099879	26206	5094
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	42.055576	16183	2432
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.325502	14825	4398
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	2.910956	4869	406	2.1.1.3.31	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.028631	7060	3117
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.045283	14668	3088
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.521303	41864	4341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.086115	17884	1967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.245380	37512	5204
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.670161	96557	6879
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.138276	2811	552	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.818724	83297	5094
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.029832	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	18.423439	12988	3864	0.0.1.25.2	synth with cache (only 1: intros; only 1: unfold Rgt, Z.pred; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.019506	5594	2451
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.039265	13115	4569
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	5.044094	5826	861	6.1.3.17.2.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.023288	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.014095	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.954644	34983	3447
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.043362	13693	1831
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.539893	21830	2441
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008340	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.009460	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.010789	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.256240	42354	2029
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.078491	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.058088	18200	5329
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.041175	9582	3093
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.137598	59551	4697
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.067598	25300	4340
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.733868	28082	4882
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.092940	40850	3160
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.086455	23040	6204
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.825902	85464	3134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.085795	34007	2327
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.941095	96371	2809
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.766976	30673	5049
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.316805	14235	1060
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.520692	5390	541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.534604	345	196	0.0.1.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.294287	17715	4128
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.076132	4474	831
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.174755	83983	4540
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.031252	7987	3777
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.233790	1252	124	22	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.034554	11459	2914
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.195805	30893	4084
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	8.042301	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	10.473664	4233	1473	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.135475	56125	3283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	41.389573	55842	6749
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	8.207333	5809	872	1.0.0.21.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.064138	21830	6427
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.133188	54767	5565
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.829833	72140	6367
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	40.094676	39136	4099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.111907	13	10	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.802530	100018	5061
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.424218	75847	3097
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.732454	23859	946
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.572551	735	183	22	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.059180	20582	3115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.018984	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.267300	28434	2778
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.801925	58153	4043
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.075165	28094	3397
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.114657	44364	4673
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.051557	15717	4755
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.101368	40990	6727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.801365	70360	5273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.012769	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.712886	210	45	7.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	26.868540	19644	1770	2.7.1.0.0.5.17.9	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.080270	32795	5025
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	42.082816	33104	2781
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.957713	67061	5201
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	10.820882	3043	734	0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.201229	34288	3681
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.763624	98184	4140
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	12.247440	1265	116	1.0.26	synth with cache (only 1: induction x; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.066678	22483	6068
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.911222	163	98	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	40.108447	9843	1749
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.036983	11035	4476
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	13.011959	36167	1679	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.011321	4246	410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.044763	16204	3451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.220785	16884	5735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.090433	35058	3843
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.024975	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	3.787663	2334	354	8.0.1.12	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.840383	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.044964	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.069598	23274	8442
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.220255	95495	5998
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.762119	55850	5262
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	41.182751	30483	6303
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.031572	8	6	0.1.1.0.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.817667	63203	4937
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	41.038731	29880	3431
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.057875	22223	4261
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.501157	39324	4616
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.335962	30359	3449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.025949	6	1	5	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.269296	23987	3085
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.598553	64700	4609
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.094390	41404	3608
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.031870	6693	1026
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.093404	34329	4336
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.082394	9642	1602
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.227507	104	32	3.1.2	synth with cache (only 1: intros n m H1 H2; only 1: apply CReal_mult_proper_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.021432	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.652954	474	118	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.091526	31324	2726
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.739668	60182	4190
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.545778	49676	8129
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.279248	128354	10884
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.168620	16088	3695
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.948068	10659	2207
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.101858	37185	4310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.044281	6977	1336
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.859906	62679	6487
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.708239	6934	4758
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	40.399270	28430	5752
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.544778	407	70	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.167052	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.028644	7595	4352
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	14.549791	7574	2860	10.6.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003604	835	315
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.766794	37970	4486
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.014874	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.054579	18145	3944
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.104029	36083	6588
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.193022	35182	4642
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.730458	74906	4014
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.066109	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.719989	59173	7991
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.755254	405	162	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.785602	10026	5154
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.550893	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.978291	24434	3788
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.065170	23044	4370
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	41.053457	39022	5158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.214382	38850	2561
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.449264	59582	3518
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.064380	22292	5274
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.065087	22544	5525
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.117027	53073	4557
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.057001	17888	2890
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.288610	32611	4286
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.059697	18156	3510
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.143232	45821	1411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.853881	76247	4121
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.976968	60809	6914
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.123881	6685	3351
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.060544	23296	3423
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.971593	7830	1335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.069159	27715	2877
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.124075	52478	5273
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.005845	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.090704	9061	5151
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.151141	1996	623	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.215069	2201	166	4.2.14.2.18.2	synth with cache (only 1: split; only 1: intuition; only 1: auto with *; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	40.368013	25708	5287
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	41.007251	33199	6704
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.041929	14250	3401
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.094174	34036	4557
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005304	2029	215
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.733226	71193	4271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.077674	29802	2567
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	4.392056	2325	849	0.0.0.0.0.0.2.5	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.021628	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	18.830813	17519	1978	0.0.0.0.1.0.7.1.8.9	synth with cache (only 1: destruct x; only 1: intuition; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.090507	28350	4397
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.704452	19002	3393
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.074901	28671	3591
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.036084	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.110637	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.096552	16157	5685
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.278577	62061	5107
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.046218	12767	5054
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	41.029391	23042	4990
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.106458	31289	5317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.245300	47521	2813
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.461236	67848	2931
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	6.451626	4132	792	0.4.3.2.1.8	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	4.466920	1624	709	2.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.059557	23068	3162
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.042020	11906	4883
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.031479	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.051932	11526	3364
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.391260	42130	4068
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	40.323098	76408	3401
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.262326	106494	2804
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.597398	13377	3803
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	26.109503	613	128	2.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.144245	60457	5408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.038564	11885	2401
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.071937	28255	2471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.021867	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.864384	41992	3763
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.203316	50073	6159
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.310785	30922	3022
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.097029	40009	5919
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.043363	14108	3155
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.953995	28530	4457
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.026147	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.034017	10	5	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.019790	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.653140	39886	3655
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.032663	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.064138	24066	4117
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.056777	22936	2853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.397572	56	12	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	2.538324	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.137184	19682	4735
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.603764	19724	4355
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.578629	59777	6396
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.046316	13530	4737
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.890068	23342	2616
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.067061	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.697191	50524	5945
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.022021	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.198831	54	28	1.2.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.891777	10895	2167
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.011199	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.674602	36476	4429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	7.676483	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.041045	12736	3290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.646134	11575	730
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.051820	19862	3181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.075601	29824	2964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.550321	22255	3436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.050831	13706	3053
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.426286	38181	6040
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.231288	2069	377	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.025442	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.241942	92959	4284
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.016015	1797	521	11.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.042920	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.007936	3068	153
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.681443	11306	2447
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.652608	13	5	0.0.3.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: symmetry; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.027816	4678	1028
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.964640	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.093267	33294	9240
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	41.071425	8303	1211
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.969117	36910	4031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.038027	15312	1453
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.287706	57838	4719
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.104624	36636	4584
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.304752	149165	4646
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.073244	1103	270	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.036121	10372	3419
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.330322	124630	5108
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.971563	29483	5335
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.175125	79386	4236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.188344	81558	4336
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	41.007324	131502	2845
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.058105	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.087292	32979	5034
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.041236	5048	1585
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.672054	34212	3181
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.226379	62160	5762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.371836	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.820809	34451	4904
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.661122	15696	2176
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	0.725969	200	60	2.2.4.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.253077	2886	566	14.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	25.108111	27803	4122	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.494484	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.724658	28013	5002
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	41.913612	18420	2925
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.096102	39635	4804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.393597	19451	3073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.090866	33453	6479
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.100745	15007	1492
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.092151	40969	3829
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.178126	58553	5223
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.539610	31314	4414
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	29.001096	43514	3738	0.0.18.18.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.047001	13569	5481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.076154	21111	1996
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.002987	702	141
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.157402	69845	4878
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	9.292682	5522	1276	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.932367	22333	4162
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.123683	54551	3756
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.160167	75	22	4.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: destruct m2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.066115	26205	3145
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.345734	31217	2557
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.472784	29468	3630
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	4.077746	713	343	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.131554	58466	3965
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.697147	110960	4373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.082380	31650	4144
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.776261	66994	3718
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.488575	723	55	30	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.791998	121065	7262
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.551281	65826	6086
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	40.501969	45922	4343
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.122702	49257	7689
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.051813	16706	3604
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.538640	11546	526
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	40.890485	56072	5556
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.058676	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.549811	4546	974	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.900990	71618	3338
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.082832	28700	3282
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.335767	14076	2981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.069639	26533	3443
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.086645	32639	3499
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.051296	16706	2826
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	41.021354	94722	7226
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.319376	23202	2632
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.903657	49709	5474
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.665067	19598	3317
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003577	1232	121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.051754	17334	2652
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.133776	27272	2188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.016229	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	41.141872	162597	5974
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.083150	25462	2977
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	41.067573	72014	4332
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.017536	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.120657	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.069433	24925	5216
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.250536	22503	2785
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.128279	54179	4254
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.201380	90017	1782
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.987070	60783	1785
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	41.156712	44552	3067
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.869365	44447	4594
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.811567	50228	4879
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.130949	58776	5392
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.767385	39192	1736
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.051977	18711	2854
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.067006	20495	9289
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.330868	17978	3281
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	41.047162	92247	5755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.124818	53351	5904
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.796561	2199	229	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.734489	41677	5228
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.078563	28447	2756
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.576318	50852	4618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.067723	21927	4821
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.041869	11306	4205
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.096370	35140	4917
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	2.953554	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.253432	125665	3203
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.069282	16679	3679
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.098626	38887	5637
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	40.254584	41611	2827
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.133580	55720	5879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.057401	4640	255
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001225	221	73
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.108521	45738	3776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.436183	29434	3679
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.102511	43151	4583
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.058097	22751	3264
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	41.028753	43982	4068
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.092851	36621	3300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.810272	22031	3859
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.717666	42883	3453
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	41.252040	11379	1592
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.048893	9003	4265
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.526018	14	3	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.619826	40230	5092
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.706821	40321	4131
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.161454	74937	5457
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.076817	23499	4588
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.300137	77	39	5.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.327718	17566	2315
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.032416	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	40.965668	58888	4462
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.142293	54457	4998
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.839057	36350	2409
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.713445	36930	4168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.135928	58485	3969
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.999191	57928	1997
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.155628	66546	5025
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.158852	71850	3342
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	41.009496	30597	3262
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.317597	18022	3655
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.172656	29467	4844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.039509	16131	1491
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.149508	64645	6485
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.700393	48235	4964
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.098708	39044	3831
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	41.041388	46491	3904
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.780424	29060	2471
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.043983	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.312462	25015	3478
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.116420	779	135	1.1.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	41.162119	29550	3245
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000779	77	29
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.254627	3675	415	19.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.076746	27272	2728
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.681359	19158	2658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.060113	19795	3470
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	41.217834	24486	1740
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	20.711212	23008	1859	1.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.049015	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.493748	21720	2153
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.227858	9648	5120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.300533	149115	8557
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.755008	31337	4932
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.631502	36975	2592
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	13.569748	21422	1012	0.0.0.0.0.0.2.64.0.12.70	synth with cache (only 1: split; only 1: intuition; only 1: firstorder; only 1: intros l'; only 1: intro; only 1: intro; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.065147	18929	5384
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.322875	24408	3858
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.362570	65376	5555
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.203700	53930	4500
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.021371	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.024735	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	41.127241	37057	3109
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.883377	117593	4195
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	40.626832	85238	5229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.152793	64360	6221
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.135507	60633	4943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.936657	43119	4802
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	21.733881	29634	2362	27.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.129477	53820	4362
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.507084	7422	1465
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	26.136452	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.378299	42914	4589
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.025512	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.807898	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.007597	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.342576	10056	2210
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.078150	27344	4867
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.310302	336	47	2.11	synth with cache (only 1: intros a n; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	41.085550	37684	4032
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.572296	33017	4966
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.178426	36868	3360
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	1.771627	528	111	1.0.0.2.5	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: trivial; only 1: trivial; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.215233	19	4	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.894638	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.129443	53562	4345
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	2.979467	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.649776	44964	4321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.059400	19147	4165
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.418861	55498	4459
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	41.092689	24310	2417
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.254057	7877	3241
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.864549	53613	2632
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.008598	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.749616	39840	6082
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.006302	2	1	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.466562	18229	1928
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.956294	30621	2598
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.071994	18880	5944
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.393322	28145	3692
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.008435	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.009504	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.140795	38462	4890
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.177057	34021	5515
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	12.586623	7595	1284	1.1.0.0.9.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	40.209713	51042	2889
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	41.250721	47209	3841
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.696396	57499	5093
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.071936	28159	2584
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.308515	39590	3153
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.077305	26947	3904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.978568	42153	5458
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	22.335327	18817	2120	2.15.2.15	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.000974	131	35
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	13.357941	3397	1232	1.7.4.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rtotal_order r1 r2); only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.526817	25381	4461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	7.006995	2298	419	3.11.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.871942	54103	1824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.076460	28005	3330
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.110632	47388	6452
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.990332	24114	1426
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.275058	22298	3330
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.552538	79182	6110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.784771	157143	3463
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.935616	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.014881	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.542770	32400	3440
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.023327	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	10.739866	5738	659	0.16.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	6.899965	19778	551	104	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.021629	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.149576	66687	4427
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.374025	86827	547
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.598244	25871	5650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.999483	26944	3246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.072507	30259	2376
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.361624	88212	6613
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.320574	55954	4372
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	15.178217	8566	1365	11.19.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hy; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	41.069419	49806	1454
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.544929	56462	5167
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	6.637621	4030	778	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.447858	38864	2862
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	41.020297	118991	6096
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.163835	76035	5289
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.544735	16481	3646
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	40.583933	25936	8463
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.648668	28078	4368
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.057739	24999	1453
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.058296	21507	3888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.935903	43010	6298
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.083253	32149	3120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.070695	23083	7788
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000785	64	34
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	19.005187	28478	2555	4.0.94	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.939631	46361	4386
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.011038	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.079764	33265	3826
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.701233	30393	2398
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	4.802162	4095	230	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.350966	5189	816
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.107481	44333	6000
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	4.075074	3853	525	0.3.2.1.16	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.268618	29581	3441
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	8.113854	6840	572	13.10.2.12.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.056518	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.470646	65912	1865
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.225744	35193	4806
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.906224	32011	4045
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.558829	59147	3037
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.131663	113	23	14	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.060838	17077	6826
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.155677	6494	4846
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	8.851655	8303	327	81	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.900645	27624	3192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.057274	14126	2594
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.443182	22402	9491
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.325551	13198	2200
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.166170	845	264	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.080138	28805	5614
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.390841	121496	7033
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.444144	32577	3032
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.009881	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.220169	107056	4712
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.029920	8382	297
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	40.565511	42466	7593
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.569737	34254	4350
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	20.999842	14078	2052	0.0.0.6.20	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.058724	22391	2471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.275016	20672	4567
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.925148	12556	2702
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.067974	22415	8064
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.146054	60930	3961
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.026355	5	4	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.596006	2100	352	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001073	197	34
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.823866	45031	5374
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	41.079220	25701	6072
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	41.163754	27687	1662
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.061855	143	11	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.661336	23042	1587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.277657	23172	2514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.593883	1359	67	1.0.0.46	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.025672	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.006834	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.060178	23233	2509
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.104073	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	40.582685	17786	3787
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.010343	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.024366	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.499094	20372	3025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.966629	25094	3211
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.080665	33304	3983
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.892764	27041	3399
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.796367	26773	3615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.495072	130	43	0.4.2.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: intro m; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.267450	5397	4039
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.299838	5751	105	0.0.104	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.739845	17261	2333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.602896	3542	77	83	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.061908	21580	2408
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.991380	50032	2305
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.447626	23054	2212
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.958504	32006	3086
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.109383	44007	5578
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	30.907409	20207	2163	3.40	synth with cache (only 1: intro x; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.545803	50010	3601
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.623762	27144	2962
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.097022	37731	6601
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	3.464995	1043	129	1.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.972921	22624	2984
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40	40.857034	28547	3803
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.102465	42116	5808
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.056967	13987	5877
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.024832	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.662071	6690	809
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	5.159544	4467	894	19.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.753826	43608	6683
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	39.884802	78023	4338	0.0.2.121	synth with cache (only 1: revert a; only 1: intros m; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.676313	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.192250	33320	2210
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003041	437	52
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.210157	26806	4848
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	41.053886	26392	1282
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.298059	1078	169	1.14.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.046232	18028	2297
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.796104	15789	1290
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	0.834249	226	113	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.055377	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.564365	43249	6376
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.053851	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.071914	25457	4581
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	14.672226	17276	1476	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	19.471397	4141	1562	0.9.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.011248	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008524	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.207049	97886	4047
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	8.067831	4664	395	37	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.059387	22013	2400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.072698	29035	3709
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.894557	17091	3259
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.613815	15768	2549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.040227	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.242862	17355	5880
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.363336	277	110	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	41.031357	17392	2371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.180761	12135	1473
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.575091	47936	4949
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	3.239829	2537	479	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.033558	7709	3847
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.567503	50184	3934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.070888	23602	4762
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.292750	54576	4676
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.047153	12764	6241
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.012104	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.007610	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008932	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.005936	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.056204	18874	5827
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.977931	59696	6961
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.084574	32875	5809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.536279	46081	5122
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.350370	133820	4706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	9.648955	2302	288	0.1.0.6.8.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: intros Ha; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	41.218756	69072	4064
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.460531	39201	4617
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.002879	497	87
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	41.232489	9650	1027
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.276123	14484	3458
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	5.766202	10326	656	30.18.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.041410	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.546070	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.947501	71465	4112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.060282	26564	2034
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.875456	69951	4634
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.242104	1584	72	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.579007	36464	4921
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	41.118045	40737	2556
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.593539	24372	2672
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	1.238644	60	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.034244	4605	1000
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.067570	19930	2823
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.083077	33023	3844
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.435946	18688	3596
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.031790	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.670875	129	46	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	41.083500	32443	3902
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.466386	30974	3737
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.668034	42854	4381
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.854479	25679	731
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.545951	40762	5909
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.344004	32708	4597
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	26.218988	24224	2907	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	41.020204	17913	2973
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.930213	2160	282	0.0.0.28	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.078940	33726	2369
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.697594	20742	2342
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.074372	27701	3938
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.036360	7055	3976
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	41.150976	12882	1028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	41.013231	9818	1886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.085360	28124	3865
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.237059	22275	6535
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.051481	17178	399
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.549080	17378	1246
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000810	54	30
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	41.022035	55556	4404
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.962166	40975	4185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.043918	12622	3809
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.844760	7675	1130
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	41.195830	41582	3484
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.598974	34471	4629
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.533123	12717	1687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.193071	29817	3769
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.608010	16341	2943
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	22.845747	14991	1986	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.029391	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.093939	38740	3094
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.012998	3258	557
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	12.239287	13289	1678	0.2.1.3.0.2.19.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.368504	22098	6221
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	41.006165	21796	3337
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.693570	11710	1595
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.855431	81424	3523
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.389588	5630	2286
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.269774	8893	1404
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.395228	27	9	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.014812	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.022118	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	41.011944	126682	5077
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.920731	32886	2946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.093433	32699	4892
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.990121	47713	6132
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	6.287558	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.642655	64146	1168
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.054131	16646	5302
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.124649	48560	4115
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.657706	37330	6434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.741402	123312	1101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.098703	35247	5230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.043662	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	11.230729	35476	1613	0.1.1.0.38.20	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000792	52	31
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.882395	47567	4934
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.094029	39761	2422
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.346292	39672	4702
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.584275	39731	5226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.873569	82213	4325
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.009021	8	1	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.060269	13436	3469
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	41.248189	25277	1166
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.509969	13984	3162
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.873256	6235	1232
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.950059	78	17	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.184752	13939	2441
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.629282	45387	3618
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.391770	7485	2373
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.016105	3898	683
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.183811	84521	4035
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	9.800114	3138	502	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.368599	26347	5574
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.546857	34140	4395
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.941921	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.583911	26035	1805
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.865417	63453	2876
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.417065	9535	2695
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.375101	21335	2276
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.069909	23588	2476
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	41.016636	18828	1666
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	41.019765	28251	2821
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.409505	42398	5563
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	41.220879	46692	3374
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	40.107943	40553	7177
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.123009	48469	4014
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	4.234802	1821	385	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.090633	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	41.144351	40017	3963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.084294	29182	5007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.319465	69818	6524
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.703282	58983	4178
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000765	62	32
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.071284	5725	1078
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.286440	44445	5195
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.913488	18487	2166
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.704084	25670	3237
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	8.797273	6642	916	0.9.0.6.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.539954	12416	2868
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.023428	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	41.155807	15583	913
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.015551	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.006270	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	41.334208	13410	2383
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.225449	179	59	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	0.037398	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	41.204694	31404	2783
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.191547	55523	326
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.016289	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.200615	670	289	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.080525	34928	3648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.526357	21437	3446
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.063780	12127	2602
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.699851	29648	3098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.785489	3137	908
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.042764	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.022046	5	3	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.521883	27813	5899
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.028343	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.201871	16706	2728
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.876795	74573	4730
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	40.487908	28391	2738
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.038447	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.010543	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	6.943014	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.030019	8258	3123
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.059075	22686	2430
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	1.974719	954	73	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	0.263795	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007681	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.889714	850	94	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.995241	333	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.073506	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.109199	42589	5119
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	41.082746	25437	3539
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.337694	17887	5262
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.070044	25585	3714
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.055863	14034	5511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.029921	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	18.485245	30428	2725	0.0.1.0.2.5.8.9.1.12	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply (find_2 (elt:=elt)); only 1: simpl; only 1: rewrite ?(add_find (elt:=elt)), ?(bal_find (elt:=elt)); only 1: destruct X.compare; only 1: order; only 1: intuition congruence; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.876085	35832	4880
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.601148	34377	3627
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	13.203591	12580	1406	0.0.34	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.755582	82896	4222
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	3.836466	3388	645	1.0.2.3.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.254424	44270	4802
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.537421	28401	2183
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	6.798465	5854	984	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	24.619072	48189	2702	2.2.2.6.2.2.2.2.6.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.834283	91454	2309
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.623414	24764	1951
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.482665	11667	3805
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.155121	33674	5523
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.755164	9713	1727
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	40.931616	30494	5125
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	25.187238	73100	1532	4.1.6.3.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.094583	41421	1874
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	41.162354	30263	2502
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.123149	55190	1965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	9.291807	10821	963	0.0.2.0.2.2.3.0.0.0.4.4.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.075250	27689	4728
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.222490	30996	7002
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	27.113564	32549	4125	0.0.0.0.1.3.3.0.1.3.2.6.0.0.0.1.3.3.0.1.3.2.6.0.10	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.043102	14324	2851
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.751018	41340	4358
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.835634	721	96	10.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.590682	60016	5369
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.212937	22833	3237
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.518900	681	133	1.4.0.13	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.421847	83996	4732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.383685	22762	5769
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	6.339948	10546	691	0.0.11.11.15.1.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.540945	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	41.070547	35627	6045
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.078838	33478	1458
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.513632	120733	3865
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	40.073378	27244	5843
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	0.263308	70	27	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.136809	58624	4214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.903347	55881	2561
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.269867	63943	5236
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	23.945423	15349	1626	2.16.2.1.9.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.084447	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.057397	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.707442	69495	3853
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.730862	42864	7307
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.785536	75295	699
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.983710	16631	2118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.096196	32671	4384
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.239123	27695	5752
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	34.131607	48106	5799	5.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.233490	13494	4875
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.189783	31925	5186
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.026821	7991	2332
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.036827	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	41.014621	30331	9088
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	44.400425	44944	1080
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.013330	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006688	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.006372	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.006272	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.058596	248	108	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.008983	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005860	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.674832	32178	4347
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	39.527514	38830	5598	2.2.3.0.0.6.4.5.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intro H1; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: easy || now destruct Hb; only 1: intros H; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.040107	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.765254	35	9	2.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.009293	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.068493	21585	5980
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.523945	27334	6266
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.544839	5979	2697
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.097488	23639	7249
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.026123	7559	2383
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.970025	107799	2717
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.045242	14178	2557
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.441108	92	22	7.1	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.382639	22	10	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.402914	28220	4759
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.004757	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.004431	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	9.249727	2178	740	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.293665	48960	5472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.570299	10801	1650
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.039163	12859	1506
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.139055	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.361566	48700	6609
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	41.208701	24757	3043
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.119178	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.094552	35805	5628
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.055996	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.015238	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.057206	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.123135	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.965778	350	82	11	synth with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.328513	60	30	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.064277	25948	2443
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.560539	30438	4628
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	41.097058	30826	3057
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.011598	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.008332	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	9.087118	2578	381	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.589832	68887	4923
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.759795	43072	7264
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.564962	170237	6236
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.065466	22107	4287
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.776386	8046	1030
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.387219	116219	5312
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.389396	9689	4446
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.585799	20628	3955
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.777387	13148	2209
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.016995	3597	2136
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	40.279471	48369	4694
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	41.017708	35837	4902
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.952461	331	78	0.1.8.1	synth with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.697065	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.035622	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.103782	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.642647	95530	5977
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.112637	19028	2104
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.671543	14376	5920
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.944653	65301	6346
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.204576	94	26	2.1.2.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.092786	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.009729	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.031748	12	6	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.416378	13514	2698
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.047123	10719	4465
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.032160	7240	3655
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.180333	83711	4687
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.464069	19299	2482
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.129892	25	8	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.946574	418	183	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.550108	84	40	0.0.1.5	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.606620	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.576765	102012	5132
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	41.164688	14325	1897
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.644927	15724	2403
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.019936	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.180943	28	14	5.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.754954	37745	5559
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	40.031417	10146	2402
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	16.935379	10323	1767	16.0.7.5.4.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: auto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	41.454194	35875	6068
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.786591	36418	6511
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.090297	20152	2955
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.007352	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.013906	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.242018	12	4	0.2	synth with cache (only 1: intros A A_wd A0 AS n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	8.725368	4721	792	1.2.10.11.0	synth with cache (only 1: firstorder; only 1: inversion H; only 1: subst; only 1: now compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	41.270739	21585	4016
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	41.263225	53494	5465
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.018300	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.017649	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.032837	11143	1417
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.378676	32053	8232
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	32.299358	10532	4669	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.652803	36845	1182
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.184329	24961	3959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.093883	16646	4958
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.634201	73697	4563
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.505673	8780	1592
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.561590	40803	5177
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	3.517144	3562	467	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.041793	15953	1322
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.989333	45742	5524
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.844905	763	92	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.568496	32530	9095
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.716492	82494	8311
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.094937	32826	3081
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.014542	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006067	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006680	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.625628	41556	6326
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.046032	12256	5478
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.046786	11283	2321
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.332396	1870	206	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.027585	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.424283	21583	4911
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.687363	10720	2048
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.512752	61401	4307
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.288691	18298	5296
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	2.900536	1025	406	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.118261	366	106	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.126551	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.072969	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.307112	83	22	0.1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.131331	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.444554	73872	7087
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	41.138391	23712	3019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.567428	52780	3405
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.089738	34674	5014
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	41.262286	17881	2817
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.020401	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	13.965056	12232	1362	12.2.2.8.9	synth with cache (only 1: destruct H; only 1: intros l m a; only 1: simpl; only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.400990	20759	4738
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.121176	37798	2774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	5.298263	15548	171	0.174	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.098147	80	18	3.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.602562	929	254	0.0.1.11	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.617508	46551	3737
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.022482	7	3	3.0.1	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.860166	9616	1654
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.690151	92501	3333
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.049105	19890	1486
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.288985	62604	6810
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.421362	25423	6135
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.420059	21776	5952
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.627982	17447	3577
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.911181	29621	4617
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.008749	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.229799	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.020308	11	4	1.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.699642	392	55	18	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.488749	74144	8063
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	7.295812	4753	972	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.435725	23311	4522
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.714606	38217	6884
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.065474	26451	3148
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.035296	12263	1560
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	16.402706	8822	2583	0.1.9.1.0.0.4.6	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl in *; only 1: tauto; only 1: firstorder  (subst; auto); only 1: discriminate || auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.767702	47283	4785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.113294	6	5	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.009673	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.009443	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.227149	27822	8132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.080980	7936	1727
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.087271	27680	4647
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.076086	31195	1695
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.457098	58333	5473
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.512036	42196	5372
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	39.231820	30787	2355	1.1.2.3.3.66	synth with cache (only 1: destruct (lt_ge_cases n 0); only 1: order'; only 1: intuition; only 1: rewrite one_succ; only 1: unfold succ, pred; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.019262	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.036858	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.071878	22925	5106
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.564419	12768	1823
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.479288	83613	5893
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.623033	58	22	4.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	41.217320	26477	2365
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.070274	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.085527	33480	3727
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.489568	24070	2054
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.749452	58570	3354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.631167	18545	3169
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	41.206993	37466	3964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.021704	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.023113	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.049175	18180	2140
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	41.224298	12109	2045
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.014965	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.037078	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.011882	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.071066	25638	3658
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.231426	24321	6939
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.237310	25394	4354
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.626212	25835	3031
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.644577	27418	1058
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.011016	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.350900	81614	5113
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	1.897408	4898	219	63	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.925496	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.525588	87091	5867
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.420552	185	22	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.623429	80629	5699
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.240756	34294	5013
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.104203	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.038704	19	5	0.2.3	synth with cache (only 1: intros n H; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.071367	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.087683	32643	5963
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.032387	10324	2233
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.045242	11504	3736
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.744554	27899	6345
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	39.520276	30582	4273	1.1.1.1.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	3.688960	3011	437	4.17.3.0.3.0.0.0.28	synth with cache (only 1: constructor 1; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	9.699704	9888	1603	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	2.212888	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.081880	29878	1839
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.567929	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.273254	62131	7373
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.042013	10458	5267
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.243804	24733	3732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.361877	88250	4619
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.435782	71164	4296
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.670752	26115	4502
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.675461	28162	4595
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.367228	36410	5633
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.126485	51976	6397
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.220562	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.055655	18189	4529
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.483320	45848	3846
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.612395	38646	3524
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.947401	16421	2327
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.117741	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.367110	28805	3340
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.021248	6291	1861
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	41.219031	35284	3736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.069188	28691	2709
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	41.193105	26247	4684
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.102145	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.032984	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.029243	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.429398	31101	4318
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.598936	54872	7479
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.622385	60681	5412
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.471248	77584	4229
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.427883	52890	7761
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.063564	20461	5748
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.063077	24321	2462
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.036015	7934	4761
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.021929	6697	2015
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.422784	34719	5640
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.741297	50801	3400
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.836934	3627	759	6.2.1.0.1.0.0.0.0.2.0.0.0.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.247375	38794	6039
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.019111	13	3	3.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.013082	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	1.712429	711	176	0.0.5.4.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.050684	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.054848	19304	4604
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.156138	773	381	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.736470	18371	496
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.289942	71567	9240
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.041048	13786	2512
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.109495	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	2.336607	1796	148	25.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.061962	18565	4588
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.494092	46513	5252
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.468538	43851	5029
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.708867	23520	3586
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.037071	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.494416	81270	6386
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.160744	71839	4445
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.545247	9499	2118
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.058767	20171	4597
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	6.483189	5813	696	21.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.428059	53124	5685
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.579619	41251	6192
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.581853	37288	3037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.557633	2328	998
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	3.878699	3619	182	53.4	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.032133	10795	1560
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.127293	58215	3452
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.009558	6	1	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	41.335560	33291	9065
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.965083	38128	3411
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.074256	26719	5408
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.882507	22088	3794
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.593027	66454	3785
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.854879	33624	6038
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.788363	23174	4203
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.109665	41939	4460
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	5.473613	5517	657	7.0.14.12	synth with cache (only 1: intros (l, L); only 1: induction l as [| a l IH]; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.035063	13208	1165
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.547255	27188	6087
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.215274	17563	6288
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.595295	422	65	13.1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.281405	54401	4773
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.523750	31103	4489
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.031747	5871	1642
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.389069	23189	4753
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.478826	25150	5506
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	2.799639	1647	370	1.5.3.1.0.7	synth with cache (only 1: induction l; only 1: unfold eqk, eqke; only 1: auto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.130760	56932	4460
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.043532	15580	1759
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.585747	30145	1570
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.382571	37086	4608
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	37.117145	32150	4609	0.0.3.1.0.3.0.6.0.0.5.4.9	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.863740	68787	2907
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.233243	17210	2419
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.604160	13806	2133
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.047491	11818	5513
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	1.874364	423	74	8.5.2	synth with cache (only 1: induction l as [| y l]; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.424544	29786	3674
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.196683	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.161562	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.040909	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.419291	118422	3615
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.591336	22254	3709
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.295239	48836	2919
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.193685	11267	3267
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	41.036909	16195	2618
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.937403	32277	6478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.011887	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.446706	28505	5581
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.662207	34006	4809
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.481425	57260	10037
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.041695	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.006817	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	11.107618	14458	1078	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.410539	64405	5391
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	2.538571	1439	375	6.2.3.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.220238	44152	3902
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.053050	17944	3069
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.573851	25313	3951
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.323508	33876	4392
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.160808	110	25	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.024479	9677	775
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.510806	47767	6230
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	41.138794	33878	5711
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.240844	24525	4947
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.010060	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.066115	18198	3509
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	1.293191	188	91	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.204845	28617	7122
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.576856	9355	1188
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.362739	63693	7358
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.071298	26473	4183
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.767511	23099	1344
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.375848	108907	6786
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.606095	18280	6319
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.016613	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	40.086063	32239	5767
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	12.775497	10607	1458	0.0.0.0.0.0.0.21.22	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.622039	14341	1144
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.479061	47803	5967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.058440	5270	282	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.505046	99617	4747
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.584566	13918	3193
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.115733	47194	7590
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	23.114840	10146	2494	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.809775	24376	3707
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.283527	31717	6350
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.402177	32184	6535
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.411430	33771	4529
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.177796	83773	10333
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.404556	43147	5283
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.025303	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.443968	79170	6177
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.156486	43221	5136
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.157846	69396	4963
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.044976	11972	1274
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.245356	176	64	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.505495	27292	3144
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.018398	5630	1618
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.397114	17990	4272
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.455844	40166	2225
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.030151	8614	3403
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.366664	30803	8164
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.644638	11000	2406
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.037647	13481	1379
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.729830	28884	1717
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.481502	117814	4842
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.311929	89116	7185
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	4.563524	6932	599	0.1.0.1.2.1.0.0.0.5.25.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: ok; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.203337	39262	6803
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.135107	4	3	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.202809	870	168	2.0.2.1.2.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: auto; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.042544	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.089175	34952	4571
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.805549	24454	3635
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.754939	219	86	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.361373	46685	7617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.168320	72234	5168
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.604209	41124	4056
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.737937	8695	2055
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	7.823332	44176	1034	0.0.0.101	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.784036	477	232	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.660114	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	12.222819	4526	893	0.1.4.6.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.635889	345	67	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	7.669824	26909	1135	57.23.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	3.084742	1459	504	0.0.0.1.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.315743	67679	5300
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.537476	18287	4103
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.626406	1686	360	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.011859	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.210673	28719	6370
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.877862	39467	5363
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.023940	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.538916	18672	5884
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.335908	60912	6486
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.106933	42177	9187
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.372698	52511	6261
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.832615	54187	4641
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.012767	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	34.937343	51722	7223	1.15.7.3.0.10	synth with cache (only 1: apply NNPP; only 1: unfold not; only 1: intros; only 1: apply H; only 1: intros h hn; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.447294	30601	3983
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.705556	143905	4423
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	5.496275	2762	1114	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.147606	60	14	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.643690	230	106	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.161271	23777	4015
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.380930	334	66	2.11.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.109498	44221	4937
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.514986	31435	3818
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.023981	6877	1919
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	40.283432	61247	6083
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.356811	19168	5492
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	17.572204	21926	3067	6.6.9.4.3	synth with cache (only 1: unfold get, push, index; only 1: inversion 1; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.380668	97276	8778
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.021518	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.283804	41072	5557
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.406709	190441	13344
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.383216	101562	2858
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.577706	225330	5887
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	4.456435	4656	651	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.011390	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.014460	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.181903	111	30	1.2.5	synth with cache (only 1: destr_bool; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.090573	37833	4126
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.110849	30	15	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.735354	273	92	0.0.0.0.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	0.319486	116	44	0.0.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.016810	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.075168	25317	6877
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.610916	57988	4957
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.593675	25715	3174
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.280422	27982	2978
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.095151	23	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.025928	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.066679	20835	4145
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.180212	67523	6757
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.887806	216	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.382799	17677	2553
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	40.702068	111703	6075
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.469612	98027	5238
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.487594	20766	4351
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	30.695061	27338	3220	3.1.3.0.3.0.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: destruct m; only 1: auto with arith; only 1: left; only 1: now apply Peano.le_n_S; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.857293	33638	6593
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.081411	20731	5578
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.007062	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.125746	35	18	3.2.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.057663	18025	5417
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.081210	2132	162	3.0.2.24.2	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.034910	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	3.435776	2495	552	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.480852	51809	5708
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.006783	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	0.246437	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.010734	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.011173	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	4.079953	1019	299	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.054162	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.528868	71372	8488
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	20.744048	20619	4626	4.1.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.467033	19606	2165
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.389165	59900	7995
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.066886	1621	675	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.360370	63119	8993
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.046753	26	11	4.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.075933	23015	2734
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.349362	55682	4679
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.017546	4888	1641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.227838	28269	9045
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.156662	20060	5781
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.728027	183749	2490
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.013527	5	2	0.3	synth with cache (only 1: intros m w le; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.360501	98639	5515
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.150673	66072	7180
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.279366	40471	5204
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.460099	85136	2878
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.062040	19073	6353
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.058126	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.169993	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.187297	42163	9261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.119036	48158	5656
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.573011	52752	2486
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.469950	41818	3498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.300133	15848	3349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.023313	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.262762	77	36	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.225884	41126	5630
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.024873	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	8.870325	14401	1083	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.047217	16692	2119
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.255444	10459	3237
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	27.918652	29796	3492	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.011645	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.007890	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.398591	55039	4860
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.587652	46653	3557
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.356226	983	44	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.635933	22373	6514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	8.142043	7712	1816	0.0.1.1.2.4.1.24	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: clear IHl IHr; only 1: simpl; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.345130	18712	5650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.086982	30390	7515
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.189859	21114	7680
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007900	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.020609	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	14.201249	4667	1300	7.2.2.1.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: simpl; only 1: destruct y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.237163	28241	6979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.168224	36461	5033
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.318070	31003	5300
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.331070	8880	1729
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.326340	98334	7480
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003572	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.406767	26621	7225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.541437	834	455	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	8.516480	4443	951	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.242780	46783	4967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.049129	14138	4171
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.013221	3410	1306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.275687	74851	10819
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.203551	41496	5963
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.469663	44865	5174
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.078877	29276	7088
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.416225	366	58	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.091512	35664	5890
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.236259	54951	5747
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.447011	69932	7543
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.069503	22457	6304
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.023534	6223	2939
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.500930	102206	4374
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.322779	36296	6307
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.375411	49553	6156
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.322371	37160	6130
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.249958	37570	4960
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.226752	63840	3543
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.242131	38983	1716
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	3.963930	5886	656	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.316859	72823	4461
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.027362	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.792543	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.011095	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.431705	30841	6801
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.196174	15006	5701
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.110970	47981	4059
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	40.235736	21969	9073
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.216565	25582	6055
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.019847	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.006848	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.222857	17507	7589
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.434773	33048	6674
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	10.806081	6923	1010	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.107928	40806	9290
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.003914	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.461922	26331	3843
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.488675	32396	7905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.228915	38882	6851
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	41.168427	30563	3614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.064158	20753	3524
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015208	4498	1264
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.589428	43412	4441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.262682	681	292	3.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.686800	47494	6333
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.512357	29646	5682
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.357111	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.453490	20375	2608
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.352888	53847	6153
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.077000	30121	4845
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.244412	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.262114	102531	6586
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	1.429123	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	14.831832	3672	597	1.0.0.4.17.2.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: intro y0; only 1: destruct 2; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.187542	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.019837	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.007534	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.283037	57553	6901
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.083055	30453	7252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.346504	19355	2357
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.192173	12687	3257
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.388366	34391	7095
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.279915	41145	5284
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.529044	43070	4899
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.215454	34478	5239
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.275916	32329	6786
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.605546	43	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.225202	83185	7543
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.043970	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.434508	21997	6449
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	7.656710	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.074608	28102	3472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.038797	10680	4794
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.133292	25231	6042
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	40.194104	44157	5500
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.289440	15468	5331
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.355784	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.320073	30891	6967
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.290458	46025	4290
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	2.752463	1647	414	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.702114	39504	6835
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.415601	78885	7314
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	24.449977	27353	4898	0.0.0.2.1.6.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.076514	29906	2409
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.830163	50859	7002
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.477277	62967	2874
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.012553	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.083023	27648	5341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.140778	17244	7215
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.028898	9486	666
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	2.730487	429	82	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.105614	37647	5875
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.333903	56	26	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	2.250881	372	172	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	2.524322	268	91	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.017879	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.657093	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.312291	78241	5237
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.150729	68490	10430
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.332206	51791	5753
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.124021	28750	11023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.242639	4674	1480
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.105832	40727	6110
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	10.169744	4537	1419	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.068048	21921	4829
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.242173	39297	4419
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.076733	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.007718	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.204649	66556	8380
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.569049	49364	4317
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	40.277592	33298	5355
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.075187	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.263217	46074	4521
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.076505	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.142408	19755	3696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.027970	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	0.668346	31	7	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.047848	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	7.137460	5077	807	26	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.068482	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.132026	19172	6600
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.118240	45393	6840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.241691	26417	5755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.119749	16908	3590
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	7.050390	6889	1078	5.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.664364	188	110	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	5.729741	2212	915	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.983300	624	133	4.0.9.0	synth with cache (only 1: intros m x y e; only 1: intros H; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.227496	21407	5602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.247048	1995	459	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.205566	15106	5359
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.634783	47245	5909
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	40.343148	25573	3115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.136338	18838	5136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.092300	11219	1701
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.270411	37048	5775
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.059178	16278	5679
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.186479	46414	5486
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.708811	31175	3672
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.021721	6007	854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.110619	19313	4677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.726968	11265	3365
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.511435	24009	6520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	5.424771	3842	585	0.0.0.0.6.0.4.2.1.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.195587	91612	13944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.309004	40094	3106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.413637	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.388336	52030	5566
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.105345	36061	11627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.250769	11718	3873
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.171189	73570	6012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.178000	12625	4030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.130039	30699	8631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.153251	35036	6557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.140141	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.338918	61534	5127
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.377953	41615	4627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.824061	41166	5109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.078296	17585	6643
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	25.146317	1636	801	0.0.0.0.2.1.1.1.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.561108	828	338	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.138307	44659	7327
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.556821	28261	4868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	7.421388	3183	1021	2.3.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.544998	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.044022	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.181044	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.094038	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.021193	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.510817	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.197865	90056	2729
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.338076	66157	5611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.269688	149	94	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.093379	26586	7262
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.085521	28909	7903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.057963	16716	8417
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	40.288795	62416	5749
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.080278	30121	6961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.109399	23732	5937
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.093416	23031	4625
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.233368	26319	7004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.058568	17966	2400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.240682	43287	5943
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.384357	41836	6388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.107569	27316	8016
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.416965	5390	2323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.357676	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.340605	558	184	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.491872	39043	3626
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.135169	54386	12813
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	9.687797	6162	1522	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.233469	37983	1395
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.356141	72056	3957
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.118294	33167	8676
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.010737	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	2.301913	718	278	1.0.0.3.0.6.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: assert (AUX : forall a b, 0 <= a <= b -> b * a + a * b <= a * a + b * b); only 1: intros a b (Ha, H); only 1: apply crossmul_le_addsquare; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.224489	23932	3614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.112799	48010	6205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.216214	12616	4959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.133964	36483	6594
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.202548	56046	6376
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	12.453928	5930	2410	0.0.0.0.0.0.0.0.1.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.469009	39351	4097
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.012318	2715	1168
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.525314	57426	6946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.131244	14736	2416
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	4.320638	2232	976	0.0.1.0.1.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.140553	51813	1238
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.013154	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.010271	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.105341	15726	2780
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	7.674646	27633	1019	1.12.32.15.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.070941	22585	5548
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.016637	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.074149	10779	5325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.221599	14205	4077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.037044	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.210208	2729	136	5.39	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.080084	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.087719	14986	5964
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.018149	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.085510	16820	6885
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.427196	14997	4028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	6.025019	1910	752	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.336694	23095	1360
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.517462	67098	6458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	3.716265	1832	594	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.591194	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.172659	25226	5735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.081714	18898	3629
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.327680	17072	3899
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.109504	25975	5019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.123014	30831	3733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.097981	10605	3413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	15.456263	2979	1088	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	3.783695	2071	498	1.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.007915	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.009290	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.202513	6144	634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.502997	53704	5311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.007632	717	306	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.221872	102352	14559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	17.056022	4465	2384	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.514661	54489	7287
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.344184	20055	5786
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.123694	27699	4985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.336099	5555	1550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	6.045484	1017	400	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.672719	2284	351	13.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.099242	39311	5802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.029975	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.037394	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.189122	30187	5110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.205204	58806	5589
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.012741	3579	1654	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.249710	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.316585	31527	5112
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.152162	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.524993	22439	3434
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.169378	20652	5556
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.555541	21074	5610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.235051	3134	1259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.052761	8946	4082
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.009337	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.113214	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.021170	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.092938	33282	5447
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.517281	254	72	1.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.237197	23101	5717
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.015592	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.017753	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.126251	39873	5217
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.429346	20267	7490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.183066	17287	3571
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	5.303591	1128	444	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.384197	58103	4226
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.477407	34633	4097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.132551	20519	8815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.124347	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.084684	21911	6127
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.155730	18953	2940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	4.209146	1312	525	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.275227	20528	3648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.190301	32967	4003
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.018238	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.119427	30934	4984
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.447424	34337	4753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.220831	9502	1661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	7.954058	4131	857	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.427699	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.079774	15044	3159
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	14.101079	11111	1666	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.219626	38219	5849
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.764569	68155	5547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.727761	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.099188	15279	3663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.265334	18058	4322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.210375	10834	1410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.062900	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.137265	29835	4723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.106988	14902	5158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.371645	18531	4410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.154743	18050	5541
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.155286	31461	5085
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.700667	105904	2925
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.210441	33903	8153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.248769	18477	4397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	21.759267	13394	1872	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.389808	47815	6476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.071469	16884	6111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.187291	28977	7088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.148166	21299	5523
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.612396	26037	6126
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.011407	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.296826	21112	6328
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.030514	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.019699	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.015293	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.016071	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.013266	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.009322	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.200812	9486	1681
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.509384	2232	351	0.0.1.0.0.0.0.0.0.0.7.31	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.487154	35841	5353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.189418	29246	6315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.226455	41677	5780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.198230	33081	4245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	8.303014	2473	726	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.039149	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.216654	22093	4059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.206467	28922	5368
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.117952	14734	4365
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.478424	31345	3927
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.023969	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.044926	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.168536	15582	762
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.264771	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.126279	10680	3263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.030927	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.327044	31524	5977
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.098134	12837	3040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	4.938260	498	98	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.122075	9789	2132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	16.843482	10688	3201	0.0.3.0.0.1.1.0.1.5.0.1.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.284858	18881	3520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.106169	38305	6688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.302894	13511	3645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.149264	8543	3176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.171797	322	107	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.093864	19497	5552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.172439	21614	6073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.165795	22982	7780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	29.114625	33830	3196	1.0.10.1.33.0	synth with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: right; only 1: order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	9.689852	3936	1642	0.0.1.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.080217	25787	5671
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.599586	306	153	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.437716	1528	615	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.569913	41738	5871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.772090	1613	412	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.151757	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.226507	21779	5316
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.021308	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.100935	35612	5723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.132263	48937	7948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.161677	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.201318	17301	7255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.085475	18944	3927
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.638641	46049	2223
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.189665	11837	3023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.207572	80971	4939
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.540747	22628	6872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.198140	24841	5648
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	31.889457	39679	5949	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.111353	21690	5291
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.091954	10980	2415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.837924	968	320	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.039556	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.723485	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.206240	21968	7033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.288952	38971	4056
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	40.908253	53695	5092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	33.958329	10659	3244	2.0.0.6.0.0.0.0.0.0.5.2.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.158605	13973	4671
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.212092	33568	6385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	39.224416	18450	4509	0.0.1.2.0.0.0.0.1.0.0.24.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.111153	27174	4431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.398603	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.153870	17308	3369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	10.534036	5828	1277	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.136779	33354	4590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.326455	15278	4361
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.169406	27271	3326
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.034431	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.115931	27895	4356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.400339	10840	4084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.151104	18074	4021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.121040	16261	7265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.177016	17703	3995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.412778	80	38	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.378235	21662	5008
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.105617	27748	5023
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.289492	33287	5621
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.127118	108	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.127341	32	17	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.246645	10175	3312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.241184	106755	2733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.045810	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.445972	21615	6705
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.692018	48752	1614
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.017101	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.062937	18302	2989
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.721039	20912	2168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.138961	351	177	0.0.3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.392615	22303	5739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.749687	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.124831	38416	6268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.139025	50042	6530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.069450	21591	2097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.022113	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.126838	23196	5109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.158394	19132	4625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.105439	33305	5335
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	2.852489	774	263	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.034366	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.858787	601	209	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.015052	8	3	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.022120	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	40.529621	25362	4398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.135426	22853	7900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.136800	55963	3094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.569291	154	65	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.390567	33357	6181
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.111809	20160	4478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.088550	14622	2411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.344786	87630	6247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.094500	20958	3435
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.058369	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.126493	24852	4466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.148646	13532	3736
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.754354	1481	670	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.204112	40430	5815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.092648	18781	5896
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	3.644653	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.043140	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.384542	19510	5018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	11.767328	3969	1803	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.090646	25090	7137
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.187308	18320	6179
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	23.011964	4695	1191	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.787368	5683	521	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.044977	13657	5355
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.398397	525	314	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.200170	18638	5657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	3.466063	1037	481	1.2.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.085621	31703	4227
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.342454	19120	7041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.712244	473	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	20.827015	9838	1558	4.3.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.487321	79786	4491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.034286	9851	2442
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.008757	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.141107	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.720836	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.068353	22186	3638
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.625552	26684	3574
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.187661	25462	3165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	5.288099	2272	643	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.170433	12837	3417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.110941	42807	7637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.111291	43584	4821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.084494	17039	1217
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.467538	1585	246	21.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.372468	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	3.710109	1167	412	1.1.5.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.225535	30635	4919
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.008836	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.081675	24295	4351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.231119	104016	10752
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	10.113826	14174	443	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.018183	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.084994	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	6.403783	7095	885	0.0.0.14.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.445792	112	44	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.122567	48978	10693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.106041	38799	4311
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.493236	69172	5566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.101643	21571	4656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.373787	11759	3363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.175886	68859	4662
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.173326	17828	3209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.317856	45438	8031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.119929	30685	6901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	23.640758	9051	3588	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.460364	226478	6316
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.157208	18719	4966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.137041	17073	3524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.105300	14002	5284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.402727	841	313	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	25.276659	16278	2903	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.095717	34646	11414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.065248	16744	3168
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.214707	29334	5671
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	17.565935	9463	2317	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.066029	22324	4076
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	9.346547	11900	1876	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.009762	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.428014	13590	5092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.073204	26160	4810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.027468	7409	2413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.071999	26359	4180
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.373561	20617	7167
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.693835	27538	3294
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.072223	27249	3037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.128881	22500	3888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.171984	68614	7338
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.139822	14922	2552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.212229	90041	8394
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.006347	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	0.453841	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.234337	24571	3410
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.103060	34589	11344
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	0.541197	146	16	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.429853	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.014775	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.006334	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.005722	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.011497	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.079785	25456	4481
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.125095	42729	7109
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.066656	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	1.115889	472	153	4.3.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.407908	20923	3239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.081530	23837	5436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.176571	52634	3851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.094912	27687	9084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.277673	15106	2958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.241705	10253	4372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.139274	13532	3585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	35.772458	12167	2488	0.0.0.0.0.1.0.0.0.0.4.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: revert n m; only 1: intros n m H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	9.501992	5746	1540	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.193396	29941	5605
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.011042	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.013743	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.178325	19246	3738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.108510	24668	5692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.132663	48734	10402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.109337	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.396545	59097	4419
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.097707	14694	5761
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.084130	27133	6141
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.149383	63806	7272
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.037830	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.304168	61702	5576
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.081190	27524	6929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.023555	6641	2102
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.002566	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.071761	16206	5007
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.009048	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.007647	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.590253	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006092	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.290454	19124	5235
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.010669	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.013461	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.907400	289	74	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.005854	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.011180	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.796557	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.104558	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.668266	20369	3439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.066450	18320	3231
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.720343	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.039020	12963	2284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.018816	267	50	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.050316	18247	3407
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.139939	46859	13413
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	3.217898	804	314	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.011183	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.012231	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.315376	146100	10630
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.109031	36141	14112
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.209525	93686	6992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.058629	9931	2063
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.474823	27373	972
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.325424	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.613933	84994	2540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.378971	6486	1720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.101910	12420	3328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.096331	28074	7796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.207769	21603	5146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.070235	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.241972	11409	4503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.133133	19902	3285
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	2.914067	7114	719	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.073862	22568	6337
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	11.100217	6841	1589	0.0.0.0.0.0.0.0.4.1.0.0.0.0.4.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.188205	6488	2201
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.126660	39542	4256
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.094801	26941	8310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.051379	16121	5651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.081529	17630	4854
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.525102	20429	5136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.090905	18786	4883
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.069820	20218	3820
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.120207	41978	5368
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.060613	21233	3882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.167404	9155	1997
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.434107	21322	6631
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.068728	15897	387
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	6.760813	1426	414	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.009400	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009650	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.021423	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.015756	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.008989	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.206385	31368	2624
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.007183	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.026588	6104	980
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.007771	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.005181	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.038876	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.034218	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.043198	13051	2834
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	17.301133	19852	1399	0.29.12.4	synth with cache (only 1: intro x; only 1: intro H'; only 1: destruct H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.097748	35277	5851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.079661	16090	3159
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.111902	42573	6674
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.487009	1089	307	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	6.046815	4375	1007	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.472805	219368	6288
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.129420	23229	1795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.051332	13612	4233
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.366671	18452	688
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.074604	26314	3666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.326115	21581	4074
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.160498	16885	3810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.102736	16346	3739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.173344	19647	3042
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.163744	62226	9592
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.004726	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.561457	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.005851	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.168953	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.112945	44696	4779
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.257095	49304	4904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.112953	14173	4538
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.696651	333767	12058
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.547811	23846	747	1.2.0.2.35.53	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.075374	19076	8154
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.200705	53	14	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.099053	15894	3098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.081109	11999	4619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.338728	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.023613	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	10.655247	6229	898	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.181102	12896	2889
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.394132	29587	4793
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.014202	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.070521	21772	4495
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.120142	42328	5675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.179564	10379	2428
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.261459	23202	6400
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.056791	10327	1324
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.564408	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.082358	23899	12517
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.678032	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.205142	21558	4430
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.015973	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.018101	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.006931	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.010942	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.081966	5316	2004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.039526	10604	3800
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.745753	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	30.144052	357186	3451
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.008330	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	0.024735	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.005694	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.016411	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.147809	62910	2808
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.048626	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.319888	2466	496	1.0.3.2.8.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: simpl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.013670	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.091419	16021	4610
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.084280	30775	7371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.099444	36166	7525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	13.278296	6557	2646	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	9.194161	92328	606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.021748	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.019713	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.022544	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.040093	16	4	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.324974	120	51	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.093603	34511	7125
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.049088	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004595	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	25.071016	17551	3714	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.066869	24783	4239
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.500676	38343	1766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	4.505737	1449	504	2.4.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.253600	29406	3727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	3.125833	1288	657	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.042398	12	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.124974	21658	3746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	4.492178	3453	759	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.097528	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.091241	30615	8845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.791541	584	262	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.061762	20857	5180
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.076700	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.440284	33580	6388
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.587761	276465	11189
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.034977	8942	3561
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.066118	13304	6882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.072896	15734	3601
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.032484	11684	1475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.076142	14892	3394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.191312	12162	3426
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.511949	55874	4079
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.118435	42409	9685
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	7.896281	2656	676	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.390551	41370	5442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.137755	31570	3618
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.171203	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.152362	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.039738	9816	5532
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.076889	26794	8848
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.320991	152582	9831
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.600752	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.430917	200789	9960
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.008845	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.040941	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.039023	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.026066	13	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.482154	209669	11864
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.508155	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.026154	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.103091	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.149113	38971	4091
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	15.700782	3519	1341	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.106300	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.126602	52599	8466
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.637766	4330	447	3.15.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.064148	22977	6802
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.424249	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.111838	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.077351	25209	8426
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.012275	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.070368	24035	6267
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	3.820217	20589	834	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.063426	21133	5705
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.058875	19878	5605
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.016982	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.614481	309276	14136
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.232954	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.029406	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.475398	35115	990
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.044874	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.007063	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.067761	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	28.993526	13769	2977	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.011505	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.022306	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.386146	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.206639	15793	4842
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	26.016197	376973	2905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.064918	18153	5175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.184564	24225	4319
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.066526	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.122209	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.433276	214598	5249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.049082	3775	1784
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	12.932833	3980	1859	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.298869	45554	6488
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.701988	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.011522	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.146624	56650	8372
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.116153	189	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.092165	15020	5378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.101196	27686	10272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.224317	21475	3213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.095874	33641	10435
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.461066	36762	4657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	20.427106	10700	1041	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	9.198984	111164	1432	1.110.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.142910	58251	12540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.104015	10047	2227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.526432	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.178616	3412	453	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.013156	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.021611	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.133238	16240	2819
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	1.277529	1167	371	2.0.2.1.1.1.1.0.2	synth with cache (only 1: destr_bool; only 1: split; only 1: destruct 1; only 1: intuition; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.117567	46339	7776
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.007264	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.007048	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.009603	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.016948	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.029944	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.005559	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.008617	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.063146	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.007329	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.021338	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.009763	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.007121	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.005841	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.196454	17228	5235
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.006382	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.005505	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.065422	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.009682	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.016144	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.017589	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.046786	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.013119	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.021575	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.013078	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.014011	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.328926	144539	6815
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.011400	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.023365	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.062412	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.537748	274042	13067
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.024519	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.018320	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.009689	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.114336	43330	6873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.058188	18669	5157
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.012575	11	4	1.1.0	synth with cache (only 1: unfold decidable; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.035987	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.490604	247200	11978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.833311	354	121	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.084059	105	30	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: auto; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.102062	37236	10208
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.042421	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.109829	43805	4709
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	5.376576	14502	1774	2.3.2.3.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.348133	165284	9032
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.007549	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.008790	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.024709	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.046568	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.004987	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.028843	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.060736	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.181646	81817	4722
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	4.474254	7857	1462	1.0.0.1.0.4.1.3.0.2.8.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.016164	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.005631	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.053707	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.100866	10824	5987
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.144139	62823	3821
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.217077	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.550923	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.762886	26950	1379
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.014102	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.827117	540	307	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.209192	101575	4239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.375908	10253	2715
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.103752	21036	4316
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	5.897376	24672	1448	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.198296	19074	4689
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.728394	1898	186	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	5.522342	18370	1289	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.208915	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.051447	15430	5072
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.265399	126781	14342
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.089431	29910	7499
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.595712	18167	2939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.078611	14251	5059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.090257	12722	3014
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.079313	26738	8819
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.129839	47503	10457
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.437031	40597	4295
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.822659	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.022698	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.033897	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.143130	63596	4645
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.241004	106332	11714
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	16.026873	24117	3036	0.1.5.27.1.5.4.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.163267	26411	3532
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	30.678891	84922	10449	0.21.3.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.683130	546	171	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.011251	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.010256	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.165082	28220	4555
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.015901	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.640218	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.329229	148562	11821
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.223308	23659	5953
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.009628	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.018122	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.546026	253341	7352
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.588108	283786	13186
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.228573	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	1.495243	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	0.794289	4705	207	0.60	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.103211	26783	3702
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.021429	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.257291	116813	10470
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.004363	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.012233	8	4	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.099940	36269	9579
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.015610	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	4.196901	75497	762
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.852113	438	145	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.013444	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.311150	67	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.552479	44201	922	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.015246	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.134312	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.063007	18705	6876
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.217889	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.885838	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007096	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.014686	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.009413	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	10.920897	2734	796	1.0.1.10.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.318679	156702	12652
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.953249	633	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.236196	120	49	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.121773	42234	10153
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	3.217320	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.031116	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.038495	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.407764	70623	2261
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.010498	59	19	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002837	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.260019	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	0.130134	1101	131
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.781349	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.787927	400340	6193
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.708557	2931	605	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.134925	28000	5211
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.175968	16991	3799
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.343836	170232	6903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.102499	17873	6792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.267828	21801	4442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.027062	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.027153	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	8.133110	5975	1308	1.0.7.0.2.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case ltb_spec0; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.073276	25949	6129
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.090098	31978	8369
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.060165	20157	7600
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.576816	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.016022	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.062430	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.024847	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.490361	63191	6153
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.034153	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.088800	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	1.806950	576	197	0.0.0.5.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.155347	21089	3842
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.399374	190169	10352
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.044602	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	27.331325	111800	8450	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.016590	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.087227	27962	9336
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.476144	52700	4230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.074833	28542	3722
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.362433	173155	10388
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.144275	60819	13009
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.384146	180148	9452
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.760089	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.274539	127889	10260
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.397575	40005	7634
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	9.261927	5356	913	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.009384	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	0.021198	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	41.191352	618942	5700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.117194	40743	4868
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.346663	160693	12360
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	9.336333	14715	3131	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.337172	155497	7113
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.862702	439460	4124
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.119788	11757	3363
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.234651	107985	13763
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.439880	194417	6018
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.427050	209048	17366
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.008096	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.636615	315965	23207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.136101	10646	6058
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.441783	89676	3948
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.020754	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.011911	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	0.024355	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.087282	32670	5719
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.066025	9123	3584
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.200409	88261	11667
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.036830	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.302482	29029	5471
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.114660	43283	6779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.087443	31758	5829
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.105938	38598	12516
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.077579	28005	6131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.069138	17618	3614
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.378705	175793	13820
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.234826	22626	5108
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	0.247081	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.064732	21858	4230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.128498	51857	5631
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.159404	68907	10854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.268499	26151	4463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.040071	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	5.046781	1624	767	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.246198	115386	11839
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.154772	52	29	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.270689	37464	11139
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.083439	35203	2961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.048322	13969	4497
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.490890	22304	4484
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.297689	131805	19670
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	11.028034	7036	1786	0.0.6.3.6.0.3.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	0.737556	1355	217	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.244594	110335	13792
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.696669	354820	7515
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	1.477783	1033	464	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.162324	73084	3869
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.077528	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.032830	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.068735	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.701247	716	148	2.5.1.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.100544	24916	6341
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.323979	25699	5808
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.149399	61623	13206
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.015358	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.003402	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.017187	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.004190	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.005175	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.007767	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.014335	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.011344	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.010317	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.021731	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.015662	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.020121	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.009923	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.009659	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.010226	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.008745	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.005321	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.006867	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.007401	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.010301	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.016219	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.009206	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.004380	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.024242	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.014521	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.015502	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.009900	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.016138	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.008548	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.123415	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.029875	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.468345	219652	9658
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	40.391192	185067	17373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.079470	12795	6029
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.267770	116768	5303
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004318	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.106077	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.008957	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.006054	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.007241	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.008688	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	3.676580	8452	662	15.13.9.30	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.007329	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.006097	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.567259	69407	825
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.047717	12622	3888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.157469	24362	4739
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	1.507406	9662	278
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	5.673434	2046	704	0.2.3.1.0.6	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.008816	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.014464	4	2	0.2	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.014600	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.020290	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.007792	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.013641	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.008898	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.008184	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.296493	165	38	4.1.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.253911	25673	3386
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	12.866281	16309	4062	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	13.153913	12869	1960	0.0.0.2.9.2.0.2.0.2.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intros k H1 H2; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.009665	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.244042	27597	4869
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.317145	27423	7907
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.012911	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.051212	16281	4415
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	8.655527	3707	1422	0.5.0.0.0.3.0.0.0.1.1.1.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: intro l'; only 1: elim l'; only 1: auto with arith; only 1: intros a' y H H0; only 1: absurd (S (length y) <= 0); only 1: auto with arith; only 1: auto with arith; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.485764	51413	593
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.023207	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.323238	217	36	0.0.0.15	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.031083	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.089155	27323	7974
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	9.993694	10963	1643	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.540912	261081	17126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.298890	13999	2991
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.072288	26236	4302
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.312334	148051	13587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.246780	28758	4432
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.240941	19990	6117
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.024335	6	4	1.0.0.1	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.243141	35833	6765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.263183	38747	5857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.088704	28709	6263
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.350708	13261	524
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.322008	25361	9314
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.004605	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.017254	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.007099	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.008314	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.181957	139	20	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.012762	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	21.263105	18203	4407	2.2.0.0.9.1.0.0.0.0.3.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	0.518206	192	19	4.14	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.173464	3843	1643
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.209720	92793	13458
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.406517	15259	5566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.209962	17705	3355
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	1.868867	2404	225	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.118415	12488	6426
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.669596	316398	4343
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.468015	228107	4148
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.008593	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.761363	375308	3503
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.078467	27024	4532
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.504250	218015	4743
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	14.295931	11291	2411	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.038360	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	40.878241	424678	9312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.280357	29940	5508
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.200373	88661	14268
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.093086	31481	5532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.048224	15271	3231
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	13.395702	31633	1671	9.8.1.13.12.5.34.49	synth with cache (only 1: compute; only 1: revert l1 l2; only 1: induction l1 as [| x1 l1]; only 1: intros H; only 1: constructor 1; only 1: intro x; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.416236	45030	5865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.050710	14056	3449
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.460111	214615	5954
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.096465	30282	9888
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.341245	23497	9296
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.017178	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.902466	457393	5886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.276676	17758	8047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.113542	28959	3759
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	6.895426	7776	675	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.015764	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.437946	735433	6698
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.175856	21767	5275
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.195304	19842	4816
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.006406	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.028685	5	4	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.224948	15454	3205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.113255	28578	5618
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.213214	26768	6209
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.258317	101145	2271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.148100	19898	6849
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	15.961197	12420	3498	0.0.8.23.1	synth with cache (only 1: intros Compat Hl Hr; only 1: intro x; only 1: apply min_case_strong; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.021298	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.068045	23324	4845
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.329472	22008	6673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.270884	8267	1732
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.306197	122137	3866
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.300384	120446	2605
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.208967	83814	3698
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.254442	8818	1991
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.481179	28219	7674
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.177091	9362	3361
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.188260	17829	3096
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.030024	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.118097	46255	13361
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.431351	33529	6377
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.142310	58422	8291
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.035446	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.274885	24831	3998
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.325405	43319	6817
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.062868	22865	3063
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.467724	22442	7440
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	0.244770	60	28	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.072738	13689	4982
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.048371	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.061310	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.082226	26100	9089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.242277	21965	2600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.176779	15458	2973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.328875	43377	3640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.352924	44063	3595
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.319570	42114	7856
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.065591	10963	3890
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	22.481049	19700	3613	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.395954	37063	7482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.328230	27590	3640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.094332	18235	5536
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.468562	60976	6298
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	11.967113	9227	2049	0.1.0.0.1.6.1.0.4.2.0.0.14	synth with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros; only 1: firstorder; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.084467	15614	5466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.116115	22996	5493
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.331567	27849	4053
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.098525	35170	8184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.341123	33057	5324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.308883	11933	2500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.338293	26077	5635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.110067	19396	4247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.256680	26526	5526
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.151356	21465	6529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.292199	14164	3278
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.385012	36969	5889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.302018	15693	3180
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.210019	17700	3522
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.109383	42462	6271
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.520986	42014	6904
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	0.032291	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.051128	14391	4647
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.598394	33884	4925
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.247357	16293	4215
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.007307	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.059959	18611	4130
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.272241	47908	4897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.187535	27874	5161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.228811	16464	3724
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.069524	21365	5967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.135213	13741	2685
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.365925	30004	4593
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.231197	35376	9776
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.251450	20452	2270
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.099675	21220	5479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.076245	24727	6101
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.328717	79633	4788
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.104921	40215	6946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.243341	17301	3693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.050572	15028	3696
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.289710	53113	6502
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.182604	34531	6458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.145576	25198	6060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.177463	27511	5445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.245685	67950	6078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.144106	31574	4692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.221503	7779	2005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.145868	22402	3643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.140355	20633	3698
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.222093	104269	9160
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.190140	13783	3630
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.293384	62119	6089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.035611	10790	2295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.061347	22822	6157
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.327038	87247	9665
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.122089	56623	7239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.092948	46840	5824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.073966	31824	5199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.052219	20393	3999
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.050333	20412	5647
