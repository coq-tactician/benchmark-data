coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.016738	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.053033	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.596735	427	177	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	0.430097	177	48	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.070864	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.074767	29334	7667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.053099	19915	4240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.047773	19041	3050
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.078692	32639	2790
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.067921	27575	4478
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	8.753487	4416	394	5.14.6.35	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.499588	120	52	0.0.1.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.054943	20356	4058
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.032023	9010	4100
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.172019	79575	7209
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.061150	24384	6123
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	0.191894	99	27	0.8.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.110399	38017	4505
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.079198	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.051363	18446	5803
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.591961	1651	149	11.3.11	synth with cache (only 1: intro H; only 1: unfold Rdiv; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.059120	20297	6161
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.089413	36189	5734
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.106612	48321	4620
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.067948	27859	4930
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.109208	48746	6930
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.087029	36242	4938
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.041188	12844	4000
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.066902	26398	4252
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.048102	16422	3731
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.053762	21548	4440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.038082	14683	3508
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.184908	91708	5044
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.033436	10135	3699
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.072318	7735	2664
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.045508	17755	3638
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	13.904898	2035	870	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.037021	11254	4651
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.031513	10411	3136
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.033273	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.059579	25531	3173
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.060308	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.039046	15601	1561
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.067893	25781	6573
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.080468	31338	6293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.040563	16090	2734
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.088983	36634	6864
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.031481	8822	4293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.069020	25203	5260
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.073638	28510	5558
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.072697	27831	5538
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.071666	24157	5275
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.056810	19942	5225
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.053402	18585	4608
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.078938	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.035030	9862	5328
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.085242	36551	5432
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.051010	17039	5529
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.068408	27226	4629
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.045520	15167	4359
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.048269	19035	4015
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.070541	28130	3420
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.036875	12639	3626
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.038875	13847	3704
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.010665	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.075562	33082	3374
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.073566	28236	5899
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.065548	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.040375	13090	3297
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.039161	13532	3902
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.083150	32174	6571
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.108808	43836	5785
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.013106	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.243866	121596	3321
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.056897	22880	2451
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	36.016057	11751	900	1.0.1.0.27.0.11	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: repeat red; only 1: symmetry; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.046773	16336	3885
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	40.128950	55575	6927
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	5.577740	3295	396	0.9.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intros x; only 1: intros (?, ?); only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.092944	38768	6269
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	11.915750	8305	1462	1.0.2.0.1.1.0.1.2.0.1.2.6.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: exists (x - IZR k0 * y); only 1: elim H; only 1: elim H; only 1: simpl; only 1: intros; only 1: exists a; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.066520	25501	4704
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.110129	48265	5594
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.041395	12208	5009
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.065476	25684	5453
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.063552	24184	4577
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.085010	35670	4237
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.044007	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.071340	26872	4992
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	2.432033	702	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.057449	22176	5153
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.060224	24044	3348
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.042876	15169	4137
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.104060	41475	6984
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.049155	17309	4295
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.079993	32675	4608
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.058380	24059	3074
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.038240	13067	3618
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.121170	7	3	0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.098648	38916	4852
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.012575	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.030982	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	0.052086	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.042014	15725	3202
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	4.056900	2904	404	3.0.14.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.115486	49639	5594
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.034568	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.228299	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.062850	24609	4701
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.055644	19329	2512
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.047529	18588	3510
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.077755	30887	6269
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.063629	22149	5801
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.015914	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.120494	49784	6013
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.272228	31982	2748
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.054377	17534	3851
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.157860	73157	6807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	2.212961	188	101	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.043301	15187	3043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.066884	25503	6419
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.035673	11632	2681
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.072078	28326	5988
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.096995	39385	7009
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.091112	38751	7169
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.085471	31041	3631
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.045381	13276	4709
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.042585	12289	4698
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.086473	35657	4844
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.063561	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.128770	56351	4951
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.067759	27833	4689
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.024532	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.026294	7	2	5.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.050614	19606	3147
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.071514	27286	3325
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.079068	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.069428	28484	4722
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.052441	18980	4283
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.045899	15541	3997
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.009967	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.046509	16174	3393
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.074769	29871	3318
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.034091	10399	1693
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	36.867836	9384	3496	1.0.4.2.0.6.6	synth with cache (only 1: intros; only 1: replace (x ^ 2) with (x * x) by field; only 1: red; only 1: pose proof (Rle_0_sqr (tan x)); only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.059059	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.106302	47249	3351
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.065764	22127	8275
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.073676	29792	3746
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.273358	205	37	4.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.059795	21	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.108243	46006	4427
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.101719	42746	6547
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.076539	29139	5490
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	2.835985	1690	393	8.4.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.004240	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.139939	64246	5317
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.069356	24080	5862
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.050267	18446	2826
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	8.963193	9257	1281	1.0.8.0.9.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.033837	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.067697	26622	5276
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	12.975341	5182	1732	4.0.0.0.0.1.6	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.081442	30295	7543
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.041395	21	7	0.5.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.048171	15786	4969
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	2.342885	707	245	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.048541	16331	5459
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.058686	19775	5633
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	1.200422	276	135	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.045147	12732	3962
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.092224	29255	6275
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.053351	19797	4124
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.784033	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.072758	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H'; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.881522	94833	2343
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	40.794338	39647	2073
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.118482	53090	4840
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.370362	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.048555	11538	2259
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.044808	17288	4187
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.342315	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.036784	12807	3708
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.089865	34391	3758
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.107816	47995	3650
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	4.129099	8934	829	0.0.22.0.0.0.12.10.53	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.035732	11715	3219
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.035291	10382	4133
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.078367	30582	6310
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.049497	20156	2963
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.067412	27283	3975
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.076014	30408	8460
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.014239	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.070954	26848	5471
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.082817	33789	3994
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.114479	16942	1866
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.048935	15629	6198
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.107743	48750	4511
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.007343	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.075348	30113	5969
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.144179	85	30	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.107524	46387	5782
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.096544	41705	4644
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.056480	21446	5510
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.109410	47476	6449
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.163288	39	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.165739	54	22	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.011300	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.021642	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.202785	94155	5057
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.080310	29630	4821
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.044839	13043	5632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.078842	30064	4950
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.082792	34081	8842
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.029826	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.071154	24813	8046
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.041265	12969	3964
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.052654	17748	6760
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.023362	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.077167	28927	3921
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.050246	17815	4134
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.057728	21350	4301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.111393	50361	7562
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.116900	52003	4816
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.036792	12340	2946
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.059249	20524	7962
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.086020	36223	6921
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.032802	12756	1384
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.062197	23073	3793
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.190837	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.228395	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.106562	44057	5218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.050833	17482	1609
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.047999	16405	5357
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.022921	7211	982
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.056029	19656	5697
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.145931	65059	4524
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.346073	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.081751	11071	1893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.085788	32514	5502
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.048327	16028	6065
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.916740	690	121	2.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.298628	1182	187	7.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.022227	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.382995	134	42	4.4.0	synth with cache (only 1: intros H1; only 1: intro; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.069710	27355	4987
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.056087	16109	4917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.109643	45114	3841
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.009869	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	0.939222	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.076423	29897	3769
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.023132	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.134544	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.021008	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.173596	80079	3729
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.047256	14471	6077
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.044929	13506	5065
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.081320	31588	4146
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.069523	24541	10879
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.033299	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.095279	39992	3917
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	8.979093	10665	1330	10.1.1.4.9.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.062825	23577	3571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.080947	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.049845	22882	1724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.065633	26578	4770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.009101	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.055182	18632	3219
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	16.559170	23454	2877	7.10.9.12	synth with cache (only 1: intros x y H; only 1: intro abs; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	6.465581	3540	815	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.047367	16621	3849
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.084704	23764	3536
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.098125	39231	6592
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	0.268759	51	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.090113	34373	4364
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.047770	16619	4385
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.065859	24931	6674
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.211003	47896	5308
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.853207	656	85	5.12	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.022886	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.047835	15896	4266
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.102232	40551	4927
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.218445	21685	2402
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.071688	28538	5599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	20.490916	29574	3831	21.18.1	synth with cache (only 1: intros; only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.072603	24074	6227
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.072979	26654	4601
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.072422	28430	6824
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.117028	50981	5437
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.084826	34709	6690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	42.449182	9228	1597
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.065944	20948	5828
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.064089	23431	4797
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.170343	23018	1754
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.115066	53240	2879
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.155626	67064	7912
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.045372	14678	3883
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.061742	20907	2395
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.118667	5	4	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.192945	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.045917	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.059503	20428	4577
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.092028	38605	2843
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.041659	12669	3469
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.087654	32069	7302
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.058317	22911	3613
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.016952	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.039070	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.033965	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.467711	124	70	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.059105	22299	4059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.074487	32163	2735
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.071656	27550	4892
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.068336	26797	3425
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.044348	14638	3237
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.062274	23072	7840
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.041896	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.021255	15	3	7	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.118766	49941	4523
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.308313	146669	4718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.202777	87566	2771
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.089434	33117	5807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.877731	59888	3317
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	17.403722	8421	2223	1.2.12.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.081777	33856	6426
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.108403	43490	5118
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.262706	132182	6475
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.067286	23352	5642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.047047	15257	1777
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.028694	4050	977
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.054677	19716	5322
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.129049	23444	4099
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.063154	19977	6534
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	25.423828	12738	3348	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.974751	366	106	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	42.709028	35716	1672
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.041821	13457	5402
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.047239	18574	3018
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.087356	48	14	1.4.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.095663	38103	4142
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.034478	11001	3573
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.073967	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.066094	23876	2710
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.104802	45571	3518
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.150469	67081	5130
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.046212	16136	3706
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.071339	24484	4646
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.044938	16292	3720
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.073332	23924	8897
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.051483	17335	2751
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.120198	47542	5072
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.468674	2717	248	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.045957	16389	4802
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.041362	17363	1808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.113095	52398	2774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.735820	293	91	0.10.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.102849	48023	2735
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.105930	41918	6108
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.283460	31335	4850
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	2.472864	3579	392	3.14.4.6	synth with cache (only 1: intro H; only 1: inversion 1; only 1: generalize dependent n; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.057551	17467	6622
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.296782	13839	2575
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.056426	18056	5013
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.059061	20382	5378
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.067434	26279	5057
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.041173	15593	2918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.064574	25946	5273
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.049411	15250	3894
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.024865	2217	497
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.028693	8178	2777
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.055504	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.082060	32704	3880
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.044648	16872	2747
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.078184	25462	7903
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.018920	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.112502	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.012421	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.295498	136632	11479
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.029503	8492	3953
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.077410	30111	3040
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.065060	24450	3108
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.076512	29605	3301
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.059447	20097	3990
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.064190	20649	5754
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.033473	10820	3479
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.048520	16350	3273
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.081582	29983	4892
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.036366	10531	2739
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.092110	39941	2636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.038163	5545	1209
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.053049	17380	2003
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.064770	26985	2203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.059462	23339	4137
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.044890	13208	5734
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.092863	36646	5787
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	42.852868	11181	1389
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.522174	408	73	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.047275	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.046182	12161	5204
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.055193	20924	3827
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.051890	11	6	0.0.1.0.0	synth with cache (only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.085447	33654	5154
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.043152	14712	5629
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	20.090358	13724	3503	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.044998	17299	991
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.066763	24374	3835
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.007174	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.080271	30715	3812
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.072053	28555	3846
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.064978	22459	7346
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	39.462541	37612	4349	2.1.1.0.14.2.4.1.0.21	synth with cache (only 1: induction l; only 1: intros; only 1: split; only 1: simpl; only 1: intros b s2'; only 1: rewrite IHl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.072297	27635	2853
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	18.458381	13655	1016	14.0.0.18.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.125434	24463	3507
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.019461	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.029610	8687	3389
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.200470	29695	3559
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.102468	44518	3605
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.067123	22152	6381
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.039840	14880	3420
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.073459	25462	5651
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.049151	15940	3915
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.107493	40659	3885
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.070113	25695	4208
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.012119	4216	388
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.108688	46644	3591
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.139508	64246	5860
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.014259	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.050065	18012	4196
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.081290	32300	4732
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.116004	47515	5744
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.127408	57067	6367
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.080458	29354	5747
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.051852	16737	4534
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	9.615940	9878	924	0.0.0.3.1.1.0.0.2.22.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: intros; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.100568	45132	4703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.036433	9928	2512
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.084278	31492	5516
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.063596	24236	4641
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.101695	36728	4487
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.094412	11518	2110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.039302	13553	1763
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	23.135718	40799	1919	14.5.56.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	9.156168	10536	1609	4.0.7.2.10.1	synth with cache (only 1: intros; only 1: intro H15; only 1: intros z0 H7; only 1: unfold intersection_domain; only 1: intro Hyp_F_NE; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.110157	48356	2586
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.079199	29730	5046
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.896495	344	95	3.0.0.0.2.0.4	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.022085	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.008865	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.093479	37117	428
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.016385	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.178551	87481	2429
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.290363	151187	1479
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	1.702557	3203	169	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.644064	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.074364	14	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.022876	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.012596	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.101020	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	40.032613	9677	3676
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.008682	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.071844	25082	4215
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.037534	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.073532	30798	3980
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	11.740415	53981	481	281	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.072589	24888	4967
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.037279	10287	4197
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.040258	13639	2978
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	10.861491	3627	1085	0.6.0.0.3.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: generalize H, H0; only 1: clear H0; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.008022	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.066931	24602	3970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.670556	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.082999	35826	3355
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.147045	60819	6012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.070777	25279	4847
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.161680	73184	2696
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.056627	22303	3599
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.043212	14682	3321
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	37.728664	45004	3136	0.0.0.0.1.0.10.2.10.26.2	synth with cache (only 1: intros; only 1: destruct x; only 1: auto with zarith; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.156538	69627	5135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.070405	26759	1584
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.111394	47727	6154
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.096743	39171	4174
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.038176	9944	3209
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.059109	23280	3157
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.721373	58	25	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.033818	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.645089	116	44	0.1.2.0.6	synth with cache (only 1: intuition; only 1: generalize (F.equal_iff s1 s2); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.053965	20359	2935
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.424197	28	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.104442	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.062781	22912	4408
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.398401	10	3	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.090316	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.422326	1285	245	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.510409	21	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.428945	18	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.110722	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.075442	25849	3742
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.032589	9590	3409
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.092311	36552	5761
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.100602	42476	5825
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.180427	82979	3549
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.106599	42160	4935
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	28.863263	10432	4343	0.0.0.0.1.0.0.3.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: assert ([|b|] > 0) by lia; only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.235069	17	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.237695	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.049560	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.061592	23653	2447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.039662	26	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.030470	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.020426	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.079492	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.042961	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.188873	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.068800	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.547205	66	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.071733	25276	5313
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.485389	36	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.076321	29147	9274
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.297219	5	3	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.122992	48745	3162
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.097297	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.145241	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.131775	7	5	1.0.1.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: fsetdec; only 1: do 2 rewrite F.union_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.080758	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.027987	2699	803
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.455220	28	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.042089	14390	3292
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.512188	30	9	3.2	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.038956	13039	3199
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.043064	14956	2552
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.071678	28357	4537
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.121490	50379	5196
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.096051	40821	4397
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.062324	24719	4072
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.199717	85989	4860
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.764652	20035	1227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	4.296289	249	68	2.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.039447	10835	4296
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.041438	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.033547	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.073422	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.087567	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.080623	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.349785	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.554151	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.035950	10205	5576
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.353375	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.099444	42603	1974
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.109188	48040	5598
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.086894	35501	2111
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.133959	58188	4487
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.080161	32767	5520
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.073879	30285	2371
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.076556	30565	4213
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.039400	4291	840
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.058487	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.056931	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.075589	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.102301	42433	4447
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.625024	16961	3075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.114651	53360	6073
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.553785	22	6	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.061814	19578	2144
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.054841	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.171866	24	7	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.088156	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.025516	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.039061	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.039741	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.022487	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.080793	28754	4927
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.627042	60	17	2.4.1	synth with cache (only 1: expAdd; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.044110	7498	1068
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	23.873909	2653	548	7.0.8.3.0	synth with cache (only 1: expAdd; only 1: red; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	5.803914	13124	578	6.0.13.18.0.80	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.217905	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.051228	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.180687	69	12	8.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.679049	68	53	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.075437	28530	4042
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.098741	40101	6157
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.193039	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.097104	41193	3581
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.031563	3760	462
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.047609	15087	2903
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.046504	17360	3251
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.109855	21207	3409
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.085983	35656	4910
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.103865	29061	2204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.030854	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.252891	114072	3894
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.127979	58533	2424
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.083051	32430	2928
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.059678	23997	3192
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.074387	4665	1075
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.032951	9374	3983
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.076661	32316	2387
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.058570	24410	723
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	5.773530	6298	539	1.1.0.30	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.708756	846	91	1.6.18	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.016301	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	19.608546	2694	2033	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.019125	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.010755	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.128153	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.095634	36200	5070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.072491	24301	4068
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.039373	9033	1618
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	2.939625	3081	422	0.26	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.441902	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.072159	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.065360	22074	5809
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	1.856748	1780	234	3.17	synth with cache (only 1: intros n A f x; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.063917	18691	4096
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.131576	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.130833	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.088394	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.020522	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.097980	43338	3228
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.103691	47562	2899
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.100660	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.582107	44	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.049018	16986	3611
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.113559	43737	5447
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.110759	48339	6452
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.158998	65720	7355
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.010601	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.009156	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.010574	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.016045	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.009256	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.011425	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.010768	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.260021	128511	4812
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.071236	556	209	1.2.0.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	7.514774	3607	331	1.5.11.15	synth with cache (only 1: intro; only 1: intuition eauto  4 with real; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.766151	181	63	3.0.0.3	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.076618	31361	5270
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.121429	52671	3777
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.992631	894	318	2.8.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.174218	75756	3646
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.068798	20	8	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.289636	329	155	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.016088	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.014892	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.041857	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.027672	8486	2360
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.078410	30461	8260
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.359857	176797	3372
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.257759	118193	4577
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.100174	42648	4250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.034786	8346	2259
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.032414	9359	3416
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.045963	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.151953	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.069602	96	13	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.170377	76558	6004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.042319	12896	4526
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.086653	24928	2132
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.899714	1491	189	19.15	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.118476	52563	3912
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	7.114492	1508	557	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.089431	39178	3263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	24.938732	13932	1672	1.44	synth with cache (only 1: intros x y Hin; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	7.614646	4806	805	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.632462	525	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.048554	16044	4235
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.086156	33696	5277
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.104376	44231	7006
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.057701	16929	3309
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.012835	2916	1240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.078751	29468	5575
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.090791	37155	4823
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.120687	50983	3671
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	10.622476	10762	1408	1.1.1.1.0.0.26	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.091316	38122	5955
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.151418	67800	5129
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.053455	14290	4846
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.009784	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.229325	111515	1681
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.092705	311	118	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.168046	33107	2964
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.054598	16376	2589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.339431	165968	5407
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.260397	120734	1700
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.049071	17922	4444
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.151853	65711	4200
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.080707	14758	1537
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.064516	24829	2955
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.233907	89230	6951
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.025971	7074	3413
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.013953	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.032933	8988	3927
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.014601	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.053319	17035	3659
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.080887	33235	2302
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.059718	19288	3151
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.025015	6610	2608
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.473959	63110	5035
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.103000	43983	3862
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.047011	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.036811	9208	3819
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.009713	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.137227	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.010794	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.010986	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.011913	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.010690	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.028585	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.066793	25434	4240
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.269555	1719	188	23	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.088649	34466	4884
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.055604	10749	3005
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.045266	16458	1912
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.008429	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.010004	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.014024	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.103807	41829	7390
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.083140	33028	4000
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.074552	23295	2318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.180894	82160	5568
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.095350	38471	5851
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.021386	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.036600	14	4	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.078404	32685	2757
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.195773	89457	6504
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	15.950163	14999	1962	1.0.0.27.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.151996	67994	4383
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.076700	28501	3825
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	11.881300	5753	298	32.15.0	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	3.140787	5240	795	6.1.3.17.1.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.067282	24152	1968
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.107471	42388	3566
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.062579	24927	4618
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.188540	85421	3129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.107144	26610	2128
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.602493	13089	746
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.049106	14616	1908
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	10.714876	2962	220	8.8.6.11.3.18	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intros; only 1: constructor; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.157838	70213	725
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.070618	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.038727	5270	3350
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.181529	74244	3036
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.084441	30258	2846
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.206142	29895	3275
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.056400	20233	2827
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.082686	24758	2240
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.045599	15143	3282
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.094575	38747	1597
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.018571	4408	1872
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.009283	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.071986	27407	4771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.119963	48862	6504
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.045267	12538	2842
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	20.234557	11866	2550	1.0.0.0.13.15.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.134256	56137	3923
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.079762	32777	6489
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.051802	17721	3557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.141919	64636	4426
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.167973	74096	4875
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.029028	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	42.050623	51323	4428
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.020278	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.124580	53107	5092
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.124559	48500	4339
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.098235	36046	3198
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.079854	28585	986
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.195869	90904	4706
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.458330	660	186	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	3.382170	5623	430	2.1.1.3.32	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.069266	25332	3092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.102657	16777	1842
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.153402	67143	5125
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	6.763874	2005	482	0.0.0.0.0.0.0.3.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.139045	59233	5714
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.110005	17454	5120
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.061335	21924	3486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.018871	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.095434	36978	1676
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.042588	5463	631
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.959009	153	91	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.028008	7910	3475
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.082963	32956	3754
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.102587	41581	4291
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.123046	34217	3926
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.021718	5942	2540
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.055294	4930	942
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.036489	13148	3225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.029007	8	1	7	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.097485	41849	1990
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.085075	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	12.965979	35378	1671	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	14.654525	9204	1492	1.1.0.0.10.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.107418	14625	1067
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.063170	22480	4485
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.341917	348	200	0.0.1.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.103935	28375	5769
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.211324	92	31	2.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.058413	18619	5911
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.157109	64962	4631
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.036051	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.094629	10034	1026
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.068905	25578	6943
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	8.340792	4187	1455	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.095122	40138	4240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.165694	76987	4171
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.177677	79549	6884
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	41.463476	21146	3100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	25.740298	2394	180	0.1.0.33	synth with cache (only 1: induction x; only 1: simpl in *; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.103468	43592	6732
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.169419	77109	4448
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.027306	2798	545	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.130947	58185	3205
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.019088	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.019575	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.075405	11159	2255
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.143879	63124	6087
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.077619	28052	3583
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.022733	5434	543
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.034639	7224	4956
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.032358	8994	4153
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.081201	32515	4266
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.147681	65845	3844
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.076007	29129	3721
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.048939	16054	3394
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.108406	46380	3450
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.066867	28547	2781
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.240281	1285	91	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.094500	36781	4419
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.053645	17847	3611
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.016862	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.053548	18413	5446
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.137173	55740	7411
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.383691	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.131700	46304	1457
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	22.958919	16981	1565	2.7.1.0.0.5.18.6	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	5.264721	1773	666	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.080162	10	7	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.070517	23430	5511
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.089078	38595	3553
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.077696	30089	7766
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.073603	25068	3377
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.061104	21658	6135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.094880	37641	5360
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.059943	17013	5776
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.068338	26099	4511
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.156744	69491	5480
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	2.702801	2043	316	8.0.1.11	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.876219	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.057013	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.067668	23318	3179
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.031621	7088	1375
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.139142	55488	5461
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.095131	37404	3862
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.029564	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.269592	129949	4978
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.058287	7688	1328
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.063944	21742	3581
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	23.956420	28039	4166	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.065108	24163	3740
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.421647	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.035412	9268	5273
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.039829	11765	4506
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.164463	70514	3041
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.046627	1687	166	4.2.18.2.8.2	synth with cache (only 1: split; only 1: auto with arith; only 1: auto with relations; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.757749	2661	865	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.138666	60358	5437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.133614	54026	2939
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.069802	24468	3147
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.013205	4529	441
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.086561	484	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.150582	65216	3881
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	2.875403	1420	563	3.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.033107	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.105469	41852	4724
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.141312	62207	5115
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.212552	101630	2625
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.105104	30699	2643
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.069987	23372	4642
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.085801	33144	3751
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.077703	32770	4922
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.298017	246	111	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.104592	42842	5139
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.079970	29649	4308
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.054218	15446	4741
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.027546	11218	699
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.044344	10089	5119
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	26.639968	42295	3638	0.0.19.17.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.062014	23631	3908
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.050317	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.119629	51966	4210
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.069227	28753	2928
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.054325	8421	1267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.072660	25102	5744
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.228786	106967	6889
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.057123	19433	4186
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.099038	41540	5874
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.071976	26224	6940
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.148324	60926	5885
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.055352	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.030168	8015	4606
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.110177	31713	3135
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.118882	48663	5979
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.044182	12880	3337
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.004606	889	338
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.072271	29803	4192
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.099590	41206	3763
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.032767	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.170227	25180	3831
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.060194	24578	2219
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.601830	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.118584	50523	6105
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.018713	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.208506	98149	4574
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.068222	18783	7127
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.051744	14783	5679
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.061717	22582	4254
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.061869	19417	3170
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.027741	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.125680	53695	5324
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.134312	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.154075	73336	3443
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.096852	42161	3655
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	5.659843	4159	784	0.4.3.2.2.7	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.057967	18875	6367
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.062559	21035	1644
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.103370	40937	7141
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.058203	22080	3408
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.124169	54618	5339
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.044076	11514	4636
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.045904	12094	2483
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	7.331475	5419	1242	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.106909	46905	1360
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.196946	38791	5112
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.086316	29031	2427
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.278722	134106	5359
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.155385	11313	2221
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.098774	38944	5588
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.009430	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.208849	102794	6384
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.044823	15248	3517
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.132410	58505	4805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.099993	38156	5049
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.068058	1182	281	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	41.575418	19389	3157
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.006257	2254	232
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.099690	41328	3958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.100017	24016	3506
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.100583	27284	2004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.146303	65	21	7.1	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.278006	137911	2911
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.060065	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.144490	66167	6305
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.136483	58563	5229
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.392754	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.094602	34770	4786
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.150664	66940	4045
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.019918	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.079026	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.044833	16358	5449
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.110542	48187	6644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.125036	53035	4369
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.071128	24060	5965
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	6.101021	3100	1096	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.021252	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.064509	11792	1990
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.063140	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.254297	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.099943	36885	5342
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.059872	20847	4510
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.099832	41884	5354
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.072887	27933	2844
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.042705	5108	1127
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.465904	2093	371	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.028127	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	6.482411	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	33.841454	141750	525
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.094899	32133	4794
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.062543	25237	4141
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.225238	102652	7497
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.451272	55	11	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	29.750032	790	156	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.061460	16037	2261
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.141227	60624	4479
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	0.829317	277	79	2.2.5.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.044464	14945	3352
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.265574	128585	7325
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.173449	74695	6580
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.081366	31967	2615
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.083490	33310	3791
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.100398	42358	6142
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.044725	14805	3082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.071814	26875	3190
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.157926	71172	3784
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.394461	2823	799	0.0.1.2.2.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.041133	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.516136	689	89	0.0.0.0.0.0.20	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.369391	180005	6571
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.062381	17811	2970
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.116168	49064	7670
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.116581	47700	4484
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.076853	32326	3814
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.064538	4111	1348
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	2.036579	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.061891	15467	2861
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.076317	26310	3517
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.181247	4823	1020	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.874215	1654	288	11.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.059222	23694	3233
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.056116	22599	2726
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.099381	37036	5230
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.097241	37150	5826
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.085833	31850	4910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.059049	20545	1949
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.091602	38657	3569
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.081559	28789	5201
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.044638	13105	1694
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	15.270346	5249	927	3.11.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.073591	27270	6464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.192469	82453	4184
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.009256	3380	161
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.036258	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.751483	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.146849	66857	5726
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.148446	61994	5714
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.036796	10302	3475
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.057413	20584	2495
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.430161	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.079750	29629	2828
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.108294	45846	4143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.081465	28788	4257
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.107866	45331	3777
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.140945	32314	4570
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.100544	41926	4443
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.116723	50543	5224
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.111422	43927	4340
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.160939	30706	2607
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.059613	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.073317	30789	3277
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.053030	7598	856
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.055338	18195	3900
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.053337	19504	3203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.122953	51231	5666
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.163965	71551	3915
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.017200	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.022055	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.086807	31316	3277
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.044285	11675	530
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.096433	39017	6044
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.094414	38885	3989
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.057018	17612	2610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.016604	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.049884	19838	2779
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.013707	3	2	0.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.085979	31849	3529
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.576679	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.004872	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.105991	38494	1968
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.143962	25648	3077
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.086899	32995	5010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.082874	32256	3826
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	2.251965	2758	365	9.0.1.1.13	synth with cache (only 1: intros n m; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.004088	756	150
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.180743	85221	6224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.057867	22718	2257
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.066849	24578	3404
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.071536	26497	3010
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.144631	63628	4170
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.034654	8514	4055
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.284127	24610	2850
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.143897	63128	6605
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.213251	97226	5194
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.102117	23602	1025
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.087852	31498	4754
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.109527	7669	1496
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.107628	46458	5157
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.112431	43976	5600
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	1.673481	1017	183	1.0.0.6.4	synth with cache (only 1: induction 1; only 1: split; only 1: intuition; only 1: intuition; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.066739	24376	10473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.097399	38513	4655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.172161	75904	4626
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.128021	54903	3730
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.167325	28955	5136
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	3.051661	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.061805	19329	3456
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.079725	29465	6272
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.093261	40277	2886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.032075	4727	259
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.104117	43814	4173
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.040588	10940	4020
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.101763	37078	4701
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.133437	19070	2628
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.081040	30431	3474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.212119	95918	1667
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.011509	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.011490	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.113338	50183	1673
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003761	1312	126
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.300909	149509	8668
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	20.362811	21871	2009	4.0.84	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.070937	26791	3730
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.141638	58755	2287
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.008673	5	1	4	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.012943	958	159	1.2.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.098379	36538	3156
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.106523	21	5	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.111356	24499	1558
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.784446	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	8.687986	5401	660	0.15.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.176836	74127	5452
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	2.158774	7202	277	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.017541	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.032015	3389	392	18.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.040500	9151	4801
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.128527	17149	3742
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.135697	61410	5006
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.117781	49607	2853
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.095691	35794	3248
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.061190	11055	1736
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.240678	110076	8303
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.062015	15828	3299
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.070733	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.159218	61956	4867
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.115664	49990	4063
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.399607	45406	4203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.088068	23999	3121
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.153048	64590	4087
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.031343	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.457944	183727	1662
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.175848	79197	6131
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	1.036317	270	119	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.010094	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.038505	16273	1508
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.148573	61551	4714
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.100644	37146	4232
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	3.994092	3595	206	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.051044	17127	2650
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.061119	21925	2459
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.214767	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.074670	27649	4367
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	26.469242	32892	2595	28.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.078621	30246	2357
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.105764	42269	3019
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	7.289588	5677	553	12.10.2.7.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.069047	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.540029	2301	234	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001271	235	76
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.126540	43754	5086
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.389500	21230	2221
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.065181	25218	3084
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.073333	28391	3725
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.027211	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.081218	31839	4021
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.130543	57407	2972
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.028793	7101	2817
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.055548	19019	3845
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	11.732122	12581	512	87	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.138898	65245	6331
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.070046	25827	8346
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.285411	54904	1588
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.123864	55892	4432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.246970	119152	1033
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.053091	17221	4885
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.085794	33957	5596
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.086261	34713	3128
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.074324	25364	5982
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.059100	16911	6766
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.064170	24001	3781
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.078028	30492	3574
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.373449	64021	1786
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.290911	9638	2205
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.121955	53978	4448
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.273704	126581	4337
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	19.927659	21011	1727	0.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.065235	22630	3864
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.101197	38257	2848
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.087529	35871	2969
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.080351	23155	1583
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.091617	35423	3236
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.012085	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.139384	54788	5347
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.101049	42577	6524
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.184776	88182	6614
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.676954	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.071659	26274	3024
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.111072	745	119	0.13.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.099948	870	295	4.6.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.099465	34916	4511
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000847	78	30
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.078695	25318	3288
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.063224	24396	3126
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.730560	109	41	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	5.686121	3557	733	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	4.159356	2173	805	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.174330	79648	516
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.050822	18682	2548
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	2.112986	6414	111	0.0.110	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.843115	3888	81	87	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.169358	80207	3385
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.107722	41580	7477
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.070341	22657	9491
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	34.347746	75330	4089	0.0.3.121	synth with cache (only 1: revert a; only 1: intros m; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.165318	75267	6901
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.046101	15134	4775
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.164846	72155	4981
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.078210	29801	3108
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.038515	9204	204
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	3.458722	1085	372	0.1.6.4.0	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.078893	32665	3831
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.020618	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.127203	27490	3462
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	40.092765	18311	3907
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.011527	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.021025	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	18.234462	12199	1795	0.0.0.6.19	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.299820	18950	2981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.075675	30034	3531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.070269	25801	2426
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.127067	54874	4869
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.125070	53511	4259
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	25.039579	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.444401	34535	2349
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.056870	19749	3477
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.058717	17884	3877
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.048660	15719	1364
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.075025	27094	2969
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.050511	92	8	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.151579	152	26	16	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	41.577387	28154	2628
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	8.469649	5570	454	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.074732	31640	3037
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.043381	15233	2946
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.257922	124572	7596
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.164563	73297	4307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.033897	6411	4800
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.056041	17604	2384
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.065539	12421	1555
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.075128	29210	3897
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.142388	50588	2299
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.165789	69582	4094
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	19.061107	4149	1569	0.9.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.007580	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.007171	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.172490	78176	4025
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.415244	921	39	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.024478	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.008015	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	3.803834	4297	884	0.19.0.0.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite ?H; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.207642	93798	4200
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.119689	47612	4566
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.071481	25157	8254
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.120459	23548	1477
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.074544	27099	3376
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.143190	63021	5936
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.064891	26073	3097
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.205791	95594	3890
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.250041	5122	810
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.062209	22297	2408
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.055224	22548	1327
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.083251	29403	4647
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.172615	36830	2435
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001002	143	37
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	11.739846	17398	1483	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.060397	20123	4449
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.105531	35718	3917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.075287	31346	2483
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.792174	2161	378	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.077741	26899	3641
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	41.087792	49961	3986
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.025878	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.158527	162	12	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	23.854236	20265	2138	1.15.2.18	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.130170	53787	4008
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.046059	15941	3145
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.035273	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.640138	131	51	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.268177	59873	4401
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.105758	44428	4503
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.029263	5453	4088
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.102715	29018	765
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.117871	47152	4603
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.067919	24268	7151
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.066831	25573	3667
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.752529	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.088353	32446	5481
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.114824	49665	6547
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.318047	160975	4517
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.084001	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.104489	42486	7160
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.072985	25273	8568
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.034637	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.077938	30549	3514
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.078734	24835	1270
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.083011	30113	5743
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.134667	54914	6479
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.013498	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.007555	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.009741	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.007758	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.076456	30186	2955
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.060504	22631	2557
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.045843	4573	999
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.078483	19382	2800
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	2.676676	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.488986	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.592137	9674	1039
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000837	66	37
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.052343	13515	2976
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.164937	73943	4934
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.052346	15936	2552
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.094006	37309	4428
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	1.351097	181	84	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.174978	22464	4286
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.081319	31284	1480
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.077445	29841	2895
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.067021	23283	3668
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	28.221874	24389	2945	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.053638	18658	2942
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.212707	67376	5684
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.101682	39852	5110
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.063715	19832	6736
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.025148	5699	2383
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.108217	44117	4480
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	3.119762	2607	494	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.109628	43801	5381
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.146238	2229	280	0.0.0.28	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.051534	17217	2906
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.097164	39099	5206
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.085036	13828	6765
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	1.487372	1868	167	6.19.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.100980	44436	3420
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.081919	32127	6281
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.048797	15995	3730
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	0.606852	82	18	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.124368	50582	6247
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	2.112241	1665	74	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.101298	12344	998
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.330007	21051	2413
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.075694	18757	2424
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.095030	37690	5227
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013327	3296	577
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.053586	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.048305	17357	408
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.066700	23414	6582
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001095	207	35
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.097355	39635	3320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.055147	20699	2570
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.125489	50535	3182
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.078013	29350	3656
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.218111	39184	4513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.101540	43252	3704
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.143873	59979	4301
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.085753	35889	2965
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.264984	126055	4829
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	22.455876	15079	2006	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.141815	10	4	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.091791	34494	4390
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.120592	51622	6159
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.018825	6137	1221
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.033324	10427	2875
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.586012	45	9	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.169753	79083	3350
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.087584	35915	4951
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.408767	36	15	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.015405	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.024181	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.125759	46835	9148
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	15.702282	51888	2489	0.1.1.0.38.21	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.042426	14672	2623
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.091045	36074	4800
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	3.897616	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.207955	61487	4832
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.054173	20779	5877
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.080969	29722	6733
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.027687	8162	1185
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.213683	40468	5213
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.100031	40308	6834
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	21.250634	32956	2752	0.0.0.0.2.4.8.9.1.17	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply (find_2 (elt:=elt)); only 1: simpl; only 1: rewrite ?(add_find (elt:=elt)), ?(bal_find (elt:=elt)); only 1: destruct X.compare; only 1: order; only 1: auto using (find_1 (elt:=elt)), (add_1 (elt:=elt)) with ordered_type; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.199787	33819	4329
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.082365	31682	5259
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.062418	26731	2046
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.015020	3979	706
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.075382	28760	5971
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.104252	46145	3243
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.183131	85332	4500
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.014062	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.004413	512	57
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.035056	8748	4360
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.037173	11003	1529
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.248676	20089	1372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.051972	14833	6209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.031783	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	7.200635	3174	510	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.127283	22459	1963
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.121317	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	2.791354	651	106	19	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.147496	43944	3485
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.061635	24625	2660
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.121722	49646	5344
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.034385	8678	3321
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.075949	30214	2651
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.155459	73788	3309
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.027593	9454	1459
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.067360	27608	2638
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	12.838170	14337	1779	0.2.1.3.0.2.20.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.124799	56630	3945
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.600414	669	287	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.132102	59526	338
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.006377	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.106814	45864	5221
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.118059	49618	3570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	9.772158	6219	889	0.9.0.5.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.258146	52861	5370
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.079510	31459	4350
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	2.909630	1824	385	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	5.532750	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.102242	43963	2960
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.069994	26928	1233
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.090484	38214	3946
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.189598	17440	5142
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.113460	47244	3797
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.176256	13323	2960
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.034685	6952	3889
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.048023	14113	4285
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.043261	13069	2797
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.353898	3076	884
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.135365	8030	1475
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.003099	537	91
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.068544	25751	2128
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	20.411044	41594	2368	2.2.2.4.2.2.2.2.4.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.087727	33849	7062
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.027968	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.086613	30110	4290
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.154074	72305	657
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	8.002088	11203	984	0.0.2.0.2.2.3.0.0.0.4.5.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.072247	29753	2471
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.157449	72344	4373
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.089500	30757	3173
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.078854	29192	2842
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.034028	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.012093	3	2	0.1	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.972284	850	93	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.068202	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.082953	34148	1479
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.081086	24124	3395
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	1.892333	957	76	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.045592	6993	2224
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	0.528434	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.103961	43927	1997
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.006165	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.065898	26708	3029
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.037829	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.067442	338	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.940011	181	61	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.202691	11655	1092
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.124815	20114	2353
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.052288	18299	5851
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.094988	39320	5240
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.209165	97022	5413
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.090766	33384	5031
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.040929	15398	921
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.081488	33028	3518
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.239221	110966	3625
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.071650	26686	2494
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.180498	89313	2262
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	4.351708	4219	768	1.0.2.4.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.172315	12724	2932
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.024594	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.017081	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.009284	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.122308	47734	4361
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.081629	33084	5922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.041855	13542	3538
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	21.735579	15303	1621	1.16.2.1.10.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.262931	30582	6937
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.072491	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.056133	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000881	57	32
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	21.596052	71188	1485	5.1.6.3.138.25	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.050393	17899	2908
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.103490	45366	4825
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	34.919137	40524	5828	3.1.3.0.0.6.4.5.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intro H1; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: easy || now destruct Hb; only 1: intros H; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.158569	72905	6398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.211943	42713	6634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.033272	5	4	1.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.061001	25321	2686
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	7.576626	2193	751	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.042826	13613	1612
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.134641	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.093604	36721	6328
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.083848	24374	3731
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.140268	32583	5479
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.112383	46579	6091
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.041243	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.022154	6	3	3.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.076270	29673	6140
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.199849	23913	6044
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	22.772317	33516	4236	1.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.413985	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.107309	27602	2209
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.111106	43955	5836
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.126871	57905	2656
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.178382	29962	4987
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.075443	26880	2696
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.034827	10302	1820
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.151861	68781	5669
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.232730	48898	6766
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.105205	18105	2583
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.107735	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	8.496804	2582	384	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.046621	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.013311	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.063056	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.144336	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.112351	47832	7892
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.010938	249	58	10	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.201267	11101	3718
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.539053	74	32	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	42.280491	45200	1081
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.012246	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.005365	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.008093	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.005660	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.004924	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005495	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.119327	46948	4112
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.068389	23720	6646
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.783152	14709	2592
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.780195	419	93	1.4.0.7	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.255343	6077	2733
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	19.494876	27799	3646	0.0.0.0.1.2.3.0.1.2.2.6.0.0.0.1.2.3.0.1.2.2.6.0.9	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000749	61	35
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.148938	34899	7118
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	8.146213	15907	988	0.0.12.12.20.2.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.067821	25617	3570
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.071321	26003	7928
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.227403	112110	2982
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.073432	25009	5528
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.036263	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.168156	274	104	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.040650	15331	2128
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.285287	3847	153	0.0.1.0.8.65	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.066103	25537	3160
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.099488	37247	6413
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.042448	14259	2859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.137002	10897	4970
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.024339	1061	129	13.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.365281	129367	5865
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.076147	11519	1662
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.056444	18052	2392
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.134981	60402	5853
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.077136	30084	3003
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.011191	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.005468	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.229321	108307	5698
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.146929	30985	4294
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.113476	47142	5628
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.082373	33474	4994
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.028686	8438	2484
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.097594	36848	3154
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.036465	11517	1464
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.209155	41721	7124
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.247175	39390	6892
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.050153	14716	5349
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.052484	14752	5816
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.026572	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.090446	20817	2513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.038246	13258	2685
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.559531	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.656478	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.243283	71759	5218
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	15.232155	14175	1520	0.0.35	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.303170	28315	6490
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.181428	37641	5064
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.078575	32027	4970
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000782	80	34
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.049906	16873	6994
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.042741	15276	2716
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.413976	211	53	2.1.4.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.080535	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.029040	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	6.884611	6181	1044	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.004906	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.005503	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	30.568011	10479	4665	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction remove x m; only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.012655	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.281310	76130	7369
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.060973	25267	3374
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.209324	36658	4059
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.099849	37311	6239
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.041709	13918	2253
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	3.732694	1989	391	20.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.202660	96182	5307
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.024721	7371	2398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.240115	36866	5558
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.062648	7688	973
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	40.064836	25644	5401
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.127231	53749	5513
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.026773	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	0.309070	69	24	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.012716	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.160662	22362	5174
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.315762	110576	6767
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.034651	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.057938	21943	4170
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.559715	34	9	1.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.009256	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.017992	3982	2264
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.088228	37202	1167
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.055302	21250	1570
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.091633	53	11	5.2	synth with cache (only 1: intros i j Hi Hj E; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.042059	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.053683	18460	4785
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.066421	23302	4471
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.175866	145	31	5.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.146865	535	195	1.0.0.8	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.058788	13	8	0.0.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros x y l1 l2 Hin; only 1: subst; only 1: intros HE; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.062253	20790	3630
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.087666	34855	3099
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.013132	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.432535	219765	7979
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.059132	20345	5939
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.185076	32988	8803
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.155005	66897	6913
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.008596	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.119058	52547	6216
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.197792	16696	2618
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.018250	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.989878	834	102	0.0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.204842	28	14	5.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.031208	7943	3978
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	3.930389	2272	391	1.2.2.14.0	synth with cache (only 1: firstorder; only 1: inversion H; only 1: subst; only 1: now compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.100857	32423	4378
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.318935	105469	4924
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.187916	202	97	0.1.1.6	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.062309	24140	6584
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.136827	62157	2147
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.305985	88883	6989
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.067760	28256	2661
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.076370	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.055449	17785	2765
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.023849	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	27.332332	14909	3843	0.0.0.2.1.0.0.7.14	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: discriminate || auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.804413	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.268024	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.344807	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.105306	43277	5577
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.277413	84903	9365
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.249577	53818	3407
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.043721	12062	4956
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.030805	9990	1700
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.093910	37540	5876
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.184939	78962	7847
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.142771	60907	5489
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.093188	40763	3777
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	4.748914	16443	176	0.179	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.049417	16778	3310
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.052205	18841	2180
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.081539	23114	2968
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.048385	16594	1279
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.096531	25	8	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.097681	9592	1769
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.143361	63781	3602
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.010097	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.009989	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.021930	5	3	0.2.0	synth with cache (only 1: intro; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.105348	30364	2808
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.028393	8559	1849
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.211759	23409	3738
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.121951	49340	7361
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.128974	44194	7227
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.069972	26288	5809
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.010656	1922	212	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.173332	50263	5039
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.006619	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.037789	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.009735	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.405100	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.009118	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.009865	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.037868	12101	2507
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	2.156715	1000	395	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	3.039276	3096	496	6.9.8	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.127899	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.068037	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.127275	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.066621	22128	4416
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.227959	68320	4575
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.077010	22135	3787
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.393559	11845	2237
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.082397	28602	4892
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	1.757625	396	114	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.656642	143	35	0.3.4.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.391327	102104	4652
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.066608	26229	2187
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.303795	29671	7039
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.107867	36158	10273
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.109860	45191	6149
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.298640	98048	6187
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.044299	12051	5395
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.035734	13839	2298
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.027586	10281	2508
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.014784	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.044823	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.007628	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.364820	96335	5445
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.178353	26506	8284
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.097252	41254	4473
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.020363	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.020695	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.047778	18262	3107
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.201786	26292	3036
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.023013	6680	1948
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.037800	13019	1640
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.072281	27573	5249
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.112103	47401	3983
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	26.879871	24587	3443	0.0.1.0.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.140081	63247	1902
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.092768	33634	3242
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.201434	22438	4081
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.008982	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010118	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.027405	15	6	2.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.536843	412	58	2.13.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.292518	57234	7653
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	6.179696	4781	986	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	34.637148	29250	2234	1.1.2.3.3.66	synth with cache (only 1: destruct (lt_ge_cases n 0); only 1: order'; only 1: intuition; only 1: rewrite one_succ; only 1: unfold succ, pred; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.016499	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.034515	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.257278	14	4	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.101057	1838	521	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.143055	64915	6970
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.086333	35959	1949
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.056010	16475	4907
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.221459	43830	5576
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.073605	29470	7056
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	3.337342	3585	471	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.078542	28218	3900
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.307844	81181	6500
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.164467	12545	1958
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.641481	65	24	5.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.069620	18240	2492
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.124820	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.180293	32786	4211
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.092501	38673	5100
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.235466	75071	3633
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.096324	28337	4831
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.074336	30497	5014
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.073675	27490	4790
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.043524	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.145554	66500	6157
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	4.490701	2074	417	0.1.10.5.0.1	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.027878	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.027615	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.341961	22483	942
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.012008	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.270585	49647	6216
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.316280	35979	3796
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	1.864017	4848	215	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.082424	29982	3331
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.159074	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.032265	11692	1659
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.035157	11024	2362
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.916997	185	21	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.099537	40231	6399
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.044103	12480	3998
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.051023	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.105448	42338	3794
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.211080	39345	3571
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.020528	15	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.075957	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	2.752872	2393	354	17.3.0.3.0.0.0.28	synth with cache (only 1: constructor 1; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.054916	19883	4770
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.920511	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.344794	145351	5486
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	21.294451	17287	2821	0.0.3.1.0.3.0.4.0.0.4.4.7	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.451600	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.304292	105087	7513
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.199599	30522	5124
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.203676	18454	6425
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.126318	11337	3342
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.168041	76430	5061
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	10.229554	11055	1883	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.100040	28402	4195
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.268681	79955	4764
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.074652	27763	8163
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.066498	26240	3097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.075254	28271	5674
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.184350	34604	6290
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.243491	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.083930	36269	3095
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.061074	20134	5595
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	8.006543	4993	827	6.3.4.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.236354	78585	4349
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.041130	10480	5262
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.082714	35689	4009
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.079214	29851	5141
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.095665	42614	3730
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.240341	24388	4104
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.142465	63574	7312
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.087649	36688	9986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.032768	2496	990
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	3.834777	6569	669	6.3.0.6.18	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.182820	82968	2563
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.035252	8229	4927
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.082004	31657	6794
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.230687	62326	6650
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.024629	7160	2146
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.591560	382	60	13.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.355200	40921	5831
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.040985	6121	1755
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.118495	18128	519
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.377304	63248	9200
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.627544	1650	139	24.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.091342	36976	8202
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.184705	26180	3983
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.028338	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.241361	58324	6439
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.114172	48639	8440
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.049190	18073	2548
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.101712	39374	6422
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.123495	35	8	4.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.011156	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.042142	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.056242	20524	5009
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	29.894885	7359	1741	3.5.3.2.3.0.0.0.7	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.114976	49554	5601
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.090104	34157	6422
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.074876	28894	5488
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	5.625927	6617	793	1.0.17.1.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.060165	23004	3831
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	2.676264	3328	174	51.4	synth with cache (only 1: intros; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.067579	26704	4635
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.192584	43964	6074
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.176951	81058	6047
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.043961	13710	2510
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.083170	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.056474	19175	4674
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.077881	30153	5767
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.101484	39231	7545
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.011209	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.252213	112264	7128
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.050397	19434	2872
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.163066	30520	4522
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.190341	84338	4125
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.166385	31973	3981
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.038018	14456	1271
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.172622	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.140150	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.100904	39051	6543
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.039711	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.009924	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.403125	77	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.351815	76631	9043
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	37.251300	18273	3583	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.091521	34324	7609
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.103796	42962	5234
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.187641	38226	6812
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.093677	31042	1620
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.344617	38442	7233
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.213273	16	9	0.0.2	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	10.002530	14458	1078	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.296926	76180	3466
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.078389	28995	6876
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.267076	23574	4900
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.110485	45724	4378
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.011675	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	19.942826	21615	2508	0.0.0.0.0.0.0.28.21	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.753580	5281	283	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.136201	56669	5037
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.048127	16946	1837
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.063547	25222	3622
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	3.011737	1985	417	7.1.1.2.8	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	7.567935	7275	1034	0.1.0.1.0.2.1.0.30	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	19.913000	10109	2549	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.072835	29198	3439
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.081721	33012	6685
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.044366	14765	3339
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	17.937331	24038	3318	7.4.13.0.1.3	synth with cache (only 1: unfold get, push, index; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.101553	38318	3443
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.120040	55571	3333
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.104403	41283	6805
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.197920	87798	6787
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.060987	22584	4426
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.118559	53196	4352
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.195353	91308	7353
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.223173	23955	3661
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.013207	811	408	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.183107	48490	6119
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.024733	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.197929	28083	3007
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.160436	72400	5333
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.028565	10435	819
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.165989	77457	10111
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.030718	8571	3325
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	2.876032	1439	375	6.2.3.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.344073	49345	9604
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.354403	58389	6748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	11.200598	70141	1548	0.0.0.108	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.084906	22666	1328
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	6.747208	10940	862	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.311806	60628	10544
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.039964	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.005008	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.973316	844	151	9.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.044668	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.320681	126122	5099
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.057047	20767	7125
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.153562	44620	5842
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.254144	113	29	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.209593	13360	2561
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.165178	74461	5446
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.073957	28981	4589
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.064389	18191	1319
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.336524	176	64	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.240921	9655	1207
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.058042	19135	5624
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	8.317596	31476	1293	65.16.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.102991	42906	5775
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.026676	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.144053	63188	6672
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.118321	44492	4818
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.062872	20371	4369
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.318007	111683	5814
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.176397	81130	5675
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.358059	50358	4474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.300580	148144	4592
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.046917	13324	7537
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.065860	22942	7275
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.177500	44369	2234
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.067833	25518	5258
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	9.657460	31558	1186	113	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.244459	39386	4804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.057293	20825	2850
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	23.869135	39739	5564	0.14.7.3.0.10	synth with cache (only 1: apply NNPP; only 1: unfold not; only 1: intros; only 1: apply H; only 1: intros h hn; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.221471	27847	6163
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.021386	6174	1812
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.225521	63675	7527
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.118691	47706	6066
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.082715	33807	3593
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.083202	22	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.022525	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.222054	29391	3717
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.087230	29679	1777
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.198046	92337	11200
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.188744	33532	5327
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.070660	26113	3827
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.649727	219	85	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.083706	32322	8391
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.114126	502	238	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.095796	28542	3238
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.040554	14297	1428
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	3.922073	4659	657	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.011224	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.871876	1161	411	0.0.0.0.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.106818	45222	4363
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.139794	619	170	0.3.0.1.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	0.990082	462	139	1.3.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.418103	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.016770	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.092098	59	19	0.0.0.1.3	synth with cache (only 1: intros; only 1: generalize H; only 1: simpl; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.239294	12293	2785
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	2.421587	1662	359	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.008304	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.016718	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.097590	37352	5343
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.158482	72922	6535
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.815994	217	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.095724	37006	6933
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.007223	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.361430	2057	159	3.0.2.24.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.032844	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.058371	18692	5642
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.050802	18940	3235
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.077241	29247	7308
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.104328	38312	5643
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.325394	64719	2460
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.238437	63961	8226
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.090792	37377	6915
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.068846	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.062009	21793	5902
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.189465	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.067336	19514	6007
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.073565	29177	7762
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.118711	50178	3777
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.207273	57118	4839
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	3.038665	1020	296	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.050393	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.035716	11253	3456
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.226189	567	27	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.025607	7216	1998
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.299220	74152	8630
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.345453	76	35	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.236414	110764	9726
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.022403	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.048710	18466	4012
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.026160	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.029732	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.527126	209505	5601
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.327524	107225	2963
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.243117	19384	2178
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.443480	207518	14552
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.217415	52933	4583
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.014696	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.116582	50906	5898
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.095170	42563	3310
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	3.852568	1766	805	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.581777	181	89	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.403362	405	73	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.117353	16908	3051
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.060967	21331	4447
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.063585	21951	4437
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.162609	41042	9137
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.156447	27776	5723
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.277754	93435	5014
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.803896	342	63	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.098530	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.046801	16058	2204
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.089079	32078	8049
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.058098	18614	5644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.051137	13072	1374
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	18.331660	18749	4345	4.0.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	30.705053	27313	3223	3.1.3.0.3.0.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: destruct m; only 1: auto with arith; only 1: left; only 1: now apply Peano.le_n_S; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	3.319917	2496	554	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.006189	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	0.189860	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.013714	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	6.518707	4444	963	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.008266	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	25.585792	30022	3448	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.011252	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.008763	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.166388	8648	1693
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	11.505885	10245	2511	0.0.1.3.0.4.1.25	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: simpl; only 1: clear IHl IHr; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.203995	73769	9231
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.088245	36897	5018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.128063	30404	9756
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.072025	1601	671	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.470658	191307	2566
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.013137	6	2	0.4	synth with cache (only 1: intros m w le; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.262722	34350	9072
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.147136	65270	3575
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.120549	49540	5358
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.124802	49874	2415
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.021043	4875	1627
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.185878	39166	5038
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.204126	14694	3396
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.223789	106632	4807
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.279055	85483	2892
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.312653	31210	5371
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.166789	77440	8156
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.065710	23360	6561
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.025445	6604	3133
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.148573	64155	9394
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.088556	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	8.597463	14515	1096	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.062808	22833	6665
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.106405	42363	5775
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.225641	74348	7199
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.176673	56456	4925
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.090930	35885	5872
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.482319	86	36	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	24.116460	23948	3109	1.3.3.1.0.7.17	synth with cache (only 1: intros n1 le_mn1; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: intuition; only 1: rewrite IHv; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.159475	35811	6016
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.051437	16049	5957
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.126405	52164	5888
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.202670	28695	7097
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.435845	361	57	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	4.292008	5890	654	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.074957	31132	3676
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.173488	22204	8027
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.006390	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.018754	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	40.111097	39644	5383
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.130434	29221	4534
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.094716	40241	4213
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.128214	55477	4362
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.111761	37	18	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.258938	78935	11359
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.326922	105009	8741
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003824	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.100593	42366	4900
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.209754	51715	5122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.102228	41560	5731
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.085158	34360	7058
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012663	3088	1225
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	9.671461	2354	429	6.1.0.2.0.1.9	synth with cache (only 1: intros x y l1 l2 Hin; only 1: intro EQ; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.201474	753	391	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.117181	55938	5891
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.018179	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.006178	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.072082	26132	6204
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.061142	20360	2371
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.257793	34358	7094
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.098987	40418	6589
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.148177	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	1.384421	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.251777	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.015253	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.005228	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.060686	23836	5544
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.128578	25037	6836
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.191089	48318	6050
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.242735	72425	4443
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.026404	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.087672	34978	7605
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.086754	35123	6640
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.200926	61741	7083
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.783936	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.011426	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.066053	23469	7804
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.179620	20540	2600
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.039742	11751	5232
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.080468	28634	3221
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.121774	19533	8471
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.171600	56791	6484
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.297743	86180	7751
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.125706	55319	7560
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.040164	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.148828	21543	8841
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.007267	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	10.577178	6887	1004	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.145019	45366	5920
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.080321	32942	4140
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.054235	20635	6661
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.049772	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.165918	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.303514	59980	6615
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.102299	41842	9494
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.003982	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.117988	49671	4339
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.220328	58817	2570
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	21.246988	27971	4797	0.0.0.2.1.7.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.016180	4783	1299
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.128253	35281	5380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.126842	39117	6874
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	6.161773	7285	1107	6.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	0.615256	44	11	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.215707	108848	7096
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.491804	495	224	2.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.178408	44714	5576
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.361046	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.117659	26592	6281
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	2.433284	1608	401	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.085070	34153	7653
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.081490	33928	5351
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.096681	33621	12919
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.097421	42853	6380
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.185006	34381	8185
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.185230	35631	7334
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.064212	23267	6864
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.039361	12721	3262
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.256169	5289	2282
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.223500	551	183	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.080331	30248	6427
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.189487	4667	1561
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.173163	16517	5648
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.861006	627	131	4.0.9.0	synth with cache (only 1: intros m x y e; only 1: intros H; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.050222	14229	4191
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.252700	85130	5429
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	7.563487	1752	278	0.0.3.1.0.1.2.2.9	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.136335	45051	4444
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.077315	31068	3615
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.181112	44551	4193
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.152400	38859	4369
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.007216	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.006914	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.138106	22289	4934
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.106464	43619	8138
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.673001	191	102	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.102678	22730	8131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.171823	68260	8588
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.291007	43643	7445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.065391	19598	3606
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.105889	44035	6420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.029385	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.027817	9112	645
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.074820	27204	4659
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	40.182725	28714	4487
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	4.074492	1435	638	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.267094	20	7	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.072727	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.150918	50514	5460
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.272651	13	4	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.079732	28841	5565
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.048398	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.088566	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.164914	22534	5949
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.733332	1995	459	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.300639	49540	6191
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.186978	85511	11628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.066056	16086	3453
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.127483	42622	13612
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.158312	73839	6135
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.184113	81224	7447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.056447	19772	5421
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.059217	20539	7455
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	2.532095	430	83	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	34.887796	27720	4673	0.1.0.6.0.1.7.2.0.1.0.2.4	synth with cache (only 1: red; only 1: intros; only 1: red; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: generalize (elements_3 m); only 1: intros; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: invlist InA; only 1: destruct p; only 1: intros H4; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	1.915201	298	146	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	2.545713	282	96	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.017517	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.049110	10408	1612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.205517	11681	3901
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.612803	72	41	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.048055	15129	5377
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.164733	67424	5685
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.075139	17917	4376
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.106333	41493	6306
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.236514	60097	4983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.118192	45112	3139
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.127635	26390	3242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.380188	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.133449	11994	3831
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.061853	16124	8183
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	9.592516	4600	1358	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.389513	10879	3260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.105907	39222	9834
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.255290	117109	3129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.134525	35356	7376
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.077974	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.160122	30693	6568
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	4.911166	3142	514	0.0.0.0.6.0.4.1.0.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	7.024782	5167	862	25	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.022924	6072	854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	5.934194	2518	849	2.2.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.160361	69915	1704
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.044587	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.262540	51689	5389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.118270	46654	5559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.065570	18840	7086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.067702	10752	5321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.098087	27025	7903
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.079311	30289	7203
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	8.168073	6141	1516	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	5.819722	364	178	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.257964	122264	16305
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.128588	46036	7487
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	3.013560	954	426	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.514565	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.142327	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.049177	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.020725	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.538853	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.248137	162	105	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.145788	35123	9276
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.015298	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.113041	48922	6142
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.080826	24441	6218
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.109190	44161	5784
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.104337	43951	3432
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	8.144788	4569	1958	0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.069825	24319	4848
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.102994	23767	3614
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	2.726467	1602	744	0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.024496	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.015785	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.218157	31516	8585
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.066288	24845	5987
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.015805	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.024128	2871	142	5.40	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.015205	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.111142	26935	8024
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.076160	28832	5607
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.182141	56769	6487
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.209564	62494	5824
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.156156	35603	1329
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.113518	12531	4953
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	2.546686	1760	441	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.058718	18940	7762
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.006609	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.013775	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.375144	471	158	14.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.127061	40720	7289
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	6.662314	28228	842	1.12.34.16.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.078991	6172	643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.285657	628	346	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.090343	38771	3664
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.100027	41478	4628
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.062636	22179	5842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.087115	15193	2697
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.268503	70390	3950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.115439	45628	6437
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.051077	9775	4460
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.051331	15491	6122
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	4.362458	1132	449	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.354671	72226	6988
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.206885	36763	6007
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.015219	2873	1246
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.175330	72114	15406
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.066317	15799	2557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	3.345615	1802	588	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.640316	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.071667	14337	4147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.038965	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.078860	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.091160	39681	5898
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	5.590082	1815	717	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.089405	28837	6711
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.113697	43786	9248
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.058133	18183	6634
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.077486	19928	3767
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.158442	5621	1580
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.155811	21187	5679
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.271256	16585	4417
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.095232	36220	5907
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	14.687027	2808	1017	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	13.886199	3655	2065	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.132581	28938	3381
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.112058	23208	1403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.191679	707	290	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.225297	34145	5414
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.086097	35415	4958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.155042	26285	4732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.115675	37783	4979
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.431833	1234	204	9.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.150507	59034	5563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	5.935760	1024	403	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.209887	9804	1705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.071599	10844	3486
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.317747	56159	5657
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.193603	36614	3853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.276640	3611	1676	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.250867	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.138376	3239	1357
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.105736	17170	3930
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.192186	18866	5522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.048311	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.031777	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.091691	24800	5999
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.119745	10468	1824
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.106855	44125	7495
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.177579	36231	3984
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.289842	137798	18064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.099709	20909	9057
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.066943	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.083781	17410	3589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.087502	23009	6395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.097796	30020	4942
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.796043	1287	521	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.070775	24901	3745
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.067491	17410	2275
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.009668	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.143488	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.021854	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.069620	19009	2984
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.338453	185	50	0.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.012354	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.018933	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.093489	22984	5118
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.197524	37974	9134
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.258123	21745	8014
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.116919	50771	7135
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.185046	30706	3689
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.013858	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.248216	63811	4652
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	8.087788	4123	856	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.460571	38	14	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.102767	18560	4428
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.085593	34254	4313
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.018518	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.067735	24761	6303
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.091458	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.858728	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.113547	30090	4782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.095801	20198	6253
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.141618	11229	1432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.254219	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.189275	15646	764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.107873	14910	3096
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.204334	30732	5048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.076497	10656	2917
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.093523	33843	5470
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	12.302798	11109	1672	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	4.761360	500	100	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.118484	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.135324	17600	4270
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.098484	21663	3906
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.081960	16248	5690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.178103	29643	7224
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.045008	12229	3090
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.097601	37946	5603
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.195835	36829	6263
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.356100	101066	7351
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.098818	29532	6447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	8.537379	2607	777	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.133932	6	3	3.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: apply add_pred_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	20.718206	14069	1919	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.277992	2012	300	0.0.0.0.0.0.0.0.0.0.7.31	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.131991	52233	7098
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.106489	14548	4318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.069537	16746	6090
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.039032	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.124148	34366	4405
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.076912	28129	6507
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.011212	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.028864	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.143540	19915	3762
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.017835	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.014129	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.017488	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.010909	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.012783	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.152895	22891	6979
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.178449	22469	5376
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.014468	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.098642	40036	6666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.134882	32074	6540
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	13.173011	8796	2764	0.0.3.0.0.1.0.0.1.5.0.0.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.068095	22467	6323
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.132013	56571	5334
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.114539	8556	3083
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.132385	26035	8789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	0.994227	219	75	6.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.109624	14942	3604
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.109957	40222	7015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	6.796798	3202	1439	0.0.0.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.099584	10471	3222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.032030	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.042312	12524	2999
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.081146	27083	5713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	39.941073	19343	4782	0.0.1.2.0.0.0.0.1.0.0.24.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.405105	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.352250	102941	3036
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.124233	9887	2155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.693199	306	153	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.068361	22783	4290
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.062827	19438	5670
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	33.506839	20916	4813	0.1.0.1.7.0.3.0.5	synth with cache (only 1: intro n; only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: rewrite mod_add; only 1: now f_equiv; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.605410	743	220	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.035661	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.148103	48583	7854
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.055714	21450	2329
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.205901	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	26.926099	33815	4935	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.142004	24723	7509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.651501	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.113121	45133	7360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.037580	10573	2327
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.091655	36427	3612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.194057	89355	5188
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.206415	1547	626	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.078310	18977	3932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	3.066421	1608	415	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.163100	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.109345	22779	5530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.127985	16132	4541
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.104151	43811	2134
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.183596	18278	7879
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.143740	32755	5575
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.113029	115	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.127835	33	18	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.234510	107614	2724
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.104041	24458	7910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.199049	10985	4139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	35.499620	11535	3758	2.0.0.6.0.0.0.0.0.0.5.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.070362	27754	4642
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.125959	19460	4312
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.162500	28869	3541
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.019532	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.124018	33852	4631
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.070353	16160	7420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.053194	14345	4838
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.082606	29069	4684
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.230696	39840	5380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.058365	17009	3306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.086110	18315	4166
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.051015	17769	2892
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.110702	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.104664	37370	3914
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.093992	27577	4284
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.067044	25243	3128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.106233	35881	5908
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.170475	23093	5983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.035344	10074	3323
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.036786	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.244117	40004	7125
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.126295	47546	6295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.035089	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	3.020812	770	255	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.036763	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.067424	23215	5116
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	4.330117	946	422	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.368993	302	85	9.1.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.027523	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.701531	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	9.824979	5820	1273	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.053491	20575	2024
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.782263	604	213	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.084256	32827	5279
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.091867	27071	4890
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.172047	12705	3562
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.118150	46803	1571
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.015009	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.133428	55296	3039
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.262216	21395	7574
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.604419	156	68	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.122803	20263	5091
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.088756	19503	3154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.212496	19426	4806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.043414	13154	5265
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.084812	33572	4492
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.112039	27340	7834
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.184257	43072	6539
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.816177	5698	523	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.076028	27138	4835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.088133	16275	5960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	2.512098	795	393	1.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.734703	471	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.075114	23906	8274
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.078181	19908	4496
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.191153	20890	4840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.049535	14912	2457
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.062526	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.064940	22164	3680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	24.741448	4698	1192	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.105386	43167	7770
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	5.011262	2258	665	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.060805	17772	5493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.198640	1469	238	20.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.562810	528	317	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.352517	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.634002	1468	659	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	19.623363	8578	1367	4.2.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.067387	25478	3142
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.032752	9407	2326
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.215569	92409	5989
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.120291	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.118527	42822	4776
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	10.382869	3968	1796	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	3.651677	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.042264	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.073386	13319	3733
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.246888	114771	12155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.204202	91325	6480
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.044054	16206	1191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.082939	24551	4380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.824135	832	314	1.1.4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.006745	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.126863	52265	11414
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.092334	17319	3140
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.076355	28974	3835
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.186627	83142	4665
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.006278	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.115771	13742	5130
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.105703	38081	4236
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.460763	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.116471	32725	5106
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	23.909602	8979	3634	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.053676	16824	3200
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.066451	23010	4216
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	9.617679	14658	489	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.014531	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.062421	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	6.854499	8030	982	0.0.0.15.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.610037	171	73	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.005518	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.135186	16086	3399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.197294	44731	8190
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.556165	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.686061	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.149112	63892	4385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.103634	13427	5345
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.583633	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.013019	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.008247	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007208	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.014573	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.739349	862	326	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.092920	23527	5067
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	25.750853	16499	2944	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.060476	19190	5803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.069469	23659	3832
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.134699	30723	6933
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.097877	34397	11037
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.182991	74113	7931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.068034	23976	4395
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.058570	20858	3356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.026162	6984	2286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.072981	26594	2945
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	40.148528	54235	7044
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.066759	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.117527	18453	4911
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.105989	435	155	4.3.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.549748	272213	7441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.082193	30822	1783
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.038414	10443	2993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.060938	22046	3825
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.082411	15201	2612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	17.939837	9494	2328	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	9.608508	12130	1926	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.012941	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.101638	35386	11690
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.153835	50144	3678
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.075372	25171	4357
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.067734	21200	7772
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.264866	58401	5220
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	36.855742	12284	2508	0.0.0.0.0.1.0.0.0.0.4.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: revert n m; only 1: intros n m H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.106101	10557	4468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.085090	28835	6458
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.130154	22581	3147
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.083993	15432	2957
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.010504	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.015189	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.091735	22674	5214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.156337	30183	5674
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.390631	27163	963
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.516208	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006248	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.002957	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.195166	17976	3548
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.005538	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.017274	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.843089	301	79	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.008865	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.088501	22821	5242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.150023	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.175929	29643	5628
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.051856	16426	5018
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.106266	28299	9396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	8.754651	5741	1542	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.114529	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.025718	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.005768	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.138845	52370	10958
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.062746	18065	3410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.080893	28105	7128
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.894127	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.075647	30310	2817
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.073619	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.693741	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.025971	6392	2015
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.059159	19065	3349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.094389	12943	3446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.151030	264	48	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.188503	84024	3431
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	3.317906	818	327	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.229561	97737	9054
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.057897	19222	2988
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.038354	12655	2291
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.140293	48925	13945
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.006797	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.010768	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.063872	13677	5281
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.156908	68301	7779
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.022721	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.119509	42703	16668
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.417315	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.091649	12646	3395
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	13.433931	9113	2264	0.0.0.0.0.0.0.0.3.1.0.0.0.0.6.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.037636	9653	2034
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.141258	19241	5267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.074254	24322	7084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.042992	11481	4512
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.218447	89758	6669
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.060127	19507	3690
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	2.938762	7114	719	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.062795	21099	5037
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.066571	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.014571	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.104804	39454	4271
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.285418	18641	693
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.060264	2149	448	0.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.015319	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.075986	6217	2134
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.057630	15718	385
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.090339	16314	4540
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.251951	58311	4367
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.065170	9203	2027
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.089759	28142	7839
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.050980	14983	5222
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.091521	36526	6109
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.061882	20939	3898
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.068247	21687	4445
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.019396	6427	1032
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.008950	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.005132	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.036153	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.028864	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.511452	231443	6563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.116537	21106	3479
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	5.513900	4359	999	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.048659	16224	3172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.035313	5978	1678
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.358741	157439	11865
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.037919	12778	2796
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.023810	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.015738	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.009038	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.580151	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.005063	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.235820	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.110545	44200	6950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.058792	18052	4686
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.551315	1089	307	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.113026	42972	5615
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.072270	26419	3687
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.106112	16918	3827
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	16.345649	19848	1397	0.29.12.4	synth with cache (only 1: intro x; only 1: intro H'; only 1: destruct H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.127172	48035	4638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.049694	15264	4520
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.072243	22052	6900
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	6.449970	1339	397	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.009296	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.010796	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.019723	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.008323	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.007459	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.005356	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.110622	42277	4526
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.108012	22881	1800
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.062510	21478	4427
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.748573	342967	11797
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.484102	38672	1775
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.038188	11881	1491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.051281	14505	4708
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.346789	155019	9988
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.046035	13705	1654
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	30.117432	359058	3463
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.008170	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.018150	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.529203	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.096664	15789	3068
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.683307	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.017039	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.013678	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.005521	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.011446	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.288010	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.028205	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.757435	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.205695	20780	4972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.051027	11596	2641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.076872	15189	3434
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.074120	11278	4358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.115462	41326	5658
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.031505	5327	2009
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.130725	18559	2869
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.095490	36834	7531
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.024867	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.019258	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.020975	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.028626	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.051995	15960	4588
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	9.320292	6189	877	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.069979	23205	4366
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.039826	12689	4479
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	3.476933	1025	374	2.3.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.177869	73693	11381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.042360	13120	2922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	2.953873	1304	660	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.039901	13	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.086148	34688	8280
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	13.953340	6566	2652	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	22.752992	376971	2904
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.230064	74	35	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	23.565881	18120	3823	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.065316	24874	4246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	3.702167	3453	760	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.050327	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.113620	21689	3843
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.146181	66442	2970
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.102609	38488	7187
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.150836	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.071934	24435	4947
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.078948	24574	6815
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.699053	587	265	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.087013	27889	14482
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.063261	20481	5095
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.037696	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.098377	34370	7093
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.047193	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.139277	46191	10572
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	2.959778	22732	731	1.2.0.2.34.52	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.188249	41	13	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.619074	288786	11644
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	8.863646	92842	608
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.305557	34663	977
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.124490	51623	8767
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.003664	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.473575	215214	10638
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.009972	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.507932	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.085024	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.058931	16261	3736
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.167886	30913	4990
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.015272	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.462166	218827	5328
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.079453	30881	3604
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.047398	12399	6393
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	3.354522	20589	834	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.161050	67762	14637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	7.765352	2803	727	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.097036	31209	10165
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.096491	3412	452	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.009917	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.011977	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.007862	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.007834	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.015060	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.013340	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.024533	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.004485	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.004562	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.058178	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.004492	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.028747	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.013648	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.046348	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.006501	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.051521	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.004383	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.019188	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.011445	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.016233	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.018572	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.044754	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.013872	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.018327	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.012971	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.014477	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.010585	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.017859	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.012524	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.021006	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	27.423679	13801	2989	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.012974	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.013100	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.341630	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.106320	40217	4295
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.050364	15253	3474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.075871	28013	3647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.064007	10094	5680
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.084026	34090	10064
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.104847	13429	3776
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.067013	23730	7054
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.466628	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.154662	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.229823	106546	4445
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.069317	24282	6317
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.106042	23314	6288
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.061566	20195	5693
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.031160	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.110146	26235	4576
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.038493	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.172153	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.133302	52779	7204
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.058743	19442	5493
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.629882	244398	13749
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.165907	43984	5841
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.022358	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.203708	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.199880	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	4.588643	2173	764	0.0.0.6.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.435425	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.020687	3760	1778
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.036151	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.350501	4330	447	3.15.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.594802	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.009298	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.114855	40133	12395
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.034052	9189	3662
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	19.585404	10852	1030	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.164951	68496	9870
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.082339	194	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.086021	29921	9935
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.011776	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.389345	27402	1413
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.730858	364213	16044
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.213431	179	50	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.124318	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.038423	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.004184	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.049966	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.401307	185868	8340
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	7.866047	111164	1432	1.110.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.288452	53487	3926
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.042752	10058	2232
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.455172	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.049537	14707	5264
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.206333	94524	5293
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	15.466588	3511	1337	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.099900	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.264325	117513	14009
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.132724	57436	9525
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.630788	308694	14559
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.096712	32319	11944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.063361	20677	5727
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.050265	15525	4643
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.091050	16823	2931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.836439	372	138	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.115212	23145	3432
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.587748	295731	14643
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.007705	15	4	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.083878	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.011905	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.004471	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.110426	40761	11252
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.027261	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.417127	205952	8328
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.384254	178238	9747
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004427	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007522	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.011541	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.031925	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005853	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.022771	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.068565	12568	6765
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.071629	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.014741	27	9	1.1.1.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	4.036035	14530	1781	2.3.2.3.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.089756	20266	4986
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.040725	11088	1938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.071455	23356	4104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.586292	540	308	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.144226	6170	1225	0.0.1.1.0.3.1.3.0.1.7.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.007582	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.054537	16295	5363
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.056816	18042	5598
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.314193	147714	17442
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.089883	31808	8002
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	5.000342	24672	1448	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.088892	30012	9129
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.714144	1898	186	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.153998	72519	5165
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.117365	45907	4827
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.836181	18373	1292	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.222251	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.443786	70854	2275
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.348622	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.156742	68769	4421
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.222737	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.600929	278381	7964
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.050062	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.264772	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.024638	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.452961	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.144685	54421	12655
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.254484	38834	4824
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.004024	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.009864	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.074931	28569	3606
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.047836	14441	5164
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	23.108979	76036	9579	0.21.2.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.368642	242	87	0.1.2.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.009314	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.009013	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.381841	175927	14268
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.776041	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.010030	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.013734	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.317584	162	63	1.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.557422	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.124734	51762	8224
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.158654	65664	14245
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	1.360492	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.012253	8	5	2.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.045115	36	14	1.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	14.083764	24121	3043	0.1.5.27.1.5.4.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.420194	193272	14938
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.007279	8	3	4.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.013161	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	7.709212	2339	668	1.0.1.9.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.042023	12532	2973
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.635247	319044	14688
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.040796	9885	2713
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.077419	30438	4951
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.072529	27403	3973
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.021532	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	8.461951	14869	3189	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	3.842643	75074	760
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	22.067869	12669	3368	0.0.1.17.1	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	0.700652	4498	201	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.805879	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.874181	550	81	0.2.18	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.318181	149519	13114
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.106887	42609	11509
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.022487	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.012313	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.621872	308	112	0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.268466	68	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.244496	112122	14411
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007608	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.263594	44275	929	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.013997	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.007932	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.077294	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.137297	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.032680	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.006271	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002279	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	0.115567	1035	124
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.662363	2842	579	10.10.0.9	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.113979	22908	4521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.026863	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.024177	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.174830	72780	6962
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	4.489972	3606	808	1.2.5.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.060286	19901	6774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.090124	29095	5404
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	2.736370	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.691705	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	3.113376	1432	382	0.3.7.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.073404	28268	6615
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.147607	26944	6821
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.095891	37378	9831
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.062196	21550	8194
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.597272	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.023670	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.076016	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.045466	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.039000	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.096863	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.090351	31793	9981
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.075600	31724	4123
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.475052	205249	6320
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	24.714289	111927	8463	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.012720	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.129407	50337	12608
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.102930	43879	4533
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.028220	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.045069	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.469728	228946	12389
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.029025	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.929468	468042	6954
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.262867	123964	16168
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.442089	212248	12474
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	41.359736	708665	6426
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.242745	110539	12418
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.418511	196719	10171
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.041732	12764	3681
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.319123	146996	11602
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.769418	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.059463	20506	3736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.055982	19195	4095
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.108133	45137	5347
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.264218	115726	14452
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.395559	180292	8058
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.957523	493436	4564
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.683255	326929	24123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.151180	30224	5683
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.130096	50824	6950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.065300	9025	3522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.044481	11368	6491
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.497172	245229	20156
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.006683	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.084591	31649	5807
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.068498	23331	4849
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.177314	40002	7709
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.112676	43252	14049
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	11.587624	16417	4103	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.078679	28296	6190
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.037539	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.060980	22204	4301
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	3.774447	1551	702	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.125196	53697	6193
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.022994	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.024451	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.079252	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.385087	89308	3926
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	9.581692	6985	1733	0.0.5.3.6.0.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.456195	218090	9635
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.275715	55172	4355
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.407250	192448	15139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.092453	33684	5789
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.164014	69451	15070
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.096076	36424	9591
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.180265	79771	12419
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.085730	36153	3042
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.377342	175985	22856
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	1.171707	3110	455	1.1.17.1.1.1	synth with cache (only 1: induction n; only 1: intro p; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	0.279061	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.075585	25825	6518
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.265505	118520	12112
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.137877	52	29	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	1.302280	840	410	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.052683	17763	3629
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.641505	651	158	2.3.1.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.077009	25962	4452
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	10.041085	5660	1009	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.055124	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.009715	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.022517	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.045594	14615	4677
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.012037	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.003029	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.020639	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.004845	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.004875	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.007637	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.013592	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.021186	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.011189	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.024040	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.007024	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.009585	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.009548	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.008321	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.009351	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.005597	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.008879	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.008006	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.015132	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.009584	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.006195	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.027505	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.014058	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.015086	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.011991	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.019709	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.009818	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.066856	19932	4396
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	3.169595	8649	662	15.13.9.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.094859	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.008637	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.018545	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.023204	4	3	0.1.0	synth with cache (only 1: destruct l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.763057	393470	8212
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.179056	83049	4183
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.032116	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.035663	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.130833	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.422435	190399	17797
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004890	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007429	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.005617	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.006086	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.069238	24140	3268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.040794	11664	3740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.077104	12490	6000
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.258137	108934	4978
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	1.537720	9662	278
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.008460	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.021819	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.028212	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.009352	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.010253	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.012367	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.021317	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.049685	16214	4391
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.163137	23070	4655
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.174599	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.126631	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.205583	89672	14739
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.084360	27184	7935
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	9.208439	4309	1283	2.2.3.1.0.7	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.105644	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.069167	24840	4970
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.425120	237	52	4.1.0.1.6	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	12.744676	16482	2336	0.0.2.9.2.0.2.0.4.0.0.9.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.079004	26847	4424
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.005579	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.145597	25312	6318
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.435370	70295	834
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.012229	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.009409	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.006720	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	4.932874	2029	895	0.5.0.0.0.2.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: simpl; only 1: now destruct l; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.025454	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.405282	344	48	0.0.0.19	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.045885	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	9.253148	10771	1556	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.473432	51719	584
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.076461	24589	6916
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.710560	13097	522
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.079566	27380	4782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.047260	15753	3322
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.222581	94825	13946
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.276613	38303	7452
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.339071	158080	15155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.039742	3919	1692
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.532133	247825	16622
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.075402	26327	4450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.077714	28618	6318
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.106130	39963	6093
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.651539	321133	4403
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.006822	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.075789	26284	9082
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.017800	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.010449	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.014174	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.265879	139	20	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.013773	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.448736	149	16	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	13.372606	11249	2384	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	1.511903	2464	229	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.077121	28352	5239
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.042815	12298	6337
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.057418	17547	3461
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.507456	245942	4429
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.904582	460627	9881
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.037107	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.053779	14125	3458
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.186445	14861	5281
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	32.130085	29794	6911	2.3.0.0.10.1.0.0.0.0.2.0.9	synth with cache (only 1: induction n as [| n IH]; only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.124092	45447	13122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.080645	27325	4588
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.100219	34295	10563
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.045568	15141	3191
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.097320	34577	6377
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.075942	28727	3785
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.115669	46957	6037
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.782546	385503	3560
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	6.736785	7798	683	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.017897	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.069482	23631	9110
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.020336	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.522243	243997	5146
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.062838	22372	5085
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.450704	201136	5623
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.023076	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.055327	17163	7879
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.078841	23724	5583
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.517744	777728	7041
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.035827	10333	3547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.060937	18666	6946
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.979628	496768	6314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.046881	14918	3100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.095745	29047	5786
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007009	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.030383	4	4	0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.073296	24436	4742
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.080117	26782	6046
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.265372	115704	2525
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.072853	21470	6616
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.054658	17284	3019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.041134	9674	1908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.043804	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.292412	129017	4066
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.046858	13004	4735
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.087181	29067	7981
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.043428	12648	803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.043270	8529	2006
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.069612	23046	3727
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.040043	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.062462	22779	3058
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.116937	43477	6855
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.084320	32371	6671
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.121253	22685	7560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.057766	20368	2438
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	0.838766	317	112	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: trivial; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.289685	133073	2941
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.040317	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.052668	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.076204	22046	9342
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.016289	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.074240	24433	7305
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.200093	82206	3744
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.137951	54746	8267
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.117437	48101	8647
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.048165	15938	3104
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.106975	40798	3403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.107386	41016	3311
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	22.311114	20415	3778	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.065318	21082	5160
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.052946	16021	5545
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.075588	26346	3538
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.103536	17648	5648
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.044704	11357	4164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.077032	25147	3584
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.090011	31007	5194
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.156137	65133	6492
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.103959	37370	8707
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.055490	19488	4309
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.041958	10844	2314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.081027	26575	5602
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.094836	35688	8306
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.072997	23921	5679
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.038589	12524	3086
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.051987	15323	3167
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.113063	40909	6814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.055622	16669	3354
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.083578	31808	5772
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.049235	15225	4854
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.099565	35450	5133
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.100281	39383	6755
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.126529	50540	5100
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	5.922960	4497	1161	0.0.0.0.0.0.0.3.0.1.0.0.13	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.014570	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.061893	18606	4085
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.031090	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.045494	16139	4075
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.082079	28602	5373
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.121407	51674	7613
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.066759	20263	6281
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.049589	16818	3808
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.067246	20424	5872
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.042982	12719	2503
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.056032	14595	3175
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.077977	29011	4474
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.064399	21111	5471
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.074276	24325	6198
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.099137	38274	9936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.048984	14445	3534
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.085313	30169	5716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.063632	22111	5382
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.205549	93737	5128
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.130836	54415	6268
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.076976	28110	4246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.072820	28161	5612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.037689	7741	2048
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.084225	39410	4381
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.162481	74380	6544
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.061180	21363	3572
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.049819	12683	3283
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.132756	62845	6447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.034894	11692	2296
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.181198	87199	9590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.069383	28343	5568
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.196244	100881	8890
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.123809	62156	7932
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.094518	44934	5666
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.075771	33363	5409
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.057706	26260	4764
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.047466	21714	4421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.051250	21487	6049
