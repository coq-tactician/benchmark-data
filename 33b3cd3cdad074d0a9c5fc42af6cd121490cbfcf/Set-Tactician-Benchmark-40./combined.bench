coq-tactician-stdlib.8.13.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.020512	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin2	40	0.040850	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.P_Rmin	40	0.079345	20	8	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_R.Rcri	40	1.253019	445	45	0.14.8	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.091222	41999	6196
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rsth	40	0.174932	24	15	1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.061794	26979	2719
coq-tactician-stdlib.8.13.dev	Coq.Reals.Binomial.pascal	40	40.036683	14189	2141
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.034672	13086	2568
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.058420	24943	3899
coq-tactician-stdlib.8.13.dev	Coq.nsatz.Nsatz.Rcri	40	1.181679	524	78	0.16.4	synth with cache (only 1: intros x H; only 1: rewrite Rmult_comm; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.038414	14751	3411
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.054883	8	7	0.0.1.0.0.0.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P1	40	40.127232	61989	7323
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.054664	19850	4709
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C3	40	40.032789	11959	4660
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.095851	42386	4441
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple	40	0.030924	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.included_trans	40	0.946897	876	145	10.5.1	synth with cache (only 1: intros x y z Hxlty Hyltz; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.035091	11300	4478
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.010152	491	86	5.11	synth with cache (only 1: intros a0; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.shift_value	40	0.031906	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.069379	27505	5387
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	0.045837	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.073708	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.051690	17104	4831
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor1	40	40.109995	53912	4329
coq-tactician-stdlib.8.13.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.063222	25920	4615
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.090460	40211	5270
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.052116	20517	4641
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.033961	12079	3964
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.distance_refl	40	40.049932	19737	2992
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.057862	20821	3691
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.039519	13822	3617
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.544807	143	46	3.4.2	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.030770	10280	2965
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_ineq1	40	40.033692	10955	3248
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.173694	84242	4768
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.rotation_PI2	40	5.431101	1803	529	0.0.0.7.0.0.0.4.0.4.0	synth with cache (only 1: intros x y; only 1: split; only 1: pose proof PI_RGT_0 as H; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.023034	8605	2494
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.040764	16434	3104
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.tech	40	40.028402	9354	2553
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.049891	21109	2946
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.032638	10222	3619
coq-tactician-stdlib.8.13.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.549066	516	187	3.2.4	synth with cache (only 1: intros n0 H'; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.079589	36487	6023
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rprod.C_maj	40	40.044537	18219	3211
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series	40	40.094741	41196	6066
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.055638	22895	4952
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.053324	19914	4594
coq-tactician-stdlib.8.13.dev	Coq.Reals.Alembert.Alembert_C5	40	40.024544	7680	3641
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.interior_P3	40	40.069061	29859	6503
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.complementary_P1	40	0.662839	550	86	17.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Cos_plus.cos_plus	40	40.053753	20158	3079
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.055878	20907	3852
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.043306	16744	4295
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.MVT_cor3	40	40.044245	18183	4703
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	1.261545	345	137	0.0.0.0.5.1	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.frexp_spec	40	44.849686	55602	1371
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.093128	40199	4823
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.056271	20972	3246
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.067741	27286	3857
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.041743	15505	3585
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.exp_Ropp	40	40.044623	15973	2778
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.045145	18202	3553
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.059137	25038	2813
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	13.962435	9125	1568	1.0.0.8.20	synth with cache (only 1: intros SF H8; only 1: intros H3; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.032772	12140	3168
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.051825	22338	2877
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.043633	16855	3972
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_2_3	40	40.033561	11831	2688
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.051904	22747	3170
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.027038	11655	1718
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dx	40	40.077685	33563	5389
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.042779	15511	3753
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.022516	7	3	1.0.3	synth with cache (only 1: simpl; only 1: intro x; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech1	40	40.097956	44094	5153
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech5	40	0.010212	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.growing_cv	40	40.083252	36605	7233
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.068956	29438	5432
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Rsor	40	40.127120	60551	3856
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.057023	21900	4114
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.034976	11831	4240
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.042127	14581	4346
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	9.168028	2970	524	3.0.3.0.0.2.7.6	synth with cache (only 1: intros x y H; only 1: rewrite <- (Rplus_0_r x); only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P1	40	40.114293	55301	7200
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.036088	11929	4516
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.034799	10118	4206
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.067906	27936	4942
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.053767	25055	4231
coq-tactician-stdlib.8.13.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	41.132142	43457	2486
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.036047	7093	2235
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.042106	15194	3384
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.036493	12033	3863
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_exp	40	40.051489	19705	3349
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.058386	24652	3240
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.063040	24794	3381
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.034777	10774	4442
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.027668	8556	3633
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.123055	55725	5082
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.043439	17846	2511
coq-tactician-stdlib.8.13.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.035819	13002	2126
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.038422	14504	2494
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.047272	19508	3189
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rderiv.Dopp	40	40.045445	18005	4868
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.AbsList_P2	40	40.062244	24895	4485
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.047891	17328	3120
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.050708	21570	2644
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_O	40	0.008525	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_1	40	0.117910	12	11	2.0.0.1.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.132284	30	9	1.0.3	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_add	40	0.602842	83	51	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech6	40	40.052662	20150	5256
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.tech12	40	0.408273	150	51	5.5	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	1.794996	163	79	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.116622	53039	5368
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_plus	40	6.083795	3755	419	1.7.16.3	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro H; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.045235	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.290971	76	23	4.0.2	synth with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.068510	27479	5342
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Qle_true	40	40.090013	35372	4072
coq-tactician-stdlib.8.13.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.076247	30387	5843
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	37.932691	12037	3614	0.0.0.2.0.0.8.8.0	synth with cache (only 1: intro; only 1: case n; only 1: red; only 1: auto with real; only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: discrR; only 1: fold pow; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.063519	24128	4828
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.048292	17267	2094
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.093143	38891	6066
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P4	40	0.014146	2	2	0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.048390	19113	4582
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.082950	36042	5170
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	1.330133	580	123	0.1.4.0.0.1.1	synth with cache (only 1: unfold Rle; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intros Eq0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.055815	25166	4522
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.079136	33986	4195
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.064203	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.069449	27762	2836
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.121388	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.030094	8104	4102
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	0.036615	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.ln_inv	40	40.035890	12682	3523
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.049217	18761	3518
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.794012	855	340	3.0.8	synth with cache (only 1: intros pol; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.positive_derivative	40	40.036978	11763	4558
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.IZR_nz	40	0.009490	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.035586	12489	3051
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	38.096803	37094	5018	4.6.15.10.0	synth with cache (only 1: unfold EUn; only 1: intros m'; only 1: red; only 1: intros H'1; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.063667	26829	3370
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.minus_neq_O	40	24.318459	19123	2845	36.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.le_double	40	2.920161	2306	389	0.5.0.0.0.0.1.0.1.0.16	synth with cache (only 1: intros a n; only 1: destruct a as [| a]; only 1: Nat.nzsimpl; only 1: intro H; only 1: destruct H as [H| H]; only 1: induction n; only 1: auto; only 1: constructor; only 1: assumption; only 1: intuition; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ArithProp.tech8	40	0.089826	11	4	5.0	synth with cache (only 1: intros n m; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.020333	6252	2137
coq-tactician-stdlib.8.13.dev	Coq.Reals.DiscrR.IZR_eq	40	0.021258	6	2	4.0	synth with cache (only 1: intros z1 z2 H; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.071444	30130	5261
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.MaxRlist_P2	40	40.062173	25330	2779
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.026014	7489	3190
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.042736	14206	2407
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.scal_sum	40	40.091901	40567	3921
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_refl	40	1.256552	1879	219	3.21.0	synth with cache (only 1: intros; only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_le	40	0.345478	121	39	6.0.1	synth with cache (only 1: intros x y H; only 1: left; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_ge	40	0.549823	255	48	11.0.0	synth with cache (only 1: intros; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_lt	40	0.007353	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.111802	49701	5681
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.068909	28929	6998
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.064219	28100	4878
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.073652	29343	3427
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.037690	13291	3774
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.055183	19331	3666
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_P3	40	40.044098	15376	5135
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	40.045481	15785	4936
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.068369	28981	4379
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.095332	42725	6279
coq-tactician-stdlib.8.13.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.050069	20047	4388
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.058653	21542	3036
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_0	40	40.044404	15247	3849
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_pow	40	40.032167	10414	3017
coq-tactician-stdlib.8.13.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	40.257385	132889	3722
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.012802	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.increasing_decreasing	40	40.056251	23553	4269
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.fp_R0	40	40.107430	50398	3890
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreals.Qle_Rle	40	40.073148	30686	4295
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.088460	36782	4533
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.029802	10107	2869
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.031197	8932	3587
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.090235	41104	3750
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rlimit.limit_minus	40	40.035504	10585	4385
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P1	40	40.077197	31818	5002
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_increasing	40	40.033465	12350	2975
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.poly	40	40.062832	22514	4681
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.plus_sum	40	40.071656	31093	3346
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.110454	48091	4328
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.050462	5	5	0.0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.Vn_growing	40	40.056555	23777	6992
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.554606	774	210	0.3.5.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intuition; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.not_Rlt	40	0.007836	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.064402	26742	6675
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.078615	34185	5618
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.156949	4483	629
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.035560	13208	3786
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Rsepare	40	40.056714	23124	5672
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.044751	14924	5154
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.family_P1	40	2.844754	3028	416	7.2.1.5.9	synth with cache (only 1: intros x y H; only 1: red; only 1: intros; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.039504	13724	4673
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	40.042526	15091	7116
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.052286	19	6	0.0.0.3	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.100100	42987	3464
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.049190	17313	3011
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.open_set_P6	40	6.571338	8034	1298	16.0.6.7	synth with cache (only 1: intros n m p (q, Hq); only 1: intro; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.574472	167	49	0.0.0.9	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.037517	11393	3378
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_lt	40	40.054593	20955	3622
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.218319	106029	5904
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	3.269766	1370	218	0.1.0.0.0.8.8	synth with cache (only 1: intros n; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.041084	16895	1784
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.null_derivative_1	40	40.037273	13843	5050
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.base_fp	40	40.061654	21221	6650
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.089929	40528	3666
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.088526	33202	3957
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.037297	13858	3003
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.041073	14761	3604
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.021188	6439	1314
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P2	40	40.068362	27963	5232
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.030467	10362	2826
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.072319	30791	5906
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_eq	40	40.064293	26008	4127
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.058724	22129	4899
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.233347	30	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.084833	5	4	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.approx_min	40	40.040969	14104	4347
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.015729	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_asym	40	0.038775	8	5	0.0.1.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalZ.of_iff	40	40.239581	36784	4324
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.065798	26633	5177
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.051666	18103	5088
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.327185	75	32	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.103701	40684	3676
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.IVT	40	40.055658	22657	4390
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.230621	43495	5483
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	30.692113	59535	4787	0.0.12.13.8.27	synth with cache (only 1: intros p1 p2; only 1: intros H1 n H2; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.084041	22	7	0.0.0.3	synth with cache (only 1: induction m; only 1: intros H'; only 1: intuition_in; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.023187	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.043708	13194	4605
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.035049	4371	469
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.391279	196	56	4.0.0.3	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intro l'; only 1: intros N; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	2.811703	1922	295	1.6.13.0	synth with cache (only 1: red; only 1: intros l2; only 1: intro n; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.062156	24680	1875
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.105440	47517	5834
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.048998	18401	1342
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	1.824943	883	269	1.0.1.0.0.3.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros n; only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	1.856133	929	228	2.0.0.0.1.7	synth with cache (only 1: unfold Rle; only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.070113	17	7	0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.025039	6412	3355
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.compact_EMP	40	40.244834	117335	6339
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.047395	15875	3608
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.067265	28263	2885
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.040194	2	2	0.0	synth with cache (only 1: intros a n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_period	40	40.036212	11262	2936
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.067079	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.089723	38367	3571
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.087299	66	14	0.9	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.074042	30494	5618
coq-tactician-stdlib.8.13.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.054343	22201	4764
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	13.125340	7658	669	19.8.0.9	synth with cache (only 1: destruct x; only 1: intros; only 1: destruct y; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.070484	27157	3774
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.131272	54937	5090
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.032951	11482	3052
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.051910	18315	2471
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P3	40	40.046976	15125	5131
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.040146	14254	3729
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.116649	52414	5440
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.sum_cte	40	40.047308	19407	3630
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_le	40	0.776916	174	76	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.154738	314	156	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.UL_sequence	40	40.056590	22259	4131
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_antisym	40	40.207154	24509	3341
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.024773	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.052333	17258	6272
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	1.504074	1057	173	14.3	synth with cache (only 1: intros n m s1 s2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.040573	12	6	0.1.1.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace y with y'; only 1: replace x with x'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_trans	40	0.272848	44	12	4.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.062343	25846	4959
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.104930	44980	4071
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.061465	25607	4260
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.228093	116207	2986
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.011705	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	6.481447	4025	690	2.1.0.8.3.10	synth with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros def_n0; only 1: intros H0 ?; only 1: unfold Rge; only 1: intuition eauto  3).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rgt_dec	40	0.129468	9	4	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rge_dec	40	0.178857	9	4	1.1.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.073467	3	3	0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.802188	823	236	7.5	synth with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.081963	30868	4222
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.046722	8896	1045
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.149495	69686	6365
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.067894	14203	2923
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	31.399455	5499	1487	0.2.0.3.3.1.5.2	synth with cache (only 1: intros; only 1: Nat.induct ltac:(n); only 1: split; only 1: simpl in *; only 1: intro l; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.009025	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	2.699670	1041	364	4.1.2.0.2.2	synth with cache (only 1: intros n m; only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.071365	27253	6561
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.068571	27158	3390
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.029699	5	2	1.2	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.030326	9172	2908
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	3.780197	1486	654	2.4.3.2.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: edestruct Rle_lt_dec; only 1: eauto with rorders; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.681109	1982	342	1.27	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.099617	44778	4630
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.040340	11963	4461
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.153312	523	83	0.23	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.127897	33160	3871
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	7.807353	558	116	12.2	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.030006	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.035209	11727	3223
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.122822	56658	5229
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.042428	14106	2720
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.GP_infinite	40	40.062291	23761	5012
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.063359	25661	3368
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.044810	15370	2929
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	40.098767	47670	4001
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete	40	0.022144	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.048425	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.023593	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.313192	62	39	0.1.2.0	synth with cache (only 1: revert q; only 1: intro m; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P6	40	40.054444	20341	4799
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.frame_tan	40	40.040756	15860	2895
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow_mult	40	40.064809	25455	4039
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.073662	30224	5111
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	17.437616	6656	1489	0.0.0.6.0.5.0.0.2.2	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: intros; only 1: case (Rtotal_order 0 x); only 1: auto with real; only 1: intro; only 1: rewrite <- Ropp_0; only 1: lra).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_plus	40	40.090014	37997	5445
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.066427	25342	5460
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.096343	43371	4414
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	3.544680	1485	595	1.1.2.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: apply Rsqr_incrst_1; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.107371	48431	5234
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.066679	24320	2123
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.122724	55424	4851
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.019125	3	2	1.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.072369	33765	4155
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.053234	19809	4283
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.084300	37858	2465
coq-tactician-stdlib.8.13.dev	Coq.Reals.Runcountable.R_uncountable	40	40.131223	61159	4895
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.106637	49407	3838
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.398641	60628	3156
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	21.810140	66776	505	3.13.3.0.0.13.324	synth with cache (only 1: constructor; only 1: easy; only 1: red; only 1: intros; only 1: intuition; only 1: compute; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.limit1_ext	40	40.031620	10651	2711
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.031516	8527	3721
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.161337	4	3	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.032927	10688	3771
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.083060	32898	3915
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.159094	75897	4701
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.039700	11920	4812
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.100658	44179	4452
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rseries.CV_shift	40	40.081337	34203	5223
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.043407	14840	2560
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.089191	41514	2587
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.049152	19264	3111
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.068148	27174	5517
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.097541	43005	6146
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P7	40	40.046648	15912	5591
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.042077	15728	3274
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.pow1	40	40.073131	29791	4123
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.080064	11	4	0.3.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.057610	24265	5023
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.041804	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.073383	29567	4005
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.097784	43868	5451
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	4.294788	9844	514	1.1.0.4.50	synth with cache (only 1: intros H; only 1: destruct H; only 1: now auto with arith; only 1: now auto with arith; only 1: now auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.047683	18275	4584
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.055900	21205	5165
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	0.987440	279	83	8.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.079082	33779	4586
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.154631	59153	3438
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.048478	16130	4816
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.023443	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.131542	12	12	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.173740	84020	4253
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.014958	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.047230	17908	3805
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.056095	20477	4574
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.060637	20853	5866
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.036701	7231	1530
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.654676	25384	3121
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.106052	49652	2427
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.315581	20	8	0.1.3.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.045482	15680	4823
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.Dln	40	40.025097	6796	3179
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.064314	24932	5249
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.042051	13417	3910
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.182716	87138	4953
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.adherence_P4	40	2.559627	2260	425	0.2.10.2	synth with cache (only 1: do 2 intro; only 1: unfold included; only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.108631	44246	4311
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.053446	22110	2809
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.039600	13622	2270
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.062553	25735	4325
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.067257	25700	3626
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.237587	108840	10624
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P8	40	40.038922	12367	3272
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.867620	123	55	0.0.0.1.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.in_int	40	40.027792	8008	3319
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.036007	12762	2719
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	19.108860	10750	2340	0.0.1.6.0.2.0.0.4.0.1	synth with cache (only 1: intros; only 1: case H; only 1: intro; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real; only 1: intros H1; only 1: apply Rminus_diag_uniq; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.040246	13178	3959
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_mult	40	40.033730	10757	4538
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	17.276753	31304	2422	1.51.0.0	synth with cache (only 1: intros n bv; only 1: induction bv as [| h n bv]; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.714575	1276	85	24.2	synth with cache (only 1: intros m IH; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.091129	35245	5180
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.043097	16371	4191
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.055517	22982	6003
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	23.209642	14731	2025	7.8.12.6	synth with cache (only 1: simpl; only 1: intros Hn; only 1: intros l; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.076668	30453	6450
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	12.584620	4957	1493	0.3.1.0.4.1.0.0.0.2.1	synth with cache (only 1: intros l a; only 1: induction l as [| y l]; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl; only 1: tauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.065371	26107	2351
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.224458	36904	3486
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.120227	54454	3540
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.027760	3	3	0.0.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.070792	26521	3826
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.058422	21818	5514
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	14.365411	4572	2145	0.2.1.6.0.1.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: intro; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.070852	27732	4492
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.111995	51700	5079
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_appart	40	41.236678	19493	1821
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.876128	569	86	17	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.047350	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.031421	11242	2900
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.045002	14585	3094
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	7.089558	15996	581	0.6.0.2.0.0.2.87.8	synth with cache (only 1: red; only 1: generalize 1%positive; only 1: intros; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: split; only 1: now Z.nzsimpl; only 1: apply gt_wB_1).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.domain_P1	40	40.057725	22851	1624
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_imp	40	4.800404	1506	429	5.2.7	synth with cache (only 1: intros x y z; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.052264	18532	3868
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.310268	21812	3034
coq-tactician-stdlib.8.13.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	8.644616	6608	1174	14.14	synth with cache (only 1: rewrite <- Z.eqb_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.156770	73089	1611
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.008308	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.115707	51226	4867
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	40.094007	42863	4748
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P9	40	40.064839	26987	5252
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.063316	27266	3143
coq-tactician-stdlib.8.13.dev	Coq.Reals.RList.RList_P18	40	0.095195	23	11	0.0.0.0.1	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.024170	8229	2681
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.054215	21917	2606
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.049533	16718	4269
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech9	40	40.071650	26109	4660
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.059234	23124	2786
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.069806	25636	2850
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.070170	27908	4837
coq-tactician-stdlib.8.13.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.046020	19422	3911
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.035154	9966	1959
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.008463	3	1	2	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.092154	33277	4020
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.056732	20627	4042
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.061465	17337	3097
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.086288	36702	2119
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0	40	40.046880	20258	1158
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.047107	12909	4450
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.087164	39110	3124
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.133992	59565	3929
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.032954	8073	1692
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.138814	60369	4735
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.145722	70268	4856
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtopology.Heine	40	40.079605	31260	5514
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.D_in_ext	40	40.026740	8185	2882
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.049897	16606	3639
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.071798	29792	4510
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.303017	22329	2955
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.103991	44585	4647
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.119068	54503	2954
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.026611	7645	1416
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.024943	6958	2666
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.035622	5659	2246
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.073743	29732	3748
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.046520	15910	3837
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.tech13	40	40.091193	39160	4476
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.094565	41305	4951
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.015026	4	2	0.2	synth with cache (only 1: intros n bv; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.073920	26850	4653
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.076071	31746	5130
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.100736	42441	3811
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.430575	3712	349
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.031842	8061	1454
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.053503	21176	2132
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.071012	26338	4832
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.070239	13	4	0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.026006	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.037270	7	2	0.5	synth with cache (only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.115907	28345	3391
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.080097	31934	4788
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.034828	2	2	0.0	synth with cache (only 1: Bool.destr_bool; only 1: field).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.042434	12066	4438
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.722984	1265	228	16.3	synth with cache (only 1: intros x y; only 1: apply Z.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.061239	21357	2982
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.042645	10	4	2.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.072015	30903	2171
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.114343	49215	2095
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.124729	55321	4905
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.031808	7665	2063
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.026660	3738	608
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	5.634348	5537	1134	18.0.3	synth with cache (only 1: intros a ?; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	10.443443	3250	1249	0.0.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.061432	14	6	3.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.205889	51	14	0.3.0.2.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.036161	12706	2992
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.452330	179	37	8.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.047524	17939	3067
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.054687	20526	2646
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.075295	31054	4210
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.059850	25218	4309
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.069563	43	8	6.2	synth with cache (only 1: intros; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.070516	29195	3313
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.090122	38367	4429
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.le_0_iff	40	0.025685	11	4	0.0.1	synth with cache (only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.064500	25502	4723
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.043910	16910	2649
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.035353	10463	4781
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.014180	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.094852	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.026930	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	8.539956	3951	948	6.0.10.0	synth with cache (only 1: unfold permutation, meq; only 1: intuition; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.115711	4	4	0.0.0.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.993702	1416	57	51	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.061244	26291	2703
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.052217	16960	3232
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.667025	66	47	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.007527	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.055781	15	5	1.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.054300	8	5	0.3.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.023994	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.SeqProp.CV_minus	40	40.034816	10277	4368
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	1.754028	368	220	3.3.0.1	synth with cache (only 1: generalize (F.mem_iff s x), (F.elements_iff s x), (existsb_exists (F.eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.104209	11	3	1.5	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.386118	19	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.065533	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.078808	31330	4173
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.099204	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.214706	4	2	0.2	synth with cache (only 1: intros n; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.096852	4	1	3	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0.557919	39	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.049809	6	2	0.4	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.063916	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.069846	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.124703	56844	6257
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.148095	67906	5519
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.418947	16	4	0.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.041150	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.061572	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.034145	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.063579	12733	2366
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.468860	22	7	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.077624	35692	3588
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.055601	19536	4134
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.049484	7753	1352
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.075651	31735	4860
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	40.255652	121118	1110
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.061238	24184	2769
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.038805	9	3	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.063251	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.024203	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.023620	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.319193	378	21	27	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.070447	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.018625	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.088344	38903	4569
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.072163	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.005532	3	1	2	synth with cache (only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.093910	5	4	0.0.1.0	synth with cache (only 1: split; only 1: intros ->; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.072385	3	2	1.0	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.962110	67	58	1.0.4	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.130847	57173	2296
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.338153	15	6	0.3.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.124283	59106	2767
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.406033	14	8	0.0.1.2	synth with cache (only 1: intuition; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.078494	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.080647	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.093247	39049	4314
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.072776	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.110828	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.523329	33	13	0.7	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.526213	26	11	1.1.0.2	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.025482	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.025183	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.068091	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.080423	34023	3843
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.660215	1071	52	1.43	synth with cache (only 1: intro H1; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.059270	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	19.091265	11631	1085	1.7.25.2.1	synth with cache (unshelve (only 1: intros; only 1: apply subset_1; only 1: intros ? H1; only 1: eauto with set relations); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.460759	21	13	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.267049	4	3	0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.021573	2336	523
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.846265	366	74	1.19	synth with cache (only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.069735	25217	4247
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qabs.Qabs_Qinv	40	0.435061	137	64	0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros [[| n| n] d]; only 1: reflexivity; only 1: simpl; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rpower.arcsinh_0	40	40.059493	21729	3015
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.134447	22350	2459
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.033369	5697	1593
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.196360	36348	1768
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.035053	13368	3065
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.086395	34865	5260
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.070807	25518	3508
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.027671	9919	2393
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.043535	14980	2786
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.061870	22867	5097
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.165812	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.032209	8844	3768
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.110763	18	4	0.3	synth with cache (only 1: intros P; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.490352	29	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.062028	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.068455	27018	5185
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.089905	35369	5446
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.194505	94555	5053
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.083274	33219	6229
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	0.992698	2543	71	5.64	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.371473	52	33	3.3.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.012868	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.074937	32388	3693
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.207055	22201	2724
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	8.046051	8920	766	2.2.10.23	synth with cache (only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.105406	46015	4329
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.137185	61200	5738
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.039536	6	3	2.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	6.427915	5937	714	6.21	synth with cache (only 1: intros a b c0; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.035030	12426	3037
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.076129	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.068528	7	6	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.960089	769	116	2.15	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.053248	8	4	0.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.125724	54587	3930
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.075445	31030	3145
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.130990	62254	4675
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.051055	13970	3677
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.059603	21440	5118
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.030584	8784	2353
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.022813	4860	3404
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	9.331666	2828	530	3.7.0.8.3	synth with cache (only 1: intuition; only 1: destruct H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.039362	13913	1301
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.083209	30812	4721
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	2.120610	517	254	0.1.0.1.3.0	synth with cache (only 1: unfold Rle; only 1: destruct 1; only 1: left; only 1: auto with real; only 1: elim H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.009194	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qsor	40	40.064366	26055	3616
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_le	40	40.148126	25391	3395
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.073142	27768	4788
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.097264	135	20	4.6	synth with cache (only 1: intros a; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.066302	23258	2618
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.473133	178	56	1.11	synth with cache (only 1: intros IH m H1 H2; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.495588	36	8	2	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.081778	15	3	5	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.062776	21258	6349
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.144566	63454	5399
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	0.539039	663	53	33	synth with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?(EnvRing.Pmul_ok Rsth Reqe ARth CRmorph)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.074779	31070	2603
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.034669	11398	3002
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.028681	9667	2607
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	7.221215	9380	1072	7.20.9	synth with cache (only 1: intros n m p Hp Hn Hm H; only 1: apply H; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.085130	34380	5646
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qred_iff	40	40.068796	29143	4685
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.064371	2	2	0.0	synth with cache (only 1: destr_bool; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcge_alt	40	0.021243	5	3	0.2.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.034639	11773	3878
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.103021	45272	5483
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.062884	22521	3132
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.025679	11	3	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.096489	41438	7488
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	40.028737	4717	2761
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.055590	19260	3839
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.597416	60	44	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.423104	79	38	0.6	synth with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.103136	43899	4311
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.040761	9979	2877
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.107971	29	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.058042	23277	2117
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.104812	46022	4121
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	23.857094	18065	1416	0.2.1.7.1.8.0.0.0.3.5.12	synth with cache (only 1: intros m p; only 1: destruct p; only 1: intuition subst; auto with qarith; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl in *; only 1: reflexivity; only 1: split; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.QNpower	40	0.026524	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.099274	41022	3840
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.153377	66277	4871
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.112283	17072	3659
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.189055	88315	5358
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.069482	25590	6548
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.010764	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.083565	3	2	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.127816	4	2	1.1	synth with cache (only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.010192	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.014158	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.011140	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.049188	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.372901	187710	1658
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.034181	9897	2034
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	4.195252	864	428	1.1.1.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.047365	2615	924
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qle_ceiling	40	40.060422	26084	3913
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.110990	51603	4017
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.063151	22026	4324
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.338397	205	35	13	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.052082	51	6	9	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	26.408921	3801	2249	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.151691	50	5	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.006998	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.021339	4	2	0.2	synth with cache (only 1: intros Ha Hb; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.065560	23952	3292
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.084886	34067	2065
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.113816	46028	4404
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.023855	6986	2960
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.044251	16649	2732
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.050512	15955	5006
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.146505	68240	5868
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.089447	34306	5280
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.111275	49296	4802
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.006758	2	1	1	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.033142	9009	3544
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.066104	27714	3494
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.122010	52704	4475
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.072068	28630	3722
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.069325	27779	2388
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.043478	6249	1749
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.097315	41034	4056
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.055083	18779	3764
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.130833	55922	4313
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	10.624476	13649	1696	0.0.28.2	synth with cache (only 1: intros; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.173421	12096	1706
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.036942	14284	1993
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.174720	78904	4175
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.040006	12568	3163
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.343671	173146	1317
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.062900	22528	4810
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.144238	23	14	0.0.2.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.357590	122	43	0.0.0.0.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.040539	12547	3645
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.039300	16	4	0.4	synth with cache (only 1: intros e1 e2 EQ; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	3.520460	1586	445	0.0.0.9.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.017523	3252	1039
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.128662	40582	4755
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.056729	21137	6168
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.399996	15372	1880
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.191691	85620	9488
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.110892	46754	6063
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.091152	41119	3852
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.114646	48318	4145
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.079634	31919	6927
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.018703	5024	2259
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.046973	16177	5679
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.041757	14905	2938
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.161814	78629	5772
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.093692	40298	1569
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.021168	4357	2969
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	1.980793	705	189	0.0.7.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: rewrite Pos.mul_comm; only 1: f_equal; only 1: simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.078421	31288	4377
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.228096	109146	4098
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.076082	32071	3824
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.134543	162	28	2.2.5	synth with cache (only 1: intro Hxz; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	5.031821	3276	482	0.2.3.6.12	synth with cache (only 1: intros n; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.060921	22847	3105
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	0.045687	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.083534	34084	3527
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.195513	30749	2902
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.139384	64091	4252
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.190002	86350	2745
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	3.029941	2448	487	2.2.0.0.12.1	synth with cache (only 1: intros HP HIS; only 1: intro x; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.069827	25454	5128
coq-tactician-stdlib.8.13.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.123313	55699	4601
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.072153	29553	3149
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.007845	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.006784	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.010195	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.049071	6740	1063
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.174297	82479	4480
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.087740	13557	2600
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.127175	58526	4732
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.090481	36518	4869
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.065385	24050	3192
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.115774	48066	4874
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.371212	8382	2071
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.158786	72990	3968
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.088190	27657	4291
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.015782	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.089472	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008903	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.011254	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.012310	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.006177	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.007434	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.136746	22605	2942
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.080237	33539	5648
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.148086	20	4	1.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.015576	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.016649	7	3	0.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.106063	45072	5118
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.033378	10446	2636
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.047207	16642	3920
coq-tactician-stdlib.8.13.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.017111	4389	1982
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	40.134380	56437	11685
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.028444	6879	3179
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.044216	17258	2475
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.102750	30332	2407
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	38.574970	17149	2601	30.0.1	synth with cache (only 1: intros n m p; only 1: qc; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.023715	6737	984
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	40.125526	54293	5768
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.317039	446	117	0.0.1.0.5.1	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.055383	20804	3674
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.057861	25181	3964
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.031499	8073	1513
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.124644	58027	3272
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.105342	45084	4419
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.144518	66421	4739
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.177334	84590	6652
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.379893	1011	204	10.7	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	5.711215	9695	617	4.2.2.41	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.090449	35140	3301
coq-tactician-stdlib.8.13.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.042702	10208	6237
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.233906	108224	4917
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.027251	7	4	0.1.1.1	synth with cache (only 1: intros E; only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.010807	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.015641	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex2	40	0.005730	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex6	40	0.018090	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.275296	13563	1712
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qfield.Examples.ex7	40	0.701335	433	57	0.13.0.3	synth with cache (only 1: red; only 1: simpl; only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.076178	31823	3283
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.262218	954	190	0.0.6.0.7	synth with cache (only 1: simpl_relation; only 1: apply fold_rec; only 1: intros HF; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.040842	13700	3273
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.289124	78	29	0.2.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_correct	40	40.082602	35394	4976
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.070674	23685	4294
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.053520	24	5	7.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.053507	21417	4224
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.005571	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.080515	32834	2669
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.018604	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.278414	14	13	0.0.0.0.2.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.041240	17120	1351
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.096540	40295	5294
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	40.061133	26082	5680
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.080472	31353	6292
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.888455	371	123	14	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.025850	9988	2737
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.027776	6605	3303
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.281792	141306	4236
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.047954	11551	4389
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.092714	34759	4714
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	2.466683	1615	233	1.0.17	synth with cache (only 1: intros l1 l2; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.149871	69379	5207
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.071449	27325	3639
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.053881	20422	3342
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.071682	32387	4192
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.054685	18341	3466
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.isZ0_0	40	5.394449	2837	891	0.0.0.0.0.0.6.5	synth with cache (only 1: intros a; only 1: destruct a; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.169843	80	20	1.6.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.333168	19	7	0.0.0.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.111929	50023	4764
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.308074	156346	1468
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.159737	75220	4468
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.682616	113	46	0.0.0.0.0.4	synth with cache (only 1: intros v; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.146866	66222	6169
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.160801	75622	3113
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	8.814496	5038	766	2.10.5.8	synth with cache (only 1: intros Eq1; only 1: unfold Rsqr; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.118554	50484	3657
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.021244	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.157932	70958	3619
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.073993	24715	3201
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.097933	40506	3841
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.074218	29454	6075
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.022259	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.027974	5	4	0.0.0.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.058406	22622	3874
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.037564	11589	2773
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.113709	53995	4204
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	40.143612	65369	4856
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.029724	7963	5066
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.117611	51301	3242
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.239545	153	40	0.0.1.4.0.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_one	40	40.069565	26161	6607
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.026944	15	5	2.1.2	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.092074	37293	4916
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	40.052977	14781	6171
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.109849	44663	8279
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.124400	42	27	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ratan.PI_ineq	40	40.033009	12404	2856
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.030552	7730	4253
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.092953	34064	4565
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.093927	38796	6018
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.041542	16702	4932
coq-tactician-stdlib.8.13.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.072056	29145	3309
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.083358	33060	4808
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	41.000137	22933	3594
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.037761	6086	1156
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.073702	26741	5938
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.066126	26137	3234
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.363360	178997	4546
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	28.696001	32594	3603	8.0.2.4.2.0.0.0.17	synth with cache (only 1: intros a b; only 1: intros; only 1: apply fold_rec_bis; only 1: intros; only 1: auto; only 1: intuition; only 1: intros; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.155120	72235	5448
coq-tactician-stdlib.8.13.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.068575	10785	1706
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.082616	32504	5171
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.080710	31748	4377
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.233262	108523	5666
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	6.507081	6169	1063	4.0.0.0.1.12	synth with cache (only 1: intros a b c Hc; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.023616	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.144964	64800	3331
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.057150	18934	3526
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.070163	21562	1448
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.049144	16744	5089
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.067185	23765	8793
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	2.323194	351	132	4.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.054072	15937	2292
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.122743	54791	3708
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.714451	3864	622	22.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.145553	66207	5608
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.074060	29125	7781
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.071580	30332	4673
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_trans	40	40.120028	50774	5498
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.051308	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.534277	1726	275	1.9.6.2.4.2.1	synth with cache (only 1: split; only 1: firstorder; only 1: auto; only 1: red; only 1: intros s; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	40.050846	13253	5933
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.161967	74252	6529
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.024634	5924	3663
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.052462	20459	2101
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.051641	19717	4340
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.048292	14545	4912
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.042940	13607	4827
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.157957	71935	5635
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.092938	33974	6075
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_trans	40	0.101146	15	7	2.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.249982	105	25	7.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.030429	4596	1178
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.056438	17194	779
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.013529	1	1	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.168274	75986	6729
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.074624	26438	2709
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.110561	45115	5468
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	40.075577	32419	2436
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.057591	20274	4929
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.192039	91806	2210
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.067270	14	6	0.0.2	synth with cache (only 1: intros E; only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.030924	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.055234	23830	1738
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.111880	45916	3667
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.102079	43729	3149
coq-tactician-stdlib.8.13.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.323014	162146	7400
coq-tactician-stdlib.8.13.dev	Coq.Reals.Ranalysis1.pr_nu	40	8.625165	5699	1115	0.0.1.0.3.3.3.0.1.2	synth with cache (only 1: intros r1 r2; only 1: intros l1 H; only 1: elim H; only 1: simpl; only 1: unfold derivable_pt_abs; only 1: elim H; only 1: intros; only 1: destruct H as [l H]; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.207764	99736	3001
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.161083	70541	5845
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.068051	25582	7003
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.035390	8615	1615
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.093796	40107	3923
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.073018	29521	5093
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.062551	23781	3828
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	40.111844	46344	4200
coq-tactician-stdlib.8.13.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.074269	29853	4903
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_lb	40	40.111776	48236	7384
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.108634	44373	5071
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.069042	22673	5326
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.032143	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.128777	58041	5643
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.025888	6	4	1.0.1.0	synth with cache (only 1: unfold singleton; only 1: intros n m H; only 1: rewrite add_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.053199	20464	3106
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.220433	108431	1680
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.015492	3	2	0.1	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.080493	33794	5358
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.076106	27948	5689
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.072018	28972	2787
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.113699	41675	4582
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.204854	36651	4042
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.075948	12896	1242
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.076419	32448	2326
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.127146	56498	5751
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.073939	26272	7127
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.108178	47372	3849
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.097688	38082	329
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.108491	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.219733	105580	6009
coq-tactician-stdlib.8.13.dev	Coq.Numbers.DecimalString.NilZero.sis	40	32.224576	15502	4941	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.349391	132	46	0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: intros; only 1: apply <- subset_spec; only 1: auto; only 1: intros; only 1: apply -> subset_spec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.079372	34420	2950
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	29.984663	21156	2793	0.3.0.1.46.0	synth with cache (only 1: intros; only 1: pattern s; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.198577	93762	2764
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.080851	31511	3238
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	25.656393	14937	2601	0.1.15.11	synth with cache (only 1: intro n; only 1: intros H; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.814399	544	89	13.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.136879	105	14	13	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_correct	40	40.066241	26926	3960
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.067110	28600	3493
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.096329	40490	5496
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.016164	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.048925	15146	6361
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_alt	40	40.084527	35183	4878
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Nplength_ub	40	40.082310	31920	7549
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.093633	40525	2559
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.048392	21209	2795
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.083781	35110	5405
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.675318	289	97	1.0.0.2.1.1	synth with cache (only 1: destruct s; only 1: intros s x y; only 1: trivial; only 1: intros; only 1: apply <- union_spec; only 1: intuition congruence).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.290060	145253	8433
coq-tactician-stdlib.8.13.dev	Coq.Logic.Epsilon.iota_statement	40	40.212022	103107	6958
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.037032	13534	3198
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.053267	22976	3172
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.083562	35429	5203
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalChoice.choice	40	40.210190	102726	7519
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.058747	18737	4773
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.064384	24021	5503
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.076027	29188	5583
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.063995	24669	4675
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.018135	2844	890
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.051277	16558	2333
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.076014	31822	4516
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.070643	23538	6089
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.101741	42058	5028
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.068975	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.265469	73	36	1.1.0.0.3	synth with cache (only 1: intros m; only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.020701	5332	607
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.035494	9466	4691
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.132038	60451	5079
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.015702	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.061038	22397	3640
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.039907	12431	3035
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.067543	24811	3734
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.165724	75087	3104
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.156732	90	19	8.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.064324	24100	2800
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.153251	73789	2650
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.032928	8	3	0.5.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: now try Z.order').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.921853	584	150	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	40.092984	39516	4790
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.061812	16123	3899
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.071300	9	7	2.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.092779	35688	5325
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.069433	29701	4017
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	12.271935	5836	1094	1.4.1.10.6	synth with cache (only 1: intros m Hm x y e; only 1: simpl; only 1: unfold IfEq; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.105548	46980	4997
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	40.046415	15496	4739
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.106887	47052	1804
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.008737	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.081680	34957	5344
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.034257	19	6	2.0.1	synth with cache (only 1: intros a b q **; only 1: rewrite inter_spec; only 1: PeanoNat.Nat.auto').
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.175555	90882	2316
coq-tactician-stdlib.8.13.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.037134	11525	3215
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.061997	24962	2350
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.127515	55795	3215
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.056774	13	8	6.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.044831	16606	3619
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.117939	55232	6011
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.095711	36024	5325
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.098183	29399	3315
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.031387	8750	961
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.367321	17276	3096
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.132133	6	4	0.2.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	40.081524	29798	6197
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.024897	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.084538	37560	3299
coq-tactician-stdlib.8.13.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.100337	38558	3692
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.018291	5550	673
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.005970	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.301545	38	4	10	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.004329	1	1	0	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.137752	60195	5295
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.240179	110502	2215
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.107667	42487	3921
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	1.514274	228	175	0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.485771	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.081972	33420	4847
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.068358	21361	4438
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	43.396581	12146	1820
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.136768	58714	4308
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qreduction.Qred_lt	40	40.121040	53692	4069
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.030525	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.026486	9	5	2.0.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.091109	37712	3968
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.024970	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.103455	45528	4904
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.060244	19653	5058
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_trans	40	40.123627	49824	6885
coq-tactician-stdlib.8.13.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.101532	43590	4651
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.073606	28499	3793
coq-tactician-stdlib.8.13.dev	Coq.micromega.Ztac.elim_concl_eq	40	1.133264	862	191	3.4.7	synth with cache (only 1: intro H; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.080319	33777	3281
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.119093	55618	4427
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.091298	40246	6001
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	4.339445	3063	495	0.1.0.12.3.1.6	synth with cache (only 1: induction m; only 1: intros; only 1: inversion H; only 1: inversion_clear 1; only 1: auto; only 1: intuition; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.075708	23321	2624
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.111081	45101	5611
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.006560	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.068334	26728	4230
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.202831	88135	9991
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.074568	28730	4280
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_refl	40	40.082319	34176	3649
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	2.482624	4497	429	33.0	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.065193	25114	3900
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qcpower_0	40	0.322524	164	42	0.1.0.6	synth with cache (only 1: induction n as [| n IHn]; only 1: intros; only 1: tauto; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.068033	23907	6649
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.057701	8309	2653
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.017658	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.073727	29719	4822
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.115691	50703	7215
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.110738	44758	4301
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.085164	34098	5333
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.032246	7237	5349
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.009921	3605	352
coq-tactician-stdlib.8.13.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.076989	33677	2560
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.054986	19442	4300
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.065770	24946	3378
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.106931	42058	681
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.257657	127299	4748
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.091602	37624	4362
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.149893	19	6	0.0.0.2	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.092143	42717	3363
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.033328	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.060992	22139	7259
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.138884	62257	4245
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_minus	40	0.850807	249	80	0.1.4.2	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.088726	38183	4617
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zabs.Zabs_dec	40	0.836309	512	93	2.3.2.2.1	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.072091	29357	3021
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	2.861671	2389	316	1.1.1.0.1.0.0.0.8.1	synth with cache (only 1: rewrite !Nleb_Nle; only 1: destruct a, b; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: simpl; only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.082329	32652	2838
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.054767	19951	2556
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.123021	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.137997	63499	1783
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.077768	30343	2551
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.088962	37269	3500
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	5.444442	1593	383	1.4.2.3.1.0	synth with cache (only 1: repeat red; only 1: intro l; only 1: simpl; only 1: intros n H; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.055183	17451	3719
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.029077	12	4	2	synth with cache (only 1: now intro n; induction n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.020165	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.962175	1270	262	5.3.2.3.1	synth with cache (only 1: intros; only 1: destruct n; only 1: discriminate H; only 1: vm_compute in H; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.079583	32272	4778
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.253466	122722	9088
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	4.386346	13304	591	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.023910	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.080739	7020	1195
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_sym	40	40.106737	46664	4311
coq-tactician-stdlib.8.13.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.148022	65377	4517
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.068780	24211	4036
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.080885	33348	2577
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.237163	8401	1211
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nless_def_2	40	5.722291	2933	1173	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct a' as [| p0]; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.126607	58822	4819
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.123505	53694	6709
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.075852	27607	3951
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	40.162124	82188	541
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.013792	7	2	5.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.008863	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.035684	9691	3671
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.028898	6067	4510
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	24.785618	8504	1646	0.6.0.0.0.0.5.0.0.1.0.0.1.13	synth with cache (only 1: nzinduct n; only 1: Nat.nzsimpl; only 1: destruct m; only 1: auto; only 1: simpl; only 1: f_equal; only 1: intro; only 1: split; only 1: intro l; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003510	694	275
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.051601	16749	3704
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.566794	217	62	0.8.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.043068	17829	769
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.098075	44120	3729
coq-tactician-stdlib.8.13.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.428516	213721	2917
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.143463	66547	5031
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.085860	30926	3686
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.803649	182	41	0.10	synth with cache (only 1: intros L R n; only 1: now apply Zis_gcd_sym).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.063762	20892	6207
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.091593	37538	4858
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.052336	18545	2855
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	1.493539	1259	89	11.26	synth with cache (only 1: intros f g H l; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.134067	59172	5217
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.082609	29881	4259
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	1.743491	2148	181	23.20	synth with cache (only 1: intros X; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.092546	37198	1831
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.060377	26218	3213
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.099598	40001	4316
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.not_prime_1	40	12.869863	16661	1555	63.22	synth with cache (only 1: Z.nzsimpl'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.153573	69673	4752
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.eqb_eq	40	40.067014	23982	7696
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.043658	15128	2196
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.067370	23873	4412
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.012038	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.124437	54557	2021
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.059805	17198	2074
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	0.881575	307	69	0.0.1.3.0.11	synth with cache (only 1: intros; only 1: destruct x; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: simpl; only 1: rewrite (same_gen Rsth Reqe ARth); only 1: let rec rrefl := gen_reflexivity Rsth in rrefl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.037258	12288	1364
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N0_less_2	40	40.110919	49671	5112
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.153389	67301	5107
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.find_left_path	40	40.073381	31075	4201
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.082717	34910	4244
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.185303	67	15	8	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.035870	6	4	2.0.0.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.079397	31486	8926
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.060827	25538	2927
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.046166	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.112055	50160	4757
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_spec	40	40.162853	71346	1248
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.713114	1748	229	2.2.20	synth with cache (only 1: intros a Ha; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.029064	5480	4252
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.170425	70730	4589
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.004998	1732	188
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.143206	62382	3135
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.061654	23371	2153
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.144415	64928	6111
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.317103	159430	4532
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.092746	37661	4093
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_0_1	40	0.045255	6	4	0.1.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rlt_plus_1	40	0.813065	280	103	3.5	synth with cache (only 1: intro q; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.075494	29396	4765
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.062361	21494	6412
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.792370	1001	151	6.1.2.15	synth with cache (only 1: intros n'; only 1: intros; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0.128991	50	15	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.065969	21491	3025
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.132966	23596	2749
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.097953	36155	2190
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.S_INR	40	6.014501	3957	612	0.10.1.16.0	synth with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	5.962149	6643	850	0.23.3	synth with cache (only 1: intros; only 1: red; only 1: eauto with set).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.041821	12776	1381
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	0.816699	326	36	15.0	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	11.045378	16921	1511	0.0.0.37.0.0.2.0.0.0.0.2.0.0.1.2.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.008106	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.053223	21431	3163
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.506350	21	8	0.0.2.0	synth with cache (only 1: intro n; only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.043996	17443	3329
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.065384	22820	4140
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	37.927433	9327	3775	0.11.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	40.045002	17795	2261
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct1	40	40.113486	41944	7523
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.957308	13329	271	0.0.140	synth with cache (only 1: red; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.093170	10	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.179287	84416	7965
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.132345	60623	2783
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.034292	7424	5657
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.111335	45212	7509
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.144953	63983	4742
coq-tactician-stdlib.8.13.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.125892	55018	2955
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.012667	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	4.759334	11170	859	38.4	synth with cache (only 1: intros lm; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008624	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.083470	32283	4836
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_refl	40	36.073105	58787	3034	4.38.7.14.35	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: easy; only 1: destruct x; only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_eq	40	0.177438	24	13	0.0.0.3	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: do 8 (case Bool.eqb_spec; [ intros -> | constructor; now intros [=] ]); only 1: now constructor).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_neq	40	0.013576	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.eqb_compat	40	0.028594	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	4.951389	3571	730	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.210175	100398	4381
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.081162	35203	6733
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.105075	44048	3875
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	36.380076	725	148	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.031236	6805	5081
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.138208	60329	4963
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.107487	37729	4945
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.090712	35525	4753
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.141029	63704	4503
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	26.489289	26700	1675	106.3	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	24.501862	36397	3445	8.1.0.13.20	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite diff_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.090127	40437	3526
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_2	40	40.106640	43062	5651
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.158293	74063	5383
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.plus_INR	40	40.037438	14468	2724
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.067153	24289	3750
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.068919	28701	1715
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.058349	18129	5938
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.041788	14266	3421
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.131630	24546	2183
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.index_correct4	40	40.122701	52675	7005
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.061195	24008	2065
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.077012	31054	3580
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.025398	6777	3902
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.063836	23338	4185
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.071813	28585	5229
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left	40	40.097769	39944	3625
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.010448	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.095576	41255	2758
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.068748	29284	3643
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.356862	180171	7469
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.142734	68136	4111
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	3.153271	640	358	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.090341	39057	5290
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.056369	5114	495
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.121475	53663	5255
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.008814	3183	146
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_pos	40	0.128310	41	7	10	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zone_min_pos	40	0.261147	152	29	5.10	synth with cache (only 1: intro Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.652583	328	65	0.0.13	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.025837	5452	4002
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.072066	30596	1434
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.150396	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.216295	99205	3741
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.715368	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.078377	29059	2847
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.096983	113	20	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.120548	50707	3898
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.170153	76693	3656
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.790879	203	34	4.0.0.12	synth with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.031827	9499	3633
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.060913	24356	2062
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	19.345601	8696	2279	1.5.0.0.0.1.1.1.6.0.0	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.084353	17	9	1.1.0.1	synth with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	1.116768	265	111	0.0.0.4.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.062763	26269	4004
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.076494	27961	6330
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	1.970646	671	55	13.12	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.251347	44075	5131
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.minus_INR	40	40.065262	26093	3319
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.097532	41304	3268
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.090998	40130	3200
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.210163	24532	2002
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.090092	32846	3648
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	40.127125	54411	2258
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.042778	13536	3463
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.084301	8493	931
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.104877	43686	4432
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.122535	50587	6494
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	40.080647	32876	4128
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.010121	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.092900	37235	5116
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.163872	70922	5469
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.135000	63622	3109
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.047874	18294	5613
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.126706	56881	6047
coq-tactician-stdlib.8.13.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.022170	4898	1992
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.086848	38143	8036
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.022703	6	3	0.3.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.043568	11287	6181
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.208661	92041	9465
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	0.073435	21	6	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.074944	28665	5315
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003471	811	165
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.221241	104787	3980
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.089515	26686	3674
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.098466	40727	5686
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.009311	4	1	3	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	0.026316	2	2	0.0	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.055856	20093	4114
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.071125	27911	1432
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.775754	2289	446	0.0.1.0.13.4	synth with cache (only 1: intros; only 1: intros H1; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.058276	21486	3516
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.087282	37510	6057
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.056945	19122	6019
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.051117	15495	767
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.096972	40186	6931
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_INR	40	40.036323	12009	2618
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.061110	22878	3272
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.075317	32377	3839
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.081914	33354	3696
coq-tactician-stdlib.8.13.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.632429	38397	3793
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.388704	194045	3010
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.483284	23095	2805
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.093347	36253	6975
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.082825	33792	3592
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.079904	36210	2581
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zge_left	40	0.460586	225	29	0.14	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.030447	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.049260	18380	3006
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.063901	21443	4921
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.087223	39114	4113
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	40.138789	59701	3491
coq-tactician-stdlib.8.13.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	2.849755	1330	355	0.0.0.0.0.0.0.0.0.0.9.0.0	synth with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: now Nat.nzsimpl; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.039784	4	4	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.041352	13184	4012
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.084340	38142	4157
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.129713	30	19	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.058630	22727	3469
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.112827	49590	3798
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.090196	36509	5348
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.084080	32623	6480
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003170	997	105
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.014097	9	2	2	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.034521	12	4	3.2	synth with cache (only 1: unfold Z.le, Z.max; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.394165	156	45	4.0.7	synth with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.051663	16630	4146
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	9.536980	10535	834	39.0.5	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.075148	28803	4842
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.095774	37644	3786
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.byte_dec_bl	40	40.138910	31459	1297
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.064681	20692	1055
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.076080	280	121	0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.012514	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N_nat_Z	40	0.670160	428	96	0.1.0.0.0.0.0.1.2.9	synth with cache (only 1: destruct n; only 1: split; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.032061	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.positive_N_nat	40	0.013712	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z_nat_N	40	0.710644	171	48	0.4.0.0.8	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: auto; only 1: Nat2N.nat2N; only 1: Nat2N.nat2N).
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.082149	32346	4117
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj	40	0.728886	297	98	1.0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.006938	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.087508	35922	4463
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	0.230956	11	3	1.5	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	16.775809	13577	2609	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.5.0.9.1.0	synth with cache (only 1: induction a as [| l IHl o r IHr]; only 1: unfold compare, equal; only 1: intros EQ; only 1: destruct b as [| l' [| ] r']; only 1: simpl; only 1: trivial; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: destruct o; only 1: intro; only 1: discriminate; only 1: simpl is_empty; only 1: rewrite <- andb_lazy_alt, andb_true_iff; only 1: intros [Hl Hr]; only 1: destruct b as [| l' [| ] r']; only 1: simpl compare; only 1: rewrite Hl, Hr; only 1: trivial; only 1: simpl compare; only 1: trivial; only 1: simpl compare; only 1: rewrite (IHl Hl), (IHr Hr); only 1: simpl; only 1: case (is_empty l'); only 1: case (is_empty r'); only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.077560	33319	1805
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.054713	18662	5261
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.lt_0_INR	40	40.079467	30494	4885
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.123599	57514	2111
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.020652	6231	1057
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	15.481258	21227	2693	0.0.0.0.0.0.0.0.0.0.0.0.0.0.44	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.087198	37636	3876
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.031751	11317	1317
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.085240	36002	3405
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	4.988585	6451	758	0.0.3.0.3.0.13.10	synth with cache (only 1: intros q; only 1: induction q as [q IHq| q IHq| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.280204	135014	1693
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	4.877066	436	146	5.0.2.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: Z.nzsimpl; only 1: intro n; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.049642	6354	803
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.055549	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.119674	56927	2452
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.035211	10209	2460
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.091515	37726	5162
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.105333	40551	1118
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.103047	45766	5455
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.036442	9740	4517
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.105524	43918	4459
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.not_Zne	40	40.105267	45029	3804
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001319	235	76
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.066380	25648	5081
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.202242	34527	4100
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.005825	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.071015	29695	3417
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.069297	26368	3789
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.021101	4607	2086
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_jump	40	0.700865	450	76	0.11.0.0.3.0	synth with cache (only 1: unfold tail; only 1: induction p as [p IHp| p IHp| ]; only 1: unfold hd, nth, tail, jump; only 1: trivial; only 1: trivial; only 1: now BinNat.N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.micromega.Env.S.nth_pred_double	40	0.018963	3	3	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.062676	24656	2556
coq-tactician-stdlib.8.13.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.066433	25602	3650
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.066806	26626	4035
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	40.200610	98016	2735
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.054583	18507	523
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.074835	30762	4478
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.143218	63970	3046
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.029639	8424	3349
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.062655	22116	6256
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	40.154684	73920	5696
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_INR	40	5.621340	2584	738	6.2.0.0.6	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: auto with real; only 1: intros n0 H1 H2; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_not_0	40	0.090475	12	9	2.1.0.0.0	synth with cache (only 1: intro; only 1: Nat.cases ltac:(n); only 1: intros; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.094307	39349	4908
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013683	3299	923
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.148566	67687	5674
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.135560	62435	4537
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.163459	79128	1247
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.115697	54267	2441
coq-tactician-stdlib.8.13.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.350720	176888	2618
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.063822	26643	3116
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.117353	52539	4479
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.031677	12180	1137
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	9.982824	19817	1525	18.0.0.0.0.3.1.18.3.0.0.0.0.0.18.16.32	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.118524	53819	2020
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	19.699825	32305	644	144	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	4.353270	2556	410	7.6.0.7	synth with cache (only 1: destruct m; only 1: intros H; only 1: eauto; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.069884	25563	3403
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.052351	12711	5330
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.029595	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.106407	44944	4844
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zge_trans	40	0.150558	33	12	0.3.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.202387	20826	5620
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.048286	14896	4032
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.277578	65	18	1.0.0.5	synth with cache (only 1: repeat red; only 1: induction l; only 1: Bool.destr_bool; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.008627	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.020208	9	3	5.0	synth with cache (only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.052588	20119	3041
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.033379	10652	2791
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.083722	33106	2918
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.041881	15925	2125
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.095224	27097	5907
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.007666	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.005896	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000814	78	30
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.102019	43285	5186
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.075788	33447	3897
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.066968	24689	6289
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.085119	32430	3521
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.028116	9581	1613
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.626391	61990	2535
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.007206	5	1	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006129	1	1	0	synth with cache (only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007171	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.010239	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.031859	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.009232	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N	40	40.078128	22942	1596
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.136144	125	12	0.15	synth with cache (only 1: intro n'; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.024989	5	4	0.1.0.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	1.385391	2108	205	14.18	synth with cache (only 1: intros a; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_eq	40	40.077477	30681	5100
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.021766	4904	983
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.071353	27137	3116
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.061877	23405	4936
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_dec	40	34.801960	69982	4096	1.3.0.4.0.2.13.3.0.4.0.0.0.10.117	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: left; only 1: simpl; only 1: auto; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto with relations; only 1: destruct p; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.089811	38028	3009
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	23.139136	44	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.126156	49513	6703
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.not_1_INR	40	6.784450	1008	376	0.9.3.0	synth with cache (only 1: intros; only 1: intro abs; only 1: elim H; only 1: now apply not_INR in H).
coq-tactician-stdlib.8.13.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.275183	138701	2095
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.134811	60779	3934
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.031337	9673	1827
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.039304	7389	2908
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.024670	7478	1136
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.269941	12909	1956
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.056529	21102	2918
coq-tactician-stdlib.8.13.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	33.039378	43073	5116	2.4.29	synth with cache (only 1: intros EQ; only 1: intros A B f g <- H; only 1: eassumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.864942	612	88	0.15.0	synth with cache (only 1: intros H; only 1: rewrite H; only 1: apply negb_involutive).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.065957	25982	3744
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.433609	161190	5180
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	0.992673	891	109	0.0.7.11.3	synth with cache (only 1: unfold Z.lt; only 1: intros; only 1: reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.034580	3	2	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.005808	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.004842	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.174456	19282	3152
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.063458	16573	5748
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.072835	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.058843	22366	4245
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.079659	34193	4121
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.047800	17690	2185
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.028904	7392	3047
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.073645	26719	5650
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.092632	36744	5463
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.098516	42023	5140
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Znot_le_succ	40	7.319839	7955	469	0.0.23.13.17	synth with cache (only 1: unfold Z.leb, Z.le; only 1: intro H; only 1: contradict H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.024083	5	2	0.3	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.016647	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.072473	20751	5205
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.102810	42951	4880
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.224947	28359	4075
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	13.254674	9124	2099	2.1.7.0.0.2.1.5.2	synth with cache (only 1: intro l; only 1: induction l as [| z l IHl]; only 1: intros P H H0 l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA8	40	29.537683	25922	2230	1.22.17.3.0.0	synth with cache (only 1: destruct x; only 1: intros c Hc IH; only 1: auto; only 1: intros m Hm; only 1: easy || now destruct y; only 1: now destruct 2).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.165177	11903	1194
coq-tactician-stdlib.8.13.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.266203	40126	2943
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.109858	43018	5356
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.056817	15542	5717
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.097017	39311	4851
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.412910	7608	1516
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001040	162	44
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.164667	28223	4623
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.INR_IPR	40	40.072503	28824	3723
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	5.452710	4727	701	2.3.0.0.6.13	synth with cache (only 1: intros n m; only 1: intros a b c Ha Hc; only 1: case Z.compare_spec; only 1: intuition Z.order; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.085390	34594	4903
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.066333	24959	1688
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_quot2	40	7.685556	1801	468	0.0.3.0.4.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros a Ha; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.513670	7452	2481
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.086851	23361	3756
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.208762	24504	5585
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.053279	15918	4448
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.225008	52907	5491
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.309733	14665	1242
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_comp	40	40.065291	21758	2452
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.137814	48918	6604
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_assoc	40	0.735238	337	91	2.0.0.0.2.3	synth with cache (only 1: intros a b (Hb, Hab); only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: do 2 f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.046929	16732	2082
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	1.472064	771	209	0.3.1.1.3.2	synth with cache (only 1: intro l; only 1: unfold singleton; only 1: intros n; only 1: rewrite InA_cons; only 1: intuition; only 1: inv).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.060807	18110	2185
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.043356	13102	2241
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.135171	37484	6944
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.039687	16380	1838
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.124073	54087	4916
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.031864	13251	2225
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.079168	33718	2163
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.104932	45913	2926
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.074717	13867	3552
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.114538	50986	6357
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.021549	5	3	0.2.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.014176	3	2	0.1	synth with cache (only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007877	2	1	1	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.083489	33307	7046
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	9.402291	16775	869	6.2.6.2.0.3.93	synth with cache (only 1: N.induct ltac:(n); only 1: trivial; only 1: intros n IH; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA11	40	40.102728	47099	4024
coq-tactician-stdlib.8.13.dev	Coq.omega.OmegaLemmas.OMEGA16	40	2.362354	6767	118	2.0.111	synth with cache (only 1: Z.bitwise; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.054570	24211	1790
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.217399	24188	7038
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.074507	25907	2423
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	3.695756	6942	460	4.0.13.36	synth with cache (only 1: induction 1; only 1: eauto; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.064307	23487	3586
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.mult_IZR	40	40.036211	11863	2247
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.192641	41161	6545
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.007809	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000820	67	35
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zle_compare	40	40.157199	70038	5871
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.064235	23205	2104
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.517264	289	63	1.0.7.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.062293	24489	1308
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.030348	11622	929
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.838632	11712	2102
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.246814	107895	4014
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.039640	10497	3242
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.059622	22410	4526
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.032140	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.126426	56633	5686
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.006316	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.006931	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.267272	69030	4568
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.065279	26123	2719
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.009099	3	2	1.0	synth with cache (only 1: intro q; only 1: now reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.082109	22578	4601
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.063888	21548	2572
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.077849	8655	2525
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	6.905522	2110	975	0.0.1.1.0.0.0.1.1.1	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.078491	28340	6572
coq-tactician-stdlib.8.13.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.211641	102043	8691
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.080980	34863	4691
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.019631	4	3	0.1.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.018852	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.042353	16285	2773
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.043309	16177	1506
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.012430	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.048310	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.011006	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.111595	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.095287	38026	4600
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.077663	7	3	0.4.0	synth with cache (only 1: intros x y; only 1: intro l; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.124062	33	12	0.5	synth with cache (only 1: intro m; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.011313	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.078211	4	3	0.1.0	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.090661	15	5	0.1.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	22.785231	40353	2966	0.0.7.3.23.0.18.11	synth with cache (only 1: destruct p as [a0 b]; only 1: intro H; only 1: compute in H; only 1: rewrite H; only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.708662	1156	237	11.3.2.2	synth with cache (only 1: intros x y z H0 H1; only 1: intro H; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.580927	115	56	0.0.0.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.102369	44805	6494
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.029387	7792	2648
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zeven_2p	40	16.854377	6685	1520	1.1.0.3.16.5	synth with cache (only 1: change 2 with (1 + 1); only 1: destruct p as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: auto; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.image_empty	40	3.797109	2625	551	3.3.3.0.0.5.0.5	synth with cache (only 1: intro X; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	6.555456	2181	317	2.3.1.9.2.13	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.077082	30973	7061
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.116938	40643	4813
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.id	40	0.029043	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.012699	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.016440	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	3.253736	1553	403	10.1.1.4	synth with cache (only 1: unfold Z.le, N.le; only 1: intros Hn Hm; only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.092176	40919	2095
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.139588	67356	5999
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.075281	28896	4124
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.succ_IZR	40	40.049165	16552	3868
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.117797	47936	6584
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001195	243	42
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.097401	38659	3667
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.087364	19709	2922
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	21.479393	20094	1081	0.0.2.0.13.0.0.1.66	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: split; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.069461	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.029825	9358	1789
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.095383	39063	6919
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.063559	11165	1799
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	35.507130	34591	3019	0.0.0.4.1.3.2.0.27.0.1.0.1	synth with cache (only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: destruct c; only 1: simpl; only 1: destruct f1; only 1: intros f1; only 1: destruct f1; only 1: reflexivity; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.059937	21219	4899
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.086580	16303	3631
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.131013	93	30	0.0.9	synth with cache (only 1: red; only 1: intros x x' Hxx' l l' Hll'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.067928	28499	2521
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.281443	25869	2502
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.044934	15120	2655
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.075897	30745	4609
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.074112	29100	4229
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.051538	18806	5325
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.073998	5713	2554
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.019213	5	3	0.0.2	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.028286	3	3	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.234785	32467	4239
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.049040	19153	2857
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.050054	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.025911	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.046044	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.089542	34213	4954
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.067821	25625	7149
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.opp_succ	40	21.446367	24760	4162	0.0.0.0.0.9.0.0.0.38	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: induction p as [p ?| p ?| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.016187	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.069984	28950	4883
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.046755	16444	4924
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.198729	90740	6821
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.max_r	40	2.067858	789	302	4.2.0.0.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.031130	11399	1317
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.014064	3	2	1.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.027758	6	4	1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.140556	65296	2770
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.499946	239	56	12	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	0.554813	86	19	9.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.013672	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.026491	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Z_R_minus	40	29.442503	13339	2631	0.12.0.0.3.8	synth with cache (only 1: intro t; only 1: intro; only 1: unfold Z.sub, Rminus; only 1: rewrite <- opp_IZR; only 1: symmetry; only 1: apply plus_IZR).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.089430	37602	4542
coq-tactician-stdlib.8.13.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.015580	4424	917
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.448876	178561	6988
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.066889	25535	3459
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	40.123481	59205	4918
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.092756	39639	4766
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.003723	430	54
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.020657	5975	2333
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.187249	85970	7542
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.087675	21404	5173
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.075838	26333	4856
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	40.225715	17094	2894
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.108306	46469	8291
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.781583	255	42	0.0.1.1.1.13	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.060094	24855	2909
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.212261	94951	6581
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.143103	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.080338	9461	1725
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.032643	9611	2895
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.194398	36647	5124
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.068806	23912	4169
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	36.617675	26048	2443	2.0.0.2.0.2.4.0.0.0.3.0.0.0.2.0.16.2	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: Z.swap_greater; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: discriminate; only 1: simpl in *; only 1: easy; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: destr_eq H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.037070	12988	2695
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.042334	13640	2778
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.106493	48107	3818
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.036005	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.280741	23	5	1.5	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.010221	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.273569	13889	2402
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.018838	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.047676	16826	4347
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.053754	19971	4403
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.061108	24150	3386
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	4.987306	2744	664	1.2.0.1.0.0.4.0.0.0.7	synth with cache (only 1: intros m x; only 1: intros hyp; only 1: induction m; only 1: simpl; only 1: intros e' eqfind; only 1: intuition; only 1: destruct a as (x', e); only 1: simpl; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.526175	96	54	1.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.144996	47212	8064
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	9.004290	8130	1029	9.1.5.11.1.7	synth with cache (only 1: destr_bool; only 1: intro n; only 1: induction s; only 1: simpl in *; only 1: inversion 1; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.486045	270	55	9.6	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.169721	18822	3840
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.039723	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.066436	25479	1469
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.081502	14728	1864
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.eq_IZR	40	40.065158	22997	5378
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.071739	28625	6931
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.031171	8	4	1.1.2.0	synth with cache (only 1: destruct n as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	28.133575	13960	3909	0.0.1.0.0.1.0.8.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.118623	48361	6566
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.100575	37794	4109
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.021867	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.401158	144013	5862
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.178901	85856	2576
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	13.854965	19474	2622	24.8.6	synth with cache (only 1: intros; only 1: compute; only 1: firstorder using Sorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.004554	607	81
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.013304	2957	1903
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.157280	16360	5890
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.107851	45707	2593
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.077731	30944	4674
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.105267	32769	3556
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.146759	75	27	1.0.0.6	synth with cache (only 1: intro l; only 1: induction l as [| x xs Hl]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.061839	22282	2966
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.039733	6	5	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.979615	287	133	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: split; only 1: intros Hr; only 1: inversion_clear Hr; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.059039	23228	3632
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.195206	87646	6296
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	3.091680	1540	579	0.0.1.12	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.041281	8982	1564
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.120470	52035	6609
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.808987	205	62	0.0.0.2.1.2	synth with cache (only 1: repeat red; only 1: intros l a; only 1: intros; only 1: subst; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.148048	68049	5586
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.007488	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.083977	33743	4916
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.074799	30090	4426
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	40.210159	37842	5077
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.154820	69240	6146
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.082180	7688	1788
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.111633	49588	5571
coq-tactician-stdlib.8.13.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.667795	579	138	0.1.7.5	synth with cache (only 1: intro; only 1: invlist InA; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.055626	19042	4526
coq-tactician-stdlib.8.13.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.080193	33284	6455
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.028762	9289	2244
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.190282	45659	5679
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.216821	29279	4249
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.031708	11944	1909
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.101062	16563	2672
coq-tactician-stdlib.8.13.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.844486	141	60	0.0.2.0.3.0	synth with cache (only 1: unfold eqke; only 1: intros; only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.034602	6	5	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: now destruct 1 || intros _; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.222230	456	221	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.le_0_IZR	40	40.073336	26793	4303
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.084773	32907	5298
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.012248	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.639292	113	67	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.203282	1391	234	2.2.1.10.0	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: now N.nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.027066	3	2	1.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.020130	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	21.037285	16947	4125	3.0.1.1.0.0.0.4.9.9	synth with cache (only 1: intro l1; only 1: intro l; only 1: induction 1; only 1: tauto; only 1: simpl; only 1: intro H2; only 1: intuition; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.033262	10516	2051
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.244302	29786	6020
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.140559	58783	8241
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.063875	23111	4455
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000684	62	34
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.048544	18727	1456
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.560933	279332	1942
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.102706	43804	4280
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.069589	24234	4623
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.280605	13798	2769
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.055691	20302	4465
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.314820	82098	5069
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.062696	15699	1094
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.206069	31194	5794
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.062659	22062	5089
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.083181	32377	4995
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.799315	291	106	1.0.3.3	synth with cache (only 1: intros a n v; only 1: intro m; only 1: intros <-; only 1: exact v).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.067156	27641	5314
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.691358	225	69	1.0.2.1.3	synth with cache (only 1: intros X H'; only 1: intros a b Hb; only 1: apply Setminus_intro; only 1: assumption; only 1: auto using (Noone_in_empty U) with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	7.783073	3614	614	0.2.1.6.1.7.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.047673	15	7	0.0.2.1.0	synth with cache (only 1: intro l; only 1: intros b Hb; only 1: rewrite InA_alt; only 1: exists b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.121189	28736	855
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.009020	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.088619	98	14	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.149578	70424	4808
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.205381	94281	5390
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.069529	27581	4292
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.661311	1247	205	36	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.134272	11	5	4.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.070213	25705	5370
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.040591	11773	4453
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.017365	5848	1761
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.078299	30841	3790
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.070382	29325	6129
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.241086	107564	2895
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.IZR_ge	40	40.080927	34507	3750
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.090067	39155	5078
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	7.297078	13468	1362	3.13.27	synth with cache (only 1: intro k; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.129613	112	20	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.234793	59082	8867
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.412994	144	36	0.0.1.1.9	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.843583	133	48	1.1.1.0.1.0.0.1	synth with cache (only 1: constructor; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.712004	298	29	15	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.748312	175	37	4.8	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.080237	30094	6546
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.009125	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.013479	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.062131	9	6	2.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.058971	22351	6547
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.096607	40789	3945
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.159079	6763	1010
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.008317	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.006682	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.012665	2	2	0.0	synth with cache (only 1: red; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.006421	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.125953	53685	10001
coq-tactician-stdlib.8.13.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	24.190871	16074	2944	0.4.8.4.1.5.2.1	synth with cache (only 1: intros X Y H'; only 1: elim H'; only 1: elim H'; only 1: intros x YX; only 1: elim H'; only 1: intuition; only 1: elim H'; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.064978	22975	4684
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	0.711515	455	81	11.0.1.0	synth with cache (only 1: intros; only 1: intros k e; only 1: apply H with k; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000732	63	36
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.033659	11846	1424
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.051119	20859	2460
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.145147	68167	4792
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.064314	25884	4588
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.188542	62	23	0.1.0.0.1.1	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.057203	21641	3496
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.307049	80955	5013
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.266004	59765	5797
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.083374	33825	4781
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.065182	24880	4657
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.115758	53074	5128
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	11.694334	5979	1767	8.1.0.0.2.1.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.212901	9468	1837
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.278984	13	6	0.1	synth with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.092245	38970	6486
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.077424	32368	4814
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.036978	12047	3589
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.040283	12844	5184
coq-tactician-stdlib.8.13.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.034046	13053	1877
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.051109	17947	6709
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.118926	52206	6386
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.570267	353	82	12.0	synth with cache (only 1: intro q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.098877	41899	4569
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.084152	36257	6949
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.040962	14508	1976
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.155203	74598	3414
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.186359	42	21	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.266823	125838	2884
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.072057	26469	7954
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.170092	28278	6216
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.818785	3348	212	53	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_alt	40	40.296728	97633	7108
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.047365	18637	4036
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.351314	123947	6834
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.125380	53894	8340
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	2.042711	959	306	3.0.0.4.1.0.3	synth with cache (only 1: destruct l; only 1: auto; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: constructor; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	33.345034	57166	3637	2.0.5.12.11.4.26	synth with cache (only 1: split; only 1: unfold eval_cnf; only 1: intros pol; only 1: destruct pol; only 1: simpl; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.091976	41420	3540
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.026615	8403	1733
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000708	73	35
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.035446	12166	2660
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.270754	133330	6815
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	8.286721	10071	651	66	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.044446	16119	3154
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.176517	21799	1902
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_refl	40	0.687856	713	31	37	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.065062	25870	4108
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.242655	35374	6837
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	4.018846	3163	757	0.0.3.1.5.1.0.0.0.3.2	synth with cache (only 1: intros; only 1: case (M.is_empty s); only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder; only 1: intros; only 1: case (M.elements s); only 1: unfold elements; only 1: intros l' H; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.040643	12736	5245
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.070667	28736	5659
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.050286	17	6	3.0.1	synth with cache (only 1: intros a b c **; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.010040	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.050227	16949	5968
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.089240	37987	5835
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	3.933589	1485	341	0.0.0.0.13	synth with cache (only 1: intros b Hb a; only 1: rewrite Z.div_exact; only 1: zero_or_not b; only 1: auto; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.026849	6	4	0.0.1.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.200786	94720	4499
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	1.924998	811	217	0.0.10	synth with cache (only 1: intros a b H; only 1: apply Z.mod_opp_l_z; only 1: now intros ->).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.028981	7580	3869
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.032603	11928	1620
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.105882	42596	4397
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.049297	15589	1482
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.347598	93	47	0.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	0.839816	294	149	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.160068	31036	7029
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.067870	22735	6145
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.046373	12379	3960
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.096758	38182	4932
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.718555	324101	2060
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.009822	2	2	0.0	synth with cache (only 1: intros n0 h v0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.id	40	0.895479	586	90	0.0.3.8.2.4	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n as [| n H]; only 1: auto; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.double	40	0.922995	342	72	4.7	synth with cache (only 1: intros n; only 1: ring).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.597065	179	57	7.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.025027	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.029100	2	1	1	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.066407	27430	5698
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.discr	40	14.315185	37302	3502	0.59.1.1.20.43	synth with cache (only 1: induction n as [| n IHn]; only 1: right; only 1: auto; only 1: left; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.047941	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.009950	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	40.059403	23918	6951
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.072977	56	17	0.6.0	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	40.071881	26592	3661
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.213804	39060	493
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.106213	46400	6669
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	4.435281	1598	302	1.0.0.0.0.21	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.040626	11785	1727
coq-tactician-stdlib.8.13.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.106097	44572	9746
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.181035	26872	5708
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	7.166705	8741	1892	1.13.0.5	synth with cache (only 1: intros A P; only 1: intro all; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.304300	185	40	1.9.1	synth with cache (only 1: intros x y H; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.012173	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.037875	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_impl	40	15.469710	7016	2867	1.0.1.0.1.3.0.0.0.5.0	synth with cache (only 1: intros A eval l; only 1: induction l as [| a l IHl]; only 1: intros HE; only 1: simpl; only 1: tauto; only 1: intro H; only 1: simpl; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	16.375359	23766	2074	0.0.0.2.0.0.3.2.1.0.0.2.25	synth with cache (only 1: unfold leb, le; only 1: destruct a as [| a], n; only 1: easy'; only 1: easy'; only 1: trivial; only 1: case N.compare_spec; only 1: intuition; only 1: simpl; only 1: now destruct a; only 1: easy'; only 1: now intro m; destruct m; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.345372	84	51	0.0.0.0.0.1.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.007561	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.071515	26533	5747
coq-tactician-stdlib.8.13.dev	Coq.Vectors.VectorSpec.splitat_append	40	17.683756	15261	2520	1.1.0.0.0.12.11.2	synth with cache (only 1: intros; only 1: generalize dependent n; only 1: induction v as [| ? ? v IHv]; only 1: apply f_equal; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.014740	3598	1737
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.022404	6630	1606
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.172796	78863	6629
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_trans	40	40.097693	42057	5180
coq-tactician-stdlib.8.13.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.063851	23577	1913
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.037559	12819	2400
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.097469	18	12	0.1.1.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.elements s); only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.040664	14962	1521
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.022584	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.116461	48317	6430
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.146316	66690	2210
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.108285	46558	6036
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.101449	11080	2387
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.249666	115539	4748
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	26.102040	13638	3163	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.036888	10137	4091
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.083692	34849	4005
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.143123	62862	7855
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.109987	43402	7570
coq-tactician-stdlib.8.13.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.054897	19314	5623
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.097331	37664	7565
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.bi_induction	40	40.202915	93301	8952
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.107546	47525	10736
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.096728	21399	6032
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.228472	49981	640
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.270188	136015	5879
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.204976	62516	6129
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.222409	22196	3676
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.make_conj_rapp	40	40.082729	34491	7686
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.125678	33587	5623
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.022016	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.055064	21096	2764
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.NNPP	40	40.350628	180727	10004
coq-tactician-stdlib.8.13.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.011700	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.micromega.Refl.not_make_conj_cons	40	3.193786	646	302	0.0.1.6.0	synth with cache (only 1: intros A eval a l; only 1: rewrite make_conj_cons; only 1: split; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.097937	25533	3532
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.023219	8704	1085
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.zerop	40	0.459673	156	40	6.0.0.2	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.of_nat_ext	40	40.201793	91392	4587
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.destruct_list	40	40.511439	264755	2074
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	9.359301	6215	1310	2.1.4.0.8.0.9	synth with cache (only 1: intro l; only 1: unfold eqk, eqke; only 1: induction l as [| a l' Hrec]; only 1: auto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.059303	21875	2173
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.333971	100698	5325
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.039826	14979	2553
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.088289	35439	5210
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.062188	22633	4820
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.289720	133652	12274
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.120961	15597	3290
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.111862	21728	2837
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	2.313413	942	261	1.0.1.0.1.0.0.13	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	6.876675	4750	1100	0.0.3.1.3.3.1.1.0	synth with cache (only 1: intros s s' x; only 1: case (M.union s s'); only 1: unfold inter; only 1: case M.empty; only 1: intro y0; only 1: case (M.remove x s); only 1: intros n m p Hp H; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.248049	115900	3954
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.eucl_dev	40	40.155013	72180	6434
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.032107	8933	3411
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.051717	11409	2505
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.272185	71	30	4.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with relations; only 1: auto; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.079313	29628	4407
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.014553	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	0.319123	388	42	0.2.13.0	synth with cache (only 1: intros m; only 1: case m; only 1: induction m; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.084992	31950	5828
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.076496	28432	6416
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	21.297718	25692	3219	0.1.2.0.0.0.4.0.18.1.1.42	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a; only 1: auto with arith; only 1: intro m; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.182008	33144	7045
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.090864	35568	4056
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.019219	5	5	0.0.0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.090817	35325	5842
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.202307	32998	2837
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.008911	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	2.557392	1517	579	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.8	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.058286	19758	6838
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.209083	26526	1839
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.314685	30897	3536
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.075089	30760	5005
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	8.571325	5685	1543	0.0.0.0.0.0.0.0.0.0.0.2.1.10	synth with cache (only 1: revert p; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.053344	18239	4732
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.150789	68559	8615
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.203150	100134	6604
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.054634	22033	3319
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	27.673307	12347	3572	2.0.1.4.2.1.1.0.0.0.0.0.0.0	synth with cache (only 1: induction l as [| x l IH]; only 1: intros; only 1: assumption; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: subst; only 1: intro H; only 1: apply in_eq; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	21.142392	29168	3336	0.19.12.2.3.3	synth with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold get, push; only 1: unfold empty, get; only 1: intro H0; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.027056	10112	854
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	2.969583	1306	594	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_0_discr	40	6.332926	12328	1093	26.1.8.2.20	synth with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.237604	111846	6698
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.287634	147691	2026
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.255296	10476	1910
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	1.788447	1803	274	18.6	synth with cache (only 1: intro; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.011387	2	2	0.0	synth with cache (only 1: unfold hd_error, tl; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.107963	43436	7138
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.235759	84	25	1.1.4.2	synth with cache (only 1: induction l; only 1: simpl; only 1: now split; only 1: now discriminate).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.196893	35205	4188
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.026498	6976	1662
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.052673	17217	4814
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.145490	65048	6238
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.L_R	40	7.311936	15888	730	21.6.18.12.0.0.0.79	synth with cache (only 1: destruct m as [| m]; only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: simpl; only 1: PeanoNat.Nat.nzsimpl; only 1: now PeanoNat.Nat.nzsimpl; only 1: PeanoNat.Nat.nzsimpl; only 1: constructor).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	11.031551	7415	2525	0.0.0.0.0.0.0.0.2.12.1.0.1.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: right; only 1: reflexivity; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.071827	24082	2422
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.046849	16380	3775
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.app_length	40	8.202894	5777	1561	2.3.1.0.0.1.0.10.4	synth with cache (only 1: intros; only 1: induction l; only 1: destruct l' as [| y l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_eq	40	0.102667	44	21	0.3.4	synth with cache (only 1: simpl; only 1: intros a b; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Facts.in_cons	40	0.018481	5	4	0.0.0.1	synth with cache (only 1: intro y0; only 1: intro l2; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.058034	21354	3265
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.020156	5	3	0.2.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Euclid.quotient	40	40.088554	36136	4744
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.016761	6	3	3.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	31.467452	15644	5259	1.0.0.0.0.0.0.0.2.17	synth with cache (only 1: intro l'; only 1: intro l; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	40.147809	65201	5058
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.428666	217851	6571
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.132534	60183	4661
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.093762	29564	6068
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.le_dec	40	40.163557	57233	9020
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.gt_dec	40	0.008177	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.ge_dec	40	0.008006	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_eq	40	0.010902	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.not_lt	40	0.010071	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	1.059264	330	158	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1 as [| ? H0]; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.100717	44908	4412
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.187894	36176	3139
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_is_one	40	40.100006	46437	5126
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.113423	30398	4425
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.213336	76307	4784
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_S	40	40.096189	41531	6468
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_not_le	40	0.007372	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_S	40	0.007341	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.le_gt_trans	40	2.758961	1817	346	7.1.1.13	synth with cache (only 1: induction 1; only 1: intro; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	18.794555	5668	1624	9.0.0.6.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.071553	27289	5208
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.053243	20614	3081
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.065354	23783	5022
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.120027	50633	7790
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.006865	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.111894	42233	6196
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.127361	50399	8535
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.020246	6	3	1.1.1	synth with cache (only 1: destruct n; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.016948	5418	1584
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.112655	11095	2842
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat_l	40	17.130323	28479	2646	28.2.1.28	synth with cache (only 1: induction 1; only 1: Nat.order; only 1: Nat.nzsimpl; only 1: now rewrite <- Nat.le_add_r).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.127724	57531	5428
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.241808	17802	2611
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.038659	10138	4941
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.082836	33506	5702
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	3.724422	5386	562	16.8.10	synth with cache (only 1: unfold Qle; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	30.435173	47472	4842	0.0.0.10.2.1.2.11.4.3.0.0.2.5.2	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: invrb; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: invrb; only 1: now auto; only 1: invrb).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.049279	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.088964	37792	7888
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.127889	54694	9853
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.072686	28914	7407
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.079781	30664	2376
coq-tactician-stdlib.8.13.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.043302	12973	1960
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.209694	45624	9438
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.030067	7788	3159
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	13.282540	8672	1827	0.0.0.5.4.5.5	synth with cache (only 1: intros x Hin; only 1: intro Ha; only 1: intros H; only 1: elim Ha; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.091153	15	9	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	1.394337	5374	201	1.0.6.0.42.32	synth with cache (only 1: split; only 1: now Nat.nzsimpl'; only 1: red; only 1: intros L R n; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	8.603017	8600	1118	13.6.4.0.2.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: intuition; only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.244245	207	92	4.1.5	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_In	40	4.470055	4798	1144	4.0.0.0.0.1.1.1.3.0.0.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l as [| ? ? IHl]; only 1: destruct n; only 1: simpl; only 1: Nat.order; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map_2	40	40.079181	32340	4780
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.052318	7727	1354
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	10.496315	36599	926	2.91.0.6	synth with cache (only 1: unfold elt in *; only 1: unfold singleton; only 1: red; only 1: ok).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.064968	20343	9080
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.009777	3	1	2	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.008375	2	1	1	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.076820	32826	5042
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.026804	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.100754	43783	6113
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.195468	39501	4804
coq-tactician-stdlib.8.13.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.154087	16574	2171
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.256135	58938	3086
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListDec.uniquify_map	40	40.073234	28086	6448
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_compat_r	40	6.775116	3917	682	7.0.21	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.027169	9	2	1	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_le_trans	40	40.108869	48373	5020
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.exists_le_S	40	3.872445	4722	700	1.1.1.19	synth with cache (only 1: intros n H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.061890	22992	6538
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.068045	24173	7088
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.gt_trans	40	2.972753	1858	321	17.3.0	synth with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: now transitivity m).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.005382	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.005607	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_0_neq	40	0.020487	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_n_S	40	0.008490	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.040938	9009	1398
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.144459	64451	8694
coq-tactician-stdlib.8.13.dev	Coq.rtauto.Bintree.Map.get_map	40	40.065060	22335	5962
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005652	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.leb_le	40	40.073976	26655	7178
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.029883	11407	1388
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.097580	16349	2548
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.922309	658	84	0.1.14.2	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_le_compat	40	40.239448	114223	8104
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.044056	17944	3917
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.030234	8149	4017
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.072222	28399	4627
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred	40	9.389882	12509	2065	0.11.21	synth with cache (only 1: destruct m; only 1: inversion 1; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.716663	272	104	1.5.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Vectors.Fin.eqb_eq	40	40.065345	26202	9003
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.135868	59522	9062
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.052047	16564	8505
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	38.850354	27846	4464	1.0.0.0.0.3.9.0.1.2.0.35	synth with cache (only 1: intro; only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: intros; only 1: simpl; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.215857	29924	5641
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.987316	97	51	0.0.1.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.074088	28336	3993
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.183035	86223	3947
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.plus_minus	40	40.116185	55568	6821
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.In_nth	40	40.202358	57948	6956
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.107427	45088	6227
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.051380	20726	3259
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.144952	63800	5785
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.303811	89	35	0.1.1.0.2.0	synth with cache (only 1: destruct t; only 1: intros H; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Compare_dec.leb_compare	40	40.068263	21747	10695
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	12.682614	6573	1006	19.1.1.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.010824	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.003107	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.095374	40886	5470
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.219816	42473	5948
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.210382	32423	5064
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat_r	40	40.074785	31879	4067
coq-tactician-stdlib.8.13.dev	Coq.Arith.Div2.double_plus	40	40.044035	17004	3535
coq-tactician-stdlib.8.13.dev	Coq.Arith.Minus.lt_O_minus_lt	40	17.127956	18147	2467	2.0.0.15.4.0.15.1.4	synth with cache (only 1: Nat.double_induct n m; only 1: intros; only 1: now Nat.nzsimpl'; only 1: intros n H; only 1: auto; only 1: simpl; only 1: intros n m IH H1; only 1: apply IH in H1; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_in_int	40	40.141645	61572	8439
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.063198	22862	6099
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_between	40	0.382057	180	40	0.1.8.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.056195	21202	7793
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	14.991736	11876	2342	0.0.0.0.0.0.0.0.0.0.0.0.0.0.31	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.118960	51709	6383
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.010129	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.007646	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.136644	58985	9011
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.067645	25122	8417
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.018476	4808	1617
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.091302	41166	5563
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_equiv	40	40.063059	25929	4415
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_split	40	0.475009	33	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.053448	17290	6292
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_refl	40	40.156635	73470	16799
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.046015	14775	5179
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.118146	53088	10213
coq-tactician-stdlib.8.13.dev	Coq.Arith.EqNat.beq_nat_true	40	1.790720	791	284	2.0.0.1.0.0.0.0.0.0.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: intro m; only 1: destruct m; only 1: easy; only 1: simpl; only 1: contradiction || auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.110710	47378	6419
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.048498	15689	5338
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.168063	77197	5370
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	3.240314	4029	593	2.0.0.2.1.15	synth with cache (only 1: intros l l' x y; only 1: intros; only 1: red; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.067983	24638	4862
coq-tactician-stdlib.8.13.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	19.734157	10247	3055	1.1.0.1.1.2.0.0.0.1.4	synth with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: auto; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.057478	20654	5674
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.066517	25230	4922
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.040328	16493	2915
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_indep	40	40.089166	37014	8553
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make.map2_2	40	40.060834	22036	5566
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.090394	39032	4134
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.035370	11715	2565
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.992392	426	144	0.3.1.2.0.1.5	synth with cache (only 1: destruct s as [| c l y r]; only 1: simpl; only 1: tauto; only 1: descolor; only 1: invrb; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.148635	34	14	0.0.3.1.0	synth with cache (only 1: intros [| x acc]; only 1: intro; only 1: auto with arith; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.075342	27785	11643
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.087828	35622	4741
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.223521	31530	6425
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.227397	32186	4875
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	4.580080	959	566	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.089685	41328	3907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.069714	25746	6845
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.in_int_exists	40	40.091213	38349	5645
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.098634	40898	7167
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.073354	28005	6093
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.183494	84324	6590
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.122786	51506	5385
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.min_l	40	40.147545	38659	7937
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.012577	3445	1416
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_spec	40	0.492839	10	5	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.167308	73863	9761
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.091100	38212	5634
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_even_plus	40	40.107545	24082	4822
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_plus_l	40	0.071540	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_even_plus	40	0.075734	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_plus_aux	40	0.686798	74	16	0.0.10	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.even_mult_l	40	0.047666	14	3	6	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Even.odd_mult	40	0.064958	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.055606	19410	6432
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.026470	4	4	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.231945	109890	13203
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.052493	18983	7372
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.072246	28190	8090
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.052200	18321	4334
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	3.105172	1207	459	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.125039	34684	7235
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.142927	64917	5421
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.079616	31726	4706
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	4.181706	2208	612	0.5.1.1.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.030045	7182	3714
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.098029	27024	2335
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	40.033243	11459	4060
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.065152	25732	5049
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_split	40	40.087622	35765	5637
coq-tactician-stdlib.8.13.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	3.412617	824	338	0.2.0.0.2.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.022082	5771	2794
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.081438	19834	4755
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.086303	36782	2489
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.093176	38187	13412
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.227095	31029	5823
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.076119	28524	3381
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_lt_compat	40	40.140931	66223	5440
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.079641	30069	5369
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.100071	18389	4407
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.le_plus_trans	40	3.848743	3410	583	12.0.0.0.0.3.9	synth with cache (only 1: Nat.induct p; only 1: intro H; only 1: Nat.nzsimpl; only 1: assumption; only 1: intros p IH H; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.between_or_exists	40	40.107365	43720	6591
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.120316	49732	5346
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.039679	11676	3908
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	9.251075	3693	1549	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	0.699946	582	70	26	synth with cache (only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.nth_le	40	3.772548	3560	738	13.0.4.4	synth with cache (only 1: intros n m p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: eauto with arith).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.099146	43661	5859
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.021256	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.054646	19548	5986
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015214	4658	1447
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.290059	356	190	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.009350	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_add	40	40.173394	16158	3441
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.503482	39	6	9	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.012882	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.103509	39768	9696
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.375387	200	36	4.11	synth with cache (only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.201491	30	28	1.3.0	synth with cache (only 1: revert q; only 1: intro q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.025764	9	3	1.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.odd_even_lem	40	40.122472	54716	4026
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.114070	50856	13443
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.158324	60201	3114
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.037741	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.079705	30624	7970
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.099780	18112	4336
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.119325	47983	7521
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.108551	21886	6332
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.173622	49	25	0.2.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.159877	31	21	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.066539	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.040100	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.067173	25833	5335
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.016411	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Between.Between.event_O	40	12.601965	71015	1674	3.13.0.1.8.96.0	synth with cache (only 1: inversion 1; only 1: intuition; only 1: revert H H0; only 1: intro m; only 1: inversion 1; only 1: destruct H; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.084439	33504	6074
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	2.462331	8197	381	0.3.9.26.17	synth with cache (only 1: intros H; only 1: inversion H; only 1: inversion H; only 1: destruct H as (e, H); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.019762	8	2	6.0	synth with cache (only 1: intro l'; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.064961	22811	6533
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.062835	23229	5144
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.055510	20224	3699
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.lt_plus_trans	40	23.889724	11890	1278	14.3.0.0.5.5.11	synth with cache (only 1: Nat.induct p; only 1: intros; only 1: Nat.nzsimpl; only 1: auto; only 1: intros b Hb IH; only 1: Nat.nzsimpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.070180	24619	6636
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.succ_double_add	40	15.333185	3126	722	5.1.1.3.0.4	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: auto; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_double	40	0.020529	7	3	0.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_None	40	40.184616	24256	7849
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_lt_mono	40	1.112484	130	70	3.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now nzsimpl; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.401312	46	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.140671	63684	7144
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pow_neg_r	40	0.262812	16	4	0.1	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.084831	34814	6918
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.375559	97	56	1.2.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.052452	16159	8519
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.227028	108194	5632
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.492430	134	72	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.077355	27055	10412
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.014761	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.182541	22564	7309
coq-tactician-stdlib.8.13.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.131727	58788	2994
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.087642	34389	5428
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	14.510980	6297	1923	3.5.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.nth_error_nth	40	17.193091	8467	3562	5.0.0.0.0.3.1.0.0.2.0.0.0.2	synth with cache (only 1: intro l; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl in *; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.562719	152	74	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c d ? ?; only 1: intro LE; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.044945	13900	5273
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.069916	25547	5077
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.087710	38462	4193
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_neq	40	40.112601	50565	5420
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.025457	8730	625
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.122868	49145	8614
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	19.985909	10178	4724	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.059724	20194	7500
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.007987	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.028232	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.011666	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Arith.Mult.mult_acc_aux	40	40.056498	18100	5169
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.015447	5	2	3.0	synth with cache (only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.011166	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.009666	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.011739	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_log2	40	24.750869	19349	3629	16.0.9.0.0.2.0.0.0.0	synth with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: cases n; only 1: intro H; only 1: reflexivity; only 1: intros n _; only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.min_l	40	3.741659	1695	968	0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.004900	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.034348	5	3	0.1.1	synth with cache (only 1: induction n; only 1: now nzsimpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.292516	146308	17842
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.092321	37927	1661
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.112912	136	18	7.7	synth with cache (only 1: apply abs_eq; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.077019	28493	7862
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.075981	32759	4691
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.115415	29004	7083
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	40.074647	27412	5236
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.223964	30	19	1.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.034621	10379	2966
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.085361	26820	6792
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.087518	34591	5974
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.064126	318	126	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.055357	15903	5818
coq-tactician-stdlib.8.13.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	2.370088	759	179	0.0.4.1.0.1.2.2.5	synth with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro; only 1: intro; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.070290	24755	3957
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.054397	19820	3910
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.plus_is_one	40	40.088407	37481	5785
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.080577	32194	5954
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.083614	33724	6539
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.081105	19237	8773
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	7.209097	3532	1513	2.0.3.2.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.13.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.224863	106376	3539
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.141895	61997	8120
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.077111	13813	5756
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.067326	8090	3121
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.096789	40027	5837
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.051380	15161	2568
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.041361	12732	3533
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.149129	46771	6729
coq-tactician-stdlib.8.13.dev	Coq.ZArith.Znat.inj_minus2	40	40.062578	25546	3092
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.141391	66475	2983
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.019077	5232	861
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.115177	49016	9555
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.106096	47528	2804
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.size_gt	40	40.100011	19203	4509
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	40.074169	25627	7381
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.731579	255	102	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.062104	21484	5943
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.085215	34571	5732
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.056932	18128	7594
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.097106	40905	5744
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.089105	32023	6933
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	1.326597	842	150	7.8.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	8.007000	446	212	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.203120	94296	8046
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.053246	18995	4390
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.031447	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.048563	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.085419	33398	5462
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.066732	20236	2907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.090106	30965	6411
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.060988	9769	1772
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.052987	20956	3418
coq-tactician-stdlib.8.13.dev	Coq.Arith.Plus.succ_plus_discr	40	40.066980	26907	4872
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.099483	39443	4288
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.015418	10	3	0.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	5.659033	2227	795	3.1.0.0.1.3.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.075392	26965	5971
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.064564	24676	5128
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.071162	11153	4753
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	13.825253	4375	2155	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.089066	40326	4784
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.175718	6143	892
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.068075	8677	3750
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.048871	15189	5791
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.remove_In	40	40.097162	34049	7216
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.079733	3021	1036
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.068917	21233	5011
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.099569	39253	6235
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	13.511940	4457	1868	0.0.0.0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.231764	21	12	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.044204	16331	5932
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.104214	5547	398
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.058339	18499	6267
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.214169	100458	5132
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.091048	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.223208	303	116	1.0.0.0.1.0.0.1.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_spec	40	40.079526	28831	5426
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.127359	50	15	7.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.061775	20506	9007
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.064994	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.097465	35581	10351
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.080374	30559	8682
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.099942	40970	6086
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.137388	43288	8300
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.078314	29280	6258
coq-tactician-stdlib.8.13.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013599	2338	1009
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.050901	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.026036	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.113592	35407	5934
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.077522	31251	4743
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.081038	29103	7199
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.041053	13807	4215
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.059214	25158	3315
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.099637	40001	8837
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	3.146117	854	330	1.0.0.0.3.5.3	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.118985	16785	3958
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.068866	22604	4714
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.112197	50868	5620
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.070647	26844	6065
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	5.396924	1856	693	3.1.0.0.0.3.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.072332	29499	5126
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.085057	18045	4692
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.102297	9432	1417
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.805744	1253	123	0.0.0.0.0.0.0.0.20.0	synth with cache (only 1: unfold natural_isomorphism; only 1: split; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.083870	17259	6015
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.060909	22409	4715
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.055490	19860	5345
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.105764	42029	5864
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.081255	23961	6462
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.091181	19384	4091
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.107021	44427	4956
coq-tactician-stdlib.8.13.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.041318	11657	4251
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.066213	21869	7189
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	37.488085	26276	5909	1.0.1.0.19.7.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: rewrite mul_comm; only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.058238	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.101942	44456	6228
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.133297	10986	1990
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.529204	129	47	0.1.0.0.3.1.0.0	synth with cache (only 1: destruct x; only 1: intros; only 1: intuition Z.order; only 1: destruct p; only 1: easy; only 1: now destruct 1; only 1: easy || now destruct y; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.028308	9	4	1.2.2	synth with cache (only 1: intro n; only 1: intro q; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.177389	84283	1407
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	1.953298	602	237	0.1.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: destruct (mod_bound_pos a c); only 1: auto'; only 1: auto'; only 1: order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.ZArith.BinInt.Z_eq_mult	40	1.296868	1083	101	0.5.17.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.504983	561	200	1.4.1.1.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.049971	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.489815	80	49	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.081220	31658	6912
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.013235	5	2	3.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.059887	19497	7437
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.099363	36930	8032
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.038219	11056	3784
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.050970	15710	5575
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.060035	11578	3910
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.114627	43395	9120
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.067695	21853	2938
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.181428	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.468006	2032	840	0.0.1.0.0.0.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.066642	23183	6886
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.060357	24933	4321
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.080601	29497	8251
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	40.084956	15228	4443
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.211697	33	12	2.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.112702	12153	3286
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.025926	3	3	0.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	40.128951	56400	7178
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.040604	8525	2416
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.216758	35976	5357
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.069918	14561	3620
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.088378	16699	940
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.163033	73187	6081
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.071326	18023	3973
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.046021	15301	3706
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.118958	48039	7276
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.045653	14457	4210
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.082658	15438	2779
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.037567	4	3	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.066564	23996	4340
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.071100	24379	6536
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.975663	467	206	0.0.1.5	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.061268	20936	4821
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.186131	77306	9526
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.148746	14767	1479
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_lt	40	40.062716	22523	5398
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.184601	74470	4983
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.078821	31694	5420
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.217579	94	17	12	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.065836	25566	3655
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.643488	262	83	0.0.0.0.7.0	synth with cache (only 1: induction n; only 1: split; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.061377	17953	7103
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.057536	18077	5848
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.056730	18174	5928
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.119220	50646	9509
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.084963	29866	5316
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.067952	20550	7509
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.024967	6132	2703
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.050456	6	5	1.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.070073	27473	3655
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.069180	26515	6191
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.068081	28691	2476
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.054831	19108	5150
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.119289	49418	2919
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.731985	191	89	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	5.631296	1071	569	0.0.4.3.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.545895	927	258	0.0.0.8.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.095391	38429	6824
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.359929	51	24	0.0.1.1	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.063852	19899	3663
coq-tactician-stdlib.8.13.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.074494	28066	6166
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.091550	25339	6005
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	40.175955	6777	774
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.078626	27085	4263
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.042501	13299	4663
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.095841	24286	3803
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.rev_alt	40	40.113490	46604	7447
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.102334	15860	5364
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.050460	11080	2745
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.674857	198	98	0.1.0.1.0.0.1.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.176593	22013	4515
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.055411	18455	4936
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.501371	150	55	0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.063299	20358	6284
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.121281	39066	7294
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.092918	26097	6155
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.097068	19127	6360
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	7.952323	2868	1230	1.3.0.0.0.1.0.0.0.0.0.2.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	3.236118	1510	476	1.0.0.6.1.0.0.5.2	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.041739	12647	5023
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.042959	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	3.151598	932	406	3.0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.064450	22931	4013
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.073994	24325	6660
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.164452	76888	3948
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.007959	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.411388	124	57	1.0.1.0.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.103573	33310	7456
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.018981	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.083314	25036	4907
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	23.054754	4680	1127	5.7.4.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.112442	48808	6073
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.060885	14119	5223
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.043855	14550	5619
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.902453	772	444	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	8.071118	4582	1199	1.8.0.7.0.3.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros m Hm IHm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.056816	15652	2114
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.081863	30146	5912
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.087424	24136	1713
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.440053	1758	385	0.0.0.10.2	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.133361	16	9	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.968549	553	107	2.1.3.0.3	synth with cache (only 1: intro H; only 1: apply divide_antisym; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	9.765858	3788	979	0.0.0.0.0.0.0.4.2.1.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.047014	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.070910	25134	8325
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.612929	144	84	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.318729	291	70	9.0.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.647511	2215	424	0.0.9.4.7	synth with cache (only 1: intros x y Hxy Hyz Hy; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.083088	30246	5564
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.101913	9826	4114
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.133541	56229	7063
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.047426	14324	2722
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.121721	644	273	1.1.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.037038	7	7	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	7.122401	2565	1176	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.099127	23747	6606
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.070246	25701	4264
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.053661	18548	4186
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.392369	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.008615	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.433447	2288	988	0.0.0.2.0.0.0.0.0.0.1.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.054221	15032	3302
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.054414	18802	2750
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	4.829173	2524	804	1.0.0.0.2.1.0.1.0.1.2.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.018951	2	2	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.141031	62747	6838
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.081084	30356	7375
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.439285	37	17	0.1.3.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.114416	46600	4225
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.025448	7344	2187
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.049976	14108	4044
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.109588	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	3.596193	2501	505	0.1.0.0.0.0.0.2.0.15	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros a n Hn; only 1: now f_equiv).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.170241	80367	3884
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListOps.concat_app	40	8.524188	9035	1450	2.20.0.0.0.0.0.1	synth with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto using (app_assoc (A:=A))).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.104419	24162	4646
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_length	40	0.110446	35	20	1.0.0.0.0.2	synth with cache (only 1: intros; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	0.908991	487	112	0.9.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	2.739549	846	305	0.0.9.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.map_eq_nil	40	0.454137	255	82	0.0.0.5.3	synth with cache (only 1: intro l; only 1: destruct l; only 1: intros; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.765439	531	126	9.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.041543	14804	2571
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.068144	25300	4630
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.061879	19653	9817
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.056081	17797	6734
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.101099	37858	6645
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	22.376777	7241	1110	0.3.2.1.21.1	synth with cache (only 1: intros x y z; only 1: intros X; only 1: red; only 1: intros H H'; only 1: apply H; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.067244	17962	5593
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.064833	22323	2659
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.045562	12941	4958
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.155022	64443	3536
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.124947	22601	5946
coq-tactician-stdlib.8.13.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.081988	16362	1684
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.064757	24939	3888
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.092210	32947	5956
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negbFE	40	0.007174	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraT	40	0.606633	302	36	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.050516	16623	3581
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.contraFT	40	0.738195	206	19	2.17	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.008477	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.010695	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.010400	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.005469	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.011756	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.207206	98468	11609
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.059118	15726	3164
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.092977	21692	5916
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.183242	79039	15353
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.066231	20988	6040
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.068888	25402	5452
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.089120	20700	3845
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.065436	24775	4503
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.208662	54830	3803
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.361080	174134	7793
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.577120	247	58	12	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.011852	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.095344	21582	4855
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	1.555768	799	116	3.24	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.032519	8145	2330
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.147067	68604	7091
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.197897	89879	5519
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.051334	17318	3743
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Map.count_occ_map	40	40.118126	54322	4821
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.179350	77007	8544
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.048583	14538	2647
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.051060	17567	5044
coq-tactician-stdlib.8.13.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.155610	66850	6447
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.050453	16188	5683
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.099389	39024	8630
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.121033	41247	12398
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.084495	24876	6255
coq-tactician-stdlib.8.13.dev	Coq.Setoids.Setoid.gen_st	40	0.282334	204	66	10.0	synth with cache (only 1: intro n; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	26.530429	14194	3688	1.7.2.7.1.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.008401	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.060946	22988	3798
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.798331	215	71	2.0.0.0.0.0.7	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.081699	30422	5806
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.298713	140780	2987
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003607	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.006212	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.013324	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.604655	199	43	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.006033	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.045768	14750	4717
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.map_ext_in_iff	40	10.966348	6671	2076	0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.1.1.1	synth with cache (only 1: intros A B f; only 1: intro n; only 1: repeat split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.049361	17094	3384
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.748805	1144	235	1.14.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply lt_le_incl, lt_0_1; only 1: nzsimpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.221111	101975	12151
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.356141	23612	785
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.211710	98128	6797
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	1.432380	430	53	0.21	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.054809	18674	1432
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.069797	24967	6712
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.295693	174	25	0.16	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.183849	79867	5627
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.014347	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.129436	5	1	4	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.007349	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.369165	91	88	3.1.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.061512	5	2	0.3	synth with cache (only 1: intros A B []; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.102633	40003	13330
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.036550	10851	3692
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.094473	33130	7730
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	4.493456	4819	1397	0.0.1.0.0.0.0.0.13	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.948425	308	151	1.0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.931141	475	100	1.3.0.3.1.0.6	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.081439	25865	7100
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.128006	12347	3266
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.282781	132252	9589
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.025798	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.063082	16943	3924
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.149755	22	11	0.4	synth with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.025702	6345	2047
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.051716	16005	4357
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.155290	61052	5407
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.028976	7664	2769
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.060440	23058	3798
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.067354	22159	7687
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.023481	6725	1797
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.085222	25032	7009
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.059071	21340	4226
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.086068	30878	9225
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.054701	17736	6589
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.080332	31246	3623
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	40.059857	16554	13031
coq-tactician-stdlib.8.13.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.009718	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.008171	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.012142	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Program.Subset.match_eq_rewrite	40	1.068952	1325	199	0.1.8.2.5	synth with cache (only 1: intros n P IH0 IHS; only 1: intro m; only 1: destruct m; only 1: destruct e; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.040451	11546	5296
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.026946	4108	559
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.056431	16531	3773
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_length	40	40.094232	36121	4909
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.047859	17210	3343
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.046176	16693	3176
coq-tactician-stdlib.8.13.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.333715	167155	10928
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.incl_right	40	0.031689	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.093184	23875	2238
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.069053	24391	5076
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.294304	23078	1319
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.067117	24947	5520
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	40.045404	11269	10017
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.seq_trans	40	3.611032	4500	820	0.0.2.0.15.3	synth with cache (only 1: destruct x; only 1: intro H; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.010784	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.066896	23612	4294
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.058794	20992	3979
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.lock	40	3.523299	39683	387
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.063758	21569	4089
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.049362	15395	3217
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.112802	18963	4838
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.067222	23523	2627
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.055126	17839	5346
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.071817	25712	3190
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.380251	178509	6454
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_tag	40	0.659889	954	101	0.0.15.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct H; only 1: destruct (H z); only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig	40	0.023504	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.all_sig2	40	0.018939	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	23.219186	19589	4524	1.1.20.0.2.0.0.1	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.062410	21614	3989
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.043706	11602	3798
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_false	40	0.025928	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Bool.IfProp.IfProp_or	40	0.960872	491	264	0.3.0.3.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.081604	25439	4119
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.086712	33466	4729
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	16.483489	13654	2673	0.4.0.2.0.0.21	synth with cache (only 1: intros z n; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.090491	23489	4399
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.086541	23631	5312
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.060296	22452	6101
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.084488	29872	8623
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.071760	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.004647	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.UIP_refl_refl	40	0.055337	48	18	9	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.008813	17	2	8	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	4.352287	6204	982	0.0.5.2.6.0.0.0.0.6.0.41	synth with cache (only 1: constructor; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Program.Equality.solution_left	40	0.210532	131	43	1.2.3.3	synth with cache (only 1: intro eq_rect_eq; only 1: simple destruct 1; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.058100	20791	5025
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.066778	25641	6030
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	8.923055	5297	1288	0.0.0.10.0.0.2	synth with cache (only 1: intros a b c Ha Hb Hc; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.244540	978	234	0.0.1.0.0.0.1.0.0.1.6	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.043749	13571	5442
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.118782	51731	9449
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.065128	7004	1248
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.066378	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_left_rev_right	40	40.099760	33402	6777
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.038620	7635	2567
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.048800	16785	4681
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.037403	13595	1500
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	10.192736	4887	1969	0.6.0.3.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.085759	29669	6783
coq-tactician-stdlib.8.13.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.044325	22	10	4.0	synth with cache (only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.046875	15339	4699
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	25.456334	4720	1138	0.1.0.1.0.0.1.5.6	synth with cache (only 1: unfold eqb; only 1: reduce; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.249626	38917	1945
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.009524	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009023	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.021535	3	2	1.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.008413	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.041219	17	7	6.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.009333	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.039398	9504	1020
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.005254	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.008507	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_proper	40	0.020065	4	3	1.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.021617	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.987915	328	143	5.4	synth with cache (only 1: unfold lt; only 1: solve_proper).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.064404	22218	3747
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004014	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.060877	21026	5090
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	3.628645	39593	274
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.locked_withE	40	40.654995	333978	8569
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.047111	14344	4218
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.013788	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	13.534591	10015	1659	1.1.3.0.18.12	synth with cache (only 1: intros H1 n H2; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.159548	29995	4651
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	5.924996	1977	990	5.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	19.248973	354160	2997
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.910381	845	392	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.043429	12998	3563
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.750563	149	55	3.1.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.016602	1	1	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	4.125929	56914	495	0.0.3.3.252	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.074329	25495	4668
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.325920	148687	11694
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.010482	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.333897	546	66	3.5.16	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.090293	27810	4609
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.028246	77	9	0.12	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.div2_spec	40	0.010566	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.404552	199061	5439
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.060579	20856	4646
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.037059	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.083429	31593	5600
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.087159	37306	4037
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.155800	45	25	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.250056	50	28	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.052704	13658	3377
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.078754	29551	6037
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.015817	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.010422	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.006152	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.006443	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.038090	13113	3313
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.273592	128074	8793
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	2.723276	2045	278	0.5.2.15	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	2.562353	1261	450	2.6.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.068428	22472	6197
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.075793	27928	6831
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.039867	10587	6190
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.073002	28254	7508
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	40.063147	17193	14949
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.197131	114	30	8.0	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.013729	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.007513	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.010261	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.fold_symmetric	40	40.131280	55150	7277
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.059223	19763	5562
coq-tactician-stdlib.8.13.dev	Coq.Classes.Morphisms.proper_proper	40	0.459260	131	61	1.0.0.4.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.050953	18966	3177
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	5.554604	3072	1138	1.8.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.393740	26593	791	5.0.3.1.32.57	synth with cache (only 1: intro x; only 1: exists x; only 1: red; only 1: split; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.065090	23866	8047
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.507561	1053	39	45	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.068518	24077	4151
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_false_abs	40	0.718128	1384	223	1.2.1.4.10.1	synth with cache (only 1: intro H; only 1: destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_is_true	40	0.006492	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.not_false_iff_true	40	0.013721	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.304062	42547	2152
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eqb_prop	40	0.007023	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_sym	40	0.007952	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.005595	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_true_iff	40	0.018166	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_false_intro	40	0.010451	5	3	0.2.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_r	40	0.004876	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.orb_true_l	40	0.004566	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_true_eq	40	0.085756	26	11	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_diag	40	0.005405	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_false_elim	40	0.024767	12	5	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.408529	437	25	0.28	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.012963	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.012452	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_r	40	0.005564	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_false_l	40	0.007984	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_true_l	40	0.003997	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.011435	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.029471	5892	1836
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_eq	40	0.011874	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.015927	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.015370	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.040264	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.012429	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.016980	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.absurd_eq_true	40	0.010936	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.015352	3	2	0.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.008859	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.018741	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.013668	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Bool.Bool.reflect_dec	40	0.018709	5	3	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.104954	41511	8034
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.420400	203567	13449
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.098551	36512	8626
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.012899	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.372706	330	83	3.3.2.1	synth with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.012916	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.044668	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.004564	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.143114	7	6	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.nary_congruence	40	40.108350	42977	10736
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.009606	11	4	0.3.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.069225	25374	7066
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.156454	26546	5962
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.035633	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.610854	69	27	0.2.0.2	synth with cache (only 1: intro H; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.148485	69907	4265
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssreflect.abstract_context	40	10.386130	138299	1664	0.120.88	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.208195	675	32	0.35	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.052268	15326	3667
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.089968	33568	7555
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.046972	15907	4403
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	4.646335	1437	415	0.0.2.0.0.1.1.1.3.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.123421	55352	3768
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.325475	148824	9002
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.023629	4898	2254
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.136203	58940	8779
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.048631	17669	4266
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	40.082841	29375	8538
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.367864	119	40	0.3.1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.034454	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	7.456918	8721	777	0.6.11.6.6.1.2	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intro p; only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.053769	19754	4359
coq-tactician-stdlib.8.13.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.067932	25198	8011
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.048311	15900	3523
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	27.359099	29552	2880	3.1.19.0.4.6.12.0.5.5.4.4	synth with cache (only 1: constructor; only 1: constructor; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: intro l; only 1: intro x; only 1: intros h1 h2; only 1: red; only 1: transitivity x; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.069887	2	2	0.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.041733	12435	6454
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.059452	21991	6688
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.dec_True	40	0.017166	3	3	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.031802	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.047960	15684	5836
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.526917	737	255	2.0.1.6	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.forallb_forall	40	40.063547	8536	2107
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.852202	334	131	0.0.0.0.3.0.1.0	synth with cache (only 1: intros B C x H'; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.059166	23862	3616
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.056690	19919	5625
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.144201	60653	13148
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.793578	326	135	0.3.1.0.0.0.0	synth with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.033927	8897	3275
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	40.694873	353192	5304
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.113236	19	11	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.052744	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	0.268755	17	7	5.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.057744	19509	6347
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.350241	109879	4336
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind	40	40.457592	229604	13623
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.484110	248278	10461
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.compose_assoc	40	0.008646	4	3	0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Program.Combinators.flip_flip	40	0.008320	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	22.539082	14949	4772	0.0.0.0.4.0.0.0.2.0.0.1.4.4	synth with cache (only 1: apply min_unicity; only 1: destruct (min_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: destruct (lt_total n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.100410	38942	10594
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	5.595956	1415	350	0.0.2.0.9	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.077093	26553	4659
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.013014	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.010085	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.121326	2294	370	1.1.5.10.12	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.015511	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.056360	23	5	6	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.022770	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.041008	10	5	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.124859	22	9	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.268636	675	283	1.1.6.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	15.717941	5117	2005	0.0.0.8.1.1.2.0.0	synth with cache (only 1: intros a b c **; only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !(mul_comm c); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.322399	154808	11972
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.004636	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007292	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.011694	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.016722	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.063952	23048	5648
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005621	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.020885	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.077398	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.265413	132696	5948
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.240679	113159	3404
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.095107	39270	4996
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	10.061825	33574	3795	1.11.1.11.0.9.3	synth with cache (only 1: induction 1; only 1: red; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.086575	32761	6584
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	24.904996	7154	2583	0.3.0.0.0.0.0.0.0.10	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.176609	50	24	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.498919	228281	7922
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.236053	433	43	4.4.17	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	27.411249	19200	3683	1.0.0.0.1.0.4.0.0.0.0.0.0.0.2.2.15	synth with cache (only 1: intros a Ha; only 1: symmetry; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: case compare_spec; only 1: order; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: rewrite H; only 1: order; only 1: order; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.048077	19	11	0.0.2	synth with cache (only 1: rewrite sqrt_up_eqn0; only 1: now rewrite ?Hx; only 1: order).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.075336	132	35	2.2.2.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.050978	16057	4989
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	21.371184	10041	3611	0.0.1.13.3	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.553801	129	44	0.0.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.228388	103066	15042
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.922758	645	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.262646	5514	1168	3.2.0.7.0.0.2.2.4.11	synth with cache (only 1: intro p; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.010487	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.062340	23495	3512
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.052226	18389	7849
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.194262	389	38	0.0.11.10	synth with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.071964	25718	4273
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.244937	114999	4080
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.041660	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.13.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.087708	33907	9457
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.008095	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.080782	26796	10713
coq-tactician-stdlib.8.13.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.030028	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.091183	188	26	0.13	synth with cache (only 1: intros [? [? ?]]; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.052340	15813	4973
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.010056	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.and_hprop	40	40.282951	134301	13551
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.true_hprop	40	0.009511	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.not_hprop	40	0.231856	216	55	0.0.1.0.6	synth with cache (only 1: intros h1 h2; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.094465	37091	10221
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.049479	17312	3843
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.030511	7	5	1.0.0.1.0	synth with cache (only 1: intros x y z H' H'0; only 1: elim (Strict_Rel_is_Strict_Included U); only 1: unfold contains; only 1: intros H'1 H'2; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.151518	63548	7501
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.184125	84880	11780
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	10.247205	8648	1834	0.0.7.6.0.12	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	10.237613	52620	2961	0.72.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.041683	13270	4484
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.936554	8328	1026	1.9.17.1	synth with cache (only 1: intro m; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.026024	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.826244	2690	270	2.29.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.366404	101027	3914
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.466352	226491	13010
coq-tactician-stdlib.8.13.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.213315	99144	12371
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	15.317075	11716	1826	1.0.1.0.0.0.1.1.18.0.0.2.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: split; only 1: apply pow_lt_mono_r_iff; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order').
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.089147	31183	8660
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.261581	16009	1328	4.41.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.227869	216	41	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	3.016691	57625	491
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.085085	31812	6307
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.048771	21942	2279
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	3.029075	6129	658	0.0.0.15.5.7.5.3.0.3.3.4.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: intro; only 1: destruct H; only 1: apply eq_existT_uncurried; only 1: subst; only 1: simpl in *; only 1: exists eq_refl; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	11.879728	12388	3651	11.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.3.8	synth with cache (only 1: constructor; only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: left; only 1: auto; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1 as [x y H1| x y z0 H1 ? IHIHclos_trans1]; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_t1n_trans).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.132202	26979	5692
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	26.999802	75599	9206	0.23.4.7.0.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.558207	564	132	0.2.4.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.010713	6	3	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.009778	4	3	0.1.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.009163	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.390717	516	97	2.5.5	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.pred_Sn	40	0.028780	12	9	3.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: split).
coq-tactician-stdlib.8.13.dev	Coq.Bool.DecBool.ifdec_left	40	7.094535	12758	2200	2.1.0.4.0.14	synth with cache (only 1: intro n; only 1: unfold not; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.plus_n_Sm	40	0.290268	222	91	1.0.0.0.0.8	synth with cache (only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.054718	20321	4416
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.249439	78	19	3.2.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.025693	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.161039	74654	9817
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT_eta	40	0.008834	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.208878	96647	11487
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.249370	38338	837	0.0.0.73.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.014690	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig.rew_sig	40	0.016441	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.037703	12017	3963
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.land_spec	40	40.091893	37524	4882
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.101713	39898	6822
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.014313	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.074017	30236	4819
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.065487	23909	6597
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.125074	55472	9445
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.051809	16819	8023
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.508134	250923	13740
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.020303	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.065221	25672	3365
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_left	40	20.089992	64764	5719	3.17.0.1.14.0.9.2	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: intro; only 1: destruct H; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Tactics.decide_right	40	0.021139	6	4	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.099681	36529	10040
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007956	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.011227	13	4	0.0.3	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.008795	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.145514	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.040770	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.003286	6	5	0.0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002118	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.389815	191126	12333
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.010427	8	3	5.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_iff_compat_l	40	0.130116	1101	131
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.726884	2866	600	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.HLevels.hset_hOneType	40	40.231037	107310	11822
coq-tactician-stdlib.8.13.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	41.004939	525489	8431
coq-tactician-stdlib.8.13.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	4.291000	3542	381	3.11.12.8.1	synth with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.100609	41851	9719
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.012530	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Bool.find_none	40	40.048640	16899	4025
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.741928	404	130	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.201472	62	36	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.171079	570	205	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.105928	40843	7687
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.043142	15384	4285
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.313765	153853	11585
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classicP	40	40.414759	200203	8475
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.023608	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.pair_andP	40	0.036196	19	4	7	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.033882	10131	2832
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.090948	33034	9443
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.102585	36134	8585
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.137466	66875	4480
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.of_bits_to_bits	40	41.066495	562450	4373
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.093450	37619	11634
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.449191	206409	9374
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.089716	15115	6094
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.392598	526	80	1.13.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	8.903544	19072	2525	1.38	synth with cache (only 1: intros [HypL HypR]; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.mult_n_Sm	40	40.149651	63945	11756
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.067180	25288	6738
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	14.350837	98502	4062	0.39.10.0.38.11.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	40.194819	94140	10413
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	12.204261	11022	2437	0.1.2.1.0.0.1.2.0.1.0.1.2.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.388977	377	50	0.15	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.069799	38	16	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.639657	490	116	1.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.13.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.016863	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.874914	461391	4060
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.067246	23245	4365
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.096454	39799	5661
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.343440	164660	7405
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.036171	11399	4008
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.071418	27694	4638
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.gt_lt	40	0.934760	285	111	2.2.2.1.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: destruct (le_gt_cases n m); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.lt_gt	40	0.007653	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.13.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.090836	36684	12319
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.072734	29604	8528
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.072547	27670	3775
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	4.250166	924	110	0.4.10.5.9	synth with cache (only 1: destruct b1; only 1: by case b1; constructor; auto; only 1: destruct b2; only 1: by case b1; constructor; auto; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.015080	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andFb	40	0.007758	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andbAC	40	0.015922	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orTb	40	0.004785	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbb	40	0.005719	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbC	40	0.007768	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbAC	40	0.014792	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_id2r	40	0.022566	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_idl	40	0.012328	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.382173	183407	13710
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orb_id2l	40	0.022250	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_and	40	0.008908	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andKb	40	0.009664	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orbK	40	0.008772	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.orKb	40	0.009182	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.andb_true_intro	40	41.013357	539281	16440
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybT	40	0.007829	5	1	4	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyFb	40	0.005811	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implyTb	40	0.006363	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.negb_imply	40	0.009337	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybE	40	0.021434	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.implybN	40	0.009242	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbF	40	0.006274	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbACA	40	0.046785	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addl	40	0.014574	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.andb_addr	40	0.025026	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addKb	40	0.008821	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addIb	40	0.013760	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.addbT	40	0.007264	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.499934	3907	207	0.13.29.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_cancel_l	40	40.526243	264723	22417
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_comm	40	0.185768	332	130	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.classic_pick	40	40.065611	21489	3931
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.filter_map	40	40.172770	27093	6241
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_refl	40	0.066280	143	13	0.16	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.008862	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.13.dev	Coq.NArith.BinNat.N.ge_le	40	10.954468	7106	1465	0.0.1.19.0.1	synth with cache (only 1: intro H; only 1: rewrite le_lteq; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: now left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.062460	21705	4488
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.026547	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.195363	31421	7849
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.234653	8840	945
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.110315	44574	5770
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.069471	26594	7359
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.058707	20607	4973
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.052377	16297	3653
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.076373	31896	4025
coq-tactician-stdlib.8.13.dev	Coq.Init.Byte.to_bits_of_bits	40	40.092214	38516	4447
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.220312	102153	11381
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.098511	14003	5700
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.025049	5	3	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.160786	76695	11033
coq-tactician-stdlib.8.13.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.009350	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.315327	156481	12912
coq-tactician-stdlib.8.13.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	1.049435	11448	144
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.le_S_n	40	40.206103	90572	15521
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.046292	12703	2670
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.307496	13472	565
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.007677	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.008061	4	1	3	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.subrelUr	40	20.747247	49850	4506	15.12.4.41	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.208006	100868	15294
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.150209	69554	3710
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.033654	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.034521	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.072901	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.054397	16404	2831
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	13.101701	16045	3707	0.0.1.0.0.12.0.0.0.1.1.0.1.0.0.0.0.0.0.0.10.2	synth with cache (only 1: split; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: apply clos_rt1n_step; only 1: auto; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1 as [| x y z]; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_split_r	40	25.862016	16327	4268	0.0.0.0.0.0.1.6.0.0.1.0.0.0.0.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros p H; only 1: auto; only 1: simpl; only 1: intros p H; only 1: destruct p as [a0 b]; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H as [H| H]; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_trans	40	0.370093	140	33	0.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: elim H0; only 1: auto; only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.length_order.lel_tail	40	0.022392	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.008269	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.174429	19731	7174
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.047761	5	5	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.093032	38161	7058
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.208116	14	5	2.0	synth with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_double_ind	40	13.493035	34629	5102	1.3.14.0.0.1.3.11.4	synth with cache (only 1: intro; only 1: intro p; only 1: intros H x0; only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.669775	352829	7587
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.055950	17805	4703
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.161371	25556	6942
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.009337	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.min_l	40	4.580173	2709	1537	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all	40	0.507091	213	45	0.0.3.0.12	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.013260	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.452375	351	89	1.2.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.055208	20244	3707
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.and_assoc	40	40.363882	167731	15340
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.universal_quantification.gen	40	0.003671	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.006647	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.005697	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.006907	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.409699	1625	50
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_opp_l	40	0.009070	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal4	40	0.016684	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.f_equal5	40	0.020902	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.006266	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_sym_involutive	40	0.008022	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.map_subst_map	40	0.010295	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.rew_swap	40	0.012111	2	2	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.829517	436730	15027
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.or_assoc	40	40.539625	260896	16773
coq-tactician-stdlib.8.13.dev	Coq.Init.Datatypes.rew_pair	40	0.010551	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.eq_id_comm_l	40	0.351492	1863	54
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.642212	303861	3999
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.069208	26824	4200
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.074842	25794	6970
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_all2	40	10.639739	4065	1677	0.3.1.3.1.0.0.0.1.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: now simpl; only 1: now simpl; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl in *; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_O	40	0.008120	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.714374	348892	2281
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.005123	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.047629	27	5	0.8	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.007870	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011464	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.018375	5	1	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.041244	12264	2450
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.016459	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.sub_in12	40	0.415512	140	18	0.15	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.084576	33112	4848
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.030484	4180	1541
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_combine_l	40	40.085670	32192	8044
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_O	40	0.029315	5	5	0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.302669	238	42	0.0.0.11	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.skipn_all	40	0.032737	7	5	0.0.0.1.1	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.127649	55489	5001
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.068920	24732	3798
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.046206	14243	4537
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_skipn	40	4.888403	2784	791	4.0.0.0.0.2.3.0.1	synth with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.068771	25211	5089
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.074555	26852	8229
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.520118	241777	4632
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.746908	373471	2902
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.008943	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ListPairs.in_prod	40	40.058622	20781	7214
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.109917	45609	4749
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.158086	71391	15121
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	5.727923	2823	805	4.0.3.9	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.SetIncl.incl_app	40	36.668346	15973	4273	7.0.0.4.9	synth with cache (only 1: intros l n x d H; only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.693982	906	116	2.0.12.7.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros H; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.047559	16243	3453
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.154873	68030	11845
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.firstn_length_le	40	23.677883	10046	4067	1.0.0.2.2.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intro n; only 1: induction n as [| k iHk]; only 1: intro l; only 1: simpl; only 1: inversion 1 as [H1| ?]; only 1: simpl; only 1: now subst; only 1: destruct n; only 1: simpl; only 1: intro H; only 1: easy; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.048902	15684	4159
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.083661	31815	6494
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.063068	21773	3473
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	40.163035	42605	6866
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.089328	35696	8400
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.071358	26070	4078
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.056103	19346	4729
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.794708	545	63	0.12.4.0	synth with cache (only 1: apply eq_opp_r; only 1: unfold lnot; only 1: nzsimpl; only 1: now rewrite one_succ, opp_pred, opp_0).
coq-tactician-stdlib.8.13.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.250730	650657	8294
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.400618	183141	6901
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.065232	18947	4897
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.095026	36661	8431
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.148300	27478	4739
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.018521	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.le_trans	40	40.089449	34506	7552
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.008498	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.044157	13450	4175
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.247341	111742	3743
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.043184	14860	3089
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.031188	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.060921	21277	7485
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	2.407845	1173	331	0.0.0.1.0.0.0.0.0.0.1.0.2	synth with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.074334	29043	4824
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.127387	20053	3972
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.051612	16516	5788
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.052193	18086	4506
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.026315	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.071405	27416	4100
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.270983	120355	4476
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.240992	104880	3471
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.071441	26530	3927
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_app	40	40.175743	78062	7312
coq-tactician-stdlib.8.13.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	19.172887	37363	1845	0.0.15.15.10.4.39	synth with cache (only 1: Bool.destr_bool; only 1: move  =>mf mg x y; only 1: intros; only 1: rewrite -> H; only 1: trivial; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.13.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.133171	56167	12924
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.060455	20480	5616
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_split	40	40.080126	30237	7461
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.049385	9	6	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.13.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.135777	56059	12005
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.095701	29128	4015
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Add.Add_inv	40	40.192701	88598	7991
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.069688	17932	6366
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.062392	22737	9194
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.045380	13739	5550
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.084369	31828	5905
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.071957	24429	7684
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_r	40	0.158534	68	32	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.042007	16	9	0.1	synth with cache (only 1: apply max_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	23.765334	30621	3726	0.0.11.25	synth with cache (only 1: compute; only 1: intros m H1 H2; only 1: intro n; only 1: intuition order).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.106804	24	16	0.0.0.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.055151	19873	3263
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.131086	19963	2908
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.182054	44104	4608
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.091439	35793	8656
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.189784	41820	4498
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	40.088306	33989	7627
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.098794	35981	3433
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.183380	32049	3849
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.056996	20345	6162
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.047261	16428	3885
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.083139	29612	5597
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.086795	30234	6226
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.127647	53649	8560
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.078397	27250	6484
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.080764	29573	4671
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.072235	24698	4911
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.077381	29947	5981
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.111466	44682	5544
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.088307	33319	8024
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.064874	21124	4096
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.079298	31612	5234
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.063370	21356	4303
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.054435	17618	3812
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.142427	58599	8838
coq-tactician-stdlib.8.13.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.055139	19536	4854
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.099817	40076	7691
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.060250	23211	5555
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.155244	25738	6667
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.030821	6	5	0.0.0.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.087942	33472	5428
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.132083	62412	4791
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.052002	17336	4071
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.068060	22993	3876
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.070681	24559	4621
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.081389	30343	4870
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.064837	21382	6094
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.102070	38901	5596
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.043702	12871	4385
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.085773	31833	9501
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.082927	30225	6327
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.068866	23860	6300
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.061970	14189	3088
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.074971	26409	6440
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.084678	27466	3434
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.NatSeq.seq_app	40	40.068767	26493	6108
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Repeat.repeat_length	40	0.680192	494	66	2.0.0.23	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.228460	42149	4957
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.096521	40298	7830
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.060112	20781	5274
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.079992	26962	5164
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.096543	43986	4372
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.118967	49794	7382
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.077977	31649	5136
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.101705	44777	5749
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.080531	35031	6070
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.051257	17567	3792
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.070344	24792	5286
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.151116	70293	10180
coq-tactician-stdlib.8.13.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.086568	36644	6714
coq-tactician-stdlib.8.13.dev	Coq.PArith.BinPos.Pplus_minus	40	40.110874	55579	8955
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.095938	43583	5820
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.039761	14204	4260
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.071746	32004	2961
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.076912	33711	6652
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.107558	53685	6711
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.057760	25022	7525
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.073111	32567	7204
coq-tactician-stdlib.8.13.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.042485	18012	4215
