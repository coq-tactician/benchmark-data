coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.030326	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.232301	8	6	1.0.0.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.037401	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.054476	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.753459	427	176	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	0.461683	174	49	0.3.0.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.079359	31713	2586
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.067002	26495	4273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.067197	25531	5132
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.051880	21409	3296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.048476	18409	3734
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40	40.022331	3771	1014
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.028672	8208	3732
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	8.278564	3868	358	5.13.6.32	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.660037	185	67	0.0.2.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.146937	67611	6246
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.061169	22373	5557
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	0.114367	62	17	0.7.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.084205	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.046281	16346	4992
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.103333	43571	5590
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.977295	921	99	14.7	synth with cache (only 1: intros a0; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.080988	33883	5625
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.063897	25082	4511
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.101618	46388	4473
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.054637	19101	5531
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.101133	43789	6347
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.074326	30881	4307
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.056828	22315	4400
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.037742	12216	3828
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.044648	15752	3599
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.055296	20020	3938
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.035436	13502	3263
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.029693	9773	3446
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.138159	68951	3857
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.101192	6897	2457
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.039323	14656	3283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.035769	11005	3736
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.075949	33622	3275
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	40.029444	8503	2773
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.060900	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	40.071031	29326	5870
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	40	40.016927	4263	1552
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.040846	16204	2760
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.030386	8335	3938
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.253557	38492	6608
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	0.021270	6	3	0.0.3	synth with cache (only 1: intros; only 1: intros [y [H H0]]; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.065917	24585	5025
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.065101	25452	5165
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.073949	27412	6968
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.046178	13180	4600
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.055299	19269	5005
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.060830	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.056483	21815	4923
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.032611	8866	4845
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.562090	29878	2589
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.076450	32410	4981
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	37.743821	5329	2029	0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.066799	26661	4225
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.048561	15371	5010
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.043185	14158	4071
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.044113	16918	3641
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.064720	26813	3255
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.042726	15917	3665
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.036259	13006	3426
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.088202	26454	3047
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.037444	12520	3582
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.085477	18670	2124
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.053405	18880	4007
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	40.037691	11782	3034
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.075087	29292	5994
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.089123	37594	5101
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.013781	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.072190	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.069074	15323	3672
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.142456	64897	6895
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.065485	25118	4442
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.024438	7953	859
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.101226	41106	6707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.036541	11501	4734
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.060221	23732	5046
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.090015	37241	5929
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.083330	33157	4028
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.062220	22481	4273
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.044416	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.086150	35628	4593
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	2.371246	744	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.050285	19031	4460
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.103704	23984	5427
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.043609	14782	3834
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.048389	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.059446	23075	3281
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.046159	16057	4028
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.074233	30369	4393
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.040979	16170	3004
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.117908	50712	5503
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.034892	12246	3414
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.042585	11	4	0.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.087645	35782	6747
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.037618	13923	2855
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.043553	15356	3196
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.047801	19481	2800
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.056203	20168	2168
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.072635	28683	5711
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.072272	28523	5581
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.058180	19271	5149
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.014382	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.104681	34461	4265
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.015399	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.019531	5	3	1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	0.051687	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.049120	17080	3799
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.117623	49589	5975
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.131952	50830	5133
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	14.641158	6853	1997	3.0.15.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.032222	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.238059	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.088694	33043	6825
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.053313	21079	1331
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.079881	11824	2747
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.083578	28323	6776
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.155412	85	23	3.1.1.0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: unfold neighbourhood; only 1: intro; only 1: elim H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.179374	30412	3405
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.060668	18734	5757
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.042412	12658	4479
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.039896	11717	4484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.093995	38793	5212
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.060604	24189	4267
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.119730	53339	4939
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	0.011539	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.095969	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.061074	23471	4417
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.069079	26198	3198
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	0.813887	173	48	9.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.111193	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.047591	18192	2853
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	24.921654	5323	2132	0.0.0.0.0.0.0.0.1.0.0.10.0	synth with cache (only 1: unfold Rgt; only 1: intro; only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: destruct (Rle_lt_dec 0 x); only 1: replace (x ^ 2) with (x * x) by field; only 1: apply Rmult_le_pos; only 1: auto; only 1: auto; only 1: replace (x ^ 2) with (- x * - x) by field; only 1: apply Rmult_le_pos; only 1: lra; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.036435	11454	4053
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.043862	15501	3869
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.034280	11766	3152
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.093455	41182	3042
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.060715	22844	3768
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.072015	28748	4730
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.036422	13184	2851
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.079579	26893	4509
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	40.105020	44408	4156
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.028747	10842	1777
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.094102	26854	5217
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.088340	34181	5650
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.021240	3599	1874
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.442649	53348	4473
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.007941	3	1	2	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.139089	22	13	1.0.0.0.3	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.062917	20317	7739
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	10.649713	3847	1341	4.0.0.0.0.1.5	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.055779	17227	2587
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.053832	20348	5215
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.042477	14796	4702
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.068977	23902	6013
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.045993	15174	5267
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.052151	18870	5370
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	0.749962	135	73	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.034960	11710	3610
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.049920	18459	3798
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.071769	25708	5556
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.071415	27281	3392
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.849478	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.036347	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	41.180302	43026	2431
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.348023	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.046634	17742	2671
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.047845	18806	3886
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.368129	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.033819	11459	3437
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.052248	9867	2016
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.079782	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	5.006182	4307	324	0.1.17.15	synth with cache (only 1: intros n; only 1: pattern n; only 1: unfold Rle; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.307605	151	48	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.069703	26849	4006
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	4.936500	10906	925	0.0.22.0.0.0.14.16.56	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.106212	44007	3728
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.038222	10647	4584
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.042323	14950	3209
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	2.488336	1615	326	10.2.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.006026	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.119058	51175	4535
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.075741	29351	4736
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.079481	30376	6273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.048449	13987	5615
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.075255	29669	3621
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.103568	45059	3653
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.233735	43555	4292
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.088305	36273	4098
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.008901	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.028480	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	40.037763	14209	1452
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.078162	26428	7524
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	17.429664	19768	2778	1.0.9.0.9.5.0.9	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.035687	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	40.089336	37611	4395
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.057552	18887	4681
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	1.673440	771	283	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.064141	23034	5695
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.110330	27561	4434
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.043076	12810	5437
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.072105	26090	4453
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.064689	25921	5294
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.091727	35466	8231
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.031804	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.038377	12344	3888
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.033116	12234	2835
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.069345	27718	3764
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.093368	35464	6138
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.070507	24418	7722
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.042149	14309	3623
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.179459	82033	4091
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.154369	71450	4760
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.055640	21844	3802
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.054224	16629	6237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	2.331621	1350	257	0.7.0.0.6	synth with cache (only 1: intro LS'; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: exists x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.101845	42291	4294
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.119580	50186	7255
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.760300	36526	6265
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.127710	56035	5010
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.045923	14736	4779
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.343073	11485	1226
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.178134	53810	3535
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	40.034787	13665	995
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.061848	18458	7377
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40	40.069758	25347	4600
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.115358	50608	3356
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.072460	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	40.127513	51228	5944
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.261369	48181	6558
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.227386	43	18	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.061469	22453	5448
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.223729	56	24	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.014277	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.021484	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.046756	13940	5830
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.044124	13885	4947
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.083566	35085	4511
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.705730	7824	973
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.057822	22108	3586
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.184582	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.247319	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.068035	23000	9976
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.033279	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.057385	21655	3518
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.101935	10	10	1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.048067	17402	4035
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.049089	17847	3198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.088602	34838	5803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.109789	48075	4031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.014751	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.094903	39746	3989
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.702113	40564	4871
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.037409	11993	3449
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.126892	60005	2792
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.099332	38553	2920
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	42.692509	92022	2231
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.062238	18725	3091
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.059774	19787	5846
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	27.841105	41380	5145	20.1.0.10.9.0	synth with cache (only 1: unfold open_set; only 1: intros HCutL HCutR Hfix env; only 1: unfold neighbourhood, disc; only 1: intros; only 1: unfold Rminus; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.096980	36324	6107
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	0.270143	50	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.524960	52170	3621
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.088701	35630	5017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.025844	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.072833	26413	5206
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.131056	59358	4199
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.064781	22493	6130
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.080620	29514	5881
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	40.139089	15274	1244
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.054587	17598	5139
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	40.103275	41587	5371
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.025326	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.174750	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.024040	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.377638	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.062547	21740	5881
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.064267	24155	4600
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.042357	15117	4035
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	9.009753	10684	1397	9.2.1.6.6.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.130655	56640	7504
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.050581	18723	4446
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	40.062080	25544	3269
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.036455	12130	3299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.064266	21614	5771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.115725	53958	2952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.036837	9949	1698
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.023000	752	127	2.4.12	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.045347	13881	3484
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.127447	23472	3354
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.033403	8108	899
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.087987	38582	3134
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.106230	45806	1727
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	11.640363	5505	1371	1.2.11.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.052143	20922	3310
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	42.354010	26855	3284
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	40.072949	25793	6536
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.233180	105783	5462
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.077478	28672	4572
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	40.037752	9435	4826
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.089868	33136	5562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.074062	24716	4234
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.005438	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.068225	26036	5411
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.196157	20043	1505
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.191340	3940	928
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.065541	20566	7208
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	7.058084	3666	847	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.051600	16591	4566
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.078504	26782	4315
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.065393	24111	4139
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	40.360732	23550	2519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.559593	577	77	0.0.2.12	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.023994	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.110479	49431	4574
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.127718	56676	4229
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.064054	18506	2269
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.110322	5	4	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.060268	18393	6503
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	0.177243	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.048064	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.054098	19940	3454
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.018373	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.045798	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.024784	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.031860	10603	3393
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.069458	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.503094	125	72	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	42.540656	34781	1694
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	30.466737	15613	4176	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.041129	12714	5178
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.371205	19925	1899
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.939445	365	105	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.120089	50899	3543
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.100308	42977	4499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	43.775308	8679	1512
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.056450	15965	6084
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.268847	18086	3319
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.055310	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.063532	19942	6008
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.100239	39731	6410
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.121503	12393	5287
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.114161	45465	5959
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.061005	22940	4740
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.047851	16076	4576
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.075528	23406	8105
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.080296	32315	2748
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.032330	2211	493
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.053522	19288	5242
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.047349	15389	3702
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	40.072966	26797	7275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.321885	157329	4963
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.082460	32670	4080
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.007415	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.043923	14263	4272
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.029906	7885	2760
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.051037	18325	3113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.185319	88263	3005
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.028710	16	5	1.3.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.040972	15468	3347
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.027608	8461	3768
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.138662	60688	4896
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.128689	33480	4325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.106919	48718	2537
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.055150	20511	2897
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.046211	17494	2979
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.423723	38524	4128
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.059302	21488	3737
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.082494	31343	3800
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	41.010991	17646	1636
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.056904	18858	4060
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.072256	28758	3440
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.040664	13131	5041
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	40.041526	12313	5405
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.854596	43424	3071
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.063138	19928	5688
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.189700	25757	2996
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	10.402352	11033	1013	0.0.4.1.1.0.0.2.23.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.069231	22349	4190
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.044166	17519	983
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.039424	11282	4722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.041252	17347	1815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.378490	131	47	0.8.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.529159	74398	5392
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.109003	42619	3153
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.038712	12005	2821
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.090698	36924	4498
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.857075	28158	3302
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.031443	9592	2480
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.068620	25955	4106
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.075016	24943	7651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.103149	45895	2533
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.023202	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.108371	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.010211	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.039291	12768	2935
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.027599	8307	3220
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.076166	28947	3362
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	22.251149	14211	3682	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.071036	27793	3748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.087763	37707	2607
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.071682	22873	6942
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.142492	34476	3091
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.958287	24625	2684
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.047462	16863	3967
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.116625	10582	1956
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.299029	16121	2754
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.094769	37407	5072
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.674689	2924	266	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.083610	34705	3398
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	0.801999	390	76	1.0.0.0.13	synth with cache (only 1: induction l; only 1: intros a0; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.266567	766	169	3.3.1.5.0	synth with cache (only 1: apply Vector.caseS; only 1: intros; only 1: destruct h; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	0.990780	242	96	3.1.1.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: simpl; only 1: intros n m p H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.091694	38619	4468
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	40.074357	27978	4270
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.034358	7912	2755
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.235829	61244	3612
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.099657	39728	4400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.057438	18579	3792
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	9.850089	12895	1546	0.0.18.0.5.10.0	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: elim H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	11.316112	7937	634	6.0.0.0.17.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	9.907856	11934	1558	5.6.2.6.8.0	synth with cache (only 1: unfold included; only 1: intros A A_wd A0 AS; only 1: intros; only 1: intros del H9; only 1: unfold intersection_domain; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.038203	11772	4209
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	3.752330	5093	660	2.2.1.20.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: auto with ordered_type; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.033070	5225	1097
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.085389	36929	3450
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	40.615370	212652	1839
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.063054	23585	4508
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.044191	14928	2461
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.853029	32661	416
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.020012	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.091676	22894	4398
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.045581	18014	2066
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.070001	24539	3964
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.016836	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.641048	2271	142	1.0.41	synth with cache (only 1: case_eq (Fin.eqb x y); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.723075	86	63	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.161656	12	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.017916	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.011275	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.013068	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.036341	12739	3024
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	40.031186	9332	3466
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.110252	45687	3451
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.081024	28753	5439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.038523	15306	1922
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.065517	23365	3789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.809864	313	92	3.0.0.0.2.0.3	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.028379	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.008204	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.768468	1285	249	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.118762	51386	2634
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.161160	75745	5473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.009059	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.041289	14012	3184
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.541551	287	96	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.038269	9509	3942
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.064704	4609	1899
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.066897	25569	2088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	10.622454	49706	463	269	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.139463	62019	4831
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	40.271178	27001	2213
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	9.299754	820	465	1.1.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.086380	37303	2207
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.315950	36482	3754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.060123	17874	5190
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.194945	92526	2489
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.066868	23225	4809
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.104386	46056	5717
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	5.813009	943	256	0.1.12	synth with cache (only 1: intros m H; only 1: destruct H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	23.200954	39590	1939	14.5.55.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.658061	68846	5795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.071076	2620	252
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	32.018625	10516	2982	1.15.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	41.224388	9155	3223
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.097504	39346	4210
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.353977	1019	159	6.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.075398	32362	2514
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.178117	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.832708	921	97	12.0.17	synth with cache (only 1: red; only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.044480	13616	2733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.054875	20447	3077
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.108034	44287	3301
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.248920	117521	1540
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.037927	12960	2674
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.968931	25446	2640
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.016959	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.061970	24326	3288
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.053290	18831	2808
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.172525	30541	4192
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.079380	28219	3920
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.106769	48252	3780
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.038067	10009	4039
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.040837	13623	3004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	41.384521	28642	4744
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.139766	56763	5033
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.007028	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.142254	58421	3675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.185921	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.036225	9674	5239
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.098953	38561	3555
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.134507	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.029325	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.519842	30	11	0.0.0.6	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.530853	43	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.221205	3	2	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.621243	16	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.304941	9	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.420477	19	11	0.6	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.210238	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.068377	24160	4030
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.093814	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	41.045858	13120	1205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.065753	21211	4379
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.184926	83638	3613
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.186434	81594	5553
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.121091	44889	5348
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.105604	43775	809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.070152	24067	4606
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.063835	26555	2731
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.135019	60649	2516
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	41.438656	16609	2964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.057176	16981	3803
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.169738	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.189398	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.543891	30774	4496
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.040753	25	7	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.027907	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.045983	13243	3328
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.020728	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.930895	7	2	0.5	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.090618	34821	4901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.158451	74884	2851
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.034202	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.112837	42805	4628
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.204333	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.072619	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.138779	16	4	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.675031	66	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.602247	36	7	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.035338	11628	2955
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.289512	5	3	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.090491	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.103534	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: intuition; only 1: do 2 rewrite F.union_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.829725	9793	1694
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.273360	5	3	0.0.2	synth with cache (only 1: destruct (subset s s''); only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	7.089351	13855	621	7.0.13.18.0.81	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.252164	12	6	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.067608	20716	6565
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.246540	143	17	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.008865	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.244621	68	12	7.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.429960	30	8	3.2	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0.908842	40	15	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	1.393729	68	53	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.025063	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.033919	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.072943	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.082479	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.062662	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.036144	2667	786
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.332970	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.564718	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.374642	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	3.671142	4013	374	19.0.24	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.101442	45665	2819
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.092862	32600	1695
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.029103	8443	3686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	5.239885	438	106	3.0.7.0	synth with cache (only 1: expAdd; only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.043423	15057	2959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.736880	34785	4723
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.057021	21552	3497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.107552	39894	3958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	34.641694	10452	4360	0.0.0.0.1.0.0.3.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: assert ([|b|] > 0) by lia; only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.269327	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	41.892411	36971	2281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.081924	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	21.767826	2678	2020	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.021342	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.014784	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.051076	4039	829
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.198027	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.069449	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.056143	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.699604	100961	3504
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.068542	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.432303	20	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.041951	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.078418	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.032880	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40	41.399536	65462	3600
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	31.217297	10742	1318	0.0.0.3.1.6.1.18.1	synth with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: L.MX.elim_comp; only 1: auto; only 1: eauto with ordered_type; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.625914	60	17	2.4.1	synth with cache (only 1: expAdd; only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.117146	46457	6173
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	40.230082	23361	3602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.293052	17326	1148
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.056394	20053	3278
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.089539	34707	4614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.063273	22041	3714
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.069488	20780	5519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.167757	78387	4488
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.076222	24240	2396
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.153379	17	5	1.2	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.058937	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.022796	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.018813	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.042895	13287	2572
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.082893	31058	4917
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	41.010959	54863	6960
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.014758	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.007829	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.008413	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008483	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.009933	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.011948	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.008877	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.023291	3493	428
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	3.508172	738	272	1.2.1.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	41.134492	14688	1422
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.126961	54442	3756
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.085014	36604	2327
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.222761	40314	3167
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.041579	12921	4283
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.168832	23397	2025
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.113392	24745	727
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.262979	126138	4870
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.920483	863	94	2.6.17	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.031797	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.817502	166285	3181
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.029342	8363	3040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.176997	79808	3786
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.069321	23785	4139
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	43.982105	27449	419
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.374320	107027	4029
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	41.347155	15720	4048
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.043105	15039	2993
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.694873	31342	3203
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.092490	35188	5007
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.113986	44728	5925
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	4.054728	2168	335	0.24	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.090978	25364	3554
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.008679	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.017633	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.044889	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.093432	4324	1011
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.747673	62	22	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.086893	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.435975	40543	4078
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.023051	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.083774	34729	4201
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	3.015059	1771	227	3.17	synth with cache (only 1: intros n A f x; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.085857	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.058856	19594	3455
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.074845	27176	5189
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.061511	23057	3032
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.053369	17134	3619
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.047694	13728	4615
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	2.988865	1429	181	1.5.16	synth with cache (only 1: intuition; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.063184	22858	3951
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	8.107467	4797	794	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	5.248627	5500	475	1.1.0.29	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.508520	742	206	2.1.2.5	synth with cache (only 1: intro Hz; only 1: red; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.788262	448	133	3.7.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.089436	18	6	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.185526	332	158	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.182904	15271	5275
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.007495	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.241198	304	111	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.088151	29689	3004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.013955	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	40.823960	23665	1605
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.191938	40856	6181
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.129224	57786	3973
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.986002	14	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	1.883631	414	99	0.0.3.0.5	synth with cache (only 1: destruct 1; only 1: destruct (CRltLinear R), p; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.784952	44	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	9.265910	1919	700	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.030791	8592	3786
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.297209	17211	3707
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.197058	94488	1574
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.087805	33393	2706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.345835	170105	5745
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.025550	6451	3127
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	10.844329	9834	1280	1.1.1.1.0.0.25	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.094656	36128	4653
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.012390	2659	1134
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.333560	15802	1703
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	41.134199	17454	2290
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.083924	31193	5016
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	41.375271	9573	3984
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.008454	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.282897	19166	3151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.159624	69895	4007
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.097067	38736	5735
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.931948	3	2	0.1	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008658	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.841145	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.008760	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.006927	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.028245	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.038628	8006	2202
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	40.957440	43220	1999
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.052356	18746	3755
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.103611	39916	7088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.354717	29870	2688
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.290560	34	10	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.258554	73	11	10	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.050784	16607	2647
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.386364	51870	4334
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.039463	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.038139	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.018259	13	3	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.053642	16500	4141
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.895063	35407	3503
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.063144	12527	1286
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	42.605580	50292	4429
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.020397	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.023028	5909	2393
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	40.554295	20426	2915
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	40.353041	21995	2515
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.023578	5192	3294
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.291568	30899	2854
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.155177	70808	4561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.036065	551	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	41.372874	69093	5015
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.650975	56265	4451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.158833	65593	5039
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	41.306625	123645	1719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	41.213051	34097	5145
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.053828	20282	2838
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	10.989408	5110	267	31.15.0	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.358094	15360	846
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.062928	21785	4264
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.085599	33766	2722
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	40.463372	14614	4389
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.059023	10064	2580
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.030526	8	6	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.764822	4301	1830
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.008497	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.091539	26054	3103
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40	40.096388	41121	3740
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.095892	36985	3919
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.083172	28165	5686
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	12.465507	2962	220	8.8.6.11.3.18	synth with cache (only 1: case (ceqb_spec CRmorph); only 1: intros; only 1: constructor; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.072120	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	41.356486	85122	6651
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.171481	68190	5343
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.445563	38996	1631
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	2.173795	1563	189	19.17	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.786452	50035	4751
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.064895	21781	4201
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.078502	26815	5187
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.987751	23614	933
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.043301	15041	3164
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.617935	735	183	22	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.029119	7059	3116
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	40.992687	12088	3582
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.087891	31005	3020
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.359831	37816	4008
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	43.268910	15966	2406
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.751525	19964	2266
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.009486	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.015693	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.012773	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	41.549735	85990	6223
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	3.046897	4869	406	2.1.1.3.31	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.095387	17889	1967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	5.116502	5832	862	6.1.3.17.2.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.020405	5416	2366
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	41.351913	89316	3277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	41.172434	79471	4927
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.035596	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	11.078318	3043	734	0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.238021	2811	552	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	20.124518	12988	3864	0.0.1.25.2	synth with cache (only 1: intros; only 1: unfold Rgt, Z.pred; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.168787	14790	4388
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.086315	35234	4170
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.134969	53409	4305
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.932991	35085	4913
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.039684	9624	3099
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	40.150786	71792	2259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.711637	27638	4782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.370639	14360	1072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.042744	13667	1831
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.501187	339	191	0.0.1.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply (fold_equal st (f:=f) Comp Ass); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.057157	17897	5213
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.067349	24193	4190
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.070300	23108	6217
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.168269	5220	611
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	41.491221	93695	2746
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.454424	41968	2022
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.085862	33042	2269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	10.211738	4233	1473	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.078402	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.014616	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.018284	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.178775	29771	4924
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.044718	4454	827
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.034675	11985	3039
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.032537	7881	3728
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.284132	40917	3160
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.238684	29498	3909
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.951764	56818	3961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.172896	80719	4347
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.123870	56215	3290
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.803323	63162	4911
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.920474	96894	4894
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	41.384457	76414	6654
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.985094	10706	2218
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.134990	55097	5579
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.067081	22070	6508
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.045397	13255	4623
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.102084	39104	6160
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.485177	51809	6330
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.135684	44940	4728
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.252784	17920	4169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.057048	20540	3107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.022354	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	40.968851	29554	3412
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.074204	29827	3565
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.050348	16120	4952
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	14.194073	35274	1633	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.081040	30963	4761
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.775146	1252	125	22	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.928937	5578	565
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.608939	96741	4058
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	27.421006	19644	1770	2.7.1.0.0.5.17.9	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.184134	34173	3677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.098091	16663	5626
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.341051	27906	2732
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.309536	76647	3130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.774969	137	80	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	12.238868	1265	116	1.0.26	synth with cache (only 1: induction x; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	41.032655	37847	4428
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.069933	22150	5978
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	7.739374	1285	92	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	9.119727	5809	872	1.0.0.21.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	4.041828	2334	354	8.0.1.12	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1.027866	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.245225	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.035989	10907	4427
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.047746	15601	3351
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	41.905709	33043	2772
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.250915	62182	4439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.087611	35168	3852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.024776	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.499972	46188	7573
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.006562	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.960878	7737	1315
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	41.216350	60825	4753
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.220081	99502	6227
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.076147	21969	7639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.283932	68145	5092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.011400	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	40.100704	39900	4243
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.695360	210	45	7.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.123919	13	10	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.088905	32766	4168
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.170528	1996	623	0.0.9.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: intros; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	41.032659	28140	5819
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.042226	8	6	0.1.1.0.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.083951	9632	1600
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	40.096961	9719	1701
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.095235	40497	3546
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.816722	22863	3623
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.034089	6712	1028
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.234179	104	32	3.1.2	synth with cache (only 1: intros n m H1 H2; only 1: apply CReal_mult_proper_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.019982	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	41.417299	35899	4272
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.017093	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.262496	119587	10233
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.083974	30200	2626
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.141821	36273	4172
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.417673	24124	3109
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.219088	30967	3537
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.052424	6855	1313
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.175222	37126	4980
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.581249	6768	4678
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.766426	474	118	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.177946	59843	6154
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.047230	4008	392
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	41.328531	48508	4675
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.529975	407	70	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.060420	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.812942	74406	3986
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.051853	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.029123	7563	4336
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.232366	16465	3764
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.065704	21790	5144
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	14.794229	7574	2860	10.6.1.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.050987	18974	4108
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.154094	57975	6641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.044925	6	1	5	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	41.109007	40308	3608
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.126614	35136	4638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.636738	10189	5246
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.094524	34349	6215
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.894590	405	162	0.4.0.4.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.064113	23379	4434
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.119524	49941	4333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.743632	64529	4463
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	41.031193	51396	6333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.074911	18084	3494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.924035	56672	7753
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	40.294592	28557	5762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.554689	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.066563	22809	5609
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.054282	18502	2986
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.999223	23528	5079
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	41.271025	72237	4311
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	18.159954	17527	1981	0.0.0.0.1.0.7.1.8.9	synth with cache (only 1: destruct x; only 1: intuition; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.063829	23759	3462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.068002	27768	2885
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.154594	31614	4166
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.577369	8819	5014
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.139786	60454	3565
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.696086	32488	5494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.844273	54674	5474
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003665	800	303
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.677101	2201	165	4.2.14.2.18.2	synth with cache (only 1: split; only 1: intuition; only 1: auto with *; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.952518	33905	6845
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.708592	18775	3349
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.042625	14320	3419
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.423577	6778	3412
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.112992	34026	4557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.075466	29283	2506
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	4.711560	2325	849	0.0.0.0.0.0.2.5	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.022446	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.090632	27944	4338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.303462	37219	2430
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.990035	37437	4072
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.059070	16180	5713
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.077030	28013	3499
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.027073	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.101022	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.071201	23812	4531
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.046717	11544	4678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.862961	76816	4149
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.121675	45778	1408
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.066044	11573	3375
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.201128	40409	5051
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	40.407149	25735	5299
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.511285	58517	4840
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.059211	23623	3225
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	40.491800	72159	3229
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	41.440221	10853	2159
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.010904	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	41.224401	40471	3699
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.028808	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	2.300931	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.147870	60325	5401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.034674	11691	2334
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.155653	67994	2942
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.470908	38875	3732
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.191190	37018	4473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.112748	26619	2353
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.025595	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.077950	31538	3085
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005481	1922	205
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.143434	18745	4132
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.043991	14063	3148
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.023660	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.021619	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.960227	27658	4352
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.033818	10	5	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.235126	13219	3750
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.064239	24841	4262
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.406631	56	12	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	8.103027	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.058848	21980	2764
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.757685	59102	6352
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.084083	19489	4683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.180549	47350	2798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.680816	23583	2655
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.063449	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	41.044341	23139	4317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.369575	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.048928	13662	4769
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.046429	13599	5403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.077615	29708	2955
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	4.494571	1625	710	2.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.031654	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.255963	103867	2731
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.052247	13673	3051
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.437258	2069	377	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.025146	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	25.216019	27805	4123	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.095996	37267	5510
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.522792	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.489217	47062	5570
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.053520	19942	3194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.023790	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	6.919160	4132	792	0.4.3.2.1.8	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	26.405946	613	128	2.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	41.133807	15640	2163
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	0.792070	221	65	2.2.4.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	41.105076	8316	1214
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	41.448542	132854	2876
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.057465	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.085859	4753	1050
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.514014	37395	5937
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.041085	12403	3224
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.093406	31608	8757
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.125235	51684	4189
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.038395	15556	1479
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	2.920631	1589	463	11.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.038422	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.037501	10397	3426
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.656654	1103	270	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.447632	125436	5140
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	40.659546	30488	5495	13.4.0.10	synth with cache (only 1: intro; only 1: unfold permutation, meq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.503140	11339	2464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.187587	83702	4446
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.793539	27898	4976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.647570	11575	730
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.170877	73321	3965
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	41.129239	34102	3167
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.086118	32082	4853
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.715444	68505	4135
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.019140	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.051721	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.718674	32662	4695
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.088422	4987	1550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.214064	22396	3464
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.280405	94307	4323
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.130639	38132	3566
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.619583	2886	566	14.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.291790	140303	4310
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.119218	14997	1491
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	41.185735	56871	5614
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.060512	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.095376	37751	4610
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.136558	56440	5223
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.439868	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.008065	2946	151
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.000160	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.968239	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	28.747300	43514	3738	0.0.18.18.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	41.330601	64234	3608
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.051773	20335	1943
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	1.333374	723	55	30	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.255573	68251	4769
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.121532	52459	3614
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	42.571189	17766	2813
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.183553	75	22	4.0.0.2	synth with cache (only 1: split; only 1: solve [ inv Raw.MapsTo; auto ]; only 1: destruct m2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.610324	29915	4179
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.849369	109341	4319
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.694314	63200	5895
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.715551	29375	2430
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.663636	103203	6327
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.668554	28213	3479
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.051317	12884	5219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.084796	31315	4104
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	4.483766	718	347	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.821113	69535	3261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.131050	56298	3810
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	40.597646	88694	6809
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.175214	18104	2481
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	41.131803	49284	4638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.096313	33399	6466
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	41.134963	29099	3627
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.906549	11669	532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.121805	18784	2892
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.133731	57077	5107
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.086905	32514	3474
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.053475	16311	3491
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.064578	24512	2934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.078809	24367	3165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	8.317294	5522	1276	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	41.087546	93194	5810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.755196	44395	7054
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003201	725	143
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.811511	4546	974	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.887395	51364	5730
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.051273	17354	2655
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.859633	167357	6148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.020991	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	41.544202	45499	4696
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.230864	26845	2161
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.066921	26785	3114
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.084632	30770	3513
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.790526	22660	2579
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	41.290874	58652	1606
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.826744	22500	2784
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.128872	57046	5209
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.487593	19573	3310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.203195	88342	1717
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	41.311455	42965	2947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.747367	41543	5218
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.124973	49005	3916
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.050823	17720	2694
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	41.238835	37524	1664
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.709200	52631	5089
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.830316	17870	3266
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.853111	28178	2398
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.042524	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.165832	13904	2941
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.891569	2199	229	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.125552	16679	2820
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.042844	11106	4131
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.073874	19893	8959
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.069037	24056	5007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.096595	34911	4871
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.632238	47360	4359
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	40.946500	58914	4466
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003408	1232	121
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	3.199551	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.098123	38296	5575
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.120182	50193	5560
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	41.035447	46799	4272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.037617	4628	254
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.234053	52487	5561
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.586175	9037	4280
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.105848	45072	3729
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.079606	29173	2791
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.556972	16401	3593
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	41.210755	11279	1585
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.827256	22023	3154
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.160300	74027	5399
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	40.881371	41285	2813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.682269	22027	3857
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.202001	34714	3931
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	41.213185	44015	3539
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.693893	47845	4891
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.094723	35491	3217
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.406295	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.198036	40873	5230
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.816290	17928	2355
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.024064	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.232085	30788	4630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.068148	20756	4569
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.128201	52700	4871
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.155382	67305	5075
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.254503	126573	3313
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	1.730989	532	114	1.0.0.2.5	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: trivial; only 1: trivial; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.075752	23216	4532
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.313158	77	39	5.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.102429	42449	4514
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.198668	68684	3196
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.587777	62647	5346
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	2.986450	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001289	221	73
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	41.218131	29481	3191
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.816552	19639	2719
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.089851	33858	5462
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.738564	32675	2193
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.060097	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.039018	15703	1458
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	41.124681	28506	3175
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.157488	61935	6283
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.776432	9282	4895
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.055420	17716	3617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.768530	24762	3451
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.277750	127321	7451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.817216	779	135	1.1.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.022479	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.025638	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.986241	3675	415	19.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.060755	19657	3447
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.345145	109662	3958
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.520026	23266	1658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.076658	27737	2756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.963364	61818	2297
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.976380	22321	2219
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.684920	41660	4297
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.731005	30976	4873
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	41.068104	45293	3789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.133389	56977	3869
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.779924	24459	3861
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.863444	35703	2979
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.136245	56483	4655
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.098433	17629	5047
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.097505	38916	3820
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	22.132477	23009	1860	1.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.125157	52122	4269
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	40.223909	77188	4857
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.150585	65366	4293
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.686242	7162	1420
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.174141	43408	4176
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	22.232662	29634	2362	27.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.404280	42974	4603
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.131848	50535	4213
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	14.386603	21422	1012	0.0.0.0.0.0.2.64.0.12.70	synth with cache (only 1: split; only 1: intuition; only 1: firstorder; only 1: intros l'; only 1: intro; only 1: intro; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000743	77	29
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.591513	9370	2111
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.162394	38400	4881
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	41.029889	37526	3404
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.230459	19	4	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.079927	28087	4980
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.878595	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.598716	7862	3244
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.016552	4	2	1.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.319861	336	47	2.11	synth with cache (only 1: intros a n; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.801953	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.008368	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.429246	17769	1885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.057975	18629	4080
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.177310	53502	4755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.128451	53562	4345
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.637202	24037	2391
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.590465	42892	4776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.011861	2	1	1	synth with cache (only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.575628	37520	2647
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	41.043708	49732	2455
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.010073	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.752422	36859	5706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.950755	54846	1855
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.152755	60213	5761
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.726343	29313	3836
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.073977	28516	2606
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.061214	18818	5914
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	41.791048	47135	3838
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	25.772192	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	40.811232	39418	4185
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.619710	56643	4547
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.074806	26943	3904
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	12.102082	7595	1284	1.1.0.0.9.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	40.282937	48955	2779
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.060613	17097	6834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	10.376690	5737	658	0.16.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.095177	38929	3128
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	6.980813	2298	419	3.11.3.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.448702	26190	4606
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.016363	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.007541	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.088655	32452	5346
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.689613	29066	2465
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	12.942618	3397	1232	1.7.4.3	synth with cache (only 1: do 2 intro; only 1: generalize (Rtotal_order r1 r2); only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	23.679436	18817	2120	2.15.2.15	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.076423	28632	3419
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	41.027236	121137	6186
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.113510	46701	6372
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.512724	32476	3445
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.024020	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.753573	90382	560
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.307817	82340	6258
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.580993	80772	6190
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	4.915033	4095	230	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.824328	27694	4304
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	6.834432	4020	773	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.551853	42760	5546
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	41.018309	24264	1437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.075641	31277	2442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.891100	26704	3221
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.707846	27874	5917
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	8.081159	6840	572	13.10.2.12.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.046892	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	6.913284	19765	550	104	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.090047	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.222318	58269	5316
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.058770	25014	1455
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.661538	163632	3837
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.018211	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	1.007459	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.007542	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001083	131	35
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.064311	22245	3320
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.080639	16965	3722
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.085697	32872	3931
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	40.565258	25565	8377
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	9.102497	8303	327	81	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	40.689796	49871	1455
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.950538	33052	4144
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.062725	21160	3818
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.097916	30559	3546
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.950723	45492	4316
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.164352	71491	4987
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.526972	41104	2994
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.290939	57327	4466
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.710107	28523	2270
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.075813	22862	7691
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.161523	31072	2997
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	4.397465	3853	525	0.3.2.1.16	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	19.391067	28358	2548	4.0.94	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.266865	5083	794
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	14.923019	8566	1365	11.19.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hy; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.108449	43558	5898
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.591478	6415	4800
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	41.149177	33956	4551
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.141708	113	23	14	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.436015	30360	3548
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.572598	118113	6803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.931961	41307	6087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.056100	14440	2630
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.925570	27411	3185
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.191675	826	258	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.059547	23410	2604
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.964107	58732	3018
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	21.565625	14078	2052	0.0.0.6.20	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.861521	27372	5383
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.904041	27102	1635
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.729694	64392	1821
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000785	67	35
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.708838	34445	4379
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.076736	28637	3673
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	40.133478	38834	7023
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.090096	20927	4621
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.472787	17914	2406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	41.066957	24676	3169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.156056	109	41	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.215558	98317	4386
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.896480	24849	5902
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.346512	2100	352	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.512334	32909	3071
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.505638	20720	8790
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.048129	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.075714	21267	7542
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.026434	5	4	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.721389	22974	1580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	3.237410	5751	105	0.0.104	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.060572	23064	2484
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.160388	43444	5221
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.107846	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.139992	58622	3853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.206202	22914	2499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.669769	3542	77	83	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.035584	8469	297
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.275789	13363	2219
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.353359	1359	67	1.0.0.46	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.025083	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.010303	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.696777	5405	4044
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.839243	26225	3535
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	40.666488	17642	3746
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.021581	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.019450	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.376075	50765	3660
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.057015	21373	2386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	41.022317	12515	2693
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	13.672515	17276	1476	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.663254	32113	3092
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.129338	39765	5519
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.509547	21886	2885
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.949642	27216	3428
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.108513	43281	5463
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	41.171008	25137	1229
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.564652	20586	3050
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001104	176	33
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	30.577355	20207	2163	3.40	synth with cache (only 1: intro x; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.082767	32596	3795
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40	40.941134	27458	3671
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	35.846711	78023	4338	0.0.2.121	synth with cache (only 1: revert a; only 1: intros m; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	3.314825	1043	129	1.1.0.14	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.885595	16876	2292
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.123477	35624	6209
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	5.564364	4235	842	19.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.632083	50331	2323
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.582754	28518	3124
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.852775	15692	1285
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.074747	25173	4541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.056666	13621	5767
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.025430	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.868865	43405	6650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.046112	18216	2340
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.709382	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.053531	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.650628	12440	1499
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.455394	22864	2177
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.574373	44182	6478
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.484669	1072	168	1.14.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.066900	17842	6045
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.054912	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	0.896387	224	111	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.054084	143	11	17	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	8.321604	4664	395	37	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	3.832221	2537	479	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.188349	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.195176	33565	2241
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	18.328069	4179	1582	0.9.0.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: repeat rewrite same_genN; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct y; only 1: simpl; only 1: norm; only 1: simpl; only 1: rewrite (ARgen_phiPOS_mult Rsth Reqe ARth); only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.596567	15691	2525
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.008007	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008515	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.011501	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.005752	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008645	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.007084	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.356071	53058	4560
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	2.250374	282	103	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.227728	99772	4107
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.602896	7076	844
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.033504	8058	4027
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.109874	29785	5245
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.984226	51145	4013
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.131402	55384	6508
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.071543	23565	4753
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	41.010409	17625	3351
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.053742	14259	3427
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.858329	70448	4663
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.280443	22199	2416
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.114549	38296	3042
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	3.503969	1584	72	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.060725	18406	5612
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.004427	439	53
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	6.160905	10326	656	30.18.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	41.181684	68777	4040
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	41.175229	26095	742
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.073523	12447	6086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	9.376871	2302	288	0.1.0.6.8.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: intros Ha; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	41.262818	141417	4975
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.895250	45266	4660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	41.148283	39204	2470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.060606	26305	2014
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	4.346458	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.555164	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.711113	37488	5012
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.291645	70493	4047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.217692	26831	4853
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.090579	33555	4673
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.793294	33658	4036
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	41.074316	9302	1002
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.772684	41723	4285
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.673466	24371	2672
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	41.010080	21461	2481
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	1.369763	60	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.545869	30183	3660
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.067460	4573	999
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.557883	44958	4964
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.037896	6951	3879
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	27.182214	24220	2905	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.665350	18466	3063
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.639829	12343	991
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.083343	37042	2537
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.933840	18587	3582
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.036415	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.738166	130	48	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.863381	43361	3599
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.069440	20117	2854
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	41.285582	7920	1159
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.073106	28371	4004
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.002879	497	87
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.170941	20443	6076
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	41.187670	54315	4304
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.435697	5793	2348
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.087502	29499	4047
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.612467	39368	5700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	23.891525	14994	1984	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.028769	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.755052	12717	1687
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	2.920981	2177	280	0.0.0.28	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.422602	35	13	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.015667	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.025623	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.156424	30553	3863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.045266	12504	3781
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.669844	36800	4945
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.924794	42716	4325
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.396029	38996	4591
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.354777	23078	6480
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	5.666349	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.029930	8732	1370
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.062612	17207	403
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	41.180713	80908	3509
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.661323	16265	2924
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.670471	11597	1585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	41.069526	10150	1941
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.702294	62742	1115
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.125304	47862	4041
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.092080	35202	6138
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.523977	31562	2829
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.092588	34687	5200
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.984826	117897	4685
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.909477	21109	3263
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.867323	81969	4322
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.007098	8	1	7	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	41.159219	6427	1267
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.013531	3294	561
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.651105	47	10	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.055665	16857	5375
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.695705	25441	1168
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000747	54	30
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	41.335724	50251	5135
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	12.083220	35476	1613	0.1.1.0.38.20	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.396354	9436	2674
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.103480	36037	5349
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.034118	6	4	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	9.814985	3151	504	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.875308	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.454436	13390	3022
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	41.016556	43484	5626
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.047487	13329	3421
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.574122	39263	5147
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.329576	37857	4468
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.206622	26600	5611
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.627299	16688	1196
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.063938	21679	2289
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	41.186161	45985	3338
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.186835	83137	3967
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	3.979527	1617	342	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	41.232087	69077	3121
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.097183	40238	2466
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.047745	14140	2476
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	12.390159	13275	1677	0.2.1.3.0.2.19.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.621829	26336	1824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.822868	130863	1150
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.142163	47884	3979
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.070513	24507	2561
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	41.244429	38925	3910
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	41.205526	18929	1670
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.638374	32123	4156
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.259247	40692	5382
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	40.109030	40372	7129
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	41.227435	31083	2741
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.014990	3899	688
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	41.164281	15524	910
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000779	52	31
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.656230	57974	4108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.006986	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.821022	18680	2189
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.088923	29864	5094
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.383902	8134	3069
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.513055	27579	5854
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.028291	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.509209	12667	2918
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.022784	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.016252	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007313	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	41.203210	26792	2691
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.724394	26658	3513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.836214	13365	2377
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.793940	784	339	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	41.119371	45099	5266
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.270293	181	59	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.707290	3130	907
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	8.961092	6642	916	0.9.0.6.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.058616	22602	2426
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.082723	32611	3430
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	41.097296	28331	2733
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.033892	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.007493	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.646683	35502	4850
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	1.965624	954	73	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	6.861330	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	0.240498	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007380	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.168278	333	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.124449	5795	1124
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	41.345915	74173	4698
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	0.038708	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.972485	850	94	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.194737	56100	328
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.065669	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.387473	7661	2418
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.170682	16790	2744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.768995	73137	6923
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.051358	14241	5574
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.024137	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.112557	45422	5521
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	41.243096	32545	3473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	19.753507	30428	2725	0.0.1.0.2.5.8.9.1.12	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply (find_2 (elt:=elt)); only 1: simpl; only 1: rewrite ?(add_find (elt:=elt)), ?(bal_find (elt:=elt)); only 1: destruct X.compare; only 1: order; only 1: intuition congruence; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.566216	30015	3132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.427973	17283	5045
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.073582	25476	3697
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	41.269496	30279	2502
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.064555	12624	2688
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000811	62	32
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.732987	9956	1775
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	22.907259	48189	2702	2.2.2.6.2.2.2.2.6.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.689370	29039	2227
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	3.742937	3388	645	1.0.2.3.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	24.369076	73041	1531	4.1.6.3.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	13.012929	12580	1406	0.0.34	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.610329	63127	5650
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.490503	11857	3855
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.079427	32718	1435
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	41.019876	25305	3503
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	8.657720	10821	963	0.0.2.0.2.2.3.0.0.0.4.4.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.018563	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.857155	90566	2295
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	6.765342	5854	984	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.663966	46719	5052
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.087013	30649	6948
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.575882	34700	5828
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.464123	25927	2043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	41.079036	56962	2611
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	23.252015	15349	1626	2.16.2.1.9.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.074633	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	25.815443	32544	4121	0.0.0.0.1.3.3.0.1.3.2.6.0.0.0.1.3.3.0.1.3.2.6.0.10	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.424423	42203	4452
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.061570	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	40.145412	30366	5106
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.154056	42420	1905
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.628566	86139	4900
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.171718	24005	3368
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.515895	22545	3581
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.374463	681	133	1.4.0.13	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.699660	83765	4262
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.044203	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.023652	5	3	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.385543	22918	5795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.444313	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.146256	65188	5347
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	6.807976	10808	705	0.0.11.11.15.1.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.136576	59615	4275
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	40.075102	27170	5816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.645529	114139	3698
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	0.291776	70	27	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.078096	26986	4622
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.026666	7999	2334
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.884311	16313	2090
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.514494	43053	7331
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.848686	31379	9545
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	36.899669	38998	5632	2.2.3.0.0.6.4.5.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intro H1; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: easy || now destruct Hb; only 1: intros H; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.038366	12962	1519
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.183438	13897	4976
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.138972	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	41.345233	112123	2943
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	41.148201	36700	6300
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.125033	53531	1926
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.094076	33404	4483
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.480006	5980	2697
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.633974	73618	687
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.735177	34681	5605
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.383043	28078	5814
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	43.989061	47232	1124
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.007943	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.005579	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007202	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.008607	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.007831	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.007104	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	9.615747	2161	740	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	8.775192	2578	381	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	31.830221	48106	5799	5.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.046559	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.039664	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.765202	35	9	2.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.036140	248	108	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.009110	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	41.092956	32251	3187
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.009093	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.011161	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.540104	26609	6163
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.675160	23756	7298
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.412666	93	23	7.1	synth with cache (only 1: intros x y z H1 H2; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.350553	22	10	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.504879	29734	4949
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.042251	14103	2550
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.213843	67848	3745
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.531870	30752	4149
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.045294	14490	2895
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.941775	721	96	10.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.563448	10976	1682
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.004705	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.006434	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.547723	31264	4705
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.097648	26261	2466
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.510573	52746	5845
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.379427	47212	6398
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.099049	36713	5766
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.108743	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.050666	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.015545	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.060504	3	3	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.121980	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.930430	350	82	11	synth with cache (only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.070711	21668	6002
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.296543	60	30	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.016560	3599	2138
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.702556	41616	7045
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.782761	8033	1029
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	41.124038	36263	4947
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.794043	22350	4260
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.735632	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.048841	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.118780	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	41.095706	24155	2989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.065778	22401	4370
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.586502	69252	4943
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.731175	13893	2351
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.360248	10577	4795
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.038740	12910	2589
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.782805	191708	6889
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.034039	11031	1412
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	41.146770	15046	2004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.017366	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.405421	126476	5732
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.605872	119	63	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	40.571689	49335	4779
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.936477	331	78	0.1.8.1	synth with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	41.216516	50309	5139
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.020191	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.013770	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.650513	65792	6400
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.627336	15530	6422
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.010037	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.181587	94	26	2.1.2.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.083365	30	11	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.030478	12	6	1.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.510503	19299	2482
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.126434	25	8	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.603975	91686	5019
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.034342	7206	3643
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.555007	84	40	0.0.1.5	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.557171	89682	5662
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.027129	6980	2241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.573599	37698	5545
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.721369	104291	5220
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.607008	21258	3954
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.078308	20083	2934
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.551846	15646	2395
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.022852	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.202544	28	14	5.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	40.041807	10642	2481
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.055684	19802	2187
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.631798	34477	6159
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	18.351124	10323	1767	16.0.7.5.4.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: auto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.041925	15537	1301
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.007293	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.011777	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.235339	12	4	0.2	synth with cache (only 1: intros A A_wd A0 AS n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.594973	36492	1176
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	9.062538	4717	791	1.2.10.11.0	synth with cache (only 1: firstorder; only 1: inversion H; only 1: subst; only 1: now compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.390639	45318	5496
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.897850	763	92	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	32.852267	10534	4670	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.263173	8827	1603
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.308187	32533	9098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.054301	16865	5046
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.356174	31794	8105
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	41.132091	37108	6256
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.008199	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006932	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.522201	39439	5024
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	2.971333	3562	467	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.677518	25744	4132
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.052734	19718	1468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.609217	81485	4949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	41.061589	25910	3304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.059382	18686	5420
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.839863	9546	1644
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.578192	41423	6300
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.282530	1870	206	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.019138	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.326196	22418	5157
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.044693	11155	2297
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.599511	10799	2063
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	13.748271	12232	1362	12.2.2.8.9	synth with cache (only 1: destruct H; only 1: intros l m a; only 1: simpl; only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	2.689154	1027	408	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.117707	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.068155	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	2.055319	363	105	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.121772	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.589605	75205	7217
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.776657	81701	8220
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.282267	83	22	0.1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.047843	11307	4699
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.554160	53048	3439
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.109988	80	18	3.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.475399	61238	4300
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.550180	929	254	0.0.1.11	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.024347	7	3	3.0.1	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.539531	47470	3808
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.103695	37253	2732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	4.839539	15548	171	0.174	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.095033	34726	5025
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.098097	34930	3282
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.012442	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.375439	20916	4786
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.034893	12363	1568
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.292768	17391	3556
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.677781	92261	3320
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.183981	21638	5924
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	41.251433	48292	4887
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.039366	6	5	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.010996	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.008758	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	15.460689	8813	2578	0.1.9.1.0.0.4.6	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl in *; only 1: tauto; only 1: firstorder  (subst; auto); only 1: discriminate || auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.315255	27531	6631
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.363906	25241	4846
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.299098	63731	6928
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	41.353984	19008	2944
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.021471	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.107393	40535	7234
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.068151	26102	3113
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.720100	30924	4862
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.011596	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.008875	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.018766	11	4	1.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.656500	392	55	18	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.050310	18342	2159
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.313091	79730	8654
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	7.113332	4753	972	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.993089	28571	2600
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.108786	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.071233	23505	5261
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	41.241871	13134	2202
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.013197	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.032572	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.007420	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	36.473423	30787	2355	1.1.2.3.3.66	synth with cache (only 1: destruct (lt_ge_cases n 0); only 1: order'; only 1: intuition; only 1: rewrite one_succ; only 1: unfold succ, pred; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.016222	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.027009	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.078055	33809	1823
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.514020	61370	5747
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.339736	82028	5790
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.316399	12383	1777
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.492654	27527	8017
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.635934	58	22	4.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.049773	12665	5678
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.539093	43151	5549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	41.163250	40729	4260
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.022895	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.023327	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.092246	36656	4075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.649686	18465	3155
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.043641	8074	1759
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.482305	61512	3501
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.069944	25773	3672
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.033287	10424	2256
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	34.303071	30582	4273	1.1.1.1.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.570187	26919	3153
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.216572	26017	4486
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.482144	30026	6807
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.213900	26327	7480
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.043813	12015	3875
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.994692	26351	2215
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.693272	39610	5691
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.093207	33377	6091
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.626969	86956	5451
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.021425	6349	1873
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.733822	27495	1063
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.012392	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.625987	96428	6431
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.566602	87098	6220
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	1.586275	4898	219	63	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.879932	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.369654	185	22	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.724064	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.039216	19	5	0.2.3	synth with cache (only 1: intros n H; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.065613	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.633474	67296	7929
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.338485	53384	6609
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	41.137075	27767	4864
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.186908	15	6	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.023772	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.027222	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	3.231871	3018	440	4.17.3.0.3.0.0.0.28	synth with cache (only 1: constructor 1; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R))); only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: now apply (mkmorph 0 1 radd rmul rsub ropp req 0 1 radd rmul rsub ropp reqb (IDphi (R:=R)))).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.577927	28097	4973
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.324088	89973	4695
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	9.246672	9885	1602	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.208951	27078	3996
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	1.920179	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.399968	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.223818	29317	4794
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.220882	36034	5587
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.091572	29545	4908
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.231485	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.561747	72853	4393
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.582047	40095	3646
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.060443	18765	4627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	41.102892	35066	3720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.352055	28864	3360
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.091565	30381	1879
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.411794	45848	3846
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.085541	28129	2668
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	41.082508	53914	3555
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.022077	6719	2024
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.347889	30874	4279
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.400874	56016	7645
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.534207	35277	5729
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	1.640704	711	176	0.0.5.4.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.034896	8233	4917
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.745668	59283	5297
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	2.133644	773	381	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.754532	15864	2257
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.102968	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.691235	21343	5978
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.067069	26171	2632
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.031988	10948	1571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.424749	83574	4571
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.366463	56833	8376
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.980373	3679	774	6.2.1.0.1.0.0.0.0.2.0.0.0.1	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.158912	68243	4252
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.440382	72060	9291
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.009131	6	1	5	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.491481	41416	3651
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.651984	24871	3818
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.036967	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.270221	50045	5591
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.244821	41601	6429
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.058478	19487	4763
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.020321	13	3	3.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.012250	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.055771	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.678199	18700	507
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.640377	81941	6447
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.045661	10519	5297
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.665153	9596	2134
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	2.185172	1796	148	25.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.703549	46479	5325
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.066176	20973	4734
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.537228	56879	5999
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	41.248367	34361	9421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.580257	2314	1015
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.060753	18421	4387
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.145220	58344	3458
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.456099	39497	5963
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	6.107166	5813	696	21.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.455199	29428	6456
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.034951	13562	1192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.600694	422	65	13.1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	3.770846	3619	182	53.4	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.250970	26216	5280
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.505219	32933	4705
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.617988	22306	3843
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.586018	23331	4783
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.674628	39294	3143
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.127009	23729	4369
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.110927	41902	4457
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.536292	78506	4334
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	5.582865	5517	657	7.0.14.12	synth with cache (only 1: intros (l, L); only 1: induction l as [| a l IH]; only 1: auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.476216	34670	6221
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.295467	18016	6493
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	32.621661	32152	4610	0.0.3.1.0.3.0.6.0.0.5.4.9	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.283550	16771	2348
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.529053	25463	5567
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.527086	11161	3224
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.496146	35486	7028
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.010765	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.348447	41937	5203
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.663068	72608	3158
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.044506	14972	1696
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.408234	58336	5081
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	1.663027	423	74	8.5.2	synth with cache (only 1: induction l as [| y l]; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	2.621509	1647	370	1.5.3.1.0.7	synth with cache (only 1: induction l; only 1: unfold eqk, eqke; only 1: auto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.042539	13884	2529
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.101902	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.712551	14099	2171
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.823009	30083	1565
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.048536	12348	5698
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.615888	31114	3857
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.186440	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.165383	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.036402	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.995870	16771	2699
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.053651	5890	1647
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.587090	117034	3578
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.572972	33483	4750
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.475919	33148	5611
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.009185	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.026600	9634	768
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.423441	54601	9563
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.040916	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.008192	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	1.335896	188	91	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	10.550190	14458	1078	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.286154	48742	2908
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.259698	26715	5198
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.399300	26847	5383
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.354269	27506	6756
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.693620	23523	3893
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.159037	44569	3941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.054407	18277	3109
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.438470	67595	5589
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.460474	26029	4045
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.464599	51572	6686
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.521645	37956	4870
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.110278	40549	3901
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.015084	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.145581	110	25	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.337839	64419	7450
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	12.476150	10607	1458	0.0.0.0.0.0.0.21.22	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	2.075678	5270	282	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.117741	46117	7352
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	40.331190	40398	7953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.384556	107434	6667
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.075331	25570	4040
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	21.690640	10146	2494	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.533383	18713	6456
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	2.559089	1439	375	6.2.3.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.323465	48969	6101
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.597691	9302	1181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.154950	61548	4751
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.603192	14356	1146
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.848608	23039	1342
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	40.092921	33238	5943
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.676417	24642	3745
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	40.062636	18216	3510
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.501127	98423	4708
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.425472	32518	6610
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.018549	5715	1645
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.187884	79536	9828
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.085224	31255	6257
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.349589	35936	4780
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.518089	43772	5402
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.030813	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.256156	176	64	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.199457	30972	8211
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.269312	71171	5107
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.744566	14383	3250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.046358	12418	1323
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.428326	85309	6634
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.357902	27901	3233
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.242052	18123	4309
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.528325	8695	2055
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.165688	74402	5362
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.333299	27828	6216
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.311655	41768	7170
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.124241	4	3	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.453980	40197	2228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.038583	13418	1376
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.696469	82014	6637
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.506034	42005	4955
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	41.109362	41157	5561
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.021522	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.737655	24725	3686
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.730103	219	86	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.310417	48054	7819
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.429286	11756	2582
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.769935	477	232	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.469309	40434	3996
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.581774	29299	1749
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	3.147300	1459	504	0.0.0.1.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.502676	111089	4543
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.932174	586	205	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.092158	34246	4464
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	7.800333	44227	1035	0.0.0.101	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.419004	1687	360	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.009547	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.032842	8332	3313
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.558117	18852	5943
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.318763	64530	5107
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.330436	40389	8690
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	17.814332	21926	3067	6.6.9.4.3	synth with cache (only 1: unfold get, push, index; only 1: inversion 1; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	12.305621	4526	893	0.1.4.6.0.5.2	synth with cache (only 1: inversion 1; only 1: unfold MapsTo in *; only 1: invlist InA; only 1: inversion_clear H; only 1: destruct H1 as [e' H2]; only 1: auto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.663375	345	67	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.024763	6999	1952
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	4.771545	6932	599	0.1.0.1.2.1.0.0.0.5.25.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: ok; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.828346	53354	4563
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.013743	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.160388	870	168	2.0.2.1.2.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: auto; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.044861	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	33.555652	51722	7223	1.15.7.3.0.10	synth with cache (only 1: apply NNPP; only 1: unfold not; only 1: intros; only 1: apply H; only 1: intros h hn; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.313509	60451	6443
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.526581	52100	6220
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.183509	60	14	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	5.632247	2763	1115	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.657415	230	106	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.391244	334	66	2.11.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	7.814260	26909	1135	57.23.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.123208	23738	4011
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.535640	19036	4276
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.108934	41955	4703
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.486729	32050	4126
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.649415	150887	4625
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.696872	30729	3729
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	40.374417	59982	5970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.077221	24896	6747
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.635180	26078	3209
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.357791	19528	5543
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.092211	33437	6569
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.005639	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.317999	101994	9113
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.401448	186060	13104
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.010767	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.604959	57931	4949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	2.026203	2132	162	3.0.2.24.2	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.033968	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.533534	107249	2977
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.296677	41183	5574
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.095101	38571	4205
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.101515	30	15	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.265250	21315	4285
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.596421	228569	5955
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.663337	29365	3047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.088051	23	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.026737	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.798669	21331	4444
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.155160	20258	5429
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.136077	35	18	3.2.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	4.568267	4620	646	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.014835	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.012985	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.174891	111	30	1.2.5	synth with cache (only 1: destr_bool; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.698498	273	92	0.0.0.0.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	0.298751	116	44	0.0.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.016338	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.429267	17600	2544
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	30.968151	27338	3220	3.1.3.0.3.0.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: destruct m; only 1: auto with arith; only 1: left; only 1: now apply Peano.le_n_S; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.516235	97561	5448
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	4.090541	1020	301	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.051535	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.018334	4744	1597
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.468627	91943	4959
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	3.561053	2495	552	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.007413	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	0.221548	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.008388	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.008282	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.424657	67989	8107
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.208488	17484	5251
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.199846	1621	675	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.255954	51771	5697
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.286372	62540	8930
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.055709	26	11	4.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.261606	77	36	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.154854	65697	6562
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.936166	216	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	19.953672	20619	4627	4.1.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.023437	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.078318	22854	2723
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	40.739705	110865	5999
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.327293	19715	2174
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.409831	61768	8213
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.517074	56243	4721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.232411	28573	9164
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.258235	19835	5728
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.116179	47080	5561
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.359893	44844	3762
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.714109	191484	2570
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.019871	5	2	0.3	synth with cache (only 1: intros m w le; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.151922	67234	7310
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.087479	31698	7777
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	13.651374	4667	1300	7.2.2.1.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: simpl; only 1: destruct y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.539869	54899	2560
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.547592	83199	2817
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.335874	40054	5180
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	26.945697	29817	3497	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.010082	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.007226	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.062291	19407	6435
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.061011	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.199338	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.338393	41687	5696
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.379263	16258	3450
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.023659	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.919353	4442	952	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.697490	22052	6423
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	8.776244	14508	1094	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.351109	41789	9186
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.477573	10581	3286
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.224485	28227	6851
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.386931	983	44	43	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.013812	3337	1284
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.294165	54743	4835
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.254725	20273	7373
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.007847	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.020641	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.369829	17602	5349
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.445295	97014	7373
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.004786	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.401604	23828	6494
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.048938	16729	2129
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.396981	26914	6708
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.051044	14011	4131
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.674475	47320	3614
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.376758	30836	5268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.530904	9027	1757
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.351841	48318	5115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.260302	74744	10797
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.199423	39873	5802
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.071498	22375	6278
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	8.562774	7712	1816	0.0.1.1.2.4.1.24	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: clear IHl IHr; only 1: simpl; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.347694	6328	2977
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.461065	44385	5150
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.088865	36170	5953
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.570698	366	58	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.220626	25408	6021
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.199435	56593	5942
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.245739	39370	5203
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.325825	36376	6000
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	4.233223	5886	656	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.391099	35933	6234
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.380386	97588	4142
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.139638	37344	5127
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.257783	29967	6637
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	41.141679	29582	3519
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.404334	47359	5920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.440900	832	455	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.291268	67547	7328
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.338864	37577	1638
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.015561	4472	1251
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.364845	79370	4831
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.025908	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	40.381365	21079	8695
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.747873	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.009340	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.361210	20311	2594
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.021904	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.004903	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.050916	14027	5379
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.353324	38307	8728
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.004163	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.303021	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.585767	30927	7546
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	1.460538	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.194711	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.016169	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.004961	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.258712	17478	7580
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	10.544286	6923	1010	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	40.071104	20327	3459
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.255385	63014	3501
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.355962	32618	6614
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.456340	44067	4505
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.716696	45877	6070
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.545971	26287	3837
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.374843	30156	5788
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.307271	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.089885	30215	7195
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.112936	48294	4073
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.078878	28822	4657
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.166640	25234	6044
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.363781	51579	5952
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.373382	98596	6417
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.236718	41714	5356
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.201710	80186	7273
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.041712	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.141516	35827	5456
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	14.679000	3672	597	1.0.0.4.17.2.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: intro y0; only 1: destruct 2; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.039354	12746	3275
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.719415	43	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.353130	19974	2430
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.484208	21657	6353
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.840671	50905	7003
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.012124	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.360711	33933	7022
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.291564	38896	6855
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.308580	55341	6677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	2.297025	680	291	3.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.087389	30570	6421
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	7.834891	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.027182	9471	664
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	40.294772	43348	5348
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.354567	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.306186	10084	4583
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.662650	39070	6777
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	3.218716	1647	414	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.554479	76159	7082
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.159300	28491	10926
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.324354	15355	5278
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.267384	45072	4221
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	2.809156	427	82	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.079920	29476	2383
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.142877	42152	4823
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	1.816096	285	141	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.302458	30856	6955
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.528937	62456	2853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.223902	17142	7172
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.328913	37344	5826
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	3.092055	331	115	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.021164	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.320893	56	26	7	synth with cache (only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.623631	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.073902	27430	3402
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.104202	42051	6252
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	24.856185	27353	4898	0.0.0.2.1.6.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.153189	64805	9867
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.108955	21340	5576
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.272499	75794	5136
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.398637	49732	5551
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.251227	38847	4364
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.006797	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.074489	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.209389	44156	4369
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	11.297018	4527	1414	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	40.358197	30960	5026
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.085182	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.083692	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.311364	4713	1495
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	0.708705	31	7	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.053150	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.073785	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.160314	20866	4610
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.851567	18764	6485
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.698608	30920	3620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.228684	65409	8242
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	7.595003	5077	808	26	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.224100	26724	5144
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.109086	19177	3613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.027518	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.021723	5999	854
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.213346	15616	3340
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.076323	25046	5450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	5.875003	2192	903	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.085746	18602	5084
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	1.039337	624	133	4.0.9.0	synth with cache (only 1: intros m x y e; only 1: intros H; only 1: eapply (Raw.PX.MapsTo_eq (elt:=elt)); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.139557	10209	1543
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.142681	33307	10845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.529024	1994	457	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.254888	15263	5407
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	40.357454	26209	3213
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.057372	15935	5577
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.657550	48118	4189
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.530658	47660	5939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.656325	11061	3303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.133101	17873	4410
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.236555	23489	6383
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.120862	46827	6967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.167262	71678	5896
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.712612	188	110	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	7.256798	6889	1078	5.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.470071	37758	5845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	5.712575	3842	585	0.0.0.0.6.0.4.2.1.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.206840	88678	13546
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	24.865231	1636	801	0.0.0.0.2.1.1.1.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.403777	53033	5626
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.175165	35570	6728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.305717	39945	3076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.134527	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.417157	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.090913	16468	8291
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.345600	58247	4893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.174855	11698	3870
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.115803	12245	3909
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	7.247260	3173	1016	2.3.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.045230	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.100814	18763	7042
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.792987	42789	5297
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.736290	40020	6094
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.097674	30740	8645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.429544	828	338	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.242120	41069	4549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.185999	47402	5598
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.128099	42412	7095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.536593	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.200871	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.103619	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.022945	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.572721	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.244254	163	107	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.105867	24424	6088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.355963	65629	5580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.146531	23007	4615
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.196273	34466	9009
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.009508	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.126746	27428	7471
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.262164	29471	8036
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	40.196037	60195	5573
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.054862	17877	2375
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.408158	28470	6605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.155766	27501	8102
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.289757	5411	2336
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.189244	558	184	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	10.965454	5828	2383	0.0.0.0.0.0.0.0.1.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.121266	48249	6227
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.192847	27295	4660
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.510466	27151	7224
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.354865	40843	3812
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.203731	93378	2798
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.145489	55196	12989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.191331	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	4.161093	2234	979	0.0.1.0.1.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.012863	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.011819	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.012642	2774	1202
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.449814	70626	3881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.219339	37044	1365
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.125947	18358	7485
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.174486	57660	6520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	2.257488	736	281	1.0.0.3.0.6.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: assert (AUX : forall a b, 0 <= a <= b -> b * a + a * b <= a * a + b * b); only 1: intros a b (Ha, H); only 1: apply crossmul_le_addsquare; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	9.106200	6158	1520	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.252904	23982	3620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.133173	12676	4985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.102348	15856	2790
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.375669	58672	7119
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.401076	27752	5334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.146634	38789	6975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.247128	14942	2460
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	7.810555	27604	1018	1.12.32.15.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.485729	37655	3913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.118150	43837	6043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	3.574793	2071	498	1.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.008602	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.012066	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	3.832466	1832	594	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	5.932379	1805	711	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.632231	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	15.496823	2979	1088	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.138438	14311	4111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.038369	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.122260	27263	6162
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.076972	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.251693	22594	5549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.233848	717	306	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.013189	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.131008	19799	3747
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.118271	2729	136	5.39	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.016804	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.076740	14433	5807
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.453337	15049	4038
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.389196	22274	1321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	5.760220	1020	402	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.062107	9916	4928
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.399938	65868	6372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.105943	29716	3619
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.102115	39019	5778
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.731714	50571	1214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.314529	55304	5444
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	16.811795	4463	2381	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.232362	105176	14932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.050254	10932	3507
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.289798	6144	634
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.219110	20515	5509
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.343928	18919	5492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.029188	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.030453	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.145745	37073	4873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.260522	26837	4824
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.382383	53971	7220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.427061	5657	1578
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	3.764337	2284	351	13.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.303746	3213	1292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.344623	30872	5208
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.187022	57197	5479
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.348566	31004	5038
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	14.591344	3579	1656	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.255958	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.146289	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.331353	17270	3966
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.510893	24437	3671
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.801105	33770	4686
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.011013	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.113062	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.021695	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.446079	254	72	1.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.012829	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.018616	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.151741	18365	3799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.143271	19564	8276
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.125762	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.124076	22940	6381
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.921617	1280	514	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.151210	18847	2917
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.099721	34381	5630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.122260	24465	6002
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.452951	20469	7566
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.356416	59949	4364
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.297465	11199	1450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.107307	9361	4254
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.365450	34567	4082
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.113271	31457	3803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.012704	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.696799	21861	5748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.149576	29298	4712
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.146738	15048	3161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	8.200506	4140	860	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.174543	9622	1678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.395740	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.091623	15193	3635
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.250780	36294	8838
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	13.069356	11111	1666	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.579159	70330	5651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.646480	660	291	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.083172	15920	5528
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	5.235135	1130	445	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.161776	23056	5899
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.039521	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.196025	38362	5859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.172200	18066	4322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.168330	30290	4798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.341693	18374	4373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.290765	18590	4436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.092041	18976	5838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.184058	32824	5291
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	8.156462	2484	726	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.039115	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.202003	21349	3780
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.495058	112009	3126
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.775564	33033	4174
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.022894	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.174104	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.110551	29250	6318
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.665721	25238	5913
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.011197	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.026866	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.019658	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.019365	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.019406	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.015298	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.011646	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.170979	45444	6315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	20.557762	13401	1874	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.082523	17649	6363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.126470	35210	4508
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.126171	49089	6623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.122400	29089	7117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.491165	2232	351	0.0.1.0.0.0.0.0.0.0.7.31	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.341791	21608	6523
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.171994	13826	3743
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.405028	35305	5292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.107580	29951	5592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	15.659934	10705	3199	0.0.3.0.0.1.1.0.1.5.0.1.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.061238	14966	4439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.045535	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.112093	10208	3163
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.033646	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.351636	15537	761
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.055670	13365	3135
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.256626	21898	5327
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.016082	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.098598	10029	2187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.096731	20134	5796
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.579091	10358	1818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	4.702198	499	99	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.137490	39453	6913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	8.530161	3947	1645	0.0.1.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.191874	32785	6219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.276369	20244	3755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.130496	8625	3203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.075732	21381	5976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.159574	327	109	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.097266	18721	3883
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.129143	23485	7989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	29.858864	33822	3194	1.0.10.1.33.0	synth with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: right; only 1: order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.084754	26681	5863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.060809	11100	2435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.171932	21686	3983
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.375997	42014	5884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.699089	304	151	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.181706	1538	618	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.195582	23949	5476
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	40.778343	58073	5475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.648000	1613	412	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.142050	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.601452	44938	2177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	31.782269	10659	3244	2.0.0.6.0.0.0.0.0.0.5.2.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.640496	969	322	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.038198	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.723387	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.171750	23874	5817
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.315024	36981	6025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.209279	49503	8024
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.153213	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.230508	83460	5048
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.325173	18952	7853
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	31.010136	39553	5912	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.073189	23517	7169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.104170	22969	7382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.106518	13114	4410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.099539	29794	4826
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.242642	35060	5870
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.113959	108	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.130368	32	17	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.090740	29056	4561
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.081230	17479	3404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	40.060716	18396	4469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.094143	34469	4751
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.658292	12038	3057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.410304	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.106918	16426	7331
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.094932	34351	6551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.217036	16110	4564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.258502	11446	4221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.261883	29393	3565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.016703	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.102515	19304	4246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.231394	105189	2709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.086860	24057	5298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.199763	39601	4122
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.464636	21273	4904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.148521	17718	3998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.435755	80	38	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.690813	601	209	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.119833	27862	5064
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	40.450222	26814	4570
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.180208	51640	1689
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.009829	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.058481	18117	2959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.063357	21444	2085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	10.192907	5828	1277	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.152435	50622	6635
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.088050	32788	5247
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.133311	10477	3385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.047913	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.285215	21957	6789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.141963	58084	3197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	2.107590	345	173	0.0.3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.558210	154	65	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.716898	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.134730	37170	6097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.016926	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.353789	22854	5852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.241966	19907	4924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.015896	8	3	4.1.0	synth with cache (only 1: intros; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.026569	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	2.830848	774	263	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.033981	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.182456	23398	8078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.134120	22113	4887
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.386166	18671	6851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.104874	18269	5725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.116648	15463	2517
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.044985	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.113842	24301	4357
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.768210	20868	2162
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.119790	20110	3193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.249740	18319	6178
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.241671	34494	6423
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.692740	1481	670	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.181476	13484	3716
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	23.755866	4701	1193	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.204457	18762	4663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.268289	41077	5913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	11.773010	3976	1806	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	3.589478	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.043481	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.131853	27050	7737
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.346016	528	317	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.049499	12563	5017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.684517	5682	520	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.385239	20286	6063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.128769	22729	4090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.086314	32372	4324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	3.328294	1037	482	1.2.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.035669	9691	2409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.114769	43431	7800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.195096	12	7	1.0.1.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.787726	473	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.646896	28060	3720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.465964	1585	246	21.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.071440	22616	3703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.298491	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.087976	17422	1243
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.114402	40738	4532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.380008	88508	6302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	5.352313	2265	643	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	21.383948	9838	1558	4.3.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.581550	82326	4623
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.008162	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.106879	41054	4533
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.696920	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.145431	13063	3470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	9.669397	14174	443	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.011161	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.102084	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.011175	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.187268	30904	4961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.237237	106141	11000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	3.793139	1167	413	1.1.5.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.120304	46707	10182
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	7.210682	7115	893	0.0.0.14.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.087076	22671	4927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.528904	112	44	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.556771	13540	5073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.148515	30237	6826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	26.511916	16268	2898	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.207869	63560	4352
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.216145	24264	3046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.222097	13526	5105
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.452924	72155	5768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.231687	17711	3184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	24.988347	9051	3584	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.215527	45487	8035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.144839	18111	4798
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.095912	30799	9947
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.450646	217204	6095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.133359	16809	3476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.077094	16172	3071
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.371909	28067	5397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.999977	851	320	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.067920	22554	4113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	18.283966	9480	2317	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.028606	7192	2338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.076246	25214	4017
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	10.079536	11900	1876	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.013291	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.177018	70501	7520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.064969	21161	3675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.099339	28506	3169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.366692	11169	3156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.075363	23246	4304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.089581	24874	4350
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.230579	20071	6933
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.135110	14648	2513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.123782	31099	1806
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.006446	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	0.470308	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.209390	92798	8587
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	0.580274	146	16	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.093282	30470	10052
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.438321	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.015312	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.011866	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.007925	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.010937	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.219233	22764	3150
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.324495	58805	5305
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.092200	25204	8346
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.114524	23508	5393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.103536	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.095565	21697	4959
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.744223	26213	3170
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.159100	29104	5425
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.011466	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.006966	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.290340	42234	7026
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.066017	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.321088	51087	3725
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	1.099566	472	153	4.3.0.2.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	36.605705	12167	2488	0.0.0.0.0.1.0.0.0.0.4.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: revert n m; only 1: intros n m H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.257315	9696	4122
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.092276	12911	3441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.188011	15005	2940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.114999	41127	8935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	9.471122	5747	1543	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.572772	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006796	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.623112	56934	4277
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003357	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.008989	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.013951	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.312054	17686	3464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.085780	28205	6311
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.929099	289	74	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.012561	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.090586	14511	5709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.025701	6409	2035
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.012508	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.013385	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.006523	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.863214	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.106432	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.078326	16120	4976
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.152369	62195	7086
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.021202	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.737742	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.052456	18676	3463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.041206	13136	2341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.077610	19218	3391
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.586410	20211	3150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.102134	267	50	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.087325	26902	6804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.122949	9823	2048
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.289131	18050	4960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	3.510537	819	326	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.128673	43022	12306
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.321597	146718	10722
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.100823	33822	13202
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.592416	27378	973
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.011458	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.010562	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.443038	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.217652	87372	6596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.117399	25830	7154
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.123341	17134	4714
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.709855	19912	3357
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.103712	37767	4087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.095999	26753	8252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.079314	22556	6334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.160303	12201	3265
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.426470	83676	2482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.233366	10766	4244
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	3.268029	7114	719	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.144038	21424	3535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.275733	21143	5033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.073487	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.074544	15065	5264
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.232362	20189	5057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.068043	20731	3885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.157642	6368	2186
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.088510	15787	386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.210312	18540	4795
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	11.078669	6838	1590	0.0.0.0.0.0.0.0.4.1.0.0.0.0.4.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.120578	42115	5385
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.156124	9186	2008
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.025663	5988	958
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.008589	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.006134	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.099027	34883	5809
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.043908	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.036221	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.049726	13046	2832
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.255947	6365	1672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.061610	19602	3620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.060552	13149	4079
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	6.606006	1437	417	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.009890	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.009566	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.020835	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.007973	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.010860	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.006406	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	6.427913	4375	1007	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.460107	20998	6527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.091260	16606	3276
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	18.322394	19852	1399	0.29.12.4	synth with cache (only 1: intro x; only 1: intro H'; only 1: destruct H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.457528	212472	6130
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.113682	40765	6423
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.444597	18499	690
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.073541	25703	3563
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.456973	1089	307	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.096320	22872	1767
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.163123	15432	3549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.124292	15767	3064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.306064	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.023478	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.752206	32041	2690
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.077729	18972	8116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.116716	44230	4710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.261141	15587	3590
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.005126	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.560115	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.007041	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.170904	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.244748	18217	2802
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.159432	61772	9524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.077647	11523	4438
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.035186	10967	1408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	9.930209	6215	894	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.072728	22429	4604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.173528	14508	4646
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.723556	28919	4692
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.018769	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.039117	10084	1300
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.613979	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.217798	12822	2872
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.774622	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.015243	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.014019	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.006579	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.013464	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.796597	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.007590	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.015649	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.304814	47850	4792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.097340	10399	2444
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.043463	5218	1964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.053786	10692	3837
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	2.460302	2466	496	1.0.3.2.8.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: simpl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.012985	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	31.641416	357186	3451
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.008310	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	0.024866	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.246995	23448	4424
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.137994	42734	5754
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.318047	23846	747	1.2.0.2.35.53	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.206954	53	14	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.074933	25186	5099
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.083219	23269	12185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.095594	34103	7228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.022773	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.017895	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.021966	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.034077	16	4	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.285474	23409	6450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.098999	15723	4547
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.153107	61413	2757
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.050744	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	4.268683	1449	503	2.4.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.534526	39041	1791
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.065926	24522	4176
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.089873	30652	7346
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	3.041086	1288	657	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.044917	12	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	8.975010	92328	606
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	26.573486	376973	2905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	4.182251	3453	759	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.102575	31795	6566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	13.921642	6557	2646	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.059530	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.090836	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	24.923347	17551	3714	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.351372	120	51	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.004593	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.104715	15858	3623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.766521	584	263	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.068768	22021	4506
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.039482	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.026794	13	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.068122	20393	5083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.034921	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.237541	20969	3615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	7.371176	2655	674	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.318540	144383	9272
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.092459	30361	8746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.062655	12804	6602
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.081846	27090	8927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.101268	14330	3287
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.125975	43303	9842
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.686324	54175	3953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.220413	12445	3507
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.391014	33814	6429
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.055426	9891	5564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.143696	32659	3722
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.688820	342820	12377
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.433612	208133	10322
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.008245	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.483607	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.090748	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.292457	28823	3620
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.035389	8987	3580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.071192	19376	5481
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.375635	42024	5524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.110379	41118	4326
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.155486	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.137103	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	26.527744	13771	2978	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.012756	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.425847	203460	11559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.013454	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.025189	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.362164	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.355316	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.041835	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.705804	4330	447	3.15.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.063430	19547	5467
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.015132	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.438097	35165	991
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.075839	22329	6634
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.368982	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.110535	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.088086	24491	8182
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.010772	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	3.805667	20589	834	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.226025	106132	4430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.086823	23928	6240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.184730	22757	6119
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.623954	301730	13894
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.220787	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.025207	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.039506	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006070	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	15.295381	3519	1341	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.035877	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.105050	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	12.864310	3980	1859	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.070114	3778	1787
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.445425	214256	5241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.137176	25975	4673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.065702	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.143892	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.628651	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	19.564364	10697	1040	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.009956	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.127933	46623	7834
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.134635	52050	8363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.078408	14922	5335
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.155956	59367	12776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.112541	30176	11080
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.221324	3412	453	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.575169	288005	13671
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.012160	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.034374	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	1.204836	1167	371	2.0.2.1.1.1.1.0.2	synth with cache (only 1: destr_bool; only 1: split; only 1: destruct 1; only 1: intuition; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.006702	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.006283	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.007295	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.019784	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.022854	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.004545	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.006962	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.051633	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.004347	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.020513	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.007240	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.008506	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.008887	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.005750	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.006085	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.059839	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.009428	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.017004	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.014998	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.044002	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.011218	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.016188	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.010942	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.011163	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.011095	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.015403	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.056337	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.020759	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.114653	36885	11330
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.483899	36734	4653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.142233	24041	3536
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.280108	49583	6979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.068333	10133	2267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.196269	17169	2998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.479911	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.604407	293696	11814
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.358647	157034	7283
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.373913	16125	4937
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.070245	22378	4642
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.076085	20092	5559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.772778	354	121	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.148327	18172	5504
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.416016	27251	1400
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.109543	37267	10219
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.027467	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.119079	46417	4901
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.189463	82795	4765
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.374418	176073	7099
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.071000	11324	6318
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.554465	267508	13046
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.149519	66184	4089
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.123501	45264	7165
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.223272	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.017049	11	4	1.1.0	synth with cache (only 1: unfold decidable; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.032620	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.015590	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.008081	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.079103	105	30	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: auto; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.712060	539	305	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	4.638466	14502	1774	2.3.2.3.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	4.020347	7857	1462	1.0.0.1.0.4.1.3.0.2.8.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.012950	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.056911	16023	5273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.067555	19393	4763
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.365044	171366	9375
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.006935	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007740	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.022028	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.032491	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005396	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.017765	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.068754	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.151589	66482	4834
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.090184	30982	7727
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.048208	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.049805	14042	5013
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.005029	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.012497	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.293761	134524	15282
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.254733	114077	12474
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.520238	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.061131	13000	3068
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.579597	286213	13259
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	5.208949	24672	1448	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.711241	1898	186	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.089364	27053	8946
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.141666	51129	11216
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	3.980680	75497	762
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.793256	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.020694	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.617672	42979	4511
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	5.409997	18370	1289	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.196032	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.479561	18881	3026
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.082396	30804	4952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.103569	28050	3734
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.016852	4	3	0.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.018813	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.142051	58401	8701
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.095971	189	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.046067	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.552318	262862	7596
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.222658	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.243336	11146	2912
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	1.464395	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.073523	18756	7042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.074892	28694	3926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.019918	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	8.077986	111164	1432	1.110.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.081997	25430	6372
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	0.859201	4705	207	0.60	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	10.459604	2734	796	1.0.1.10.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.391191	70847	2271
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	15.933620	24117	3036	0.1.5.27.1.5.4.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.262916	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	29.101758	84922	10449	0.21.3.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.109339	37338	9937
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.014828	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.432407	44201	922	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.014809	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.146204	16	5	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.671915	546	171	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.011342	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.010879	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.009992	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.067025	19619	7231
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.837753	438	145	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.284491	67	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.601650	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.756508	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.003453	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.014990	8	4	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.316736	153984	12423
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.237153	120	49	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.200188	89747	11849
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.166588	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.903575	633	93	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.014228	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007320	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.028062	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.008538	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	3.099239	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.271902	125224	11182
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.745855	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.009986	59	19	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.002305	6	4	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.082265	28970	5398
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	0.132198	1101	131
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.686298	2931	605	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	7.833579	5975	1308	1.0.7.0.2.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case ltb_spec0; only 1: constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.081465	26751	6329
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.159569	22614	4605
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.041657	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.024110	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.083066	30514	3944
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.063602	21158	8066
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.550757	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.014208	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.063726	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.020325	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.035472	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.081020	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.093745	32291	8466
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.140899	56382	12172
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.123953	44836	11111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.071647	21588	3915
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.031104	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.863267	431659	6545
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.035289	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	28.652754	111800	8450	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.016251	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.090330	29055	9768
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.393032	191507	10411
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.046040	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.366408	170783	10280
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.572179	55010	4388
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	9.637549	14715	3131	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.473482	65622	6365
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	1.891668	584	200	0.0.0.5.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.288790	131769	10559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.325055	18005	4001
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	41.230155	649508	5938
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.035868	9426	3717
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	9.001012	5356	913	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.008424	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	0.015984	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.101660	42191	5063
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.431563	40610	7766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.076250	12441	3565
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.392902	179941	9445
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.421564	195070	6037
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.732838	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.836123	429714	4041
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.346247	162656	12496
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.230771	106714	13583
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.351222	161459	7356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.077747	10671	6066
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.448554	215809	17837
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.009798	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.645217	324626	23665
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.125850	44226	6928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.087969	32701	5995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.025538	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.126122	29112	5490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.131155	52755	5884
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.080715	27474	6053
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.109284	38202	12375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.059913	19248	3919
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.021245	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.011685	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	0.013521	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.510797	86380	3830
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.064516	22003	4256
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	0.255880	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.164919	33298	5817
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.164644	67968	10725
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.387779	178408	14032
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.319215	37894	11281
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.226469	101289	12683
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.260618	22334	5056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.150635	27611	4643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.030023	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.082751	35336	2975
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.042020	12891	3981
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	4.986013	1624	768	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.218714	25706	5812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.047399	14240	4575
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.476304	224224	9845
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.012467	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.003584	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.028152	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.003654	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.008602	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.008318	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.014309	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.022963	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.018132	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.022715	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.009721	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.007758	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.008993	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.009138	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.005238	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.008665	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.008109	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.010800	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.007669	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.010309	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.008281	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.030865	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.022696	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.014471	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.532544	23090	4629
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.009705	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.016782	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.008319	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.149249	25478	6459
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	13.341177	16309	4062	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	11.679749	7043	1791	0.0.6.3.6.0.3.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.266701	118029	5362
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.033460	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.010086	1	1	0	synth with cache (only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.223712	100813	10618
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.140724	52	29	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.119615	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	4.040885	8452	662	15.13.9.30	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.007347	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.165233	72102	3839
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.058906	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.032958	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.071376	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.291610	131237	19619
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.150549	60146	12902
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	0.738299	1355	217	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.720373	357156	7557
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	1.488821	1033	464	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.120797	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.745288	716	148	2.5.1.0.7	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.028633	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	13.344663	12869	1961	0.0.0.2.9.2.0.2.0.2.0.0.6.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intros k H1 H2; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	5.986071	2046	704	0.2.3.1.0.6	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.017593	4	2	0.2	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.284956	165	38	4.1.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.005538	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.082492	12595	5894
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	40.388474	182575	17188
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.004666	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007341	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.007414	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.007344	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	1.530024	9662	278
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.010513	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.016828	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.021959	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.008158	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.007501	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.010739	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.011380	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.053971	15823	4289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.144764	24890	4869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.122356	25706	3397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.075227	26273	4312
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.215063	29407	8407
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.082890	26095	7660
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.012486	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	9.423604	3724	1430	0.5.0.0.0.3.0.0.0.1.1.1.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: intro l'; only 1: elim l'; only 1: auto with arith; only 1: intros a' y H H0; only 1: absurd (S (length y) <= 0); only 1: auto with arith; only 1: auto with arith; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.031094	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.589910	68442	815
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.336154	217	36	0.0.0.15	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.030969	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.009485	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.005011	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.852553	51413	593
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	10.545524	10963	1643	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.232638	13519	2916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.177945	27166	4789
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.540654	262238	17183
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.310769	143809	13201
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.357989	37021	6960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.165449	29451	4520
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.368379	20634	6323
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.023933	6	4	1.0.0.1	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.372778	13207	522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.084678	28057	6119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.184920	37853	5735
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.200521	26408	9655
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	14.041391	11291	2411	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.191211	3843	1643
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	20.853131	18203	4407	2.2.0.0.9.1.0.0.0.0.3.0.7	synth with cache (only 1: induction n as [| n IH]; only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.194018	81084	13072
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	1.893995	2404	225	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.492323	229623	4173
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.640999	304104	4211
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.005010	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.016750	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.007273	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011494	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.195918	139	20	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.016102	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.210143	93470	13562
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	0.480144	192	19	4.14	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.009808	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.433264	15151	5529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.209421	18331	3490
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.091936	32690	5712
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.052854	12313	6356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.160173	27892	4645
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	40.871673	443812	9616
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	13.542196	31633	1671	9.8.1.13.12.5.34.49	synth with cache (only 1: compute; only 1: revert l1 l2; only 1: induction l1 as [| x1 l1]; only 1: intros H; only 1: constructor 1; only 1: intro x; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.061545	13960	3401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.149564	15758	3322
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.207562	27956	5210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.159702	28872	3749
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.092303	29119	9575
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.421338	47527	6113
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.746084	380441	3531
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.328305	22865	9061
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.479621	228947	4906
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.017066	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.065201	16851	7657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.225787	22946	5501
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.898991	469303	6022
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	7.111983	7776	675	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.020534	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.378558	708614	6476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.233177	15642	3243
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.221032	19844	4816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.098559	28914	5671
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.445810	206326	5766
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.022154	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.227684	23698	4952
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.450406	26842	6226
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.012167	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.029935	5	4	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.161349	19366	6526
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.126290	44666	12872
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	16.955565	12420	3498	0.0.8.23.1	synth with cache (only 1: intros Compat Hl Hr; only 1: intro x; only 1: apply min_case_strong; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.022117	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.355797	21314	6507
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.261864	106676	2379
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.303569	125581	3946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.148806	9510	3401
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.336867	28286	7691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.234648	8278	1732
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.482923	31271	5985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.035077	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.329450	8793	1989
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.303404	58519	8312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.088638	13084	4765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.247834	25001	4023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.254230	23519	3160
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.277408	18278	3219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.050304	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.366245	42782	6738
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.554558	20835	6926
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	0.276195	60	28	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.042893	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.057028	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.285851	120600	2609
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.280969	22067	2613
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.201029	28498	9904
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.194417	82418	3634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.297138	15107	2881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.345279	42874	3532
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.343492	43356	3509
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	23.032146	19706	3615	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.385870	41589	7760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.322396	27568	3640
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.598272	35988	7254
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.102791	18138	5480
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.332800	27305	3950
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.160147	11261	3990
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.086331	15978	5561
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.322585	62256	6444
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.265813	36676	8486
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	11.769807	9227	2049	0.1.0.0.1.6.1.0.4.2.0.0.14	synth with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros; only 1: firstorder; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.134687	21158	5162
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.096856	34033	5484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.193639	19451	4263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.342835	11778	2470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.182348	24900	5408
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.096974	37436	5986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.272395	14144	3266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.332384	15588	3160
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.277911	41829	6167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.312793	16961	3425
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.144917	15099	4833
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	0.038960	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.150546	26168	5449
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.350333	41788	6860
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.394178	35456	5164
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.258757	47947	4906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.065415	18406	4090
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.008148	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.196055	20679	6307
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.380769	28862	4373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.242839	28591	5292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.131852	16550	3745
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.279661	16890	4336
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.322678	21465	6000
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.369799	35932	9855
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.143216	13544	2644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.081247	21639	5584
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.273722	20017	2215
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.175473	25663	6306
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.508160	84372	5105
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.123526	47959	6015
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.135068	55872	5499
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	40.102764	37839	6614
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.198195	15555	3416
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.052498	14247	3490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.196782	31734	5976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.154444	29926	4491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.167841	23829	5774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.174949	26792	5288
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.412767	102803	9041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.250524	69304	6259
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.158782	23130	3785
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.143708	12528	3277
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.034863	12265	2549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.071431	8046	2174
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.173068	81956	9134
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.331321	54686	6985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.154162	24383	4421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.064964	24573	6308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.090140	45618	5638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.075517	32900	5354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.049428	21513	4317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.051424	21438	5942
