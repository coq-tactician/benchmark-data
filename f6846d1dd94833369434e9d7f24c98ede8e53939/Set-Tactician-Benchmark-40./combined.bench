coq-tactician-stdlib.8.12.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.017016	3	2	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin2	40	0.037922	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	1.600149	427	177	0.4.5.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rminus, Rdiv; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.P_Rmin	40	0.409642	177	48	2.3.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rsth	40	0.068311	9	7	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.074796	28350	7429
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.073542	31268	2642
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.064731	26141	4262
coq-tactician-stdlib.8.12.dev	Coq.Reals.Binomial.pascal	40	40.052909	19367	4134
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.047410	19145	3072
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_R.Rcri	40	9.125786	4416	394	5.14.6.35	synth with cache (only 1: intro H5; only 1: intros; only 1: rewrite Rmult_comm; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.053779	20400	4076
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	0.501333	120	52	0.0.1.0.0.1.2	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C3	40	40.030548	8980	4085
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.063277	23818	5951
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P1	40	40.165823	77459	7038
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.included_trans	40	0.160600	99	27	0.8.0	synth with cache (only 1: intros; only 1: intros H'3; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.151477	39085	4678
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple	40	0.050486	6	2	4.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.053292	17066	5389
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis2.quadruple_var	40	1.569595	1651	149	11.3.11	synth with cache (only 1: intro H; only 1: unfold Rdiv; only 1: field).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.054807	19799	5980
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.088109	36146	5718
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor1	40	40.105966	49269	4693
coq-tactician-stdlib.8.12.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.068582	27458	4867
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.114153	49593	7037
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.086407	34723	4712
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.distance_refl	40	40.040848	13226	4102
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.067772	26538	4304
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.046773	17073	3875
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.054421	20907	4339
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.040130	14271	3416
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_ineq1	40	40.032584	9990	3645
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.183770	90428	4981
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.058333	7830	2702
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.044358	17882	3662
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.037661	11161	4595
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	14.094853	2035	870	0.0.0.0.0.0.0.0.0.2.0.1.0.0	synth with cache (only 1: apply Rmult_integral_contrapositive_currified; only 1: exact R1_neq_R0; only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: apply Rinv_neq_0_compat; only 1: generalize (Rlt_le 0 2 Hyp); only 1: intro H1; only 1: red; only 1: intro H2; only 1: generalize (sqrt_eq_0 2 H1 H2); only 1: intro H; only 1: absurd (2 = 0); only 1: discrR; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.shift_value	40	0.033264	2	1	1	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.058913	25440	3146
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.tech	40	40.038563	9734	2937
coq-tactician-stdlib.8.12.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.060251	13	7	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Rcri	40	40.038435	14024	1423
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.064769	25779	6580
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series	40	40.077062	31272	6269
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rprod.C_maj	40	40.040587	14597	2490
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.069751	27735	5413
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.interior_P3	40	40.085446	35196	6588
coq-tactician-stdlib.8.12.dev	Coq.Reals.Alembert.Alembert_C5	40	40.030945	8727	4244
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.066250	25095	5252
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.070801	28524	5682
coq-tactician-stdlib.8.12.dev	Coq.Reals.Cos_plus.cos_plus	40	40.052467	17675	4415
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.062299	23974	5233
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	40.056800	19153	5020
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.057661	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.MVT_cor3	40	40.034529	9662	5217
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.083582	34954	5213
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.050086	17170	5571
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.068446	27273	4644
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	40.045675	15490	4462
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.050686	18472	3928
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.exp_Ropp	40	40.068773	28128	3418
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.036173	13012	3726
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.038708	14313	3807
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.018041	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.073173	32875	3359
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech1	40	40.106839	46113	6076
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech5	40	0.013493	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.072054	28077	5850
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.053268	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dx	40	40.079406	31591	6404
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.pow2_ge_0	40	40.037016	12942	3722
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.241325	118162	3263
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.056695	23536	2515
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_2_3	40	40.038366	12697	3203
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.104555	14380	3460
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.growing_cv	40	40.127855	56747	7043
coq-tactician-stdlib.8.12.dev	Coq.nsatz.Nsatz.Qcri	40	38.553447	11750	899	1.0.1.0.27.0.11	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: repeat red; only 1: symmetry; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	5.202793	3295	396	0.9.7.2.5	synth with cache (only 1: intros r1 r2; only 1: intros x; only 1: intros (?, ?); only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.AbsList_P2	40	11.985268	8265	1443	1.0.2.0.2.1.0.1.2.0.1.2.6.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: exists (x - IZR k0 * y); only 1: elim H; only 1: elim H; only 1: simpl; only 1: intros; only 1: exists a; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	40.091579	38531	6171
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	40.065631	25481	4697
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.complementary_P1	40	40.109990	47708	5524
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.042168	12394	5089
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.064721	25387	5410
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.060270	23411	4442
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.083195	33851	4041
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.044248	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.072827	26832	4962
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	2.550968	702	120	0.2.0.10	synth with cache (only 1: intros Eq2; only 1: red; only 1: apply pow_nonzero; only 1: discrR).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.057149	20707	4893
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.060644	24416	3373
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.043662	15526	4241
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.049447	16731	4168
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_exp	40	40.078143	31521	4435
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Rsor	40	40.110675	49883	5638
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.058923	24556	3145
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_mult	40	0.038042	7	3	0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.037092	13645	3751
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.099299	39580	6713
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.106100	37125	4634
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_O	40	0.012425	2	2	0.0	synth with cache (only 1: intros p0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_1	40	0.025940	6	4	0.1.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_add	40	0.052034	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.040652	15840	3234
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_plus	40	4.311186	2904	404	3.0.14.9	synth with cache (only 1: intro; only 1: unfold Rsqr; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.067283	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	0.256828	79	27	1.1.2.0.0	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech6	40	40.064182	22359	5835
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.tech12	40	0.013739	2	2	0.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.114407	50553	6120
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.064537	24461	4654
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rderiv.Dopp	40	40.074402	29691	5991
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.048437	17216	3297
coq-tactician-stdlib.8.12.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.375048	32009	2751
coq-tactician-stdlib.8.12.dev	Coq.Reals.Machin.Machin_4_5_239	40	40.052833	19083	2480
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.048230	16595	3647
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.148956	69784	6744
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	2.345805	188	101	1.0.0.0.0.1.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.100552	15214	3060
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.054539	12028	2777
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.MaxRlist_P2	40	40.068993	26866	5721
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.068880	25160	6345
coq-tactician-stdlib.8.12.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.095567	39242	7003
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P1	40	40.090743	35463	6565
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.083140	32764	3868
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.044218	13059	4615
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.042910	12246	4688
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.082883	31442	4329
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	0.065431	16	8	1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.070943	26539	4493
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.123109	57097	4993
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.le_double	40	0.011352	2	2	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.12.dev	Coq.Reals.ArithProp.tech8	40	0.025079	7	2	5.0	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.049911	19221	3043
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.071012	27464	3364
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.077119	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.053451	18754	4214
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.ln_inv	40	40.044413	15995	4105
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.IZR_nz	40	0.008483	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Qle_true	40	40.103054	47097	3332
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.044794	16407	3476
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	40.074170	29737	3302
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.066378	27003	4523
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.064071	10352	1687
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.065959	21071	7973
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.scal_sum	40	40.107349	46339	4481
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.075180	28544	3583
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	40.099073	41724	6413
coq-tactician-stdlib.8.12.dev	Coq.Reals.DiscrR.IZR_eq	40	0.068982	12	4	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	39.862562	9384	3496	1.0.4.2.0.6.6	synth with cache (only 1: intros; only 1: replace (x ^ 2) with (x * x) by field; only 1: red; only 1: pose proof (Rle_0_sqr (tan x)); only 1: apply Rplus_lt_le_0_compat; only 1: apply Rlt_0_1; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.076801	27534	5136
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_refl	40	0.315798	205	37	4.7	synth with cache (only 1: right; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_le	40	0.047544	21	9	0.0.1.1.0	synth with cache (only 1: red; only 1: left; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.131974	59223	4903
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_ge	40	2.926059	1690	393	8.4.4	synth with cache (only 1: intros x y H; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_lt	40	0.004636	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.050924	18645	2841
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P1	40	40.068982	27221	5407
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.069412	24241	5908
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.plus_sum	40	12.464104	5178	1729	4.0.0.0.0.1.6	synth with cache (only 1: intros n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.closed_set_P1	40	40.076036	29503	7644
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P4	40	0.044303	21	7	0.5.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	9.310619	9257	1281	1.0.8.0.9.4.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: induction 1; only 1: trivial; only 1: destruct H; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.045831	4	4	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.049794	15360	4826
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.047933	16290	5441
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rnot_lt_le	40	2.335988	707	245	3.1.2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros n m; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.positive_derivative	40	40.057944	19798	5647
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	1.220396	276	135	0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.039619	12411	3785
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.073216	28729	6148
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	0.816386	256	116	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.053549	20774	4257
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	0.038988	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros H'; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.fp_R0	40	40.458508	97930	2478
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.039599	11407	2237
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_0	40	40.896692	39930	2084
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.neg_sin	40	0.343011	49	27	0.0.0.3.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	40.046772	16908	4112
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.361280	35	29	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.104956	46947	3607
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreals.Qle_Rle	40	40.084680	37533	4031
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_pow	40	40.037077	12581	3621
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.071400	26620	3871
coq-tactician-stdlib.8.12.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	4.579482	8934	829	0.0.22.0.0.0.12.10.53	synth with cache (only 1: constructor; only 1: intros H; only 1: intros Eq0; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: intro abs; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.034485	10049	4023
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.034746	12059	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.115992	51465	4680
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.poly	40	40.075997	30557	6301
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.078660	28646	8004
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.081804	33007	3915
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.068169	26056	5342
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.015419	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_increasing	40	40.051348	19605	2856
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.099000	17556	1918
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rlimit.limit_minus	40	40.049928	14839	5925
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.Vn_growing	40	40.110202	49424	4582
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.not_Rlt	40	0.007656	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.153116	85	30	1.1.0.2.3	synth with cache (only 1: induction 1; only 1: constructor; only 1: eauto; only 1: auto; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P2	40	40.105061	46316	5770
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.075518	29534	5891
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_eq	40	40.097656	41584	4621
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_P3	40	40.055919	20438	5339
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.109380	45559	6279
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.200002	93437	5007
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.135099	39	16	0.0.0.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.increasing_decreasing	40	40.081850	29908	4865
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.177329	54	22	0.2.0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.010728	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_asym	40	0.023116	4	3	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.043537	12747	5482
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.IVT	40	40.074293	30407	5018
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.086912	32389	8354
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.036802	6	5	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.base_fp	40	40.069059	24637	7922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.012734	2	2	0.0	synth with cache (only 1: intros n m; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.040866	13747	4125
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_lt	40	40.073481	30312	4145
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.087400	35634	6807
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.049104	18260	4221
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.117825	51376	4771
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.055604	22057	4405
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.053109	16906	6429
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.109647	47075	7106
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.060326	19224	7492
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.032666	12385	1338
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.061040	24376	3950
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.102880	43244	5108
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.178858	23	12	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.260272	118	19	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.035710	12515	3007
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.064758	17426	1608
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.approx_min	40	40.052309	15955	5147
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.022608	7103	991
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.085402	32218	5457
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P3	40	40.047280	16618	6243
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	40.144674	67412	4871
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.056544	19940	5773
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.108456	45429	3886
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.sum_cte	40	40.071878	27974	5056
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.008706	1	1	0	synth with cache (only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.323435	58	32	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.051262	11243	1920
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.020245	276	138	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.291993	1182	187	7.3.6.1.0	synth with cache (only 1: intros m x y; only 1: intros H'; only 1: red; only 1: generalize y; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.022117	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	0.826636	651	111	2.4.11	synth with cache (only 1: intros a b; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.374811	134	41	4.4.0	synth with cache (only 1: intros H1; only 1: intro; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Rsepare	40	40.053221	16691	5049
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.null_derivative_1	40	40.045907	15439	6495
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.158767	75448	3589
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_antisym	40	40.100228	29895	3769
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.024258	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.196781	56	16	0.1.5	synth with cache (only 1: intros n m H1 H2; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.022967	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.045614	13970	5188
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.076152	30456	4020
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.068063	24807	11051
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	0.033720	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.095310	38759	3803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.071150	27797	4944
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.004695	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_period	40	40.063185	25028	3768
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.062606	6	6	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_trans	40	8.829943	10637	1324	10.1.1.4.9.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros EQ; only 1: intros n m H1 H2; only 1: intros le_mn0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.053884	19068	3283
coq-tactician-stdlib.8.12.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	40.241685	47407	5260
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	5.627582	3540	815	0.2.0.0.1.1.5.3.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros H; only 1: elim n; only 1: split; only 1: simpl; only 1: intros m IH; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.family_P1	40	17.432309	23803	2938	7.10.9.12	synth with cache (only 1: intros x y H; only 1: intro abs; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.046329	17390	4035
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.086209	33881	4299
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	40.068721	24497	3623
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.049864	22547	1702
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.094546	37425	6308
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_le	40	0.268361	51	25	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	6.829223	656	85	5.12	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.022155	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.065717	23756	6440
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	40.047622	15972	4286
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.101333	42036	5148
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.049174	15758	4218
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.153226	21679	2385
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.UL_sequence	40	40.070858	26926	5539
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete	40	0.016829	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	40.068519	23137	6058
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.048859	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.027946	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P6	40	40.072308	26857	6484
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.524204	124	70	2.0.4	synth with cache (only 1: split; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.068371	26805	4614
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.open_set_P6	40	20.474666	29597	3836	21.18.1	synth with cache (only 1: intros; only 1: intros HP; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cond_pos_sum	40	40.086651	31741	6225
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	40.137067	53103	5680
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	42.738868	8844	1602
coq-tactician-stdlib.8.12.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.084548	23164	4755
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.066416	21847	6085
coq-tactician-stdlib.8.12.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.109306	22079	1708
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.115462	55636	3011
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.148319	64665	7655
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.041425	4025	971
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.046802	13510	3601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.056816	21377	4768
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	40.057043	19567	2289
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rgt_dec	40	0.106705	5	4	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rge_dec	40	0.196234	9	5	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.044301	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	40.039044	12372	3400
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.081987	31557	7156
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.059258	22799	3602
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.059244	22535	4111
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.088013	40342	2960
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.044304	14638	3237
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow_mult	40	40.070185	25517	4544
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.309362	157493	4990
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.057560	22297	7602
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.042142	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.030647	15	3	7	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.112055	49138	4419
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.GP_infinite	40	40.081380	32897	5778
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.frame_tan	40	40.068496	26523	3370
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.074406	31455	2679
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.781186	60175	3334
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	16.967309	8421	2223	1.2.12.1.0	synth with cache (only 1: unfold PI; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: destruct pi2_int; only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: lra).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_plus	40	40.108678	49038	6226
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P7	40	40.061536	23352	5642
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.152758	70942	5386
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.102128	45400	5331
coq-tactician-stdlib.8.12.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.055815	19444	5256
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.compact_EMP	40	40.239860	111363	6028
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	40.049278	15303	1799
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.063272	23107	4045
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	40.057715	18831	6125
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.039843	12823	5123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	42.866111	36996	1776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.pow1	40	27.266558	12738	3348	3.0.3.2.1.12.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: pattern 1 at 1; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	1.076890	366	106	10.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.024269	2196	493
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.048495	18045	2881
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.081331	48	14	1.4.1	synth with cache (only 1: Bool.destr_bool; only 1: rewrite H; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.limit1_ext	40	40.033836	11136	3632
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.054597	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.060856	22699	2591
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	40.175673	83059	2535
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.095989	43722	3395
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.046638	15997	3667
coq-tactician-stdlib.8.12.dev	Coq.Reals.Runcountable.R_uncountable	40	40.094287	39643	4246
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.052150	17044	2711
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	1.507568	2717	248	18.17	synth with cache (only 1: intro H; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.040853	18177	1873
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.710186	293	91	0.10.0	synth with cache (only 1: intros; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.062960	24188	9012
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.121060	46968	5019
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	40.111482	48983	2596
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	2.526396	3579	392	3.14.4.6	synth with cache (only 1: intro H; only 1: inversion 1; only 1: generalize dependent n; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.047931	16104	4739
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rseries.CV_shift	40	40.100232	38407	5678
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.044471	16235	3705
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.067933	25177	4776
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.325323	14398	2677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalZ.of_iff	40	40.191813	31083	4808
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	40.056172	17170	6521
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.055988	16894	4758
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P8	40	40.066240	26604	5111
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.075740	30457	3337
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.054707	19231	5099
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.055614	15039	2822
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.066907	24294	4978
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.048372	14301	3690
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.028219	8089	2741
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.045813	9	7	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.135283	34714	4135
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.048578	16685	2735
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.044225	16705	964
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.075888	26281	8168
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.024950	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.Dln	40	40.030207	8639	4030
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.122782	15	14	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.012038	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.080002	29923	3005
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.102463	46309	2623
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.063639	23858	3052
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.297124	136919	11505
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.048176	15837	3175
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.030375	5501	1207
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.060166	21928	6050
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.078982	29712	4903
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.093858	40131	2652
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.063627	27075	2210
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.034472	10117	2640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.in_int	40	40.034597	10590	3420
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.056315	20722	4074
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.058451	23984	4287
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.091289	37684	5930
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_mult	40	40.048287	13151	5692
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_appart	40	42.591240	11310	1405
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P9	40	40.052868	20921	3909
coq-tactician-stdlib.8.12.dev	Coq.Reals.RList.RList_P18	40	0.053621	11	6	0.0.1.0.0	synth with cache (only 1: induction l as [| r r0 H]; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.103742	45440	3701
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.041049	12780	5418
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.086811	33536	5111
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.008576	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.045952	14486	5497
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.533480	408	73	15	synth with cache (only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.054482	17	5	4	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	21.594732	13720	3499	15.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: rewrite (Rsqr_abs x); only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.061651	24354	3832
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.080302	29990	3719
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.069764	28278	2937
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	17.525279	13655	1016	14.0.0.18.0.17	synth with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.071464	27961	3775
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.008578	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	40.062231	20765	6944
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	40.091819	35653	4396
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.029312	8853	3459
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.089966	22707	3291
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.020168	3	2	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.045486	18528	2141
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	40.309613	29514	3532
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.048530	15352	3787
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.012824	4457	407
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.069317	27465	4365
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.138991	62904	5754
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.069648	23602	5344
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.010687	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.129316	41459	3952
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.040566	15011	3447
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.062727	20968	6022
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.048603	17959	4179
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.117969	49461	5820
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech9	40	40.078494	30474	4532
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.128707	55928	6482
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.070181	30703	3972
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.047906	17020	4637
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.084194	35283	4325
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.034995	10136	2552
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.105540	44213	4584
coq-tactician-stdlib.8.12.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.080948	28967	5677
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.101730	29360	5122
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.058752	21385	4122
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.069497	26667	4458
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.030906	9	4	2.0.2	synth with cache (only 1: red; only 1: red; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qpower.Qmult_power_positive	40	40.153711	11089	2034
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.088396	35926	476
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.018222	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	23.019697	40799	1919	14.5.56.1	synth with cache (only 1: intros; only 1: inversion H; only 1: rewrite H1 in *; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.038348	15078	1937
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.181280	85126	2382
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	1.755111	3203	169	50	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.965112	344	95	3.0.0.0.2.0.4	synth with cache (only 1: destruct n; only 1: intros; only 1: easy; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.027760	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.007171	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.adherence_P4	40	8.358547	9176	1411	4.0.7.2.9.1	synth with cache (only 1: intros; only 1: intro H15; only 1: intros z0 H7; only 1: unfold intersection_domain; only 1: intro Hyp_F_NE; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.620190	76	56	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.074513	14	5	4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.020960	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.012859	9	2	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.015916	2	2	0.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.078709	28613	4889
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.108818	45794	2460
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.024774	2709	794
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_imp	40	40.033096	9677	3676
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0	40	40.279225	142766	1383
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.104235	47620	3648
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	10.383004	53495	478	280	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.009591	3	2	1.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.066299	23359	3828
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.069915	26731	5157
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.D_in_ext	40	10.574362	3627	1085	0.6.0.0.3.0.2	synth with cache (only 1: unfold D_in; only 1: intros; only 1: generalize H, H0; only 1: clear H0; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.740856	284	97	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: rewrite elements_Empty in H; only 1: rewrite elements_iff in H0; only 1: rewrite InA_alt in H0; only 1: destruct H0; only 1: rewrite H in H0; only 1: destruct H0 as (_, H0); only 1: inversion H0).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.038758	10868	4457
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	36.245813	45004	3136	0.0.0.0.1.0.10.2.10.26.2	synth with cache (only 1: intros; only 1: destruct x; only 1: auto with zarith; only 1: right; only 1: split; only 1: easy; only 1: split; only 1: left; only 1: split; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.055513	22039	3540
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.083642	35118	3293
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.140557	64057	6301
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.041359	13012	2853
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.070514	23290	4716
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.042592	15431	3506
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.tech13	40	40.156533	70000	5190
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.071175	27001	1594
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	9.642295	9878	924	0.0.0.3.1.1.0.0.2.22.1	synth with cache (only 1: unfold Z.pow_pos; only 1: set (y := Z.pred (Z.pos p)); only 1: generalize 1; only 1: induction p; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: intros; only 1: trivial; only 1: simpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.128038	57558	6340
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.110365	48032	6271
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.057566	23522	4535
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.117987	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.030644	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.049509	9900	3202
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.635229	116	44	0.1.2.0.6	synth with cache (only 1: intuition; only 1: generalize (F.equal_iff s1 s2); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0.434839	28	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.le_0_iff	40	1.554621	1286	248	0.1.7.8	synth with cache (only 1: intros a b; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.418551	16	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.484929	16	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.092024	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.402884	19	11	0.6	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.212640	4	2	0.2	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.058090	22562	3053
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.089230	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.053711	19486	2821
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	39.838762	25886	5432	12.4.0.10	synth with cache (only 1: intro; only 1: unfold permutation, meq; only 1: intuition; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.182350	82972	3510
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.062380	23703	2452
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.domain_P1	40	40.094561	40570	5520
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.073159	24699	3543
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.088935	35219	5696
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.029682	3842	467
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.103229	41385	4845
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.234656	17	5	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	31.924852	10432	4343	0.0.0.0.1.0.0.3.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: assert ([|b|] > 0) by lia; only 1: destruct Z.div_eucl as (q, r); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.162007	76636	2814
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.203065	53	22	3.2	synth with cache (only 1: unfold add, to_Z; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.114272	49626	3215
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.039064	27	8	5	synth with cache (only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.141365	22	9	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.027774	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.034643	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.070907	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.096653	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.029089	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.176737	20	10	0.0.0.0.4	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.080210	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.537723	66	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.423406	19	5	0.1	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.292638	5	3	0.1.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.092894	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.127422	7	5	1.0.1.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.union_iff; only 1: fsetdec; only 1: do 2 rewrite F.union_iff; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.071362	28489	4563
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.043404	14480	2475
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.067558	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.033521	9366	3293
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.042670	15489	3493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.830026	20709	1250
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.438667	28	12	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.053323	17994	3763
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.503154	30	9	3.2	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.094771	40007	4296
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.125032	54577	5601
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.041960	12319	3053
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.041885	10688	4242
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	4.298874	249	68	2.1.1.6	synth with cache (only 1: constructor; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.026987	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.035505	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.070002	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.101828	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.063990	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.SeqProp.CV_minus	40	40.037525	10336	5613
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0.361155	10	5	2.0.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rmult_1_l	40	40.099996	44353	2042
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.562072	109	49	0.8	synth with cache (only 1: intros H3; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.331705	31	15	1.6	synth with cache (only 1: simpl_relation; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.100377	39790	4230
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.099272	40452	6604
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	40.108699	47903	5557
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.071425	31049	2421
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.138539	55892	4346
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.075461	30257	4166
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.055452	4546	831
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.053015	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.057716	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.079125	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.076376	29528	4921
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0.531503	22	6	0.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.074152	29542	4170
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.048963	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.079664	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.058650	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.148004	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.518812	53	16	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	40.060114	8183	1155
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtopology.Heine	40	40.114797	48521	5588
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.125343	44781	4692
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.061955	19491	2138
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	0.176616	24	7	1.1	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.026017	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.022320	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.021862	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.181922	82221	4677
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.099470	41690	3610
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.081738	28566	4893
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	40.085442	33782	4703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.316080	15977	2859
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rpower.arcsinh_0	40	40.167258	21186	3407
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.119565	4869	1095
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.082308	33883	2980
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.253198	116272	3957
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.048722	17008	3199
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.083040	28860	2203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.022807	9	3	6	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.129635	59367	2464
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.048620	15402	2960
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.032789	9638	4069
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	5.928203	13128	581	6.0.13.18.0.80	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: auto with set; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.350297	178	21	11.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.009571	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.353222	94	16	8.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_asym	40	40.074863	31060	2324
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.792153	68	52	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.015729	2812	1202
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.079317	4832	958
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qsor	40	40.072002	22504	673
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.813731	846	91	1.6.18	synth with cache (only 1: intro H; only 1: intros p; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.QNpower	40	0.015362	3	3	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.087345	39487	2321
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.074729	30893	5217
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	40.091633	36975	5211
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.054779	17923	3961
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.134005	24	10	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.145909	21	12	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.037903	8594	1703
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.097928	44698	2765
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	3.203450	3081	422	0.26	synth with cache (only 1: intros m'; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.481460	32	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.066604	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.059380	21374	5652
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	2.034660	1780	234	3.17	synth with cache (only 1: intros n A f x; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.124332	51081	3665
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qabs.Qabs_Qinv	40	40.098198	42393	3168
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.107072	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.111008	48431	6410
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.160382	66462	7895
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.008323	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.007133	1	1	0	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.008144	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.008643	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.010513	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.009044	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.007595	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	20.439396	2705	2043	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.019007	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.011311	3	2	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.243287	176	16	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.565106	728	271	1.2.0.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.047810	17057	3619
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.012347	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.097542	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.574061	44	11	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.061149	23815	3155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.172350	79840	3799
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.109158	44122	5507
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	7.553662	3607	331	1.5.11.15	synth with cache (only 1: intro; only 1: intuition eauto  4 with real; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.744273	181	63	3.0.0.3	synth with cache (only 1: intros x y z; only 1: intro; only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex2	40	0.007628	1	1	0	synth with cache (only 1: exact Qplus_comm).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex6	40	0.031368	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qfield.Examples.ex7	40	0.043610	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.350940	174861	3319
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.043649	8451	2274
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	2.013098	894	318	2.8.2	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	0.069137	20	8	1.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.251986	116375	4457
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	5.756752	6277	536	1.1.0.30	synth with cache (only 1: intros EQ; only 1: zify; only 1: pose proof gt_wB_1; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.077341	30379	8176
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	1.256318	329	154	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.030851	9843	3573
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_le	40	40.106579	24872	2124
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.169211	77038	6057
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.028748	9053	2481
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qred_iff	40	40.099004	43953	4400
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.041412	13464	4612
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.814136	1562	187	19.17	synth with cache (only 1: intros l; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.017568	3	3	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.117319	51822	3860
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	40.259303	129226	4826
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.089115	37101	3111
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Alt_PI_tg	40	6.889291	1508	557	0.2.0.0.1.0.5	synth with cache (only 1: intros Eq1; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.068251	24342	4074
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcge_alt	40	7.337053	4806	805	1.0.11.11	synth with cache (only 1: intro; only 1: induction p; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_plus	40	40.083003	33434	5197
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.106792	45250	7125
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.121326	34	12	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.064812	96	13	11	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.048655	16429	2603
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.088674	36619	4777
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.118040	52326	3752
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.083403	17172	3687
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	26.321838	15384	1840	1.45	synth with cache (only 1: intros x y Hin; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.648353	525	73	1.4.12	synth with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.073448	28934	5434
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.089158	35704	3213
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	9.615445	9631	1294	1.1.1.1.0.0.25	synth with cache (only 1: intros x y z; only 1: intros; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.089516	34327	5783
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.291098	144631	2635
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.011988	3	1	2	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.047615	13222	5278
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.017459	4	1	3	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.012395	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	1.043328	311	117	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	40.351729	166249	5461
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	40.153307	71946	5372
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	13.256702	6283	327	33.15.1	synth with cache (only 1: intuition; only 1: generalize H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	40.061187	27150	3203
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.092171	15052	1568
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.048127	17390	4309
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.149540	67346	4297
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qle_ceiling	40	40.052824	17036	3659
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.086139	33210	2299
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.030655	9493	4141
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.027909	6961	3354
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.060445	20000	3240
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.219815	104420	1590
coq-tactician-stdlib.8.12.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.794898	53521	4233
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.024140	6872	2730
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.241314	116778	1668
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.099361	44092	3883
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.047815	3	1	2	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.066531	24180	4081
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.088538	37608	5290
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	40.208125	93552	7033
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.081373	33778	4083
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.254799	5552	749
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.010910	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.008297	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.013406	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.063810	22879	2278
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.043017	10611	3186
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.099268	38837	6865
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.072873	24237	2009
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.094785	37931	5741
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.078905	31183	2624
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.179531	1743	190	23	synth with cache (only 1: now BinInt.Z.swap_greater).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	40.037669	9039	3734
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.009627	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.100611	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.012326	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.012139	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.012032	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.010705	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.030908	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.156571	34720	2614
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.065088	24362	3833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.184403	81631	5546
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.013352	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.040895	14	4	4.1.0	synth with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	40.110344	43820	3655
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.195924	87595	6381
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.080654	29427	373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.060909	15287	2000
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.115545	8	1	7	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.334374	14292	794
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.061442	22981	4303
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.105208	26347	2111
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	3.161344	5153	785	6.1.3.17.1.1	synth with cache (only 1: split; only 1: intros H'; only 1: red; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.108904	30397	2854
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	16.801464	16188	2042	1.0.0.28.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct z; only 1: red; only 1: unfold snd; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.024705	5307	3372
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.237489	30784	3343
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	40.072710	24761	2241
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.161812	72051	4593
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.114629	19762	2759
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.046507	14964	3251
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.191892	91216	3336
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	40.093449	39953	1645
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.072291	26228	4495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.121386	51163	6770
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.153286	71048	732
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.050263	17720	3557
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.135259	20543	3936
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.057562	12826	2941
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	41.883140	49652	4255
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.018748	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.079102	27514	5457
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	20.859300	11866	2550	1.0.0.0.13.15.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.069357	24555	3015
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.166707	77423	5082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.030455	4	2	0.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.126349	52276	5005
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	40.021022	4207	1771
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.007365	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.070559	25932	3623
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.076763	28676	1000
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.591714	660	186	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.139871	63074	4332
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.079848	17629	1939
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	14.454786	9204	1492	1.1.0.0.10.1.5.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: simpl; only 1: intros a'; only 1: destruct (eqA_dec a a'); only 1: simpl; only 1: destruct 1; only 1: auto with *; only 1: intros H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	7.138614	2005	482	0.0.0.0.0.0.0.3.0.0.4	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_spec; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.022289	5316	621
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.060713	22173	3521
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.021124	6	2	4.0	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.050899	16126	4745
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.134092	60887	5874
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.209119	101876	5222
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.098554	41093	4250
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.119236	51973	4640
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.030803	7140	3137
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	40.154883	36882	4246
coq-tactician-stdlib.8.12.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.031450	4887	940
coq-tactician-stdlib.8.12.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.022406	5902	2525
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.090092	34331	3047
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.038119	13358	3266
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.151722	68876	5248
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	3.478207	5623	430	2.1.1.3.32	synth with cache (only 1: intros a n Hn; only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	40.096011	42438	2037
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	0.127281	7	5	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.063632	21563	4293
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.115489	37164	1691
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.093208	29217	5964
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.165832	92	31	2.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: auto; only 1: now rewrite <- ?Pos.compare_antisym; only 1: now rewrite <- ?Pos.compare_antisym; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.927381	153	91	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.091588	38822	4078
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.115109	34373	2835
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.026717	8	1	7	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.006476	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.134728	9927	1012
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.082179	24911	6708
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	40.056196	19918	6219
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	41.730752	20704	3035
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.173058	76285	6655
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	12.491105	35264	1667	0.1.14.0.4.58.2	synth with cache (only 1: intros; only 1: generalize dependent x; only 1: intros a Ha; only 1: rewrite remove_spec; only 1: split; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.109824	40566	5975
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	25.553136	2394	180	0.1.0.33	synth with cache (only 1: induction x; only 1: simpl in *; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.035541	15124	1093
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.201709	40083	2610
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.isZ0_0	40	4.001918	2798	545	0.0.0.0.0.0.17.2	synth with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	5.840907	1875	1022	0.0.0.0.0.2.5	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.167284	76324	4144
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.126795	59122	3296
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.052847	18128	3658
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.037108	10867	2195
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.018797	5236	519
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	7.632531	3796	1301	0.1.9.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.129770	54045	5906
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.077636	33267	4347
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.034147	8622	4001
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.077084	28528	3707
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	6.438093	1285	91	27.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.018069	1	1	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.018423	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ratan.PI_ineq	40	40.050201	16584	3495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.172396	76343	4422
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_correct	40	40.072922	29221	3756
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	40.066757	27162	2647
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.052146	18361	5420
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.142295	59015	7843
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.345514	106	49	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.033484	6936	4766
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.064893	25597	4467
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.107039	44851	1388
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.064740	20578	5052
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.106961	47462	3507
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	5.213466	1773	666	0.0.0.0.0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	0.067157	10	7	1.3.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.061974	22321	6246
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.092006	40096	3671
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.074478	26435	3589
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.087226	37551	5347
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.076410	27483	7344
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.151548	67091	5335
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.096780	37571	4495
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.059320	23165	3156
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.021575	3	2	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.035375	7462	1454
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.190528	52941	2314
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.130458	53888	5339
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	22.142285	16982	1566	2.7.1.0.0.5.18.6	synth with cache (only 1: intros m s1; only 1: intros n v le le'; only 1: symmetry; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intro; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.095825	40746	4173
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.027384	2	1	1	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.111991	43557	4835
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.033738	7702	1321
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_one	40	23.854046	28039	4166	0.4.0.0.0.0.0.0.7.0.2.4.0.0.0.2.1.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: intros m H; only 1: now destruct m; only 1: simpl; only 1: intros; only 1: injection H as [=<-]; only 1: destruct p; only 1: split; only 1: induction p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.351307	335	58	8.6	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.061395	18015	6081
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.063313	20746	3509
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	2.557276	2043	316	8.0.1.11	synth with cache (only 1: intros H x; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.041301	11863	4529
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	5.906095	2661	865	0.0.1.0.0.1.0.0.0.0.3.6.0	synth with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: generalize (H x); only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.866752	998	111	13.17	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.145788	58139	5263
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.045764	9	3	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	40.012262	4442	435
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.263681	133589	5092
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	40.067933	23843	3123
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.075119	22760	3591
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.232860	484	119	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.139834	61172	4992
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.036980	8860	5031
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.050518	15732	4867
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.993382	1687	166	4.2.18.2.8.2	synth with cache (only 1: split; only 1: auto with arith; only 1: auto with relations; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.200549	96324	2525
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	40.068302	23275	4625
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.109754	43186	5225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.137544	53859	2912
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.088162	34640	3882
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.090111	29474	4286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	3.034024	1420	563	3.0.0.3.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: simpl; only 1: trivial; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.032664	7	6	0.0.0.0.0.1	synth with cache (only 1: simpl; only 1: revert n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.078705	29047	4333
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.039206	10655	5365
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.405851	246	111	0.4.0.3.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.121942	52428	4219
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.161089	69288	4107
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.070335	28973	2956
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.069068	24646	5615
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.041208	13565	3525
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.123375	55063	5388
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.201659	96952	6690
coq-tactician-stdlib.8.12.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.061472	8338	1262
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.087754	31416	2727
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	25.462425	42295	3638	0.0.19.17.0.1.4	synth with cache (only 1: intros Ha; only 1: intros n; only 1: eqb2eq; only 1: intros H; only 1: contradict Ha; only 1: subst; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.056926	19332	4167
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_trans	40	40.132131	57898	5631
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.064865	21	10	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.092956	38198	5452
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.031223	7873	4504
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.119104	48359	5935
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.059711	23274	3967
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.058546	17	6	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.003940	873	332
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.059875	23196	2092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.034885	11165	698
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.074490	25331	6753
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.068937	28120	4144
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.109568	45326	5502
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.038299	7	3	2.0.2	synth with cache (only 1: intros n m H; only 1: apply <- add_spec; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.093256	41129	3570
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	40.076709	32445	3198
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.200909	93176	4414
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.046858	14048	5348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.129837	50150	4999
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.058621	23146	4357
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.154537	72463	3403
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.134437	23357	3573
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.055727	18304	6219
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.061542	19276	3139
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.046819	11707	4737
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.066267	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.095944	39992	3634
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.098702	46	15	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.033781	3	2	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.Ranalysis1.pr_nu	40	5.958840	4159	784	0.4.3.2.2.7	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: intros H1 H2; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.034903	12432	2569
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	1.406941	2611	213	0.0.0.25.0	synth with cache (only 1: intros P; only 1: intro; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.105157	46976	1356
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.097757	41826	5344
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	40.140127	34239	5369
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40	41.504840	19149	3096
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.058189	19849	7589
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_alt	40	40.060616	20708	1587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.074417	29436	2475
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_lb	40	40.206721	101564	6320
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.089721	36958	5449
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.282493	131403	5118
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.043927	15173	3493
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.097243	35830	4930
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.059298	22282	3448
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.005923	2175	226
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	40.137799	26793	1967
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.161450	65	21	7.1	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qmult'_correct	40	40.176641	11215	2206
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.010496	3	2	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.098451	39911	3822
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.099037	41595	7209
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.139126	61832	5897
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.401897	145	58	6.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.059782	23712	5859
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.126587	57975	4761
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	40.152503	58410	5188
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	1.847589	1183	283	10.8	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.104765	45475	6291
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.151913	72864	4390
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.018629	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.057241	5	5	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.118834	50279	4172
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalString.NilZero.sis	40	7.703028	5419	1242	0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: intros; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.064579	23490	3389
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.033881	12028	2024
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.069137	10	6	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	40.050431	17200	5378
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.075315	28571	3038
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.243146	32	18	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	40.062639	5122	1128
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.275752	129929	2842
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.059516	20	4	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.185863	2093	371	0.4.0.2.9	synth with cache (only 1: intros a b c H H'; only 1: apply fold_rec; only 1: split; only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.026127	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.082757	32085	4968
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.061655	22116	5056
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.083749	32002	3645
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.093178	35060	4826
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.093515	38648	5586
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.065019	24085	3948
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	32.241199	144425	530
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	29.870300	790	156	2.0.2.2.2.2.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.449097	56	12	1.5.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Epsilon.iota_statement	40	40.227753	109222	7881
coq-tactician-stdlib.8.12.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.398328	201049	7202
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	5.679755	3100	1096	0.0.0.0.0.0.2.6	synth with cache (only 1: intros i; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.021950	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Nplength_ub	40	40.141280	63295	4710
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.041547	15152	3395
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.061994	20775	4497
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.087082	26039	3082
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	6.918261	1263	327	0.0.0.0.0.0.0.2.0.1.2	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.062451	15755	2230
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qreduction.Qred_lt	40	0.791102	277	79	2.2.5.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.095800	36617	5447
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalChoice.choice	40	40.261637	128787	7256
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.122422	49550	7729
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.057839	23725	3235
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_trans	40	3.712492	2823	799	0.0.1.2.2.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.038628	11	6	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.063213	16811	2856
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.155617	65102	6210
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.078047	31695	2590
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.054398	15573	2879
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.075529	32557	3837
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.144157	4823	1020	12.0.1.8	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite inter_spec; only 1: now BinNat.N.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.075404	27104	3603
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.042011	15008	3135
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.055407	4085	1338
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	40.093646	36110	5058
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.052175	20978	1977
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.906743	1654	288	11.6	synth with cache (only 1: intros x y; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	40.150554	69524	3699
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.504556	689	89	0.0.0.0.0.0.20	synth with cache (only 1: split; only 1: intros; only 1: apply <- elements_spec1; only 1: auto; only 1: intros; only 1: apply -> elements_spec1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.091214	38424	3558
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.111835	37949	5909
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	40.065205	23316	5978
coq-tactician-stdlib.8.12.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.078573	30847	2920
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.117696	50073	4669
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_trans	40	40.089081	36794	5787
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	2.231286	3274	247	2.0.3.2.1.24.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: trivial; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.065340	13314	1667
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.009365	3368	160
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	15.116492	5249	927	3.11.3.0.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.189284	80716	4096
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.998375	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.137372	58897	4634
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.784419	8	3	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.056206	22157	2795
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndist.Npdist_eq_2	40	40.146158	66969	5749
coq-tactician-stdlib.8.12.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	40.045532	10449	3531
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.449142	18	4	4	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.108032	46585	4189
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.107401	47027	3860
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	40.083690	28892	5239
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.051347	19408	3191
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.017084	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.023417	10	4	0.2.0	synth with cache (only 1: destruct n; only 1: Nat.order'; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	40.093390	32517	4588
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.049833	20160	2436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.054371	7533	849
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.211234	31701	2688
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.042629	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.122143	53664	5938
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.080448	27769	4106
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.041627	11736	531
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.051545	17947	3825
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.095994	40377	4720
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.084496	31117	3449
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.053580	17734	2636
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.092935	39801	4077
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.014212	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.12.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.115531	49886	5149
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.110414	46593	4566
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.052379	19748	2764
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.080817	28753	6128
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.078462	32161	4869
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.083992	30946	3240
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.076177	32064	3336
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.097818	31461	3730
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.070793	25823	3105
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.171494	82544	5912
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.003471	755	149
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.030251	3	2	0.1	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.163607	74288	4090
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.639294	163	14	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.005912	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.057047	22343	2220
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.068817	26978	3049
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_refl	40	40.215737	104128	5453
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nor_semantics	40	20.062924	21871	2009	4.0.84	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.102416	38558	1971
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.136501	59231	6239
coq-tactician-stdlib.8.12.dev	Coq.micromega.Ztac.elim_concl_eq	40	2.597541	2758	365	9.0.1.1.13	synth with cache (only 1: intros n m; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.090814	38167	4616
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.271576	23274	2704
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.065883	25088	3497
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.111737	46325	5144
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.078109	30190	4559
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.168093	73337	4511
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.143126	63286	4117
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.124573	44612	5671
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.065361	19205	3441
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.065597	21121	9227
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	5.144524	4007	554	0.2.2.0.15.0	synth with cache (only 1: simple induction 1; only 1: Z.nzsimpl'; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	40.057461	8069	3798
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.039912	10806	3936
coq-tactician-stdlib.8.12.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.093632	39350	2818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.070441	4709	259
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.113181	49934	1660
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Q_Setoid	40	40.089439	24547	1043
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.not_prime_1	40	3.041150	3290	102	77	synth with cache (only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.102573	45773	4380
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	40.334611	19194	2646
coq-tactician-stdlib.8.12.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.113962	8202	1561
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.335226	27267	4842
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.210931	96711	1673
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	9.429450	5387	662	0.15.6.7.3	synth with cache (only 1: repeat red; only 1: symmetry; only 1: simpl; only 1: nzsimpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	40.082031	32323	3630
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.017378	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.007586	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.297588	141002	8276
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	40.003673	1359	129
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.124809	52687	3986
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.139872	58195	2264
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.006104	5	1	4	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	4.165817	3595	206	41	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.094139	37473	3213
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.095830	21	5	4	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_sym	40	40.161278	74827	4290
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.746469	461	97	0.11.0	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.118126	47664	5439
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.106531	37586	4885
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.133959	58809	4811
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	7.698863	5677	553	12.10.2.7.8	synth with cache (only 1: intros; only 1: elim ARth; only 1: intros x1 x2 Ex y1 y2 Ey; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.100738	16742	3674
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	0.072164	8	2	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.069326	26820	3758
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.066441	11122	1748
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.932155	958	159	1.2.0.2.10	synth with cache (only 1: intros H1 H2 H3; only 1: intros; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.134486	55966	4396
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.398333	176508	1624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.161904	75455	5573
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	2.954555	3436	398	18.10	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.884545	273	123	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.009778	1	1	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.232377	108301	8196
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.093752	22837	2974
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.032947	7	2	5.0	synth with cache (only 1: intros; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.107765	24207	1527
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.068732	15853	3305
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.084184	12	7	4.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	40.036302	9260	4850
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.146514	64402	4882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.039040	15773	1463
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	2.442149	7202	277	73	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.019421	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_dec	40	40.101384	35713	3228
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	12.762769	12581	512	87	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.146648	64465	4083
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.049448	17208	2658
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.016673	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.274304	46179	4266
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.073742	27705	4378
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.147213	31672	3989
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	5.399151	2301	234	3.0.22	synth with cache (only 1: intros Az RS; only 1: rewrite xnnormalise_correct; only 1: easy || now destruct y).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.060974	22205	2470
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.150032	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.098815	40733	2938
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.001233	241	77
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.120382	53565	4292
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.074715	30063	2346
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.142865	20244	2153
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.063158	26480	3233
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	27.392231	32996	2609	28.2.0.5.14	synth with cache (only 1: intros x y H; only 1: red; only 1: unfold Subset, Empty, impl; only 1: intuition; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.eqb_eq	40	40.073033	25672	8307
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.072199	29316	3868
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.103526	42973	6549
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.025070	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.638712	388	124	14.0	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	40.100360	37536	4326
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.find_left_path	40	40.142261	63867	6202
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.223292	745	119	0.13.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now try N.order'; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.054067	18224	3711
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nless_def_2	40	4.404418	2173	805	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.258611	128233	1081
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.119981	33269	5494
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.198556	64391	1782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.063672	24291	3843
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.054417	17591	5039
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.028119	7553	2984
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.127425	54870	4512
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.344017	9643	2205
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.125735	54744	2833
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.122286	56004	4448
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_spec	40	40.347638	83161	6338
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.060145	16597	6627
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.269947	17978	2428
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.231013	24784	1595
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	40.069669	26341	6154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.099875	38610	2918
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.063282	24683	3199
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.119973	52234	5219
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.070917	22337	3824
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qcpower_0	40	21.085504	21011	1727	0.3.6.0.1.9.13.3	synth with cache (only 1: unfold Q2Qc; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: Nat.order; only 1: simpl; only 1: intro H; only 1: auto with qarith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.706097	109	41	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.090964	33753	3133
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.091421	36503	3377
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.009937	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.125483	23556	1599
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.210541	101239	7397
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	2.153552	6189	109	0.0.108	synth with cache (only 1: hnf; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.949473	3888	81	87	synth with cache (only 1: now BinInt.Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	40.068602	27256	3123
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	5.390879	3557	733	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.000779	78	30
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	1.906330	818	259	4.7.1.4.1	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: simpl; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	40.092556	37967	3094
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct1	40	40.108647	41944	7540
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.109421	46866	4186
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.275312	122774	4265
coq-tactician-stdlib.8.12.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.172247	81028	3401
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N0_less_2	40	40.157340	70411	4122
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.170073	75901	6972
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.155721	68454	4731
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.384309	20296	2900
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.139089	143	22	16	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.071541	28161	3568
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.047275	14730	4670
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.175464	83533	531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.096533	26474	2480
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_2	40	31.951877	75330	4089	0.0.3.121	synth with cache (only 1: revert a; only 1: intros m; only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.077399	29100	3439
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.060993	23104	2910
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	40.073327	23905	10090
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	17.990505	12199	1795	0.0.0.6.19	synth with cache (only 1: intros a0 a; only 1: intros E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_minus	40	3.958418	1085	372	0.1.6.4.0	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_refl	40	40.250812	29004	3379
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.080746	32769	3644
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.321188	17738	2395
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	25.618742	45	28	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.186866	23979	1233
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.058524	18435	4001
coq-tactician-stdlib.8.12.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.124481	52240	4182
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	40.434017	34186	2320
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	41.485202	27039	2523
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.080710	31468	1383
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.078388	31972	3345
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.051406	15047	1307
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.049479	92	8	14	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	40.045847	12862	1598
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.250513	124472	7685
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	40.074086	31673	3001
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	7.643173	5570	454	39	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.058662	20668	3643
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.index_correct4	40	40.076523	30421	4021
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.483255	921	39	42	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.022681	4	4	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.008398	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.129891	53269	4741
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	4.478597	4297	884	0.19.0.0.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: rewrite ?H; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.103807	40933	4206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.185115	80116	4110
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.199365	87789	3984
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.080738	26197	3524
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.127457	52764	5801
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.066518	21623	2358
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.031292	6677	4986
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.056440	23478	1376
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_le_3	40	40.160993	69336	4085
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.042895	15087	2936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.189561	5173	816
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.118108	51231	2319
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.062195	26123	3106
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.068677	23530	7770
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_eq	40	40.333476	17642	3746
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_neq	40	0.012357	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.eqb_compat	40	0.020486	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.074969	28794	3551
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	40.107360	29084	768
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zabs.Zabs_dec	40	13.375294	17398	1483	3.0.9.33.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.001003	134	36
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.049314	16280	3801
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	2.463883	1748	76	44	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.809512	46575	3786
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.041662	10685	3187
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.119136	50893	4837
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.009546	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.006552	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.073540	32185	2554
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.167403	38995	4244
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.294746	59301	4359
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.130319	56116	4167
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.byte_dec_bl	40	40.272433	53227	1534
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.058676	21091	4697
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.023901	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.111454	48644	6429
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.090253	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.080516	28557	4443
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	3.695784	2178	381	6.0.4.2.10	synth with cache (only 1: intros a H; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	40.318025	158480	4440
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.068219	162	12	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.096159	39826	5105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	40.087944	33027	5605
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.097205	38913	6590
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.050777	15708	2505
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.076714	29417	5635
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	24.900986	21907	2273	1.15.2.19	synth with cache (only 1: intros a b; only 1: rewrite <- union_inter_cardinal; only 1: generalize LT; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.106491	20005	2804
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	1.384142	181	84	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.026453	5410	4051
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	40.060072	22697	2557
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.065542	24381	7203
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	40.044842	16863	3297
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.029061	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.078707	30107	2949
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.013506	2	1	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left	40	0.008961	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.008863	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.005656	1	1	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	40.116733	48710	4721
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.707611	131	51	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.134321	62362	7167
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.066470	23152	7909
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_0_1	40	0.042973	14	6	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.073301	30606	3528
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.023291	6070	2538
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	40.215829	99481	4019
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.000774	65	36
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.258548	8120	1176
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	2.783956	2718	120	68	synth with cache (only 1: Z.solve_min).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zmin.Zpos_min_1	40	0.619592	184	23	12.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: now induction p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.153335	67188	4395
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.168048	54528	1414
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.743312	59	44	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.042989	13534	2958
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.string_of_list_byte_of_string	40	28.003465	24389	2945	0.0.5.0.15.13.0.0.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: rewrite <- H  at 2; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.151544	68753	5804
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.083787	30671	1454
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.064657	24502	3818
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.090746	35190	4208
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.096550	39721	5343
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.037035	9162	203
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	2.000217	2533	350	4.21.2	synth with cache (only 1: intros; only 1: apply H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.154427	24264	4527
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.121247	50571	5986
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.106788	44297	4519
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.070767	13477	6588
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.114127	51605	6366
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.077567	29421	2852
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.076126	27829	3514
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.056774	18560	6327
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.141180	38221	5276
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.264301	20831	2361
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.045160	18232	2351
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	40.108272	47056	5764
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.070964	12309	994
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.052751	17016	2718
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.055056	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rlt_plus_1	40	40.074845	27343	5311
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	3.180674	2607	494	15.6.4	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.093159	39679	3102
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	1.743565	1996	260	0.0.0.27	synth with cache (only 1: induction 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.S_INR	40	0.616629	82	18	0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.033925	10182	2814
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
coq-tactician-stdlib.8.12.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.073611	4463	995
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.001135	197	34
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.184023	27811	1249
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.090672	39551	3299
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.112506	45344	1873
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.053373	21215	2638
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.265135	23753	6628
coq-tactician-stdlib.8.12.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.277321	136684	4917
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.096720	39919	3399
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.087136	35230	2891
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zge_left	40	22.719816	15079	2005	0.35.7.2	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.028699	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.094225	39691	5233
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.476753	36	15	6.1	synth with cache (only 1: intros LT EQ; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.015020	8	2	4.2	synth with cache (only 1: intros LE EQ; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.024549	4	2	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.148759	64048	4922
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.not_Zne	40	4.349947	6389	381	16.0.34.3	synth with cache (only 1: intro H; only 1: destruct (Z.eq_decidable n m); only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.202532	38802	4600
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.120049	48322	5226
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.135035	5754	1154
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.661021	45	9	3	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N	40	40.135513	34333	2280
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.167797	76123	3218
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.079378	27102	6255
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.141628	60174	4322
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.035249	11333	1570
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.219079	39041	5069
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.083689	31477	5210
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.089992	34678	4401
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.098882	40357	6837
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.063825	26531	2025
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	23.009527	32226	2683	0.0.0.0.2.4.8.9.1.17	synth with cache (only 1: intros (e, abs); only 1: intros; only 1: apply find_2; only 1: simpl; only 1: rewrite ?add_find, ?bal_find; only 1: destruct X.compare; only 1: order; only 1: auto using find_1, add_1 with ordered_type; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.087262	35570	4901
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	40.116726	43276	8564
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.plus_INR	40	40.053218	18446	5310
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.033370	8887	3411
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.016554	3916	688
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.182209	33735	4375
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.159989	14182	845
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.005073	481	55
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	40.188945	91752	4793
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_pos	40	0.029852	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.058682	21863	2318
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.076802	27219	5667
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.035634	8690	4329
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.109775	50563	3191
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.137717	20729	1822
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zone_min_pos	40	8.796555	3173	508	1.11.0.5.8	synth with cache (only 1: intros; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: apply Z.leb_le; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	2.703037	651	106	19	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	1.459901	717	156	2.10.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.102861	44077	3490
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.099483	44623	5067
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.130160	47694	5131
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.111209	47414	3436
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.301620	19403	1307
coq-tactician-stdlib.8.12.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.151490	73580	664
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.074804	31463	2760
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zge_trans	40	3.322958	1824	385	9.4.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.143395	64650	2900
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	10.341052	6267	902	0.9.0.5.7.0	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: unfold PX.eqke; only 1: intros; only 1: induction 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.561745	9019	985
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	16.349304	51979	2494	0.1.1.0.38.21	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.098294	43477	2947
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.055637	14228	5957
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.068778	25669	2113
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.043426	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.047189	6791	3717
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.152666	16781	4956
coq-tactician-stdlib.8.12.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.058442	23085	2518
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.088196	37013	3858
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.026524	8331	1294
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	40.110422	43848	3539
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.063528	25572	2598
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.minus_INR	40	40.074438	29870	4110
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.048731	13898	4225
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	13.646931	14342	1780	0.2.1.3.0.2.20.4.2	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: subst; only 1: auto; only 1: inv; only 1: intro H; only 1: unfold singleton; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.009090	1	1	0	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.230935	12868	2886
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.105885	13070	2792
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.036069	9760	1743
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.083233	33445	1459
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_jump	40	0.038713	18	5	2.3	synth with cache (only 1: unfold jump; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.004347	519	90
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.170649	52534	317
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.432695	3113	891
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	2.030464	669	286	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.074222	28184	5950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.077814	30796	4384
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.025345	3	3	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.067034	27934	3257
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	5.911479	9058	850	0.0.0.0.0.0.0.0.1.0.0.0.0.1.0.9.27	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.881760	177	59	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.079775	19549	2322
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N_nat_Z	40	40.256479	28756	2794
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.034916	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.positive_N_nat	40	0.010636	3	2	0.1	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.071477	28595	2360
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.098542	37880	5070
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.157339	71651	4335
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z_nat_N	40	1.907246	957	76	0.0.5.3.29	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj	40	0.129244	31	21	1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.008184	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.065944	17559	419
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.216867	11777	1104
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.122665	51560	3590
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.010902	338	160	1.11	synth with cache (only 1: unfold Z.lt, Z.le; only 1: now rewrite inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	3.120326	850	93	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.068616	12	5	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.085530	32968	4977
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.050032	16283	2701
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.240840	87339	2219
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.120277	49175	4490
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.440934	109668	3591
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.080031	33193	3531
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.074581	30690	3143
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.068647	27586	2561
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.063070	24295	3506
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_INR	40	40.047591	16026	5152
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	20.151558	41594	2368	2.2.2.4.2.2.2.2.4.0.2.0.51.9	synth with cache (only 1: pattern n; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.026172	7035	2250
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.042837	13263	3440
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.061704	12955	2975
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.034835	6	3	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.015179	3	2	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007362	3	1	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.080091	30257	5351
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.030731	8172	2380
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.041232	13690	1628
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.133505	6	5	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Env.S.nth_pred_double	40	40.122679	30083	5109
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.000671	57	32
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_dec	40	7.776036	11203	984	0.0.2.0.2.2.3.0.0.0.4.5.7.1.0.11.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto; only 1: auto; only 1: now right; only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now destruct p; only 1: now destruct p; only 1: now right; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA8	40	21.626705	15303	1621	1.16.2.1.10.2.3	synth with cache (only 1: destruct x; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.079949	5	3	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.097244	41926	1921
coq-tactician-stdlib.8.12.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.071468	8	2	3.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.083091	31655	7118
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	8.182166	2582	384	3.3.1.9.2.14	synth with cache (only 1: induction M; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: now jump_simpl; only 1: now jump_simpl).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	23.851438	71188	1485	5.1.6.3.138.25	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.148781	68869	6063
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.144659	42142	6545
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.038924	5	4	1.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	6.482458	7302	1299	1.0.2.4.0.0.1.12	synth with cache (only 1: intros [| ] ?; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.114041	48792	5885
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.085662	26580	2135
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.133724	57743	2639
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.075670	29587	6286
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.101902	47426	3350
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.072422	26399	2703
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.266173	96268	5356
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.063309	24808	3474
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.117928	48092	4194
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.328899	46906	6533
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.111740	10	4	0.3.1	synth with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.049015	17	5	0.3	synth with cache (only 1: intros; only 1: intuition_in).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.014334	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.150985	69063	5686
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.187079	24070	6154
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.439122	31	13	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	23.239971	33744	4290	1.5.2.21.5	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hx; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.058363	4	3	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.486345	299	48	0.0.13	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	42.877851	46094	1096
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.010573	2	1	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.005041	1	1	0	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.012839	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.005358	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.005314	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.006415	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.737279	249	58	10	synth with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.059356	18218	2652
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.057962	23942	2538
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.090907	37219	6489
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.294870	74	32	0.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.lt_0_INR	40	40.103797	42798	5676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.079610	21232	3714
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40	40.713370	15004	2624
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.047757	27	7	5.0.1	synth with cache (only 1: split; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.025509	6	3	3.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.090959	11224	3754
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.066369	24993	6918
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_Sn	40	36.193746	40524	5828	3.1.3.0.0.6.4.5.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intro H1; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct p; only 1: easy || now destruct Hb; only 1: intros H; only 1: simpl; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.017993	3987	2269
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.000766	55	33
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.802446	423	99	1.4.0.7	synth with cache (only 1: induction 1; only 1: compute in H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_quot2	40	7.870555	2193	751	1.1.5.3.0.3.0	synth with cache (only 1: intros a Ha; only 1: simpl; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.041731	6043	2720
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.101153	44446	4733
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.034477	11575	1469
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.086965	33544	6851
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.225124	109518	2822
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.066259	25273	5565
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.210292	38644	7753
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.094413	36933	6462
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.028722	7	4	0.1.2.0	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	20.613864	27943	3663	0.0.0.0.1.2.3.0.1.2.2.6.0.0.0.1.2.3.0.1.2.2.6.0.9	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.360727	273	103	0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.080009	16309	2253
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	2.328004	3842	159	0.0.1.0.8.65	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	20.245419	27983	2325	0.0.12.12.20.2.0.8	synth with cache (only 1: intros H; only 1: induction 1; only 1: compute in H; only 1: compute; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.082151	30883	3065
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.012745	1	1	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.007030	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.194208	10402	4800
coq-tactician-stdlib.8.12.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.133997	7949	1454
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.105737	44934	5439
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.234055	26376	4431
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.041083	13800	2499
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.047803	14587	5824
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.026667	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.078787	32068	4842
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.347950	120859	5509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.191646	11527	1663
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.090104	37035	3188
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_comp	40	40.063284	25475	3153
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.190117	39172	6848
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.129111	58643	5653
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.254109	29431	4099
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.042646	13608	2752
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.057488	20128	2517
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.101352	15014	5421
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	1.026576	1061	129	13.1.6	synth with cache (only 1: intros [| a l] H; only 1: easy; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.047550	16791	1290
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	14.618453	14356	1530	0.0.35	synth with cache (only 1: intro H; only 1: rewrite <- cardinal_Empty; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.000880	74	33
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.057594	15095	2097
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.037993	13169	2671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.067156	25047	7670
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.299611	39644	5287
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	6.685235	6181	1044	0.0.0.0.0.0.0.6.7.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: simpl in *; only 1: now elim H; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.054378	21149	1555
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.806071	420	185	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	1.067455	198	94	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.012738	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.196455	35068	7133
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	29.653648	10447	4658	0.0.0.0.1.0.0.0.0.4.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: generalize Hm; only 1: functional induction remove x m; only 1: inversion_clear 3; only 1: inversion_clear 3; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.039093	14159	2268
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.195630	67124	5137
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.197105	28325	6495
coq-tactician-stdlib.8.12.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.090132	7714	970
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.263783	35362	3962
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.187563	31885	5712
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.124128	54418	5586
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.019447	4	2	0.2	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.014541	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.032717	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.367502	20	6	1.0.5	synth with cache (only 1: compute; only 1: intros x y z (Hxy, Hxy') (Hyz, Hyz'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.009774	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	4.220449	2321	456	20.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.369012	102509	5445
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.030344	7894	3953
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.005671	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.007266	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.174929	53	11	5.2	synth with cache (only 1: intros i j Hi Hj E; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.040830	4	4	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.415226	208748	7617
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.056053	23064	4373
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.221113	87751	5813
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.148868	38286	5676
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.104797	18867	4892
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_assoc	40	40.097785	40206	6566
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_INR	40	40.061688	23728	5050
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_not_0	40	0.295329	69	24	4.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.199758	79025	7619
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.374063	105420	6496
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.083582	34112	3029
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.012947	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	40.077140	22858	4382
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.023912	6208	2242
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.078354	20022	3479
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.037458	13000	1638
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zeven_2p	40	40.060790	24785	3312
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.049705	17015	7055
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	0.818286	211	53	2.1.4.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.263402	46700	5671
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zle_compare	40	0.595274	96	30	0.1.0.0.1	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.032844	11	6	0.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.051377	19798	2287
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.931779	834	102	0.0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	40.099312	33243	4485
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.056383	20669	6032
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.124575	54834	1954
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.222040	145	31	5.2.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.187767	38095	1190
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.198391	541	200	1.0.0.8	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_cons	40	0.055733	13	8	0.0.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros x y l1 l2 Hin; only 1: subst; only 1: intros HE; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.131378	23572	6333
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.105182	43617	5647
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.115865	31643	8242
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.161113	72912	7460
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.011386	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.127007	198	94	0.1.1.6	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.174094	16408	2591
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.033204	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.059390	10018	1701
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.280013	27	15	0.3.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: destruct (split (A:=l)); only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	3.316035	1584	274	4.15	synth with cache (only 1: rewrite InA_cons; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.037474	12040	2495
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.141158	21960	5062
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.251139	104298	4854
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.127371	21255	2868
coq-tactician-stdlib.8.12.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.161723	37	13	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.190752	24130	3895
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.093193	42304	3900
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.506497	326	23	2.22	synth with cache (only 1: intros m IH; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.047948	14	8	0.2.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.114645	93	16	9.0	synth with cache (only 1: intro n; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.190928	76674	8499
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.201379	54123	3430
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.085358	18210	2811
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.020848	3	3	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.196255	57909	3517
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_eq	40	40.091412	35870	5641
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.198901	91193	8512
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	4.421442	15903	173	0.176	synth with cache (only 1: compute; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.234975	77741	7768
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.055737	8376	1821
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.141448	9596	1770
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.108031	27228	2587
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.043936	11478	4750
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	26.766629	15242	3935	0.0.0.2.1.0.0.7.14	synth with cache (only 1: intro l'; only 1: intros l HF; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto; only 1: discriminate || auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.034790	10828	2306
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	40.068169	27176	2520
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.073075	4	4	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.023348	6715	1958
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.059838	21851	4380
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.312141	47105	4797
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.id	40	0.034500	5	5	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.015447	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.009345	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.071029	24002	5381
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.156735	16252	3513
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.151789	21957	3777
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.112968	49215	6684
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.235463	48334	7246
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.254821	46569	7598
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.204842	11547	2192
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.009851	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.010531	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.025715	5	3	0.2.0	synth with cache (only 1: intro; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.opp_succ	40	2.004117	1922	212	6.3.0.0.1.25	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.025529	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	1.750520	395	116	0.0.0.3.1.2.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.400686	143	35	0.3.4.1	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	40.045804	12967	2190
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.016136	3	1	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.034750	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008873	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.max_r	40	2.653208	1000	395	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.244064	34	10	2.1	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.059471	17	12	0.0.0.0.1	synth with cache (only 1: unfold le, min; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.231709	52	20	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.085505	35038	2120
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.186767	59480	5361
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.197893	66350	4451
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.109147	21662	3723
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.009314	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.010424	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.094786	39806	4345
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.032426	15	6	2.1.0	synth with cache (only 1: red; only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.024009	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.020273	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.211128	33049	9320
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.545600	412	58	2.13.2	synth with cache (only 1: intro H; only 1: unfold not; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.274875	90008	5748
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.066053	26801	2225
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.not_1_INR	40	40.028512	9770	2375
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.157051	46818	4012
coq-tactician-stdlib.8.12.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.336358	100280	4559
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.004486	2	1	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.004217	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.194439	29951	5843
coq-tactician-stdlib.8.12.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	2.460224	3096	496	6.9.8	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.134977	17979	3042
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.073478	27445	8493
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	27.044184	24587	3442	0.0.1.0.3.0.2.3.0.0.1.0.0.0.2.0.2.3.2.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: simpl; only 1: intros a n; only 1: unfold Z.lt; only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: easy'; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: simpl; only 1: destruct H; only 1: now f_equal; only 1: red; only 1: intuition; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.088395	33895	3274
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.067357	24647	4679
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.134482	61593	1857
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.044285	12630	5668
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.080382	31472	7351
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.024394	7159	2145
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.image_empty	40	6.788447	4898	1015	1.1.2.3.8.1.0.6	synth with cache (only 1: intro; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: destruct 1; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.046887	1838	519	3.0.1.0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.033310	11484	1642
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.076690	30654	7284
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.071075	16616	4945
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	3.452173	3585	471	13.12	synth with cache (only 1: intros z n H; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.266342	27342	3334
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.090223	39796	5261
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.077631	28415	3937
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.138532	62414	6711
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.009354	5	1	4	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	34.957059	29254	2235	1.1.2.3.3.66	synth with cache (only 1: destruct (lt_ge_cases n 0); only 1: order'; only 1: intuition; only 1: rewrite one_succ; only 1: unfold succ, pred; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.016499	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.028971	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.086380	13590	2104
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.587008	57	24	1.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.093552	28212	5048
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.081521	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.242537	12	5	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.025513	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.210261	62082	7790
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.238309	89602	4983
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.164281	44068	5608
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.136958	29242	4314
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.368822	35945	3809
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.276547	115509	6858
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.188613	72363	3566
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	40.075686	17756	2440
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.INR_IPR	40	40.074108	29331	4826
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.118423	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.087633	33542	5739
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.186308	81323	6557
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.106133	44431	3915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.082221	31281	3457
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.055207	19351	4640
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.077249	28103	4801
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.041850	12909	4091
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.117872	22688	950
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.009757	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_alt	40	40.252463	68347	6323
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.115431	32794	4211
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	1.738478	4848	215	64	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.906654	1868	148	0.1.3.5.0.1.40	synth with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: simpl_relation; only 1: intros n n' Hn m m' Hm; only 1: rewrite Hm, Hn; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.569771	185	22	0.0.0.16	synth with cache (only 1: constructor 1; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.037908	13921	1239
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	12.616391	13999	2384	0.16.0.10.6	synth with cache (only 1: intros n m p; only 1: intro H; only 1: intros LT; only 1: rewrite H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	0.793883	398	38	15.3	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.070451	15	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.095546	15	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	4.464356	2127	431	0.1.10.5.0.1	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	2.377136	2877	374	17.3.0.3.0.2.2.28	synth with cache (only 1: constructor 1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: solve_proper; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.292970	110461	7857
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.956719	3101	120	59	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.056916	19868	6814
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.384090	683	56	19.5	synth with cache (only 1: intros n m p q H1 H2; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.131905	27247	8004
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.062746	25712	3040
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.056909	20276	5639
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	20.870746	17293	2823	0.0.3.1.0.3.0.4.0.0.4.4.7	synth with cache (only 1: intros a n; only 1: revert a; only 1: induction n; only 1: intros H; only 1: right; only 1: auto with arith; only 1: intros m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: elim (IHn m); only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.172553	79685	5270
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.072640	27951	5627
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.188325	38237	3477
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.103401	10977	3213
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.298386	30541	5222
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.146771	32647	5956
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.280434	112	26	1.1.0.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef, Exists_exists; only 1: intros (y, (H4, H5)); only 1: intuition; only 1: constructor).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.150009	40109	3539
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.268721	39779	5644
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.116078	49069	6153
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.188652	86753	5108
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.054700	20235	4957
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.082522	33754	9032
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.241425	73017	4739
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.083135	37999	3190
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.mult_IZR	40	40.105159	32368	3645
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.167895	74388	2304
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.054157	2540	1033
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.392752	29078	6348
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.052641	10278	5135
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.701499	382	60	13.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.094441	6041	1733
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.034632	8293	4958
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.107903	25183	4193
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.140474	35012	9209
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.049859	35	8	4.3	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.014507	2	1	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.047164	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.027827	10395	813
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	4.065069	7293	723	7.3.0.6.18	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: constructor; only 1: eassumption; only 1: now repeat constructor).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.140124	29797	5117
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.240794	61811	9152
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.185865	61030	6706
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	8.060138	4993	827	6.3.4.15	synth with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.246135	17935	518
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.867062	1650	139	24.10	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	30.353068	7302	1727	3.5.3.2.3.0.0.0.7	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: split; only 1: rewrite H1; only 1: now rewrite H2; only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.198910	75329	8921
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.082412	34265	6463
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.091271	17002	2369
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.065886	25970	4573
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.075471	28044	5377
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.200860	55553	5946
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_impl	40	40.089501	37040	8161
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.113166	47255	8127
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.347375	24999	3833
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.032485	7	6	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.210364	38041	7379
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.013192	1	1	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.229576	32519	7394
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.208886	57883	6668
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.047035	16458	1773
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.049891	19042	2833
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.119551	46980	5294
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.269153	71871	5504
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.058804	24080	3994
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.succ_IZR	40	40.052544	18846	4604
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.274038	78909	3873
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	36.869829	18273	3583	0.0.0.0.0.0.0.1.0.0.1.2.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intro l2; only 1: intros acc inv; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	5.585751	6593	792	1.0.17.1.10.0	synth with cache (only 1: unfold eval_cnf; only 1: clear; only 1: split; only 1: destruct 1; only 1: reflexivity; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.039336	13047	2433
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.353832	39637	6618
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.010766	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.091227	16	7	6	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.531576	77	46	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	2.701068	3328	174	51.4	synth with cache (only 1: intros; only 1: eauto with bool).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.139226	44512	5465
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.236129	56858	5244
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.153900	30326	4521
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.021205	6136	1802
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.123843	30208	5784
coq-tactician-stdlib.8.12.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.151187	37194	6526
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	3.090966	2030	431	7.1.1.2.8	synth with cache (only 1: intros x y z; only 1: unfold eqke, ltk; only 1: intuition; only 1: compute; only 1: now rewrite H).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.156037	24963	4899
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.144273	44097	6129
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.203398	31629	1641
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.099708	26126	3730
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.203720	78468	9460
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.075338	29703	3864
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	7.148742	7234	1023	0.1.0.1.0.2.1.0.30	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: intros H0 [| ]; only 1: tauto; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.110403	44201	4184
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.013191	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.101037	40008	3620
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.084064	32476	6590
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	1.725445	5281	283	0.4.42	synth with cache (only 1: destruct m; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.182843	31727	3949
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.id	40	0.258045	152	35	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.246496	49	23	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.038354	5	4	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.make_conj_rapp	40	40.157166	36078	6834
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.077966	28213	6664
coq-tactician-stdlib.8.12.dev	Coq.micromega.Refl.not_make_conj_cons	40	0.369251	16	9	0.0.2	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.275056	75093	3350
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	21.152420	10109	2548	0.0.0.3.2.0.0.0.1.1.0.0.6.4	synth with cache (only 1: intros; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: unfold Z.pred; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	21.054341	21687	2526	0.0.0.0.0.0.0.28.21	synth with cache (only 1: intros x l; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.169648	48098	6031
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.041777	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.12.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	10.374619	14454	1075	0.0.0.90	synth with cache (only 1: destruct n as [| [| n]]; only 1: nat2N; only 1: nat2N; only 1: nat2N).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.165514	48802	9598
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	40.280561	96173	6836
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.074946	27634	4369
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Zmod_divides	40	40.264064	23274	3549
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.246872	79843	6707
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.775801	811	407	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.042528	14736	3323
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Z_R_minus	40	40.058068	21576	4230
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.157288	69583	5168
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.030729	8792	3415
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	18.840213	24050	3318	7.4.13.0.1.3	synth with cache (only 1: unfold get, push, index; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.144950	55871	4505
coq-tactician-stdlib.8.12.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.124343	54400	3242
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.154288	51659	6066
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	7.418872	10945	863	0.1.0.1.2.1.0.7.0.5.24.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: ok; only 1: eauto; only 1: ok; only 1: ok; only 1: auto_tc; only 1: ok; only 1: ok; only 1: ok; only 1: ok).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.159139	28423	3047
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.024952	7177	1983
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	2.112461	1116	303	6.2.2.3	synth with cache (only 1: intro X; only 1: red; only 1: intros x H; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	1.055474	844	151	9.1.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.048573	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.245625	9179	1585
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.146862	41416	6911
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.discr	40	40.172715	58284	10118
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.042732	9	9	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.009276	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.207604	22462	1311
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.073208	17985	1317
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.138054	26807	5838
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	40.057263	19335	5674
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.168704	77664	5422
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	9.217603	31440	1292	65.16.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.139204	62414	6667
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.117054	42840	4693
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.160618	75038	5513
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	40.377476	41342	5543
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.020203	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.197147	18974	6578
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.destruct_list	40	40.309586	122455	4958
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.231043	13600	2585
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.253348	83593	6785
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.038573	13759	1389
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.063558	22661	7187
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.174464	41048	5400
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.200084	113	29	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.399272	142754	4399
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.213006	28893	4996
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.061770	20742	4429
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.155032	47340	1804
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.eq_IZR	40	40.041730	13065	7310
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.056752	21297	2921
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.269046	179	68	2.0.0.4	synth with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.228332	108466	5614
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_refl	40	7.973332	29187	1083	111	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	11.027415	68526	1529	0.0.0.107	synth with cache (only 1: compute; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.192678	47830	6089
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.228818	40790	5001
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.021223	4906	1640
coq-tactician-stdlib.8.12.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.214786	60616	7015
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.111554	31053	3937
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.308942	12765	2888
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.272258	50379	4472
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.bi_induction	40	40.201645	96154	11645
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.214045	29873	1785
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.111190	46161	4488
coq-tactician-stdlib.8.12.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.386852	110688	9255
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.536394	586	206	4.0.0.0.0.0.0.3.1.1	synth with cache (only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.097729	37753	5432
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.092429	36812	5807
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.157190	69660	6256
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.056487	19107	5773
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.060335	18597	3195
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.936327	217	90	0.2.1.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map_2	40	40.087198	32470	8418
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	25.423015	39876	5597	0.14.7.3.0.10	synth with cache (only 1: apply NNPP; only 1: unfold not; only 1: intros; only 1: apply H; only 1: intros h hn; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.123647	36492	6866
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.004616	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.211571	25642	3747
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.179395	35755	5566
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	1.056334	219	85	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1.841864	2057	159	3.0.2.24.1	synth with cache (only 1: apply Z.lt_succ_r; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.zerop	40	0.191419	32	9	4.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.422141	6	5	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	1.562937	502	238	0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	4.122924	4659	657	13.3.2.4	synth with cache (only 1: intro n; only 1: intros H; only 1: inversion 1; only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.010921	4	2	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	2.472755	1161	411	0.0.0.0.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.956539	619	170	0.3.0.1.8	synth with cache (only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.071672	28149	3182
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.app_length	40	0.888422	462	139	1.3.1.1.3	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_eq	40	0.007466	2	2	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Facts.in_cons	40	0.104861	59	19	0.0.0.1.3	synth with cache (only 1: intros; only 1: generalize H; only 1: simpl; only 1: right; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.015635	4	3	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	2.817999	1662	359	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.009965	8	1	7	synth with cache (only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.060302	22171	6021
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.207627	36	18	3.1.0	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.227501	64165	8308
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.077296	29540	7892
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.071681	20704	6382
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.le_0_IZR	40	40.084585	34661	6302
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.037352	11193	3437
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	2.910664	1020	297	0.0.2.2.6.1.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: Z.nzsimpl; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.052090	6	5	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.NNPP	40	40.259076	124909	10373
coq-tactician-stdlib.8.12.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.011326	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	0.209182	567	27	33	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.337442	76	35	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.rtauto.Bintree.Map.get_map	40	40.082719	32028	7891
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_trans	40	40.114440	47558	3626
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.121014	34242	3662
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.128373	22	13	0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: intuition; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.027235	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.163389	57018	4827
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.016450	3001	1198
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.083743	18815	2094
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.of_nat_ext	40	40.284575	104280	2904
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.225871	16767	3063
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.506884	222067	5837
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.817050	342	63	0.2.10.0	synth with cache (only 1: inversion_clear 1; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListDec.uniquify_map	40	40.193854	63879	2431
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.192380	51005	4475
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.021047	8	3	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.025551	6	5	0.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.437628	202537	14113
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	30.008921	27313	3223	3.1.3.0.3.0.0.3.11.0.21.12	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: destruct m; only 1: auto with arith; only 1: left; only 1: now apply Peano.le_n_S; only 1: right; only 1: now apply Peano.le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	3.686087	1766	805	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.104630	29231	5978
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.075879	21996	4454
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.151209	16	11	0.1.1	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	0.568502	181	89	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.404096	405	73	2.12.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.059124	18930	5753
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.le_dec	40	3.326923	2496	554	2.0.0.1.0.0.0.2.1.2.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: left; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.043186	13257	1391
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.gt_dec	40	0.007255	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.eucl_dev	40	40.220252	91565	4940
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.ge_dec	40	0.196183	52	20	0.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: apply le_dec; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_eq	40	0.007406	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.not_lt	40	0.007897	2	1	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.045456	16043	2200
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.115659	50666	5924
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.304375	71054	8891
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	3.100942	1601	671	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.091031	30712	7758
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	18.646479	18526	4305	4.0.0.0.1.1.0.1.0.0.0.1.0.1.1.2.2.0.1.2.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: right; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: right; only 1: now destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: intuition; only 1: intuition; only 1: left; only 1: now f_equal; only 1: right; only 1: now f_equal; only 1: right; only 1: simpl; only 1: now f_equal; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_S	40	26.848365	30023	3449	1.2.41	synth with cache (only 1: inversion 1; only 1: auto with relations; only 1: now left).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_not_le	40	0.150231	2	1	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_S	40	0.006127	1	1	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.096834	44113	3427
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	11.375065	10236	2498	0.0.1.3.0.4.1.25	synth with cache (only 1: reduce; only 1: induction s as [| c l IHl x r IHr]; only 1: intuition_in; only 1: simpl; only 1: clear IHl IHr; only 1: descolor; only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.189200	42692	9517
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.232462	22778	4717
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	7.010240	4444	963	0.0.8.17	synth with cache (only 1: revert n m; only 1: intros a Ha; only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.308428	8480	1656
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.IZR_ge	40	40.088133	34033	4629
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.125527	34602	8984
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	40.438167	184756	2503
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.012140	6	2	0.4	synth with cache (only 1: intros m w le; only 1: now constructor).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.114494	50440	2408
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.094792	29517	9459
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	40.143325	66497	3652
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_is_one	40	40.094085	40507	5217
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.049447	18460	4008
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.074469	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.211475	50174	5437
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.016142	4639	1272
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.167531	30795	5311
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.193801	85582	2896
coq-tactician-stdlib.8.12.dev	Coq.Arith.Div2.double_plus	40	40.093942	35349	5937
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	40.194465	14341	3362
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.167032	78722	8265
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.L_R	40	7.952384	14503	1084	12.6.31.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: PeanoNat.Nat.nzsimpl; only 1: left).
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.106242	43703	5960
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.095119	35983	5882
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.151369	67929	9939
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.491197	90	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.VectorSpec.splitat_append	40	22.835624	23947	3108	1.3.3.1.0.7.17	synth with cache (only 1: intros n1 le_mn1; only 1: induction v; only 1: now simpl; only 1: simpl; only 1: intuition; only 1: rewrite IHv; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.083077	46	20	0.4.1.1	synth with cache (only 1: destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.050449	16428	6115
coq-tactician-stdlib.8.12.dev	Coq.Arith.Euclid.quotient	40	40.137768	59181	5141
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.076821	21868	7905
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.006412	1	1	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.021008	2	2	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make.map2_2	40	40.070557	24175	6625
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.123401	49736	5668
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.exists_le_S	40	3.938993	5891	653	1.1.5.16.2	synth with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.239574	99880	8330
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003406	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.171898	28802	7134
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.le_gt_trans	40	40.127679	38712	5240
coq-tactician-stdlib.8.12.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.027136	6617	3147
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_In	40	40.159354	74427	7212
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	40.128950	55863	4394
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.250902	23273	6766
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.091930	30770	3627
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.095393	39828	4192
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.122761	37	18	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.355534	369	58	11.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.184910	30966	4953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.101858	37672	5200
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.086311	32440	6757
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.206174	72505	10922
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.152758	749	390	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order').
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.173028	84016	5550
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.120525	55335	5782
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.313285	99261	4376
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	9.803988	2354	429	6.1.0.2.0.1.9	synth with cache (only 1: intros x y l1 l2 Hin; only 1: intro EQ; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.133543	51258	5037
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_0_neq	40	0.086118	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_n_S	40	0.071693	1	1	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.110825	33588	6973
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.030506	8963	633
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.073325	26051	6185
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.103866	43614	6981
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.114478	49622	6198
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.087905	35335	6711
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.069550	22154	7296
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.leb_le	40	40.094754	27367	7434
coq-tactician-stdlib.8.12.dev	Coq.Arith.Compare_dec.leb_compare	40	40.071690	21548	8845
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.042588	11675	5203
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.083911	27149	2928
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.065397	23387	5454
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_in_int	40	40.195616	85665	7697
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_between	40	0.042998	13	7	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.212180	75149	4598
coq-tactician-stdlib.8.12.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.195444	20415	2582
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.092028	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_compat_r	40	0.834944	241	58	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.012473	3	1	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	0.183788	120	24	8.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.019378	3	3	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.004816	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_refl	40	1.005232	2338	119	2.1.4.49	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Arith.EqNat.beq_nat_true	40	1.229376	639	204	1.0.0.0.0.0.1.0.5	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.106107	44884	9841
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.005980	1	1	0	synth with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.155778	18781	8146
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_le_trans	40	40.102284	43362	5614
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.In_nth	40	40.160370	60041	6780
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.081546	32846	4129
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.084508	32791	7188
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.121435	53797	7390
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat_r	40	10.574154	6908	1004	1.8.23	synth with cache (only 1: induction 1; only 1: auto; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.009608	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.055151	19224	6208
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.double	40	0.058815	15	6	5.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.plus_minus	40	40.122643	55700	6344
coq-tactician-stdlib.8.12.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	0.184123	33	14	1.2.1.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.240379	60861	6772
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_equiv	40	40.083994	35101	5343
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.097704	35557	6378
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_split	40	0.632305	44	11	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.618595	493	223	2.0.5.1	synth with cache (only 1: intro Hn; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.114554	49518	4315
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_le_compat	40	40.213845	106896	6959
coq-tactician-stdlib.8.12.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.089286	20294	2372
coq-tactician-stdlib.8.12.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.184108	56366	2472
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred	40	40.149795	44569	5553
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.128786	33034	7462
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.291468	169	56	1.1.0.4	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m IH; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	6.210595	7283	1106	6.7.8.5	synth with cache (only 1: intros H H'; only 1: apply H; only 1: apply Z.gt_lt_iff; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.030478	6222	877
coq-tactician-stdlib.8.12.dev	Coq.Arith.Lt.le_lt_or_eq	40	2.741014	1604	397	0.1.0.13.4	synth with cache (only 1: revert m; only 1: apply Nat.le_ind; only 1: now right; only 1: intros a b Hb; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_indep	40	21.997693	27481	4712	0.0.0.2.1.7.4.2.1.12	synth with cache (only 1: induction l; only 1: intros l m a; only 1: simpl; only 1: intro; only 1: now Nat.nzsimpl; only 1: intros; only 1: destruct n; only 1: split; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.085416	25558	6064
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.085411	34126	5407
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	5.727878	364	178	0.0.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).
coq-tactician-stdlib.8.12.dev	Coq.Vectors.Fin.eqb_eq	40	40.116196	35412	7297
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.039849	13095	3341
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.130556	5306	2291
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.170016	33546	8086
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.079735	30803	6542
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.048458	14177	4176
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.101835	42173	6336
coq-tactician-stdlib.8.12.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	2.074555	550	181	0.2.0.0.3.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.in_int_exists	40	40.112810	44384	4397
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.093425	33372	12806
coq-tactician-stdlib.8.12.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	7.199753	1556	257	0.0.3.1.0.1.2.2.8	synth with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.183485	4302	1457
coq-tactician-stdlib.8.12.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.643724	41106	7069
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.050221	15955	5463
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.gt_trans	40	40.092252	40231	4560
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.008488	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.009835	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.106230	41871	7699
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.062708	22649	6703
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.657168	191	102	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.117706	45577	4259
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.076282	31045	3607
coq-tactician-stdlib.8.12.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.262124	79562	5181
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.066962	21672	4808
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	17.219573	14214	2645	2.0.0.0.0.0.0.0.1.0.0.0.0.17.0	synth with cache (only 1: intros m x y e; only 1: reduce; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: red; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: eauto; only 1: congruence; only 1: unfold Raw.PX.eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.192386	22467	8047
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_even_plus	40	40.090752	26421	4202
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_plus_l	40	0.091292	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_even_plus	40	0.095027	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_plus_aux	40	0.375832	13	4	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.even_mult_l	40	0.045476	9	2	5	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.080375	28350	5485
coq-tactician-stdlib.8.12.dev	Coq.Arith.Even.odd_mult	40	0.090081	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.118702	53070	5760
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.173283	68539	8636
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.149353	50005	6232
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.065237	20455	3806
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.026636	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	40.072592	28358	4866
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.050458	16887	3597
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	3.902039	1435	638	0.0.0.0.1.0.1.0.0.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_split	40	40.122057	44497	6492
coq-tactician-stdlib.8.12.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	40.134628	23584	6147
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	34.187373	27722	4673	0.1.0.6.0.1.7.2.0.1.0.2.4	synth with cache (only 1: red; only 1: intros; only 1: red; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: generalize (elements_3 m); only 1: intros; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: invlist InA; only 1: destruct p; only 1: intros H4; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.013602	2873	1246
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.205340	91822	12025
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	3.389634	1995	459	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.059059	19397	5305
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.min_l	40	40.209403	83816	7649
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.between_or_exists	40	40.172422	63617	5228
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.155678	71197	5978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.145146	632	349	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_spec	40	2.577209	429	82	5.1.13	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.030712	10275	1591
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.109870	42495	13571
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_add	40	1.780798	298	147	0.0.0.3.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: auto; only 1: unfold succ, add; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.137814	11396	3813
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.succ_double_add	40	2.517519	276	94	8.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now destruct n, m).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_double	40	0.019700	4	3	1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.589993	73	42	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.053796	18159	4424
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.165739	41722	2891
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.381703	171	59	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.166708	15399	5450
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.052871	16504	8375
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.057959	19671	7200
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_lt_compat	40	40.126909	25498	3105
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.102461	40744	6202
coq-tactician-stdlib.8.12.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.246067	118240	3149
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.double_le_mono	40	9.248165	4600	1358	0.0.0.0.4.4.0.5.0	synth with cache (only 1: unfold min, le; only 1: destruct n, m; only 1: auto; only 1: apply iff_refl; only 1: apply iff_refl; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.101061	34781	7209
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.151676	16	9	1.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.148837	66603	5639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.087914	12078	3854
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.167893	11128	3321
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.119753	47249	5632
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pow_neg_r	40	6.732445	5167	862	25	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.115846	52482	5448
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	6.162520	2518	849	2.2.10.1	synth with cache (only 1: intros a b c Ha H; only 1: apply pow_le_mono_r; only 1: auto'; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.095358	8	7	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.061620	18344	6903
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	4.726706	3145	515	0.0.0.0.6.0.4.1.0.8	synth with cache (only 1: induction n; only 1: intro m; only 1: simpl; only 1: symmetry; only 1: apply add_0_l; only 1: unfold ofnat; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.110472	39705	9972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.944529	954	426	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.113948	29983	7151
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.154719	70216	1715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.116335	46029	7481
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_None	40	40.148273	30029	6480
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.507355	142	76	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.196587	32	21	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.054842	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.022281	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.221024	103755	3908
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.632402	189	67	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.041038	10929	5408
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.354228	170247	15518
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.283181	163	107	2.0.3.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.081561	28122	8181
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.069529	23793	6055
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.036900	11012	3533
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.nth_le	40	40.149673	55891	6367
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.111159	48103	6070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.070361	24324	4851
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.090331	34684	9193
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.013697	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.nth_error_nth	40	8.801940	6141	1516	5.1.0.6.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: injection 1; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.064250	23702	3607
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	3.601421	1802	588	0.0.5.0.6	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.596150	223	82	4.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.078975	26956	8033
coq-tactician-stdlib.8.12.dev	Coq.Arith.Between.Between.event_O	40	6.710741	28228	842	1.12.34.16.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.195213	36794	1366
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.085882	30351	8264
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.345977	484	160	14.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	8.579044	4569	1958	0.0.0.0.0.0.0.0.1.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.056648	18361	7511
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.109773	42761	5637
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.077034	27789	5381
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.le_plus_trans	40	40.212567	59535	5579
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.min_l	40	2.785379	1602	744	0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.011154	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.025667	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	2.557523	1760	441	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.006481	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.011649	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.142813	6283	652
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.077272	27736	4220
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.015022	2	2	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.079557	11856	4718
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.044671	2871	142	5.40	synth with cache (only 1: destruct m; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.018455	6	2	4.0	synth with cache (only 1: intros m; only 1: constructor 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.119211	44157	6183
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.odd_even_lem	40	40.158480	67494	3783
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_log2	40	40.252549	40060	4476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	14.642639	2802	1017	0.0.0.0.0.0.3.1.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.042858	15441	2744
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.134643	37265	3510
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.099694	40109	7189
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.058155	707	290	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.049902	15128	2433
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.201552	67436	6514
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.059826	22346	5881
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	5.833617	1028	405	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	5.714202	1815	717	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	4.372522	1132	449	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.052825	17371	6358
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.050203	9084	4129
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.172455	72397	16105
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.049830	14730	5887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.044484	13529	3915
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.041315	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.055247	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.078235	25554	5948
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.089340	36955	5549
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.057392	19532	3722
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.177208	36086	5882
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.080391	5563	1554
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.064552	22034	9585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.065373	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.082894	28532	3346
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.147464	16959	4517
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.169641	25597	4645
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	14.281533	3644	2057	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.093799	37637	4958
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.106377	41203	8746
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.339027	1233	203	9.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.lt_plus_trans	40	40.218388	21077	1291
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.090312	21386	5707
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.086993	34495	4849
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.042644	9833	1715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.099725	35822	5581
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.091306	35156	5750
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.090180	16643	3816
coq-tactician-stdlib.8.12.dev	Coq.Arith.Mult.mult_acc_aux	40	40.072689	19435	5681
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.size_gt	40	40.253327	35958	3763
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.079442	3293	1373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.194496	53071	5380
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	13.914769	3612	1676	5.6.1	synth with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.362757	19	11	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.142423	58674	5518
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.030670	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.030136	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.214565	35663	3909
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.139657	10847	1389
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	40.058158	18110	3748
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.130304	10167	1784
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.072907	17127	2246
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.328389	148689	18211
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.767769	1287	521	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.083783	28995	4791
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.074829	24571	5951
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.066433	22051	6155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.055727	18766	2934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.043861	15165	3129
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.remove_In	40	40.176971	42427	7256
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	7.599780	4141	862	0.0.0.1.2.16.1	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.398856	44	16	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.073406	20850	4725
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.080002	30745	6715
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.084305	30091	3612
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.014710	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.774087	661	292	0.0.0.2.5	synth with cache (only 1: intros n IH H; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.068119	21635	7983
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.085397	22844	5905
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.136561	30099	4787
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.plus_is_one	40	40.151656	61434	4484
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.151543	35898	8681
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.069978	25441	3840
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.033898	1900	283	11.4.2	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.110941	33302	4220
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.129439	15646	764
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.024650	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.015586	360	205	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.005530	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.112653	4	2	0.2	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.018499	2	2	0.0	synth with cache (only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.327329	185	50	0.3.0.0.3	synth with cache (only 1: destruct p; only 1: intros; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.010423	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.049111	2	2	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.088552	18526	4412
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.114764	48354	6740
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	4.728105	500	100	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.128365	21683	3907
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_spec	40	40.228859	30153	4960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.146141	18637	4436
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.047609	10524	2871
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.439771	419	155	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.121780	33038	5329
coq-tactician-stdlib.8.12.dev	Coq.Arith.Plus.succ_plus_discr	40	12.654564	11109	1672	4.10.2.13.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: red; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.070796	19044	5893
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.055986	16187	5670
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.152634	38287	5638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	21.594570	14069	1919	1.7.3.11.1.2.5.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: now left; only 1: now right; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.093767	14934	3603
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.061440	12236	3092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	8.488240	2607	777	1.8.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.038487	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.046831	14917	4426
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.055897	18426	6639
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.088696	30583	7488
coq-tactician-stdlib.8.12.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.286512	103404	7617
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.121101	47417	6451
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.134896	2115	302	0.0.0.0.0.0.0.0.0.0.7.33	synth with cache (only 1: simpl_relation; only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.040122	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	33.628006	20923	4815	0.1.0.1.7.0.3.0.5	synth with cache (only 1: intro n; only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: rewrite mod_add; only 1: now f_equiv; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.460956	744	222	0.3.3.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.036803	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.100685	33982	4356
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.033612	10550	3240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.719728	160	84	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.031582	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.128519	36902	6269
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.055868	19783	3737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.090729	31763	6462
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.090395	22597	6897
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	13.068452	8816	2768	0.0.3.0.0.1.0.0.1.5.0.0.1.0.0.5.1	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: apply divide_0_r; only 1: trivial using divide_refl; only 1: trivial; only 1: apply gcd_unique_alt; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: intros q; only 1: rewrite divide_opp_r; only 1: split; only 1: split; only 1: apply divide_0_r; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.039852	8453	3048
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	0.831363	220	77	6.1.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.189961	21663	5300
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.017404	4	2	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.100432	39935	6947
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_neq	40	40.128860	56106	5277
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.074057	27459	6357
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.011475	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.065896	22994	6462
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.027801	4	4	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.013194	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.011881	5	2	3.0	synth with cache (only 1: unfold Pos.le, Pos.sub; only 1: easy').
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.017648	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.014261	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.010114	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.103391	43326	6564
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	38.179300	19343	4782	0.0.1.2.0.0.0.0.1.0.0.24.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	7.900422	3204	1439	0.0.0.0.0.0.1.0.0.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: rewrite opp_nonneg_nonpos; only 1: trivial using divide_refl; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_refl; only 1: auto with relations; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.378754	72	30	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.083057	21940	4137
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.042748	12467	2993
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.061983	9745	2131
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	25.395440	33881	4945	0.11.39.4.0	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite lt_succ_r; only 1: apply eq_le_incl; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.392244	102688	3020
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.112475	27608	5833
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.083221	27370	9262
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.061320	20493	6038
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	34.696752	11535	3758	2.0.0.6.0.0.0.0.0.0.5.1.2	synth with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: now rewrite <- ?add_le_mono_l; only 1: apply sub_add_le; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.677694	306	153	0.0.1.4	synth with cache (only 1: intros a b Hb Hab; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.105093	24094	7360
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.121089	36584	3624
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.053764	21164	2277
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.036824	10483	2300
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.456564	1547	626	1.10.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.129197	50807	8153
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.159417	28	22	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.068448	19067	3946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.875011	1624	418	0.0.0.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.161100	16	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.184029	84552	4953
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.070748	23104	5596
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.044538	13518	4560
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.105736	42650	6913
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.242287	103905	2737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.086482	15524	4411
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.073676	23841	7688
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.092089	18881	8092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.087020	28997	3553
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.015847	3	3	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.163763	31970	5432
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.085416	33049	4512
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.179901	115	19	13	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.176133	33	18	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.Znat.inj_minus2	40	40.069429	27631	4629
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.046446	11543	4255
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.103574	42866	2093
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.056728	15722	7176
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.055528	17729	2887
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.128436	51243	6752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.134880	38025	3974
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.078085	27579	4545
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.057481	17050	3314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.097330	39424	6406
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_lt	40	40.369324	46502	6329
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.068771	19219	4291
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.078610	27793	4333
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.058120	17505	3986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.098678	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.053966	21310	2103
coq-tactician-stdlib.8.12.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.197128	23779	6085
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.033424	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	2.811999	770	256	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	9.596055	5820	1273	0.9.1.2.0.0.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros; only 1: destruct (le_gt_cases 0 n); only 1: now rewrite <- H; only 1: now rewrite 2!testbit_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.037816	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	40.066230	25508	3155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.350238	301	82	9.1.0	synth with cache (only 1: intros; only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.023899	15	4	0.0.5	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.068451	23327	5139
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.057046	9821	3235
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.046206	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.604070	604	213	5.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.078338	28526	5226
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.136559	56267	3085
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.542079	156	68	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.147776	31791	5128
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	4.740135	946	422	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.076361	23943	8286
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.110458	19503	3154
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.764784	88	50	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.rev_alt	40	40.166628	40162	7152
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.042870	13909	5498
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.063577	12963	3641
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.113118	20298	5106
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.106512	22889	7164
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	10.551052	3975	1804	0.0.0.0.0.0.6.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.116332	42999	6526
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.074806	26100	4681
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.235683	21354	7560
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.084512	30301	4132
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.063794	19740	4944
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.109045	44551	1509
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.012747	2	2	0.0	synth with cache (only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.076999	16395	6003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.064846	22880	3789
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.105648	39797	4493
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	4.250652	5698	523	0.0.0.8.23.1	synth with cache (only 1: intro n; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	20.480826	8578	1367	4.2.22	synth with cache (only 1: red; only 1: exists 0; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.060864	20613	4638
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.048873	14790	2446
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	2.505214	795	393	1.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.045069	6	6	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.035762	9628	2379
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.118415	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	25.322486	4702	1193	3.0.2.5.6	synth with cache (only 1: intros n1 m1 H; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: nzsimpl'; only 1: now apply add_le_mono).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.324907	22006	5097
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.086062	27669	7934
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.055571	18375	5651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.654402	471	190	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.045011	16218	1192
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	2.334228	528	317	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.106545	43668	7896
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	3.495773	1468	659	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.310087	1469	238	20.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.381536	359	69	8.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	4.886274	2251	660	0.2.0.6.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	3.663893	1427	623	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.038908	15	8	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.187335	76863	5668
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.067883	27121	3319
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.157438	62664	17830
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.071698	22411	4037
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.123387	48372	10572
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	40.078567	25899	6931
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.045397	13393	3747
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.275791	92337	6009
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.046011	15308	2959
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.062658	16840	3070
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	2.768199	831	315	1.1.4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite !(add_comm a); only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.020389	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.103733	32903	5138
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.240536	84263	4761
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.007083	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.477434	180	71	0.0.0.2.0.1.0.5	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.063621	18291	4845
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.128928	47008	8547
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	7.449801	8051	987	0.0.0.15.14.2	synth with cache (only 1: nzinduct n; only 1: apply mul_0_l; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.147825	67044	4577
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	24.139474	8983	3639	0.0.6.4.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.809398	171	73	0.0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.107279	13127	4923
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.064373	22151	4061
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.073461	27300	3651
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.050092	13562	5421
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.067210	24374	3920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.069665	26962	3009
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	24.720977	16320	2905	4.17.7	synth with cache (only 1: intros n m Hn; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.068726	23708	4364
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.069565	23210	5000
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.026153	6827	2241
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.089360	32384	7315
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.318396	19640	5911
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.053633	17235	3561
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.060322	22073	3828
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.096648	35355	11361
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	10.023715	14658	489	0.1.0.0.0.0.0.0.0.75	synth with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.011779	2	2	0.0	synth with cache (only 1: intros n m H; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.063809	9	2	4	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negbFE	40	0.007555	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3.787600	862	326	0.0.9.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraT	40	0.564923	223	33	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.contraFT	40	0.649243	146	15	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.174692	71980	7828
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.520976	297	20	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.014198	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.007887	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.005729	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.013515	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.499321	234278	6400
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.081501	11171	3163
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.056685	20799	3348
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.081800	30906	1788
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.100219	35596	11767
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.082758	25367	4390
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	18.333699	9494	2328	1.7.2.7.1	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	9.989066	12113	1918	34	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.014251	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	38.638787	12284	2508	0.0.0.0.0.1.0.0.0.0.4.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: revert n m; only 1: intros n m H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListOps.concat_app	40	40.134969	52361	6865
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_length	40	0.072696	13	10	0.0.0.1.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: elim (length l); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.map_eq_nil	40	1.057868	435	155	4.3.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.180220	49722	3649
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.097784	15581	2747
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.117757	19788	7239
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.042497	13048	3468
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.080873	14514	2778
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.074692	22110	5074
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.103590	10014	4325
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.141279	23922	3302
coq-tactician-stdlib.8.12.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.220921	60526	5398
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.084547	26308	5960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.090096	30233	5689
coq-tactician-stdlib.8.12.dev	Coq.Setoids.Setoid.gen_st	40	0.011337	5	1	4	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.053712	16468	5037
coq-tactician-stdlib.8.12.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.015311	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.053264	18450	3252
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.522012	602	119	2.2.5.6	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.006298	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.073363	267	50	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003902	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.005870	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.006504	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.074043	23136	5320
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.110377	14	8	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.796236	301	79	3.4.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.010759	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.079733	28306	7162
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	9.110624	5758	1548	1.4.8.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.137406	4	3	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	3.700456	847	345	8.0.0.0.0.0.5	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.026464	6325	1991
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.016139	1	1	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.005909	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.086949	26625	8803
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.320587	30035	5715
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.932601	144	132	3.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.116874	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.753181	321	165	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.037878	11960	2214
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.137802	52759	10782
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.084150	18139	3599
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.057968	17746	3359
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.396772	27273	965
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.121862	18975	2934
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.076998	28257	2637
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.216064	86156	8275
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.119898	40938	15971
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.046993	9793	2061
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.460587	778	275	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.046259	14089	5434
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.157511	67012	7750
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.073008	23364	6830
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.023140	3	3	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Map.count_occ_map	40	40.183777	84928	3465
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.084012	12544	3357
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.130646	42798	13490
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.007738	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.013551	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.091044	17831	4886
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.062212	21153	3489
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.077653	19113	4649
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.067501	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.091986	11800	4643
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.210699	85558	6344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.058971	20033	3781
coq-tactician-stdlib.8.12.dev	Coq.Program.Subset.match_eq_rewrite	40	2.588904	6973	698	2.11.1.3.4.17	synth with cache (only 1: intro; only 1: intro; only 1: intros H x0; only 1: intros [x y]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.incl_right	40	0.013025	4	4	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.map_ext_in_iff	40	13.021150	9083	2265	0.0.0.0.0.0.0.0.3.1.0.0.0.0.6.6	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| y l]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.seq_trans	40	1.908717	2149	448	0.0.3.12.1	synth with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.009696	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.111020	40002	4344
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.039930	9186	2021
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.004269	3	1	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.UIP_refl_refl	40	0.577015	576	108	24	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.006482	6	1	5	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.12.dev	Coq.Program.Equality.solution_left	40	0.248237	124	32	1.1.4.3	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.056342	17221	4733
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_false	40	0.021743	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Bool.IfProp.IfProp_or	40	0.015260	12	7	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.038709	7428	410
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.060532	19891	3637
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.065860	16503	3225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.087427	28260	7876
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.375185	56695	4271
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.477275	229325	6461
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.018738	5499	911
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.006565	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.004385	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.042273	12561	2758
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_proper	40	0.038847	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.030720	5	5	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.051833	14953	5225
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.062163	6046	2062
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.093167	37827	6292
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.376233	18226	684
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.150389	5860	1645
coq-tactician-stdlib.8.12.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.068901	23491	4741
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.016356	2	2	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.345788	157088	12059
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	5.335034	4359	999	0.0.6.4.4.3.0.0.0.3.0.15	synth with cache (only 1: split; only 1: intro n; only 1: intro H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: intro m; only 1: intro p; only 1: intros LT EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.050745	14875	4399
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.071111	26643	3717
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.062473	21609	5464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.110715	39907	4323
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.115314	41374	5399
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.080456	16298	3724
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.125996	49910	7351
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	1.538066	1086	303	0.0.1.0.0.0.1.0.0.1.8	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	6.607410	1339	397	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.010633	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.011362	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.164067	21670	6784
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.020290	4	2	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.008475	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.007603	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.007700	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.062054	18135	2797
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_tag	40	29.952471	358748	3461
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig	40	0.013841	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.all_sig2	40	0.031858	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.075785	22462	1821
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.047508	15526	1858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.062091	21084	4359
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_length	40	40.124080	49160	4823
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.057502	11556	2615
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.lock	40	40.751410	359400	12393
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.057278	14916	2936
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	0.342367	70	19	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.023739	2	2	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.073119	9743	1939
coq-tactician-stdlib.8.12.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.450557	204188	5091
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.116168	39780	5438
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.591897	330	74	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.694913	428	233	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.016433	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.013608	5	3	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.009656	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.010231	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.052998	15470	4476
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.051679	15149	3428
coq-tactician-stdlib.8.12.dev	Coq.Classes.Morphisms.proper_proper	40	0.794109	271	139	0.0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.003688	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.212328	22201	5345
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.045819	12616	4414
coq-tactician-stdlib.8.12.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.038449	5323	2003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.041201	11691	4491
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.079364	15704	5104
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.346656	25019	774	2.2.0.2.34.55	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: intros H'0 H'1; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.199291	41	13	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.375954	38612	1774
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.072299	24413	4583
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.151786	62992	2858
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.186197	21	9	0.0.0.0.0.1	synth with cache (only 1: unfold Fix_sub; only 1: intro x; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	9.468734	6189	877	0.17.10	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.322283	149150	9589
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.096823	34365	7143
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.023779	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.020177	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	13.244411	6566	2652	0.8.0.3.2.0	synth with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.022323	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.027564	14	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.266521	74	35	0.1.0.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.071122	25446	5155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	3.351153	1025	374	2.3.2.2	synth with cache (only 1: Bool.destr_bool; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.066820	24571	4191
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.056851	13219	2950
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.062936	20011	4990
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.048741	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	3.083945	1304	660	1.4.5.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.042229	13	5	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	28.111158	431393	3273
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.100050	21841	3875
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	4.096622	3453	760	0.0.1.0.15.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.053989	13	9	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.089368	32539	8002
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.155898	24895	6904
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.087268	28321	14731
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.919808	587	265	5.4.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	23.578952	18120	3823	0.0.0.16.0.0.3	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.173203	69002	10621
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.098986	34887	7222
coq-tactician-stdlib.8.12.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.050445	19	12	3.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.449116	211739	10358
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.009098	2	1	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.129403	44756	10187
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Injections.canLR	40	0.561518	807	95	1.3.17	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.122191	144	14	1.15	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.131397	3412	452	1.1.14.0.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct b; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_is_true	40	0.011659	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.not_false_iff_true	40	0.015121	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eqb_prop	40	0.008635	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_sym	40	0.007938	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.008092	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_true_iff	40	0.015339	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_left_rev_right	40	40.108376	37422	6684
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_false_intro	40	0.030739	12	5	1.4.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_r	40	0.032711	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.orb_true_l	40	0.005367	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_true_eq	40	0.081840	19	13	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_diag	40	0.008760	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_false_elim	40	0.032855	13	5	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.011524	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.015074	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_r	40	0.014614	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_false_l	40	0.006990	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_true_l	40	0.003953	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.013488	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_eq	40	0.012245	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.015650	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.015099	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.048293	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	9.873825	93372	610
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.013690	2	2	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.019501	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.absurd_eq_true	40	0.011217	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.012966	4	2	1.1	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.010693	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.017253	4	3	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.010638	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Bool.Bool.reflect_dec	40	0.026124	7	4	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.061214	21132	3559
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.locked_withE	40	40.596149	285431	11585
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.055516	16608	3816
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.087686	33202	10910
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.106796	40199	4294
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.156050	32054	5150
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.div2_spec	40	0.017740	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.683750	335214	14997
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.245578	194	57	2.2.0.2.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: apply H; only 1: red in H0; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.137440	10	2	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.041634	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.006351	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.041000	9633	5426
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.051954	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.048791	12487	6433
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	7.599332	2803	727	0.0.3.0.0.1.1.1.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.040067	9385	3786
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.284901	35161	986
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.079322	26641	3435
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.051522	14836	3381
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.500950	189959	10934
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.026187	3	2	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.408135	275	44	13.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.127286	52076	8858
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.070882	24459	6373
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	28.258192	13801	2989	1.1.0.0.7.11.0	synth with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.011556	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.011494	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.059939	19670	5569
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.338903	35	14	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.061331	19977	5640
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.016615	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	3.628591	20594	835	0.77.1	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.124806	13074	3678
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.029302	3750	1774
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.229363	109050	4531
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	4.781223	2173	764	0.0.0.6.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.074355	26659	4679
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.058001	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.179345	15	8	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	15.385061	3512	1338	0.3.0.0.0.2.7	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.628684	802	348	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.137276	54	26	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.015451	3	2	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.065630	24061	6919
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.174176	42566	5664
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	0.447095	119	43	1.0.1.4	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.119166	33	10	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.153659	39	22	0.4.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.133659	46	23	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.427029	1491	446	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.032580	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.113636	23777	6418
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.090690	33243	9803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.113360	39330	12142
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.378955	179068	8071
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	18.759772	10852	1031	53.1	synth with cache (only 1: intros RS' n; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.fold_symmetric	40	40.248149	53004	7204
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.086405	28216	9427
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.024588	1	1	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.159603	65511	14123
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.040905	10085	2246
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.419418	158	54	0.2.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.nary_congruence	40	40.160178	67752	9782
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.112680	194	31	2.8	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.504684	235982	12731
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.008906	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.007055	4	2	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.013867	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.035048	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.005594	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.025546	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.070647	4	2	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.058257	20404	5660
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.808486	372	138	0.2.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.210293	55709	4067
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.158458	69742	4349
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.051320	17175	2990
coq-tactician-stdlib.8.12.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.226397	9	4	1.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.052290	14688	5258
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssreflect.abstract_context	40	8.389602	109879	1422	1.109.94	synth with cache (only 1: intro H; only 1: apply H; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.dec_True	40	0.008002	15	4	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.070956	2	2	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind	40	40.603662	293663	13867
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.compose_assoc	40	0.013683	10	4	0.6	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Program.Combinators.flip_flip	40	0.004566	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.474267	27647	1423
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.050272	15764	4716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.099362	31164	11454
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.137735	56442	9375
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.015692	27	9	1.1.1.2	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	4.939253	17764	2112	2.4.2.4.0.1.1.9.9	synth with cache (only 1: red; only 1: intro x; only 1: intro; only 1: destruct 1; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.557257	262611	12694
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.066987	23314	4096
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	3.240237	6168	1224	0.0.1.1.0.3.1.3.0.1.7.8	synth with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 1; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros x y h; only 1: red; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.009712	2	2	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.205156	92442	5218
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.144773	23302	3464
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.052121	15779	5192
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.005340	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	5.127969	23900	1411	0.59.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.029580	48	10	0.9	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.737167	1885	184	2.26.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.022253	10	6	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.451643	1255	92	0.18.16	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.395884	193726	8121
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.065093	20054	4920
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.124008	49257	7792
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.088363	32737	8257
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.009658	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	4.766399	18230	1286	4.39.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: inversion 1; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.224193	199	32	3.10	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.117261	46134	11723
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.026731	10	4	0.1.1	synth with cache (only 1: intro; only 1: intros x y z H' H'0; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.100487	18019	5587
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.044247	12327	6626
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.307736	143114	16850
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.499819	540	308	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.091807	29903	9092
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.155641	72148	5145
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.567198	257013	7411
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.258275	399	41	3.3.18	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.forallb_forall	40	40.042399	11303	1957
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.116297	44845	4686
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.264404	115262	13732
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.078610	28261	3564
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	24.349250	76036	9579	0.21.2.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.369252	242	87	0.1.2.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	13.127626	22546	2872	0.1.5.27.1.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.009481	5	3	1.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.010475	3	3	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.008023	3	2	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.548202	1166	193	3.6.7	synth with cache (only 1: red; only 1: destruct 1; only 1: auto using Noone_in_empty with sets).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.735422	2656	193	2.12.18.4	synth with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.014438	4	4	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.134048	54223	12633
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.071956	27585	4012
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.021830	5	5	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.158610	39980	4937
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.080491	30588	4985
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.046798	14209	5069
coq-tactician-stdlib.8.12.dev	Coq.Bool.DecBool.ifdec_left	40	1.437128	2154	443	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.pred_Sn	40	0.011651	8	5	2.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.plus_n_Sm	40	0.045649	36	14	1.0.1.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.and_hprop	40	40.385087	180020	13996
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.true_hprop	40	0.007073	8	3	4.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.not_hprop	40	0.012764	7	5	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	7.443751	2339	668	1.0.1.9.0.0.0.0.1.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: apply pow_lt_mono_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.636096	309941	14174
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.407070	70954	2277
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.049567	9872	2705
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.302100	225	17	0.20	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.042643	12808	3026
coq-tactician-stdlib.8.12.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	4.256908	75319	761
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT_eta	40	0.702481	4498	201	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.063957	19908	6776
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.254281	44275	929	0.0.0.68.47	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.119152	3	3	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig.rew_sig	40	0.019677	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.331665	144409	12675
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	21.615222	12669	3368	0.0.1.17.1	synth with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.375303	178127	14267
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.012334	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.303636	162	63	1.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.811235	236	67	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.075304	27132	6414
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.832935	550	81	0.2.18	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.125259	50424	12634
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.028103	5	5	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.040718	7	6	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.007463	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.219886	102712	14244
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.014965	20	5	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.008531	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.006727	34	12	2.2.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.007222	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.067379	23031	4538
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_iff_compat_l	40	0.120321	1035	124
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.047926	8	3	3.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.026582	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.674304	2842	579	10.10.0.9	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.062240	21752	8245
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	4.459730	3606	808	1.2.5.0.13	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.567577	310	80	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.014627	1	1	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.059983	18	4	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.024420	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.032607	9	4	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.081638	15	8	0.5.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).
coq-tactician-stdlib.8.12.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.914518	460908	6868
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.andb_true_intro	40	2.889011	16668	1297	0.0.4.17.28	synth with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.709028	5830	340	1.14.32.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.106593	41489	11355
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.012450	2	2	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.635365	315	113	0.0.1.0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.275130	68	36	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.133300	585	214	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.105098	27011	6842
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_left	40	24.544648	111199	8395	2.41.0.7.0.10.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Tactics.decide_right	40	0.012802	6	4	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.096373	36755	9657
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.084432	29247	5443
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.092424	31099	9803
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.078526	30219	3972
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.158402	67168	7221
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.444564	216207	11680
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.031841	41	9	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.156283	65410	14204
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.408473	189157	9866
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Bool.find_none	40	3.291350	1432	382	0.3.7.0.1.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: congruence; only 1: intuition; only 1: intuition congruence).
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.746783	820	110	2.17.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.430564	205402	12101
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.111256	45214	5358
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.land_spec	40	40.108558	44962	4638
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.mult_n_Sm	40	40.240354	108770	12289
coq-tactician-stdlib.8.12.dev	Coq.Logic.HLevels.hset_hOneType	40	40.307577	146738	11571
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.039648	12759	3678
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	8.530067	14869	3189	0.0.0.0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.8.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.of_bits_to_bits	40	41.360982	709595	6430
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.058870	19067	4061
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.460678	208030	6396
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.059706	20686	3784
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.033116	9179	3587
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.933783	477891	4432
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.395690	184675	8208
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.265230	122503	15955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.083908	32105	5883
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.080499	30218	5683
coq-tactician-stdlib.8.12.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.132626	49441	6759
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_cancel_l	40	40.664544	328654	24272
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.078628	28201	6168
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.456018	92404	4028
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.489201	235947	19511
coq-tactician-stdlib.8.12.dev	Coq.Init.Datatypes.rew_pair	40	0.007321	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.021526	8	7	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.012800	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.pair_andP	40	0.015512	9	2	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.099415	40921	7907
coq-tactician-stdlib.8.12.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.111556	42820	13880
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.031372	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.041949	11290	6462
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.061398	21667	4206
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.094689	33291	5719
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.206560	38830	10158
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.128249	54601	6317
coq-tactician-stdlib.8.12.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.412702	196467	15219
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.filter_map	40	40.068173	22718	4755
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.268904	126453	12754
coq-tactician-stdlib.8.12.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.057209	28	13	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_comm	40	0.262578	337	133	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.181847	83352	12900
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.047138	14131	4552
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_split_r	40	3.986052	1553	705	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.134542	53999	4282
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.le_S_n	40	40.389278	177498	22960
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.079550	27018	6770
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.249175	114888	14350
coq-tactician-stdlib.8.12.dev	Coq.Init.Byte.to_bits_of_bits	40	40.086515	33412	2821
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_double_ind	40	1.144605	3110	455	1.1.17.1.1.1	synth with cache (only 1: induction n; only 1: intro p; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.min_l	40	1.289426	840	410	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.607210	651	158	2.3.1.0.0.7	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.077510	26339	4509
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.028671	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classicP	40	40.467809	217283	9557
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.052237	17765	3631
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Filtering.ext_in_filter	40	40.060362	20139	4449
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.013680	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andFb	40	0.003973	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andbAC	40	0.019053	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orTb	40	0.007097	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbb	40	0.006582	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbC	40	0.008910	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbAC	40	0.014888	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_id2r	40	0.026309	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_idl	40	0.015839	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orb_id2l	40	0.026507	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_and	40	0.053799	1	1	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andKb	40	0.015125	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orbK	40	0.009008	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.orKb	40	0.009068	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybT	40	0.007554	7	1	6	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyFb	40	0.005092	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implyTb	40	0.005826	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.negb_imply	40	0.015788	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybE	40	0.008299	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.implybN	40	0.009002	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbF	40	0.008094	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbACA	40	0.029051	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addl	40	0.015019	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.andb_addr	40	0.014292	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addKb	40	0.014872	2	1	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addIb	40	0.016479	2	1	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.addbT	40	0.008588	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.038629	11661	3740
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.gt_lt	40	10.934570	5660	1009	0.2.25	synth with cache (only 1: pose proof (le_sub_l n m) as LE'; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.lt_gt	40	0.010196	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.12.dev	Coq.NArith.BinNat.N.ge_le	40	0.026967	3	2	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.subrelUr	40	3.260846	8643	662	15.13.9.31	synth with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_refl	40	0.092061	278	22	3.19	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.009354	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	12.114782	16417	4103	0.0.0.0.0.11.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor 2; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.175054	77555	4012
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.029343	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.034217	4	4	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.162210	70934	15388
coq-tactician-stdlib.8.12.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.102810	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.752201	382770	8016
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_combine_l	40	15.203107	12253	2773	0.0.5.3.2.2.3.0.3.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| ] ? Heq; only 1: simpl; only 1: intros; only 1: right; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.050791	15645	4229
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_tail	40	0.023637	4	3	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.028588	4	3	0.1.0	synth with cache (only 1: destruct l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.091608	21	21	1.1.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.097471	23526	3196
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.049770	9	4	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.and_assoc	40	40.404263	188165	17637
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.universal_quantification.gen	40	0.003128	2	2	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.007175	3	3	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.004865	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.006448	5	3	0.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.085750	29402	8526
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.classic_pick	40	40.266804	115665	5256
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	1.486329	9662	278
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_opp_l	40	0.017257	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.012360	5	2	0.3	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal4	40	0.021592	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.f_equal5	40	0.029005	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.015774	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_sym_involutive	40	0.009253	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.map_subst_map	40	0.012167	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.rew_swap	40	0.013863	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all	40	0.385483	219	49	4.1.0.1.5	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	40.406568	70585	837
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.007211	4	1	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.007151	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.length_order.lel_trans	40	13.666665	16483	2338	0.0.2.9.2.0.2.0.4.0.0.9.0.0	synth with cache (only 1: intros; only 1: unfold lel; only 1: destruct l; only 1: inversion H; only 1: inversion H; only 1: simpl; only 1: auto with arith; only 1: simpl in *; only 1: auto with arith; only 1: auto with arith; only 1: elim H0; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_O	40	0.006161	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.SetIncl.incl_app	40	10.049190	4311	1284	2.2.3.1.0.7	synth with cache (only 1: intros l m n; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: intros y H0 H1; only 1: firstorder).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.251500	23879	4805
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_O	40	0.024933	4	4	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.413680	344	48	0.0.0.19	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.skipn_all	40	0.035026	7	4	1.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.071507	22293	4533
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_all2	40	5.062705	2029	897	0.5.0.0.0.2.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intros Hnin; only 1: reflexivity; only 1: simpl; only 1: now destruct l; only 1: intros [| ] ?; only 1: simpl in *; only 1: now simpl; only 1: simpl in *; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.049053	12166	5884
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	40.078356	27383	4785
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.128739	26281	6513
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.073172	27617	4522
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.012948	2	2	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.506947	51275	575
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.242886	40345	7883
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.051324	15502	3261
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	9.573669	10771	1556	0.0.50	synth with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.or_assoc	40	40.539357	260776	17329
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.330221	162181	15779
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.077621	27620	6100
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.038101	3966	1716
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.072577	25799	4385
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.765126	13003	515
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ListPairs.in_prod	40	40.072999	25017	6920
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.110698	41605	6314
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_trans	40	13.183592	11249	2384	1.0.5.0.4.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.649649	292421	4068
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.208115	90318	14847
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.005333	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.019326	7	2	0.5	synth with cache (only 1: intro; only 1: by [  ]).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.008515	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.011003	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.12.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.228659	100672	14792
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.284698	137	19	15	synth with cache (only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.014754	3	1	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.042246	13343	3258
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.sub_in12	40	0.446477	149	16	3.13	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	40.228696	26031	9023
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_preorder	40	2.023673	2451	228	1.0.0.0.14.9.0	synth with cache (only 1: split; only 1: unfold lt, le; only 1: intros [q| q| ]; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_skipn	40	32.607451	29797	6912	2.3.0.0.10.1.0.0.0.0.2.0.9	synth with cache (only 1: induction n as [| n IH]; only 1: intro; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.052847	16840	3344
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.083454	16657	5955
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.111473	26901	5001
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.098706	35237	10951
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.500990	224722	4057
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.009658	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.eq_id_comm_l	40	40.876384	450216	9717
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.784164	383234	3533
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.firstn_length_le	40	40.087672	32754	6003
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.077902	28312	4726
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.063263	21335	4890
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	7.197820	7798	683	2.0.22.17.1	synth with cache (only 1: intros; only 1: set (m := max x y) in *; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.018576	8	4	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.060354	11938	6150
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.048719	15450	3240
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.079492	27289	3632
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	40.148485	46315	5988
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.115107	26335	10170
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.516675	236732	5029
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.018205	7	3	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.057141	17904	8226
coq-tactician-stdlib.8.12.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.964187	508471	6459
coq-tactician-stdlib.8.12.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	41.448304	742489	6748
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.080958	29206	5818
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.060869	19281	7116
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.074066	24168	5753
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.047233	15071	3150
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.467604	217230	5916
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_app	40	40.043703	12722	799
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.023962	1	1	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	40.122562	26022	5886
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.008064	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.035448	4	4	0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).
coq-tactician-stdlib.8.12.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.123596	49199	14230
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.048921	12794	4663
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.257745	105754	2328
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.109727	20683	6388
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.074793	27244	5267
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.084371	9670	3330
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_split	40	40.082268	32010	6629
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.118199	29715	8155
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.054576	9300	1861
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.294715	127789	4039
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.283239	121214	2674
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Add.Add_inv	40	40.141469	60168	9129
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.058071	17481	3047
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.046947	8473	1987
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.031809	5	4	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.039201	9	4	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.111440	44758	8175
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.074871	23954	10153
coq-tactician-stdlib.8.12.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.019740	6	4	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.070532	23485	3784
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.147775	42734	6747
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.097716	23805	7927
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_r	40	1.048329	317	112	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: trivial; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.076121	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.057433	12	6	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.12.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.195258	79962	3648
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.064126	22287	3009
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.072112	23679	7084
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.042087	14562	2836
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.058364	17961	5737
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.052455	16765	5795
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_diag	40	23.193917	20415	3778	1.0.2.2.0.1.18.4	synth with cache (only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.059430	20969	2505
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.105279	41209	3488
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	40.105782	40964	3289
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.076705	26161	3503
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.089712	34373	8044
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.060481	11255	4122
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.200734	64908	6472
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.060855	22063	5352
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.166771	36480	8526
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.076271	27613	3946
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.054954	19400	4270
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.079058	29691	5374
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.090654	31628	5322
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.056267	11345	2407
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.074009	23186	5488
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.092312	36859	6184
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.080928	26651	5624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.039515	12244	2972
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.051088	15661	3222
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.NatSeq.seq_app	40	40.043690	15835	4002
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.066217	17164	3481
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.108655	42837	7188
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.006827	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	40.171166	36571	5316
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.127540	52160	5255
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	6.464156	4497	1161	0.0.0.0.0.0.0.3.0.1.0.0.13	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.076398	28740	4441
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.048360	14873	4731
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Repeat.repeat_length	40	0.032592	6	4	1.0.0.1	synth with cache (only 1: induction n as [| n IH]; only 1: now simpl; only 1: simpl; only 1: eauto with arith).
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.063663	20918	6487
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.098210	36386	9314
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.061337	19122	4189
coq-tactician-stdlib.8.12.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.065113	21908	5627
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.082438	29954	5642
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.199329	86620	4696
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.064573	21456	6103
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.041413	12900	2530
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.072158	23450	5978
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.052786	13909	3410
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.115411	47326	7005
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.130083	53084	6149
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.130124	52279	5395
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.052302	16533	3752
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.058617	14844	3242
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.086934	33419	6251
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.170844	75451	8339
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.063014	23234	5679
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.090952	36577	4085
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.073748	27467	5453
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.160803	67945	6023
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.080275	34183	5037
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.064398	22500	3709
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.047293	13976	3567
coq-tactician-stdlib.8.12.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.188499	95049	8335
coq-tactician-stdlib.8.12.dev	Coq.PArith.BinPos.Pplus_minus	40	40.123001	60198	7686
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.034854	12802	2555
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.067990	28949	5624
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.034623	8233	2313
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.061428	25707	4681
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.090104	45129	5700
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.074980	35497	5736
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.048299	21619	4341
coq-tactician-stdlib.8.12.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.050863	21406	6007
